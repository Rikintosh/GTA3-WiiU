
.appveyor.yml,0

hax.sh,0

docker_rebuild_ps2.sh,0

build_lights/GNUmakefile,2199
TARGET		:=	lightsTARGET9,152
BUILD_CFG	:=	BUILD_CFG10,170
DEBUG		:=	-gDEBUG11,184
WISDOM		:=	-WallWISDOM12,197
OPTFLAGS	:=	-O2OPTFLAGS13,214
LIBRW_SRC	:=	../src \LIBRW_SRC15,231
LIGHTS_SRC	:=	../tools/lights \LIGHTS_SRC23,355
SOURCE_DIRS	=	$(LIBRW_SRC) $(LIGHTS_SRC)SOURCE_DIRS27,426
INCLUDE_DIRS	=	$(CTRULIB)/include ../ $(SOURCE_DIRS)INCLUDE_DIRS28,467
ARCH		:=	-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=softARCH32,540
ASFLAGS		:=	$(DEBUG) $(ARCH)ASFLAGS33,604
CFLAGS		:=	$(WISDOM) $(DEBUG) $(OPTFLAGS) $(ARCH)CFLAGS34,633
LIBS		:=	-lcitro3d -lctru -lmLIBS38,853
LIBDIRS		:=	-L$(CTRULIB)/libLIBDIRS39,883
LDFLAGS		=	-specs=3dsx.specs $(DEBUG) $(ARCH) -Wl,-Map,$(notdir $*.map)LDFLAGS40,912
CXXFLAGS	=	-fno-rtti -fno-exceptions -std=gnu++11 $(CFLAGS) $(INC_PICA)CXXFLAGS41,984
OBJTREE		:=	$(foreach dir,$(SOURCE_DIRS),$(patsubst ../%,./obj/%.dir,$(dir)))OBJTREE43,1057
CPPFILES	:=	$(foreach dir,$(SOURCE_DIRS),$(wildcard $(dir)/*.cpp))CPPFILES44,1135
PICAFILES	:=	$(foreach dir,$(SOURCE_DIRS),$(wildcard $(dir)/*.shlist))PICAFILES45,1202
OBJ_CXX		:=	$(foreach file,$(CPPFILES),$(patsubst ../%,./obj/%,$(patsubst %.cpp,%.o,$(file))))OBJ_CXX47,1274
OBJ_PICA	:=	$(foreach file,$(PICAFILES),$(patsubst ../%,./obj/%,$(patsubst %.shlist,%.shbin.o,$(OBJ_PICA48,1369
HDR_PICA	:=	$(foreach file,$(PICAFILES),$(patsubst ../%,./obj/%,$(patsubst %.shlist,%_shbin.h,$(HDR_PICA49,1474
INC_PICA	:=	$(sort $(foreach obj,$(OBJ_PICA),-I$(dir $(obj))))INC_PICA50,1579
DEPS		:=	$(foreach obj,$(OBJ_CXX),$(patsubst %.o,%.d,$(obj)))DEPS52,1643
default: $(TARGET).3dsxdefault55,1714
./obj/%.dir:./obj/%.dir58,1769
./obj/%.shbin.o ./obj/%_shbin.h: ../%.shlist./obj/%.shbin.o62,1843
./obj/%.shbin.o ./obj/%_shbin.h: ../%.shlist./obj/%_shbin.h62,1843
./obj/%.d: ../%.cpp./obj/%.d91,2868
./obj/%.o: ../%.cpp./obj/%.o99,3069
%.elf:%.elf104,3174
$(OBJ_CXX): | $(OBJTREE)$(OBJ_CXX)110,3376
$(OBJ_PICA): | $(OBJTREE)$(OBJ_PICA)111,3401
$(DEPS): | $(OBJ_PICA)$(DEPS)112,3427
$(OBJ_CXX): | $(DEPS)$(OBJ_CXX)113,3450
$(TARGET).3dsx:	$(TARGET).elf$(TARGET).3dsx116,3526
$(TARGET).elf:	$(OBJ_CXX) $(OBJ_PICA)$(TARGET).elf118,3557
clean:clean121,3610

build_lights/.gdbinit,0

build_lights/obj/tools/lights/main.d,0

build_lights/obj/src/charset.d,0

build_lights/obj/src/render.d,0

build_lights/obj/src/geoplg.d,0

build_lights/obj/src/raster.d,0

build_lights/obj/src/ps2/pds.d,0

build_lights/obj/src/ps2/ps2device.d,0

build_lights/obj/src/ps2/ps2skin.d,0

build_lights/obj/src/ps2/ps2raster.d,0

build_lights/obj/src/ps2/ps2.d,0

build_lights/obj/src/ps2/ps2matfx.d,0

build_lights/obj/src/frame.d,0

build_lights/obj/src/texture.d,0

build_lights/obj/src/hanim.d,0

build_lights/obj/src/lodepng/lodepng.d,0

build_lights/obj/src/image.d,0

build_lights/obj/src/gl/gl3matfx.d,0

build_lights/obj/src/gl/gl3render.d,0

build_lights/obj/src/gl/gl3raster.d,0

build_lights/obj/src/gl/gl3shader.d,0

build_lights/obj/src/gl/gl3device.d,0

build_lights/obj/src/gl/gl3.d,0

build_lights/obj/src/gl/gl3immed.d,0

build_lights/obj/src/gl/wdgl.d,0

build_lights/obj/src/gl/gl3skin.d,0

build_lights/obj/src/gl/gl3pipe.d,0

build_lights/obj/src/camera.d,0

build_lights/obj/src/bmp.d,0

build_lights/obj/src/world.d,0

build_lights/obj/src/clump.d,0

build_lights/obj/src/skin.d,0

build_lights/obj/src/userdata.d,0

build_lights/obj/src/anim.d,0

build_lights/obj/src/engine.d,0

build_lights/obj/src/uvanim.d,0

build_lights/obj/src/png.d,0

build_lights/obj/src/pipeline.d,0

build_lights/obj/src/base.d,0

build_lights/obj/src/matfx.d,0

build_lights/obj/src/tga.d,0

build_lights/obj/src/plg.d,0

build_lights/obj/src/d3d/xboxvfmt.d,0

build_lights/obj/src/d3d/d3d8matfx.d,0

build_lights/obj/src/d3d/d3d8render.d,0

build_lights/obj/src/d3d/d3d9skin.d,0

build_lights/obj/src/d3d/d3dimmed.d,0

build_lights/obj/src/d3d/xboxskin.d,0

build_lights/obj/src/d3d/xbox.d,0

build_lights/obj/src/d3d/d3d9.d,0

build_lights/obj/src/d3d/d3drender.d,0

build_lights/obj/src/d3d/d3ddevice.d,0

build_lights/obj/src/d3d/d3d.d,0

build_lights/obj/src/d3d/d3d9matfx.d,0

build_lights/obj/src/d3d/xboxmatfx.d,0

build_lights/obj/src/d3d/d3d8.d,0

build_lights/obj/src/d3d/d3d8skin.d,0

build_lights/obj/src/d3d/d3d9render.d,0

build_lights/obj/src/prim.d,0

build_lights/obj/src/tristrip.d,0

build_lights/obj/src/3ds/3dsskin.d,0

build_lights/obj/src/3ds/3ds.d,0

build_lights/obj/src/3ds/3dsimmed.d,0

build_lights/obj/src/3ds/3dsmatfx.d,0

build_lights/obj/src/3ds/3dsdevice.d,0

build_lights/obj/src/3ds/tex/swizzle.d,0

build_lights/obj/src/3ds/tex/compress.d,0

build_lights/obj/src/3ds/tex/rg_etc1.d,0

build_lights/obj/src/3ds/default_shbin.h,2958
#define VSH_FVEC_u_proj VSH_FVEC_u_proj3,37
#define VSH_ULEN_u_proj VSH_ULEN_u_proj4,66
#define VSH_FVEC_u_view VSH_FVEC_u_view5,92
#define VSH_ULEN_u_view VSH_ULEN_u_view6,121
#define VSH_FVEC_u_world VSH_FVEC_u_world7,147
#define VSH_ULEN_u_world VSH_ULEN_u_world8,177
#define VSH_FVEC_u_ambLight VSH_FVEC_u_ambLight9,204
#define VSH_ULEN_u_ambLight VSH_ULEN_u_ambLight10,237
#define VSH_FVEC_u_matColor VSH_FVEC_u_matColor11,267
#define VSH_ULEN_u_matColor VSH_ULEN_u_matColor12,300
#define VSH_FVEC_u_surfProps VSH_FVEC_u_surfProps13,330
#define VSH_ULEN_u_surfProps VSH_ULEN_u_surfProps14,364
#define VSH_FVEC_u_proj VSH_FVEC_u_proj15,395
#define VSH_ULEN_u_proj VSH_ULEN_u_proj16,424
#define VSH_FVEC_u_view VSH_FVEC_u_view17,450
#define VSH_ULEN_u_view VSH_ULEN_u_view18,479
#define VSH_FVEC_u_world VSH_FVEC_u_world19,505
#define VSH_ULEN_u_world VSH_ULEN_u_world20,535
#define VSH_FVEC_u_texMatrix VSH_FVEC_u_texMatrix21,562
#define VSH_ULEN_u_texMatrix VSH_ULEN_u_texMatrix22,596
#define VSH_FVEC_u_ambLight VSH_FVEC_u_ambLight23,627
#define VSH_ULEN_u_ambLight VSH_ULEN_u_ambLight24,660
#define VSH_FVEC_u_matColor VSH_FVEC_u_matColor25,690
#define VSH_ULEN_u_matColor VSH_ULEN_u_matColor26,723
#define VSH_FVEC_u_surfProps VSH_FVEC_u_surfProps27,753
#define VSH_ULEN_u_surfProps VSH_ULEN_u_surfProps28,787
#define VSH_FVEC_u_xform VSH_FVEC_u_xform29,818
#define VSH_ULEN_u_xform VSH_ULEN_u_xform30,848
#define VSH_FVEC_u_flip VSH_FVEC_u_flip31,875
#define VSH_ULEN_u_flip VSH_ULEN_u_flip32,904
#define VSH_FVEC_u_proj VSH_FVEC_u_proj33,930
#define VSH_ULEN_u_proj VSH_ULEN_u_proj34,959
#define VSH_FVEC_u_view VSH_FVEC_u_view35,985
#define VSH_ULEN_u_view VSH_ULEN_u_view36,1014
#define VSH_FVEC_u_world VSH_FVEC_u_world37,1040
#define VSH_ULEN_u_world VSH_ULEN_u_world38,1070
#define VSH_FVEC_u_lightParams VSH_FVEC_u_lightParams39,1097
#define VSH_ULEN_u_lightParams VSH_ULEN_u_lightParams40,1133
#define VSH_FVEC_u_lightPosition VSH_FVEC_u_lightPosition41,1166
#define VSH_ULEN_u_lightPosition VSH_ULEN_u_lightPosition42,1204
#define VSH_FVEC_u_lightDirection VSH_FVEC_u_lightDirection43,1239
#define VSH_ULEN_u_lightDirection VSH_ULEN_u_lightDirection44,1278
#define VSH_FVEC_u_lightColor VSH_FVEC_u_lightColor45,1314
#define VSH_ULEN_u_lightColor VSH_ULEN_u_lightColor46,1349
#define VSH_FVEC_u_ambLight VSH_FVEC_u_ambLight47,1381
#define VSH_ULEN_u_ambLight VSH_ULEN_u_ambLight48,1414
#define VSH_FVEC_u_matColor VSH_FVEC_u_matColor49,1444
#define VSH_ULEN_u_matColor VSH_ULEN_u_matColor50,1477
#define VSH_FVEC_u_surfProps VSH_FVEC_u_surfProps51,1507
#define VSH_ULEN_u_surfProps VSH_ULEN_u_surfProps52,1541
#define VSH_PRG_DEFAULT VSH_PRG_DEFAULT56,1679
#define VSH_PRG_MATFX VSH_PRG_MATFX57,1705
#define VSH_PRG_IM2D VSH_PRG_IM2D58,1729
#define VSH_PRG_IM3D VSH_PRG_IM3D59,1752
#define VSH_PRG_LIGHTING VSH_PRG_LIGHTING60,1775

build_lights/obj/src/3ds/3dsrender.d,0

build_lights/obj/src/3ds/3dspipe.d,0

build_lights/obj/src/3ds/3dsshader.d,0

build_lights/obj/src/3ds/3dsraster.d,0

build_lights/obj/src/geometry.d,0

build_lights/obj/src/light.d,0

build_lights/obj/src/error.d,0

build_lights/obj/skeleton/3ds_skel.d,0

build_lights/obj/skeleton/imgui/imgui.d,0

build_lights/obj/skeleton/imgui/imgui_draw.d,0

build_lights/obj/skeleton/imgui/ImGuizmo.d,0

build_lights/obj/skeleton/imgui/imgui_impl_rw.d,0

build_lights/obj/skeleton/imgui/imgui_demo.d,0

build_lights/obj/skeleton/skeleton.d,0

build_lights/obj/skeleton/sdl2.d,0

build_lights/obj/skeleton/glfw.d,0

build_lights/obj/skeleton/win.d,0

build_playground/GNUmakefile,2201
TARGET		:=	playgroundTARGET9,152
BUILD_CFG	:=	BUILD_CFG10,174
DEBUG		:=	-gDEBUG11,188
WISDOM		:=	-WallWISDOM12,201
OPTFLAGS	:=	-O0OPTFLAGS13,218
LIBRW_SRC	:=	../src \LIBRW_SRC15,235
PLAY_SRC	:=	../tools/playground \PLAY_SRC24,383
SOURCE_DIRS	=	$(LIBRW_SRC) $(PLAY_SRC)SOURCE_DIRS28,456
INCLUDE_DIRS	=	$(CTRULIB)/include ../ $(SOURCE_DIRS)INCLUDE_DIRS29,495
ARCH		:=	-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=softARCH33,568
ASFLAGS		:=	$(DEBUG) $(ARCH)ASFLAGS34,632
CFLAGS		:=	$(WISDOM) $(DEBUG) $(OPTFLAGS) $(ARCH)CFLAGS35,661
LIBS		:=	-lcitro3d -lctru -lmLIBS39,881
LIBDIRS		:=	-L$(CTRULIB)/libLIBDIRS40,911
LDFLAGS		=	-specs=3dsx.specs $(DEBUG) $(ARCH) -Wl,-Map,$(notdir $*.map)LDFLAGS41,940
CXXFLAGS	=	-fno-rtti -fno-exceptions -std=gnu++11 $(CFLAGS) $(INC_PICA)CXXFLAGS42,1012
OBJTREE		:=	$(foreach dir,$(SOURCE_DIRS),$(patsubst ../%,./obj/%.dir,$(dir)))OBJTREE44,1085
CPPFILES	:=	$(foreach dir,$(SOURCE_DIRS),$(wildcard $(dir)/*.cpp))CPPFILES45,1163
PICAFILES	:=	$(foreach dir,$(SOURCE_DIRS),$(wildcard $(dir)/*.v.pica))PICAFILES46,1230
OBJ_CXX		:=	$(foreach file,$(CPPFILES),$(patsubst ../%,./obj/%,$(patsubst %.cpp,%.o,$(file))))OBJ_CXX48,1302
OBJ_PICA	:=	$(foreach file,$(PICAFILES),$(patsubst ../%,./obj/%,$(patsubst %.v.pica,%.shbin.o,$(OBJ_PICA49,1397
HDR_PICA	:=	$(foreach file,$(PICAFILES),$(patsubst ../%,./obj/%,$(patsubst %.v.pica,%_shbin.h,$(HDR_PICA50,1502
INC_PICA	:=	$(sort $(foreach obj,$(OBJ_PICA),-I$(dir $(obj))))INC_PICA51,1607
DEPS		:=	$(foreach obj,$(OBJ_CXX),$(patsubst %.o,%.d,$(obj)))DEPS53,1671
default: $(TARGET).3dsxdefault56,1742
./obj/%.dir:./obj/%.dir59,1797
./obj/%.shbin.o ./obj/%_shbin.h: ../%.v.pica./obj/%.shbin.o63,1871
./obj/%.shbin.o ./obj/%_shbin.h: ../%.v.pica./obj/%_shbin.h63,1871
./obj/%.d: ../%.cpp./obj/%.d84,2694
./obj/%.o: ../%.cpp./obj/%.o92,2895
%.elf:%.elf97,3000
$(OBJ_CXX): | $(OBJTREE)$(OBJ_CXX)103,3202
$(OBJ_PICA): | $(OBJTREE)$(OBJ_PICA)104,3227
$(DEPS): | $(OBJ_PICA)$(DEPS)105,3253
$(OBJ_CXX): | $(DEPS)$(OBJ_CXX)106,3276
$(TARGET).3dsx:	$(TARGET).elf$(TARGET).3dsx109,3352
$(TARGET).elf:	$(OBJ_CXX) $(OBJ_PICA)$(TARGET).elf111,3383
clean:clean114,3436

build_playground/.gdbinit,0

build_playground/obj/tools/playground/font.d,0

build_playground/obj/tools/playground/ras_test.d,0

build_playground/obj/tools/playground/camera_pg.d,0

build_playground/obj/tools/playground/tl_tests.d,0

build_playground/obj/tools/playground/splines.d,0

build_playground/obj/tools/playground/playground.d,0

build_playground/obj/src/charset.d,0

build_playground/obj/src/render.d,0

build_playground/obj/src/geoplg.d,0

build_playground/obj/src/raster.d,0

build_playground/obj/src/ps2/pds.d,0

build_playground/obj/src/ps2/ps2device.d,0

build_playground/obj/src/ps2/ps2skin.d,0

build_playground/obj/src/ps2/ps2raster.d,0

build_playground/obj/src/ps2/ps2.d,0

build_playground/obj/src/ps2/ps2matfx.d,0

build_playground/obj/src/frame.d,0

build_playground/obj/src/texture.d,0

build_playground/obj/src/hanim.d,0

build_playground/obj/src/lodepng/lodepng.d,0

build_playground/obj/src/image.d,0

build_playground/obj/src/gl/gl3matfx.d,0

build_playground/obj/src/gl/gl3render.d,0

build_playground/obj/src/gl/gl3raster.d,0

build_playground/obj/src/gl/gl3shader.d,0

build_playground/obj/src/gl/gl3device.d,0

build_playground/obj/src/gl/gl3.d,0

build_playground/obj/src/gl/gl3immed.d,0

build_playground/obj/src/gl/wdgl.d,0

build_playground/obj/src/gl/gl3skin.d,0

build_playground/obj/src/gl/gl3pipe.d,0

build_playground/obj/src/camera.d,0

build_playground/obj/src/bmp.d,0

build_playground/obj/src/world.d,0

build_playground/obj/src/clump.d,0

build_playground/obj/src/skin.d,0

build_playground/obj/src/userdata.d,0

build_playground/obj/src/anim.d,0

build_playground/obj/src/engine.d,0

build_playground/obj/src/uvanim.d,0

build_playground/obj/src/png.d,0

build_playground/obj/src/pipeline.d,0

build_playground/obj/src/base.d,0

build_playground/obj/src/matfx.d,0

build_playground/obj/src/tga.d,0

build_playground/obj/src/plg.d,0

build_playground/obj/src/d3d/xboxvfmt.d,0

build_playground/obj/src/d3d/d3d8matfx.d,0

build_playground/obj/src/d3d/d3d8render.d,0

build_playground/obj/src/d3d/d3d9skin.d,0

build_playground/obj/src/d3d/d3dimmed.d,0

build_playground/obj/src/d3d/xboxskin.d,0

build_playground/obj/src/d3d/xbox.d,0

build_playground/obj/src/d3d/d3d9.d,0

build_playground/obj/src/d3d/d3drender.d,0

build_playground/obj/src/d3d/d3ddevice.d,0

build_playground/obj/src/d3d/d3d.d,0

build_playground/obj/src/d3d/d3d9matfx.d,0

build_playground/obj/src/d3d/xboxmatfx.d,0

build_playground/obj/src/d3d/d3d8.d,0

build_playground/obj/src/d3d/d3d8skin.d,0

build_playground/obj/src/d3d/d3d9render.d,0

build_playground/obj/src/prim.d,0

build_playground/obj/src/tristrip.d,0

build_playground/obj/src/3ds/3dsskin.d,0

build_playground/obj/src/3ds/3ds.d,0

build_playground/obj/src/3ds/3dsimmed.d,0

build_playground/obj/src/3ds/3dsmatfx.d,0

build_playground/obj/src/3ds/3dsdevice.d,0

build_playground/obj/src/3ds/shaders/matfx_shbin.h,0

build_playground/obj/src/3ds/shaders/skin_shbin.h,0

build_playground/obj/src/3ds/shaders/im2d_shbin.h,0

build_playground/obj/src/3ds/shaders/im3d_shbin.h,0

build_playground/obj/src/3ds/shaders/default_shbin.h,0

build_playground/obj/src/3ds/tex/swizzle.d,0

build_playground/obj/src/3ds/tex/compress.d,0

build_playground/obj/src/3ds/tex/rg_etc1.d,0

build_playground/obj/src/3ds/3dsrender.d,0

build_playground/obj/src/3ds/3dspipe.d,0

build_playground/obj/src/3ds/3dsshader.d,0

build_playground/obj/src/3ds/3dsraster.d,0

build_playground/obj/src/geometry.d,0

build_playground/obj/src/light.d,0

build_playground/obj/src/error.d,0

build_playground/obj/skeleton/3ds_skel.d,0

build_playground/obj/skeleton/imgui/imgui.d,0

build_playground/obj/skeleton/imgui/imgui_draw.d,0

build_playground/obj/skeleton/imgui/ImGuizmo.d,0

build_playground/obj/skeleton/imgui/imgui_impl_rw.d,0

build_playground/obj/skeleton/imgui/imgui_demo.d,0

build_playground/obj/skeleton/skeleton.d,0

build_playground/obj/skeleton/sdl2.d,0

build_playground/obj/skeleton/glfw.d,0

build_playground/obj/skeleton/win.d,0

build_imguitest/GNUmakefile,2216
TARGET		:=	imguitestTARGET9,152
BUILD_CFG	:=	BUILD_CFG10,173
DEBUG		:=	-gDEBUG11,187
WISDOM		:=	-WallWISDOM12,200
OPTFLAGS	:=	-O0OPTFLAGS13,217
LIBRW_SRC	:=	../src \LIBRW_SRC15,234
IMGUITEST_SRC	:=	../tools/imguitest \IMGUITEST_SRC24,382
SOURCE_DIRS	=	$(LIBRW_SRC) $(IMGUITEST_SRC)SOURCE_DIRS28,459
INCLUDE_DIRS	=	$(CTRULIB)/include ../ $(SOURCE_DIRS)INCLUDE_DIRS29,503
ARCH		:=	-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=softARCH33,576
ASFLAGS		:=	$(DEBUG) $(ARCH)ASFLAGS34,640
CFLAGS		:=	$(WISDOM) $(DEBUG) $(OPTFLAGS) $(ARCH)CFLAGS35,669
LIBS		:=	-lcitro3d -lctru -lmLIBS39,889
LIBDIRS		:=	-L$(CTRULIB)/libLIBDIRS40,919
LDFLAGS		=	-specs=3dsx.specs $(DEBUG) $(ARCH) -Wl,-Map,$(notdir $*.map)LDFLAGS41,948
CXXFLAGS	=	-fno-rtti -fno-exceptions -std=gnu++11 $(CFLAGS) $(INC_PICA)CXXFLAGS42,1020
OBJTREE		:=	$(foreach dir,$(SOURCE_DIRS),$(patsubst ../%,./obj/%.dir,$(dir)))OBJTREE44,1093
CPPFILES	:=	$(foreach dir,$(SOURCE_DIRS),$(wildcard $(dir)/*.cpp))CPPFILES45,1171
PICAFILES	:=	$(foreach dir,$(SOURCE_DIRS),$(wildcard $(dir)/*.shlist))PICAFILES46,1238
OBJ_CXX		:=	$(foreach file,$(CPPFILES),$(patsubst ../%,./obj/%,$(patsubst %.cpp,%.o,$(file))))OBJ_CXX48,1310
OBJ_PICA	:=	$(foreach file,$(PICAFILES),$(patsubst ../%,./obj/%,$(patsubst %.shlist,%.shbin.o,$(OBJ_PICA49,1405
HDR_PICA	:=	$(foreach file,$(PICAFILES),$(patsubst ../%,./obj/%,$(patsubst %.shlist,%_shbin.h,$(HDR_PICA50,1510
INC_PICA	:=	$(sort $(foreach obj,$(OBJ_PICA),-I$(dir $(obj))))INC_PICA51,1615
DEPS		:=	$(foreach obj,$(OBJ_CXX),$(patsubst %.o,%.d,$(obj)))DEPS53,1679
default: $(TARGET).3dsxdefault56,1750
./obj/%.dir:./obj/%.dir59,1805
./obj/%.shbin.o ./obj/%_shbin.h: ../%.shlist./obj/%.shbin.o63,1879
./obj/%.shbin.o ./obj/%_shbin.h: ../%.shlist./obj/%_shbin.h63,1879
./obj/%.d: ../%.cpp./obj/%.d92,2904
./obj/%.o: ../%.cpp./obj/%.o100,3105
%.elf:%.elf105,3210
$(OBJ_CXX): | $(OBJTREE)$(OBJ_CXX)111,3412
$(OBJ_PICA): | $(OBJTREE)$(OBJ_PICA)112,3437
$(DEPS): | $(OBJ_PICA)$(DEPS)113,3463
$(OBJ_CXX): | $(DEPS)$(OBJ_CXX)114,3486
$(TARGET).3dsx:	$(TARGET).elf$(TARGET).3dsx117,3562
$(TARGET).elf:	$(OBJ_CXX) $(OBJ_PICA)$(TARGET).elf119,3593
clean:clean122,3646

build_imguitest/.gdbinit,0

build_imguitest/obj/tools/imguitest/main.d,0

build_imguitest/obj/src/charset.d,0

build_imguitest/obj/src/render.d,0

build_imguitest/obj/src/geoplg.d,0

build_imguitest/obj/src/raster.d,0

build_imguitest/obj/src/ps2/pds.d,0

build_imguitest/obj/src/ps2/ps2device.d,0

build_imguitest/obj/src/ps2/ps2skin.d,0

build_imguitest/obj/src/ps2/ps2raster.d,0

build_imguitest/obj/src/ps2/ps2.d,0

build_imguitest/obj/src/ps2/ps2matfx.d,0

build_imguitest/obj/src/frame.d,0

build_imguitest/obj/src/texture.d,0

build_imguitest/obj/src/hanim.d,0

build_imguitest/obj/src/lodepng/lodepng.d,0

build_imguitest/obj/src/image.d,0

build_imguitest/obj/src/gl/gl3matfx.d,0

build_imguitest/obj/src/gl/gl3render.d,0

build_imguitest/obj/src/gl/gl3raster.d,0

build_imguitest/obj/src/gl/gl3shader.d,0

build_imguitest/obj/src/gl/gl3device.d,0

build_imguitest/obj/src/gl/gl3.d,0

build_imguitest/obj/src/gl/gl3immed.d,0

build_imguitest/obj/src/gl/wdgl.d,0

build_imguitest/obj/src/gl/gl3skin.d,0

build_imguitest/obj/src/gl/gl3pipe.d,0

build_imguitest/obj/src/camera.d,0

build_imguitest/obj/src/bmp.d,0

build_imguitest/obj/src/world.d,0

build_imguitest/obj/src/clump.d,0

build_imguitest/obj/src/skin.d,0

build_imguitest/obj/src/userdata.d,0

build_imguitest/obj/src/anim.d,0

build_imguitest/obj/src/engine.d,0

build_imguitest/obj/src/uvanim.d,0

build_imguitest/obj/src/png.d,0

build_imguitest/obj/src/pipeline.d,0

build_imguitest/obj/src/base.d,0

build_imguitest/obj/src/matfx.d,0

build_imguitest/obj/src/tga.d,0

build_imguitest/obj/src/plg.d,0

build_imguitest/obj/src/d3d/xboxvfmt.d,0

build_imguitest/obj/src/d3d/d3d8matfx.d,0

build_imguitest/obj/src/d3d/d3d8render.d,0

build_imguitest/obj/src/d3d/d3d9skin.d,0

build_imguitest/obj/src/d3d/d3dimmed.d,0

build_imguitest/obj/src/d3d/xboxskin.d,0

build_imguitest/obj/src/d3d/xbox.d,0

build_imguitest/obj/src/d3d/d3d9.d,0

build_imguitest/obj/src/d3d/d3drender.d,0

build_imguitest/obj/src/d3d/d3ddevice.d,0

build_imguitest/obj/src/d3d/d3d.d,0

build_imguitest/obj/src/d3d/d3d9matfx.d,0

build_imguitest/obj/src/d3d/xboxmatfx.d,0

build_imguitest/obj/src/d3d/d3d8.d,0

build_imguitest/obj/src/d3d/d3d8skin.d,0

build_imguitest/obj/src/d3d/d3d9render.d,0

build_imguitest/obj/src/prim.d,0

build_imguitest/obj/src/tristrip.d,0

build_imguitest/obj/src/3ds/3dsskin.d,0

build_imguitest/obj/src/3ds/3ds.d,0

build_imguitest/obj/src/3ds/3dsimmed.d,0

build_imguitest/obj/src/3ds/3dsmatfx.d,0

build_imguitest/obj/src/3ds/3dsdevice.d,0

build_imguitest/obj/src/3ds/tex/swizzle.d,0

build_imguitest/obj/src/3ds/tex/compress.d,0

build_imguitest/obj/src/3ds/tex/rg_etc1.d,0

build_imguitest/obj/src/3ds/default_shbin.h,2958
#define VSH_FVEC_u_proj VSH_FVEC_u_proj3,37
#define VSH_ULEN_u_proj VSH_ULEN_u_proj4,66
#define VSH_FVEC_u_view VSH_FVEC_u_view5,92
#define VSH_ULEN_u_view VSH_ULEN_u_view6,121
#define VSH_FVEC_u_world VSH_FVEC_u_world7,147
#define VSH_ULEN_u_world VSH_ULEN_u_world8,177
#define VSH_FVEC_u_ambLight VSH_FVEC_u_ambLight9,204
#define VSH_ULEN_u_ambLight VSH_ULEN_u_ambLight10,237
#define VSH_FVEC_u_matColor VSH_FVEC_u_matColor11,267
#define VSH_ULEN_u_matColor VSH_ULEN_u_matColor12,300
#define VSH_FVEC_u_surfProps VSH_FVEC_u_surfProps13,330
#define VSH_ULEN_u_surfProps VSH_ULEN_u_surfProps14,364
#define VSH_FVEC_u_proj VSH_FVEC_u_proj15,395
#define VSH_ULEN_u_proj VSH_ULEN_u_proj16,424
#define VSH_FVEC_u_view VSH_FVEC_u_view17,450
#define VSH_ULEN_u_view VSH_ULEN_u_view18,479
#define VSH_FVEC_u_world VSH_FVEC_u_world19,505
#define VSH_ULEN_u_world VSH_ULEN_u_world20,535
#define VSH_FVEC_u_texMatrix VSH_FVEC_u_texMatrix21,562
#define VSH_ULEN_u_texMatrix VSH_ULEN_u_texMatrix22,596
#define VSH_FVEC_u_ambLight VSH_FVEC_u_ambLight23,627
#define VSH_ULEN_u_ambLight VSH_ULEN_u_ambLight24,660
#define VSH_FVEC_u_matColor VSH_FVEC_u_matColor25,690
#define VSH_ULEN_u_matColor VSH_ULEN_u_matColor26,723
#define VSH_FVEC_u_surfProps VSH_FVEC_u_surfProps27,753
#define VSH_ULEN_u_surfProps VSH_ULEN_u_surfProps28,787
#define VSH_FVEC_u_xform VSH_FVEC_u_xform29,818
#define VSH_ULEN_u_xform VSH_ULEN_u_xform30,848
#define VSH_FVEC_u_flip VSH_FVEC_u_flip31,875
#define VSH_ULEN_u_flip VSH_ULEN_u_flip32,904
#define VSH_FVEC_u_proj VSH_FVEC_u_proj33,930
#define VSH_ULEN_u_proj VSH_ULEN_u_proj34,959
#define VSH_FVEC_u_view VSH_FVEC_u_view35,985
#define VSH_ULEN_u_view VSH_ULEN_u_view36,1014
#define VSH_FVEC_u_world VSH_FVEC_u_world37,1040
#define VSH_ULEN_u_world VSH_ULEN_u_world38,1070
#define VSH_FVEC_u_lightParams VSH_FVEC_u_lightParams39,1097
#define VSH_ULEN_u_lightParams VSH_ULEN_u_lightParams40,1133
#define VSH_FVEC_u_lightPosition VSH_FVEC_u_lightPosition41,1166
#define VSH_ULEN_u_lightPosition VSH_ULEN_u_lightPosition42,1204
#define VSH_FVEC_u_lightDirection VSH_FVEC_u_lightDirection43,1239
#define VSH_ULEN_u_lightDirection VSH_ULEN_u_lightDirection44,1278
#define VSH_FVEC_u_lightColor VSH_FVEC_u_lightColor45,1314
#define VSH_ULEN_u_lightColor VSH_ULEN_u_lightColor46,1349
#define VSH_FVEC_u_ambLight VSH_FVEC_u_ambLight47,1381
#define VSH_ULEN_u_ambLight VSH_ULEN_u_ambLight48,1414
#define VSH_FVEC_u_matColor VSH_FVEC_u_matColor49,1444
#define VSH_ULEN_u_matColor VSH_ULEN_u_matColor50,1477
#define VSH_FVEC_u_surfProps VSH_FVEC_u_surfProps51,1507
#define VSH_ULEN_u_surfProps VSH_ULEN_u_surfProps52,1541
#define VSH_PRG_DEFAULT VSH_PRG_DEFAULT56,1679
#define VSH_PRG_MATFX VSH_PRG_MATFX57,1705
#define VSH_PRG_IM2D VSH_PRG_IM2D58,1729
#define VSH_PRG_IM3D VSH_PRG_IM3D59,1752
#define VSH_PRG_LIGHTING VSH_PRG_LIGHTING60,1775

build_imguitest/obj/src/3ds/3dsrender.d,0

build_imguitest/obj/src/3ds/3dspipe.d,0

build_imguitest/obj/src/3ds/3dsshader.d,0

build_imguitest/obj/src/3ds/3dsraster.d,0

build_imguitest/obj/src/geometry.d,0

build_imguitest/obj/src/light.d,0

build_imguitest/obj/src/error.d,0

build_imguitest/obj/skeleton/3ds_skel.d,0

build_imguitest/obj/skeleton/imgui/imgui.d,0

build_imguitest/obj/skeleton/imgui/imgui_draw.d,0

build_imguitest/obj/skeleton/imgui/ImGuizmo.d,0

build_imguitest/obj/skeleton/imgui/imgui_impl_rw.d,0

build_imguitest/obj/skeleton/imgui/imgui_demo.d,0

build_imguitest/obj/skeleton/skeleton.d,0

build_imguitest/obj/skeleton/sdl2.d,0

build_imguitest/obj/skeleton/glfw.d,0

build_imguitest/obj/skeleton/win.d,0

tools/lights/main.cpp,1687
rw::V3d zero = { 0.0f, 0.0f, 0.0f };zero5,59
struct SceneGlobals {SceneGlobals6,96
	rw::World *world;world7,118
	rw::Camera *camera;camera8,137
} Scene;Scene9,158
rw::EngineOpenParams engineOpenParams;engineOpenParams10,167
float FOV = 70.0f;FOV11,206
rw::V3d Xaxis = { 1.0f, 0.0, 0.0f };Xaxis13,226
rw::V3d Yaxis = { 0.0f, 1.0, 0.0f };Yaxis14,263
rw::V3d Zaxis = { 0.0f, 0.0, 1.0f };Zaxis15,300
rw::Light *BaseAmbientLight;BaseAmbientLight17,338
bool BaseAmbientLightOn;BaseAmbientLightOn18,367
rw::Light *CurrentLight;CurrentLight20,393
rw::Light *AmbientLight;AmbientLight21,418
rw::Light *PointLight;PointLight22,443
rw::Light *DirectLight;DirectLight23,466
rw::Light *SpotLight;SpotLight24,490
rw::Light *SpotSoftLight;SpotSoftLight25,512
float LightAngle = 45.0;LightAngle27,539
float LightRadius = 100.0f;LightRadius28,564
float LightConeAngle = 45.0f;LightConeAngle29,592
rw::V3d LightPos = {0.0f, 0.0f, 75.0f};LightPos30,622
Init(void)Init33,668
attachPlugins(void)attachPlugins42,806
CreateBaseAmbientLight(void)CreateBaseAmbientLight62,1273
CreateAmbientLight(void)CreateAmbientLight71,1443
CreateDirectLight(void)CreateDirectLight77,1531
CreatePointLight(void)CreatePointLight91,1871
CreateSpotLight(void)CreateSpotLight105,2180
CreateSpotSoftLight(void)CreateSpotSoftLight121,2587
CreateTestScene(rw::World *world)CreateTestScene137,2996
InitRW(void)InitRW216,4775
SwitchToLight(rw::Light *light)SwitchToLight246,5494
Gui(void)Gui255,5657
Draw(float timeDelta)Draw311,7283
KeyUp(int key)KeyUp334,7767
KeyDown(int key)KeyDown339,7792
AppEventHandler(sk::Event e, void *param)AppEventHandler349,7899

tools/ps2test/ps2.h,365
typedef int quad __attribute__((mode(TI)));quad3,21
typedef int int128 __attribute__((mode(TI)));int1284,65
typedef unsigned int uquad __attribute__((mode(TI)));uquad5,111
typedef unsigned int uint128 __attribute__((mode(TI)));uint1286,165
#define MAKE128(MAKE1288,222
#define UINT64(UINT6410,337
#define MAKEQ(MAKEQ11,399
#define BIT64(BIT6413,472

tools/ps2test/CMakeLists.txt,35
add_executable(ps2testps2test1,0

tools/ps2test/gs.h,11236
#define GS_NONINTERLACED	GS_NONINTERLACED1,0
#define GS_INTERLACED	GS_INTERLACED2,27
#define GS_NTSC	GS_NTSC4,53
#define GS_PAL	GS_PAL5,72
#define GS_VESA1A	GS_VESA1A6,90
#define GS_VESA1B	GS_VESA1B7,113
#define GS_VESA1C	GS_VESA1C8,136
#define GS_VESA1D	GS_VESA1D9,159
#define GS_VESA2A	GS_VESA2A10,182
#define GS_VESA2B	GS_VESA2B11,205
#define GS_VESA2C	GS_VESA2C12,228
#define GS_VESA2D	GS_VESA2D13,251
#define GS_VESA2E	GS_VESA2E14,274
#define GS_VESA3B	GS_VESA3B15,297
#define GS_VESA3C	GS_VESA3C16,320
#define GS_VESA3D	GS_VESA3D17,343
#define GS_VESA3E	GS_VESA3E18,366
#define GS_VESA4A	GS_VESA4A19,389
#define GS_VESA4B	GS_VESA4B20,412
#define GS_DTV480P	GS_DTV480P21,435
#define GS_FIELD	GS_FIELD23,460
#define GS_FRAME	GS_FRAME24,480
#define GS_PSMCT32	GS_PSMCT3226,501
#define GS_PSMCT24	GS_PSMCT2427,523
#define GS_PSMCT16	GS_PSMCT1628,545
#define GS_PSMCT16S	GS_PSMCT16S29,567
#define GS_PS_GPU24	GS_PS_GPU2430,591
#define GS_PSMZ32	GS_PSMZ3232,616
#define GS_PSMZ24	GS_PSMZ2433,637
#define GS_PSMZ16	GS_PSMZ1634,658
#define GS_PSMZ16S	GS_PSMZ16S35,679
#define GS_ZTST_NEVER	GS_ZTST_NEVER37,703
#define GS_ZTST_ALWAYS	GS_ZTST_ALWAYS38,728
#define GS_ZTST_GREATER	GS_ZTST_GREATER39,754
#define GS_ZTST_GEQUAL	GS_ZTST_GEQUAL40,781
#define GS_PRIM_POINT	GS_PRIM_POINT42,808
#define GS_PRIM_LINE	GS_PRIM_LINE43,833
#define GS_PRIM_LINE_STRIP	GS_PRIM_LINE_STRIP44,857
#define GS_PRIM_TRI	GS_PRIM_TRI45,886
#define GS_PRIM_TRI_STRIP	GS_PRIM_TRI_STRIP46,909
#define GS_PRIM_TRI_FAN	GS_PRIM_TRI_FAN47,937
#define GS_PRIM_SPRITE	GS_PRIM_SPRITE48,964
#define GS_PRIM_NO_SPEC	GS_PRIM_NO_SPEC49,990
#define GS_IIP_FLAT	GS_IIP_FLAT50,1017
#define GS_IIP_GOURAUD	GS_IIP_GOURAUD51,1040
#define GS_PRIM	GS_PRIM55,1103
#define GS_RGBAQ	GS_RGBAQ56,1125
#define GS_ST	GS_ST57,1147
#define GS_UV	GS_UV58,1167
#define GS_XYZF2	GS_XYZF259,1187
#define GS_XYZ2	GS_XYZ260,1209
#define GS_TEX0_1	GS_TEX0_161,1231
#define GS_TEX0_2	GS_TEX0_262,1254
#define GS_CLAMP_1	GS_CLAMP_163,1277
#define GS_CLAMP_2	GS_CLAMP_264,1301
#define GS_FOG	GS_FOG65,1325
#define GS_XYZF3	GS_XYZF366,1346
#define GS_XYZ3	GS_XYZ367,1368
#define GS_TEX1_1	GS_TEX1_168,1390
#define GS_TEX1_2	GS_TEX1_269,1413
#define GS_TEX2_1	GS_TEX2_170,1436
#define GS_TEX2_2	GS_TEX2_271,1459
#define GS_XYOFFSET_1	GS_XYOFFSET_172,1482
#define GS_XYOFFSET_2	GS_XYOFFSET_273,1509
#define GS_PRMODECONT	GS_PRMODECONT74,1536
#define GS_PRMODE	GS_PRMODE75,1563
#define GS_TEXCLUT	GS_TEXCLUT76,1586
#define GS_SCANMSK	GS_SCANMSK77,1610
#define GS_MIPTBP1_1	GS_MIPTBP1_178,1634
#define GS_MIPTBP1_2	GS_MIPTBP1_279,1660
#define GS_MIPTBP2_1	GS_MIPTBP2_180,1686
#define GS_MIPTBP2_2	GS_MIPTBP2_281,1712
#define GS_TEXA	GS_TEXA82,1738
#define GS_FOGCOL	GS_FOGCOL83,1760
#define GS_TEXFLUSH	GS_TEXFLUSH84,1783
#define GS_SCISSOR_1	GS_SCISSOR_185,1808
#define GS_SCISSOR_2	GS_SCISSOR_286,1834
#define GS_ALPHA_1	GS_ALPHA_187,1860
#define GS_ALPHA_2	GS_ALPHA_288,1884
#define GS_DIMX	GS_DIMX89,1908
#define GS_DTHE	GS_DTHE90,1930
#define GS_COLCLAMP	GS_COLCLAMP91,1952
#define GS_TEST_1	GS_TEST_192,1977
#define GS_TEST_2	GS_TEST_293,2000
#define GS_PABE	GS_PABE94,2023
#define GS_FBA_1	GS_FBA_195,2045
#define GS_FBA_2	GS_FBA_296,2067
#define GS_FRAME_1	GS_FRAME_197,2089
#define GS_FRAME_2	GS_FRAME_298,2113
#define GS_ZBUF_1	GS_ZBUF_199,2137
#define GS_ZBUF_2	GS_ZBUF_2100,2160
#define GS_BITBLTBUF	GS_BITBLTBUF101,2183
#define GS_TRXPOS	GS_TRXPOS102,2209
#define GS_TRXREG	GS_TRXREG103,2232
#define GS_TRXDIR	GS_TRXDIR104,2255
#define GS_HWREG	GS_HWREG105,2278
#define GS_SIGNAL	GS_SIGNAL106,2300
#define GS_FINISH	GS_FINISH107,2323
#define GS_LABEL	GS_LABEL108,2346
{__anon0cb993d9010a111,2383
	struct {__anon0cb993d90208112,2385
		uint64 EN1 : 1;EN1113,2395
		uint64 EN2 : 1;EN2114,2413
		uint64 CRTMD : 3;CRTMD115,2431
		uint64 MMOD : 1;MMOD116,2451
		uint64 AMOD : 1;AMOD117,2470
		uint64 SLBG : 1;SLBG118,2489
		uint64 ALP : 8;ALP119,2508
	} f;f120,2526
	uint64 d;d121,2532
} GsPmode;GsPmode122,2543
#define GS_MAKE_PMODE(GS_MAKE_PMODE124,2555
{__anon0cb993d9030a129,2733
	struct {__anon0cb993d90408130,2735
		uint64 INT : 1;INT131,2745
		uint64 FFMD : 1;FFMD132,2763
		uint64 DPMS : 2;DPMS133,2782
	} f;f134,2801
	uint64 d;d135,2807
} GsSmode2;GsSmode2136,2818
#define GS_MAKE_SMODE2(GS_MAKE_SMODE2138,2831
{__anon0cb993d9050a142,2934
	struct {__anon0cb993d90608143,2936
		uint64 FBP : 9;FBP144,2946
		uint64 FBW : 6;FBW145,2964
		uint64 PSM : 5;PSM146,2982
		uint64 DBX : 11;DBX148,3015
		uint64 DBY : 11;DBY149,3034
	} f;f150,3053
	uint64 d;d151,3059
} GsDispfb;GsDispfb152,3070
#define GS_MAKE_DISPFB(GS_MAKE_DISPFB154,3083
{__anon0cb993d9070a159,3227
	struct {__anon0cb993d90808160,3229
		uint64 DX : 12;DX161,3239
		uint64 DY : 11;DY162,3257
		uint64 MAGH : 4;MAGH163,3275
		uint64 MAGV : 2;MAGV164,3294
		uint64 DW : 12;DW166,3327
		uint64 DH : 11;DH167,3345
	} f;f168,3363
	uint64 d;d169,3369
} GsDisplay;GsDisplay170,3380
#define GS_MAKE_DISPLAY(GS_MAKE_DISPLAY172,3394
{__anon0cb993d9090a177,3556
	struct {__anon0cb993d90a08178,3558
		uint64 EXBP : 14;EXBP179,3568
		uint64 EXBW : 6;EXBW180,3588
		uint64 FBIN : 2;FBIN181,3607
		uint64 WFFMD : 1;WFFMD182,3626
		uint64 EMODA : 2;EMODA183,3646
		uint64 EMODC : 2;EMODC184,3666
		uint64 WDX : 11;WDX186,3700
		uint64 WDY : 11;WDY187,3719
	} f;f188,3738
	uint64 d;d189,3744
} GsExtbuf;GsExtbuf190,3755
#define GS_MAKE_EXTBUF(GS_MAKE_EXTBUF192,3768
{__anon0cb993d90b0a198,3995
	struct {__anon0cb993d90c08199,3997
		uint64 SX : 12;SX200,4007
		uint64 SY : 11;SY201,4025
		uint64 SMPH : 4;SMPH202,4043
		uint64 SMPV : 2;SMPV203,4062
		uint64 WW : 12;WW205,4095
		uint64 WH : 11;WH206,4113
	} f;f207,4131
	uint64 d;d208,4137
} GsExtdata;GsExtdata209,4148
#define GS_MAKE_EXTDATA(GS_MAKE_EXTDATA211,4162
{__anon0cb993d90d0a216,4324
	struct {__anon0cb993d90e08217,4326
		uint64 WRITE : 1;WRITE218,4336
	} f;f219,4356
	uint64 d;d220,4362
} GsExtwrite;GsExtwrite221,4373
{__anon0cb993d90f0a224,4402
	struct {__anon0cb993d91008225,4404
		uint64 R : 8;R226,4414
		uint64 G : 8;G227,4430
		uint64 B : 8;B228,4446
	} f;f229,4462
	uint64 d;d230,4468
} GsBgcolor;GsBgcolor231,4479
#define GS_MAKE_BGCOLOR(GS_MAKE_BGCOLOR233,4493
{__anon0cb993d9110a237,4582
	struct {__anon0cb993d91208238,4584
		uint64 SIGNAL : 1;SIGNAL239,4594
		uint64 FINISH : 1;FINISH240,4615
		uint64 HSINT : 1;HSINT241,4636
		uint64 VSINT : 1;VSINT242,4656
		uint64 EDWINT : 1;EDWINT243,4676
		uint64 FLUSH : 1;FLUSH245,4711
		uint64 RESET : 1;RESET246,4731
		uint64 NFIELD : 1;NFIELD248,4765
		uint64 FIELD : 1;FIELD249,4786
		uint64 FIFO : 2;FIFO250,4806
		uint64 REV : 8;REV251,4825
		uint64 ID : 8;ID252,4843
	} f;f253,4860
	uint64 d;d254,4866
} GsCsr;GsCsr255,4877
#define GS_CSR_SIGNAL_O	GS_CSR_SIGNAL_O257,4887
#define GS_CSR_FINISH_O	GS_CSR_FINISH_O258,4913
#define GS_CSR_HSINT_O	GS_CSR_HSINT_O259,4939
#define GS_CSR_VSINT_O	GS_CSR_VSINT_O260,4964
#define GS_CSR_EDWINT_O	GS_CSR_EDWINT_O261,4989
#define GS_CSR_FLUSH_O	GS_CSR_FLUSH_O262,5015
#define GS_CSR_RESET_O	GS_CSR_RESET_O263,5040
#define GS_CSR_NFIELD_O	GS_CSR_NFIELD_O264,5065
#define GS_CSR_FIELD_O	GS_CSR_FIELD_O265,5092
#define GS_CSR_FIFO_O	GS_CSR_FIFO_O266,5118
#define GS_CSR_REV_O	GS_CSR_REV_O267,5143
#define GS_CSR_ID_O	GS_CSR_ID_O268,5167
{__anon0cb993d9130a271,5205
	struct {__anon0cb993d91408272,5207
		uint64 SIGMSK : 1;SIGMSK274,5231
		uint64 FINISHMSK : 1;FINISHMSK275,5252
		uint64 HSMSKMSK : 1;HSMSKMSK276,5276
		uint64 VSMSKMSK : 1;VSMSKMSK277,5299
		uint64 EDWMSKMSK : 1;EDWMSKMSK278,5322
	} f;f279,5346
	uint64 d;d280,5352
} GsImr;GsImr281,5363
{__anon0cb993d9150a284,5387
	struct {__anon0cb993d91608285,5389
		uint64 DIR : 1;DIR286,5399
	} f;f287,5417
	uint64 d;d288,5423
} GsBusdir;GsBusdir289,5434
{__anon0cb993d9170a292,5461
	struct {__anon0cb993d91808293,5463
		uint64 SIGID : 32;SIGID294,5473
		uint64 LBLID : 32;LBLID295,5494
	} f;f296,5515
	uint64 d;d297,5521
} GsSiglblid;GsSiglblid298,5532
{__anon0cb993d9190a302,5562
	struct {__anon0cb993d91a08303,5564
		uint64 FBP : 9;FBP304,5574
		uint64 FBW : 6;FBW306,5606
		uint64 PSM : 6;PSM308,5638
		uint64 FBMSK : 32;FBMSK310,5670
	} f;f311,5691
	uint64 d;d312,5697
} GsFrame;GsFrame313,5708
#define GS_MAKE_FRAME(GS_MAKE_FRAME315,5720
{__anon0cb993d91b0a319,5846
	struct {__anon0cb993d91c08320,5848
		uint64 ZBP : 9;ZBP321,5858
		uint64 PSM : 4;PSM323,5891
		uint64 ZMSDK : 1;ZMSDK325,5923
	} f;f326,5943
	uint64 d;d327,5949
} GsZbuf;GsZbuf328,5960
#define GS_MAKE_ZBUF(GS_MAKE_ZBUF330,5971
{__anon0cb993d91d0a334,6072
	struct {__anon0cb993d91e08335,6074
		uint64 OFX : 16;OFX336,6084
		uint64 OFY : 16;OFY338,6118
	} f;f339,6137
	uint64 d;d340,6143
} GsXyOffset;GsXyOffset341,6154
#define GS_MAKE_XYOFFSET(GS_MAKE_XYOFFSET343,6169
{__anon0cb993d91f0a347,6252
	struct {__anon0cb993d92008348,6254
		uint64 SCAX0 : 11;SCAX0349,6264
		uint64 SCAX1 : 11;SCAX1351,6299
		uint64 SCAY0 : 11;SCAY0353,6334
		uint64 SCAY1 : 11;SCAY1355,6369
	} f;f356,6390
	uint64 d;d357,6396
} GsScissor;GsScissor358,6407
#define GS_MAKE_SCISSOR(GS_MAKE_SCISSOR360,6421
#define GS_MAKE_TEST(GS_MAKE_TEST363,6545
#define GS_MAKE_PRIM(GS_MAKE_PRIM367,6746
#define GS_MAKE_RGBAQ(GS_MAKE_RGBAQ371,6952
#define GS_MAKE_XYZ(GS_MAKE_XYZ374,7057
#define GIF_PACKED	GIF_PACKED377,7129
#define GIF_REGLIST	GIF_REGLIST378,7150
#define GIF_IMAGE	GIF_IMAGE379,7172
#define GIF_MAKE_TAG(GIF_MAKE_TAG381,7193
typedef struct GsCrtState GsCrtState;GsCrtState388,7484
struct GsCrtStateGsCrtState389,7522
	short inter, mode, ff;inter391,7542
	short inter, mode, ff;mode391,7542
	short inter, mode, ff;ff391,7542
typedef struct GsDispCtx GsDispCtx;GsDispCtx395,7600
struct GsDispCtxGsDispCtx396,7636
	GsPmode pmode;pmode399,7672
	GsDispfb dispfb1;dispfb1400,7688
	GsDispfb dispfb2;dispfb2401,7707
	GsDisplay display1;display1402,7726
	GsDisplay display2;display2403,7747
	GsBgcolor bgcolor;bgcolor404,7768
typedef struct GsDrawCtx GsDrawCtx;GsDrawCtx407,7792
struct GsDrawCtxGsDrawCtx408,7828
	uint128 gifTag;gifTag411,7863
	GsFrame frame1;frame1412,7880
	uint64  ad_frame1;ad_frame1413,7897
	GsFrame frame2;frame2414,7917
	uint64  ad_frame2;ad_frame2415,7934
	GsZbuf  zbuf1;zbuf1416,7954
	uint64  ad_zbuf1;ad_zbuf1417,7970
	GsZbuf  zbuf2;zbuf2418,7989
	uint64  ad_zbuf2;ad_zbuf2419,8005
	GsXyOffset xyoffset1;xyoffset1420,8024
	uint64  ad_xyoffset1;ad_xyoffset1421,8047
	GsXyOffset xyoffset2;xyoffset2422,8070
	uint64  ad_xyoffset2;ad_xyoffset2423,8093
	GsScissor scissor1;scissor1424,8116
	uint64 ad_scissor1;ad_scissor1425,8137
	GsScissor scissor2;scissor2426,8158
	uint64 ad_scissor2;ad_scissor2427,8179
typedef struct GsCtx GsCtx;GsCtx430,8204
struct GsCtxGsCtx431,8232
	GsDispCtx disp[2];disp434,8280
	GsDrawCtx draw[2];draw436,8330

tools/ps2test/mem.h,2599
#define VIF0_FIFO	VIF0_FIFO2,12
#define VIF1_FIFO	VIF1_FIFO3,63
#define GIF_FIFO	GIF_FIFO4,114
#define IPU_out_FIFO	IPU_out_FIFO5,164
#define IPU_in_FIFO	IPU_in_FIFO6,218
#define D0_CHCR	D0_CHCR10,302
#define D0_MADR	D0_MADR11,351
#define D0_QWC	D0_QWC12,400
#define D0_TADR	D0_TADR13,448
#define D0_ASR0	D0_ASR014,497
#define D0_ASR1	D0_ASR115,546
#define D1_CHCR	D1_CHCR17,603
#define D1_MADR	D1_MADR18,652
#define D1_QWC	D1_QWC19,701
#define D1_TADR	D1_TADR20,749
#define D1_ASR0	D1_ASR021,798
#define D1_ASR1	D1_ASR122,847
#define D2_CHCR	D2_CHCR24,906
#define D2_MADR	D2_MADR25,955
#define D2_QWC	D2_QWC26,1004
#define D2_TADR	D2_TADR27,1052
#define D2_ASR0	D2_ASR028,1101
#define D2_ASR1	D2_ASR129,1150
#define D3_CHCR	D3_CHCR31,1210
#define D3_MADR	D3_MADR32,1259
#define D3_QWC	D3_QWC33,1308
#define D4_CHCR	D4_CHCR35,1365
#define D4_MADR	D4_MADR36,1414
#define D4_QWC	D4_QWC37,1463
#define D4_TADR	D4_TADR38,1511
#define D5_CHCR	D5_CHCR40,1573
#define D5_MADR	D5_MADR41,1622
#define D5_QWC	D5_QWC42,1671
#define D6_CHCR	D6_CHCR44,1730
#define D6_MADR	D6_MADR45,1779
#define D6_QWC	D6_QWC46,1828
#define D6_TADR	D6_TADR47,1876
#define D7_CHCR	D7_CHCR49,1933
#define D7_MADR	D7_MADR50,1982
#define D7_QWC	D7_QWC51,2031
#define D8_CHCR	D8_CHCR53,2090
#define D8_MADR	D8_MADR54,2139
#define D8_QWC	D8_QWC55,2188
#define D8_SADR	D8_SADR56,2236
#define D9_CHCR	D9_CHCR58,2294
#define D9_MADR	D9_MADR59,2343
#define D9_QWC	D9_QWC60,2392
#define D9_TADR	D9_TADR61,2440
#define D9_SADR	D9_SADR62,2489
#define D_CTRL	D_CTRL65,2560
#define D_STAT	D_STAT66,2608
#define D_PCR	D_PCR67,2656
#define D_SQWC	D_SQWC68,2703
#define D_RBSR	D_RBSR69,2751
#define D_RBOR	D_RBOR70,2799
#define D_STADR	D_STADR71,2847
#define D_ENABLER	D_ENABLER72,2896
#define D_ENABLEW	D_ENABLEW73,2946
#define GS_PMODE	GS_PMODE77,3028
#define GS_SMODE1	GS_SMODE178,3077
#define GS_SMODE2	GS_SMODE279,3127
#define GS_SRFSH	GS_SRFSH80,3177
#define GS_SYNCH1	GS_SYNCH181,3226
#define GS_SYNCH2	GS_SYNCH282,3276
#define GS_SYNCV	GS_SYNCV83,3326
#define GS_DISPFB1	GS_DISPFB184,3375
#define GS_DISPLAY1	GS_DISPLAY185,3426
#define GS_DISPFB2	GS_DISPFB286,3478
#define GS_DISPLAY2	GS_DISPLAY287,3529
#define GS_EXTBUF	GS_EXTBUF88,3581
#define GS_EXTDATA	GS_EXTDATA89,3631
#define GS_EXTWRITE	GS_EXTWRITE90,3682
#define GS_BGCOLOR	GS_BGCOLOR91,3734
#define GS_CSR	GS_CSR92,3785
#define GS_IMR	GS_IMR93,3833
#define GS_BUSDIR	GS_BUSDIR94,3881
#define GS_SIGLBLID	GS_SIGLBLID95,3931

tools/ps2test/main.cpp,3274
#define PALPAL4,38
typedef uint8 uchar;uchar17,242
typedef uint16 ushort;ushort18,263
typedef uint32 uint;uint19,286
#define WIDTH WIDTH21,308
#define HEIGHT HEIGHT23,337
#define VMODE VMODE24,356
#define HEIGHT HEIGHT26,383
#define VMODE VMODE27,402
int *__errno() { return &errno; }__errno33,495
uint128 packetbuf[128];packetbuf38,647
uint128 vuXYZScale;vuXYZScale39,671
uint128 vuXYZOffset;vuXYZOffset40,691
uint128 *curVifPtr;curVifPtr44,769
uint128 lightpacket[128];lightpacket45,789
int32 numLightQ;numLightQ46,815
rw::World *world;world50,835
rw::Camera *camera;camera51,853
int frames;frames54,875
printquad(uint128 p)printquad57,893
printquad4(uint128 p)printquad465,998
dump4(uint128 *p, int n)dump473,1124
struct DmaChannel {DmaChannel80,1213
	uint32 chcr; uint32 pad0[3];chcr81,1233
	uint32 chcr; uint32 pad0[3];pad081,1233
	uint32 madr; uint32 pad1[3];madr82,1263
	uint32 madr; uint32 pad1[3];pad182,1263
	uint32 qwc;  uint32 pad2[3];qwc83,1293
	uint32 qwc;  uint32 pad2[3];pad283,1293
	uint32 tadr; uint32 pad3[3];tadr84,1323
	uint32 tadr; uint32 pad3[3];pad384,1323
	uint32 asr0; uint32 pad4[3];asr085,1353
	uint32 asr0; uint32 pad4[3];pad485,1353
	uint32 asr1; uint32 pad5[3];asr186,1383
	uint32 asr1; uint32 pad5[3];pad586,1383
	uint32 pad6[8];pad687,1413
	uint32 sadr;sadr88,1430
static struct DmaChannel *dmaChannels[] = {dmaChannels91,1448
dmaReset(void)dmaReset105,1830
waitDMA(volatile uint32 *chcr)waitDMA126,2226
qwcpy(uint128 *dst, uint128 *src, int n)qwcpy132,2291
toGIF(void *src, int n)toGIF138,2371
toGIFchain(void *src)toGIFchain148,2495
toVIF1chain(void *src)toVIF1chain158,2651
GsCrtState gsCrtState;gsCrtState168,2804
int psmsizemap[64] = {psmsizemap170,2828
GsResetCrt(uchar inter, uchar mode, uchar ff)GsResetCrt187,3153
uint gsAllocPtr = 0;gsAllocPtr198,3413
GsInitDispCtx(GsDispCtx *disp, int width, int height, int psm)GsInitDispCtx201,3440
GsPutDispCtx(GsDispCtx *disp)GsPutDispCtx230,4102
GsInitDrawCtx(GsDrawCtx *draw, int width, int height, int psm, int zpsm)GsInitDrawCtx241,4328
GsPutDrawCtx(GsDrawCtx *draw)GsPutDrawCtx264,5107
GsInitCtx(GsCtx *ctx, int width, int height, int psm, int zpsm)GsInitCtx271,5204
initrender(void)initrender295,5945
clearscreen(int r, int g, int b)clearscreen309,6192
drawtest(void)drawtest334,6785
drawtri(void)drawtri405,8736
printMatrix(rw::Matrix *m)printMatrix435,9380
setupLight(rw::Atomic *atomic)setupLight456,9972
setupTransform(rw::Atomic *atomic, rw::Matrix *trans)setupTransform499,10834
enum {__anondebc6d9f0103504,10970
	DMAcnt       = 0x10000000,DMAcnt505,10977
	DMAref       = 0x30000000,DMAref506,11005
	DMAcall      = 0x50000000,DMAcall507,11033
	DMAret       = 0x60000000,DMAret508,11061
	DMAend       = 0x70000000,DMAend509,11089
	V4_32 = 0x6CV4_32511,11118
#define UNPACK(UNPACK514,11136
#define STCYCL(STCYCL515,11204
drawAtomic(rw::Atomic *atomic)drawAtomic518,11262
beginCamera(void)beginCamera613,14023
rw::EngineOpenParams engineOpenParams;engineOpenParams638,14563
pluginattach(void)pluginattach641,14608
initrw(void)initrw659,15025
int vsynchInt = 0;vsynchInt692,16007
vsynch(int id)vsynch695,16031
main()main704,16109

tools/ska2anm/ska2anm.cpp,92
char *argv0;argv011,136
usage(void)usage14,155
main(int argc, char *argv[])main22,300

tools/CMakeLists.txt,0

tools/playground/ras_test.cpp,6096
namespace rs {rs4,39
typedef int8_t i8;i86,55
typedef uint8_t u8;u87,74
typedef int16_t i16;i168,94
typedef uint16_t u16;u169,115
typedef int32_t i32;i3210,137
typedef uint32_t u32;u3211,158
typedef int64_t i64;i6412,180
typedef uint64_t u64;u6413,201
typedef struct Canvas Canvas;Canvas15,224
struct CanvasCanvas16,254
	u8 *fb;fb18,270
	u32 *zbuf;zbuf19,279
	int w, h;w20,291
	int w, h;h20,291
typedef struct Texture Texture;Texture24,329
struct Texture          Texture25,361
	u8 *pixels;pixels27,411
	int w, h;w28,424
	int w, h;h28,424
	int wrap;wrap29,435
typedef struct Point3 Point3;Point332,464
struct Point3Point333,494
	int x, y, z;x35,510
	int x, y, z;y35,510
	int x, y, z;z35,510
typedef struct Color Color;Color38,528
struct ColorColor39,556
	u8 r, g, b, a;r41,571
	u8 r, g, b, a;g41,571
	u8 r, g, b, a;b41,571
	u8 r, g, b, a;a41,571
typedef struct Vertex Vertex;Vertex44,591
struct VertexVertex45,621
	i32 x, y, z;x47,637
	i32 x, y, z;y47,637
	i32 x, y, z;z47,637
	float q;	// 1/zq48,651
	u8 r, g, b, a;r49,668
	u8 r, g, b, a;g49,668
	u8 r, g, b, a;b49,668
	u8 r, g, b, a;a49,668
	u8 f;		// fogf50,684
	float s, t;s51,699
	float s, t;t51,699
#define trace(trace65,1117
enum TextureWrap {TextureWrap74,1182
	WRAP_REPEAT,WRAP_REPEAT75,1201
	WRAP_CLAMP,WRAP_CLAMP76,1215
	WRAP_BORDER,WRAP_BORDER77,1228
enum TextureFunction {TextureFunction80,1246
	TFUNC_MODULATE,TFUNC_MODULATE81,1269
	TFUNC_DECAL,TFUNC_DECAL82,1286
	TFUNC_HIGHLIGHT,TFUNC_HIGHLIGHT83,1300
	TFUNC_HIGHLIGHT2,TFUNC_HIGHLIGHT284,1318
enum AlphaTestFunc {AlphaTestFunc87,1341
	ALPHATEST_NEVER,ALPHATEST_NEVER88,1362
	ALPHATEST_ALWAYS,ALPHATEST_ALWAYS89,1380
	ALPHATEST_LESS,ALPHATEST_LESS90,1399
	ALPHATEST_LEQUAL,ALPHATEST_LEQUAL91,1416
	ALPHATEST_EQUAL,ALPHATEST_EQUAL92,1435
	ALPHATEST_GEQUAL,ALPHATEST_GEQUAL93,1453
	ALPHATEST_GREATER,ALPHATEST_GREATER94,1472
	ALPHATEST_NOTEQUAL,ALPHATEST_NOTEQUAL95,1492
enum AlphaTestFail {AlphaTestFail98,1517
	ALPHAFAIL_KEEP,ALPHAFAIL_KEEP99,1538
	ALPHAFAIL_FB_ONLY,ALPHAFAIL_FB_ONLY100,1555
	ALPHAFAIL_ZB_ONLY,ALPHAFAIL_ZB_ONLY101,1575
enum DepthTestFunc {DepthTestFunc104,1599
	DEPTHTEST_NEVER,DEPTHTEST_NEVER105,1620
	DEPTHTEST_ALWAYS,DEPTHTEST_ALWAYS106,1638
	DEPTHTEST_GEQUAL,DEPTHTEST_GEQUAL107,1657
	DEPTHTEST_GREATER,DEPTHTEST_GREATER108,1676
enum AlphaBlendOp {AlphaBlendOp114,1807
	ALPHABLEND_SRC,ALPHABLEND_SRC115,1827
	ALPHABLEND_DST,ALPHABLEND_DST116,1844
	ALPHABLEND_ZERO,ALPHABLEND_ZERO117,1861
	ALPHABLEND_FIX = ALPHABLEND_ZERO,ALPHABLEND_FIX118,1879
#define CEIL(CEIL153,2591
int srScissorX0, srScissorX1;srScissorX0156,2641
int srScissorX0, srScissorX1;srScissorX1156,2641
int srScissorY0, srScissorY1;srScissorY0157,2671
int srScissorY0, srScissorY1;srScissorY1157,2671
int srDepthTestEnable = 1;srDepthTestEnable158,2701
int srDepthTestFunction = DEPTHTEST_GEQUAL;srDepthTestFunction159,2728
int srWriteZ = 1;srWriteZ160,2772
int srAlphaTestEnable = 1;srAlphaTestEnable161,2790
int srAlphaTestFunction = ALPHATEST_ALWAYS;srAlphaTestFunction162,2817
int srAlphaTestReference;srAlphaTestReference163,2861
int srAlphaTestFail = ALPHAFAIL_FB_ONLY;srAlphaTestFail164,2887
int srAlphaBlendEnable = 1;srAlphaBlendEnable165,2928
int srAlphaBlendA = ALPHABLEND_SRC;srAlphaBlendA166,2956
int srAlphaBlendB = ALPHABLEND_DST;srAlphaBlendB167,2992
int srAlphaBlendC = ALPHABLEND_SRC;srAlphaBlendC168,3028
int srAlphaBlendD = ALPHABLEND_DST;srAlphaBlendD169,3064
int srAlphaBlendFix = 0x80;srAlphaBlendFix170,3100
int srTexEnable = 0;srTexEnable171,3128
Texture *srTexture;srTexture172,3149
int srWrapU = WRAP_REPEAT;srWrapU173,3169
int srWrapV = WRAP_REPEAT;srWrapV174,3196
Color srBorder = { 255, 0, 0, 255 };srBorder175,3223
int srTexUseAlpha = 1;srTexUseAlpha176,3260
int srTexFunc = TFUNC_MODULATE;srTexFunc177,3283
int srFogEnable = 0;srFogEnable178,3315
Color srFogCol = { 0, 0, 0, 0 };srFogCol179,3336
int clamp(int x) { if(x < 0) return 0; if(x > 255) return 255; return x; }clamp181,3370
makecanvas(int w, int h)makecanvas184,3454
maketexture(int w, int h)maketexture196,3683
clearcanvas(Canvas *canvas)clearcanvas208,3875
writefb(Canvas *canvas, int x, int y, Color c)writefb215,4009
putpixel(Canvas *canvas, Point3 p, Color c)putpixel227,4209
sampletex_nearest(int u, int v)sampletex_nearest392,6990
texfunc(Color t, Color f)texfunc435,7706
Point3 mkpnt(int x, int y, int z) { Point3 p = { x, y, z}; return p; }mkpnt476,8430
drawRect(Canvas *canvas, Point3 p1, Point3 p2, Color c)drawRect479,8507
drawLine(Canvas *canvas, Point3 p1, Point3 p2, Color c)drawLine488,8687
struct TriAttribsTriAttribs533,9425
	i64 z;z535,9445
	i32 r, g, b, a;r536,9453
	i32 r, g, b, a;g536,9453
	i32 r, g, b, a;b536,9453
	i32 r, g, b, a;a536,9453
	i32 f;f537,9470
	float s, t;s538,9478
	float s, t;t538,9478
	float q;q539,9491
add1(struct TriAttribs *a, struct TriAttribs *b)add1543,9517
sub1(struct TriAttribs *a, struct TriAttribs *b)sub1557,9718
guard(struct TriAttribs *a)guard571,9919
struct RasTriRasTri587,10360
	int x, y;x589,10376
	int x, y;y589,10376
	int ymid, yend;ymid590,10387
	int ymid, yend;yend590,10387
	int right;right591,10404
	int e[2], dx[3], dy[3];e592,10416
	int e[2], dx[3], dy[3];dx592,10416
	int e[2], dx[3], dy[3];dy592,10416
	struct TriAttribs gx, gy, v, s;gx593,10441
	struct TriAttribs gx, gy, v, s;gy593,10441
	struct TriAttribs gx, gy, v, s;v593,10441
	struct TriAttribs gx, gy, v, s;s593,10441
triangleSetup(struct RasTri *tri, Vertex v1, Vertex v2, Vertex v3)triangleSetup597,10489
#define GX(GX621,11093
#define GY(GY634,11458
drawTriangle(Canvas *canvas, Vertex v1, Vertex v2, Vertex v3)drawTriangle681,12953
Canvas *canvas;canvas779,15462
rastest_renderTriangles(RWDEVICE::Im2DVertex *scrverts, int32 numVerts, uint16 *indices, int32 nrastest_renderTriangles786,15508
beginSoftras(void)beginSoftras823,16338
endSoftras(void)endSoftras842,16885

tools/playground/camera_pg.cpp,446
#define PI PI6,55
Camera::update(void)update13,142
Camera::setTarget(V3d target)setTarget36,647
Camera::getHeading(void)getHeading43,762
Camera::turn(float yaw, float pitch)turn51,914
Camera::orbit(float yaw, float pitch)orbit69,1363
Camera::dolly(float dist)dolly87,1814
Camera::zoom(float dist)zoom95,1973
Camera::pan(float x, float y)pan106,2186
Camera::distanceTo(V3d v)distanceTo117,2479
Camera::Camera()Camera122,2546

tools/playground/splines.cpp,1729
static Im3DVertex im3dVerts[1024];im3dVerts9,105
static int numImVerts;numImVerts10,140
static rw::PrimitiveType imPrim;imPrim11,163
static Im3DVertex imVert;imVert12,196
BeginIm3D(rw::PrimitiveType prim)BeginIm3D15,228
EndIm3D(void)EndIm3D22,305
AddVertex(const rw::V3d &vert)AddVertex30,455
float epsilon = 0.000001;epsilon60,1039
class RBCurveRBCurve62,1066
	int degree;degree65,1090
	std::vector<V3d> verts;verts66,1103
	std::vector<float> weights;	// for rationalweights67,1128
	std::vector<float> knots;knots68,1173
class RBSurfRBSurf75,1271
	int degreeU, degreeV;degreeU78,1294
	int degreeU, degreeV;degreeV78,1294
	int numU, numV;numU79,1317
	int numU, numV;numV79,1317
	std::vector<V3d> verts;verts80,1334
	std::vector<float> weights;weights81,1359
	std::vector<float> knotsU, knotsV;knotsU82,1388
	std::vector<float> knotsU, knotsV;knotsV82,1388
float div0(float a, float b) { return b == 0.0f ? a : a/b; }div091,1550
evalBasis(int i, int d, float u, float knots[])evalBasis95,1637
evalBasisFast(int i, int d, float u, float knots[])evalBasisFast109,1971
RBCurve::eval(float u)eval130,2460
RBCurve::drawHull(void)drawHull152,2908
RBCurve::drawSpline(void)drawSpline170,3256
RBSurf::update(void)update198,3725
RBSurf::eval(float u, float v)eval205,3829
RBSurf::drawHull(void)drawHull239,4706
RBSurf::drawIsoparms(void)drawIsoparms266,5251
RBSurf::drawShaded(void)drawShaded320,6273
RBCurve testspline1, testspline2;testspline1362,7010
RBCurve testspline1, testspline2;testspline2362,7010
RBSurf testsurf;testsurf363,7044
initsplines(void)initsplines366,7067
#define V(V408,8293
#define V(V438,9153
rendersplines(void)rendersplines509,11252

tools/playground/camera_pg.h,353
class CameraCamera1,0
	rw::Camera *m_rwcam;m_rwcam4,23
	rw::V3d m_position;m_position5,45
	rw::V3d m_target;m_target6,66
	rw::V3d m_up;m_up7,85
	rw::V3d m_localup;m_localup8,100
	float m_fov, m_aspectRatio;m_fov10,121
	float m_fov, m_aspectRatio;m_aspectRatio10,121
	float m_near, m_far;m_near11,150
	float m_near, m_far;m_far11,150

tools/playground/font.cpp,602
struct FontFont6,60
	Texture *tex;tex8,74
	int32 glyphwidth, glyphheight;glyphwidth9,89
	int32 glyphwidth, glyphheight;glyphheight9,89
	int32 numglyphs;numglyphs10,121
Font vga = { nil, 8, 16, 256 };vga12,142
Font bios = { nil, 8, 8, 256 };bios13,174
Font *curfont = &bios;curfont14,206
#define NUMCHARS NUMCHARS16,230
uint16 indices[NUMCHARS*6];indices17,251
RWDEVICE::Im2DVertex vertices[NUMCHARS*4];vertices18,279
int32 curVert;curVert19,322
int32 curIndex;curIndex20,337
printScreen(const char *s, float32 x, float32 y)printScreen23,359
initFont(void)initFont110,2617

tools/playground/tl_tests.cpp,3537
namespace gen {gen15,293
#define MAX_LIGHTS MAX_LIGHTS17,310
struct Directional {Directional19,332
	V3d at;at20,353
	RGBAf color;color21,362
static Directional directionals[MAX_LIGHTS];directionals23,379
static int32 numDirectionals;numDirectionals24,424
static RGBAf ambLight;ambLight25,454
enumLights(Matrix *lightmat)enumLights28,490
struct ObjSpace3DVertexObjSpace3DVertex57,1255
	V3d objVertex;objVertex59,1281
	V3d objNormal;objNormal60,1297
	RGBA color;color61,1313
	TexCoords texCoords;texCoords62,1326
enum {__anonf0ef821c010365,1352
	CLIPXLO = 0x01,CLIPXLO66,1359
	CLIPXHI = 0x02,CLIPXHI67,1376
	CLIPX   = 0x03,CLIPX68,1393
	CLIPYLO = 0x04,CLIPYLO69,1410
	CLIPYHI = 0x08,CLIPYHI70,1427
	CLIPY   = 0x0C,CLIPY71,1444
	CLIPZLO = 0x10,CLIPZLO72,1461
	CLIPZHI = 0x20,CLIPZHI73,1478
	CLIPZ   = 0x30,CLIPZ74,1495
struct CamSpace3DVertexCamSpace3DVertex77,1516
	V3d camVertex;camVertex79,1542
	uint8 clipFlags;clipFlags80,1558
	RGBAf color;color81,1576
	TexCoords texCoords;texCoords82,1590
struct InstanceDataInstanceData85,1616
	uint16 *indices;indices87,1638
	int32 numIndices;numIndices88,1656
	ObjSpace3DVertex *vertices;vertices89,1675
	int32 numVertices;numVertices90,1704
	Material *material;material92,1775
	Mesh *mesh;mesh93,1796
struct InstanceDataHeader : public rw::InstanceDataHeaderInstanceDataHeader96,1813
	uint32 serialNumber;serialNumber98,1873
	ObjSpace3DVertex *vertices;vertices99,1895
	uint16 *indices;indices100,1924
	InstanceData *inst;inst101,1942
instanceAtomic(Atomic *atomic)instanceAtomic105,1979
struct MeshStateMeshState201,4734
	int32 flags;flags203,4753
	Matrix obj2cam;obj2cam204,4767
	Matrix obj2world;obj2world205,4784
	int32 numVertices;numVertices206,4803
	int32 numPrimitives;numPrimitives207,4823
	SurfaceProperties surfProps;surfProps208,4845
	RGBA matCol;matCol209,4875
cam2screen(Im2DVertex *scrvert, CamSpace3DVertex *camvert)cam2screen213,4905
transform(MeshState *mstate, ObjSpace3DVertex *objverts, CamSpace3DVertex *camverts, Im2DVertex transform236,5776
light(MeshState *mstate, ObjSpace3DVertex *objverts, CamSpace3DVertex *camverts)light264,6760
postlight(MeshState *mstate, CamSpace3DVertex *camverts, Im2DVertex *scrverts)postlight285,7388
cullTriangles(MeshState *mstate, CamSpace3DVertex *camverts, uint16 *indices, uint16 *clipindicecullTriangles300,7792
interpVertex(CamSpace3DVertex *out, CamSpace3DVertex *v1, CamSpace3DVertex *v2, float32 t)interpVertex334,8557
clipTriangles(MeshState *mstate, CamSpace3DVertex *camverts, Im2DVertex *scrverts, uint16 *indicclipTriangles360,9433
#define V(V398,10278
clipPoly(CamSpace3DVertex *in, int32 nin, CamSpace3DVertex *out, Plane *plane)clipPoly497,12862
clipTriangles2(MeshState *mstate, CamSpace3DVertex *camverts, Im2DVertex *scrverts, uint16 *indiclipTriangles2522,13368
submitTriangles(RWDEVICE::Im2DVertex *scrverts, int32 numVerts, uint16 *indices, int32 numTris)submitTriangles600,15466
drawMesh(MeshState *mstate, ObjSpace3DVertex *objverts, uint16 *indices)drawMesh618,15980
drawAtomic(Atomic *atomic)drawAtomic669,17679
tlTest(Clump *clump)tlTest702,18536
static Im2DVertex *clipverts;clipverts712,18654
static int32 numClipverts;numClipverts713,18684
genIm3DTransform(void *vertices, int32 numVertices, Matrix *world)genIm3DTransform716,18717
genIm3DRenderIndexed(PrimitiveType prim, void *indices, int32 numIndices)genIm3DRenderIndexed755,19753
genIm3DEnd(void)genIm3DEnd761,19920

tools/playground/playground.cpp,2808
rw::V3d zero = { 0.0f, 0.0f, 0.0f };zero6,82
Camera *camera;camera7,119
struct SceneGlobals {SceneGlobals8,135
	rw::World *world;world9,157
	rw::Camera *camera;camera10,176
	rw::Clump *clump;clump11,197
} Scene;Scene12,216
rw::Texture *tex;tex13,225
rw::Raster *testras;testras14,243
rw::EngineOpenParams engineOpenParams;engineOpenParams15,264
rw::Texture *frontbuffer;frontbuffer17,304
bool dosoftras = 0;dosoftras19,331
namespace gen {gen21,352
rw::Charset *testfont;testfont33,717
int test_softras = 0;test_softras35,741
int test_im2d1 = 0;test_im2d136,763
int test_im2d2 = 0;test_im2d237,783
int test_im3d = 0;test_im3d38,803
int test_clump = 1;test_clump39,822
int test_splines = 0;test_splines40,842
Init(void)Init43,870
attachPlugins(void)attachPlugins52,1010
dumpUserData(rw::UserDataArray *ar)dumpUserData73,1473
dumpFrameUserDataCB(rw::Frame *f, void*)dumpFrameUserDataCB93,1860
dumpUserData(rw::Clump *clump)dumpUserData108,2149
getHierCB(rw::Frame *f, void *data)getHierCB115,2270
getHAnimHierarchyFromClump(rw::Clump *clump)getHAnimHierarchyFromClump128,2520
setupAtomic(rw::Atomic *atomic)setupAtomic137,2677
initHierFromFrames(rw::HAnimHierarchy *hier)initHierFromFrames151,3061
setupClump(rw::Clump *clump)setupClump164,3322
#define MUL(MUL179,3595
calcVCfx(int fb, int col, int a, int iter)calcVCfx182,3632
calcIIIfx(int fb, int col, int a, int iter)calcIIIfx197,3932
postfxtest(void)postfxtest208,4136
InitRW(void)InitRW239,5023
im2dtest(void)im2dtest321,7206
	{__anon2009c14f0108326,7277
		float x, y;x327,7280
		float x, y;y327,7280
		rw::uint8 r, g, b, a;r328,7294
		rw::uint8 r, g, b, a;g328,7294
		rw::uint8 r, g, b, a;b328,7294
		rw::uint8 r, g, b, a;a328,7294
		float u, v;u329,7318
		float u, v;v329,7318
im2dtest2(void)im2dtest2366,8498
	{__anon2009c14f0208375,8674
		float x, y, z;x376,8677
		float x, y, z;y376,8677
		float x, y, z;z376,8677
		rw::uint8 r, g, b, a;r377,8694
		rw::uint8 r, g, b, a;g377,8694
		rw::uint8 r, g, b, a;b377,8694
		rw::uint8 r, g, b, a;a377,8694
		float u, v;u378,8718
		float u, v;v378,8718
im3dtest(void)im3dtest413,9873
	{__anon2009c14f0308418,9944
		float x, y, z;x419,9947
		float x, y, z;y419,9947
		float x, y, z;z419,9947
		rw::uint8 r, g, b, a;r420,9964
		rw::uint8 r, g, b, a;g420,9964
		rw::uint8 r, g, b, a;b420,9964
		rw::uint8 r, g, b, a;a420,9964
		float u, v;u421,9988
		float u, v;v421,9988
getFrontBuffer(void)getFrontBuffer465,11387
Draw(float timeDelta)Draw488,12062
KeyUp(int key)KeyUp539,12991
KeyDown(int key)KeyDown544,13016
MouseMove(int x, int y)MouseMove587,13670
MouseButton(int buttons)MouseButton592,13704
AppEventHandler(sk::Event e, void *param)AppEventHandler597,13750

tools/imguitest/CMakeLists.txt,45
add_executable(imguitest WIN32imguitest1,0

tools/imguitest/main.cpp,493
rw::V3d zero = { 0.0f, 0.0f, 0.0f };zero5,59
struct SceneGlobals {SceneGlobals6,96
	rw::World *world;world7,118
	rw::Camera *camera;camera8,137
} Scene;Scene9,158
rw::EngineOpenParams engineOpenParams;engineOpenParams10,167
Init(void)Init13,212
attachPlugins(void)attachPlugins22,350
InitRW(void)InitRW42,811
Draw(float timeDelta)Draw71,1538
KeyUp(int key)KeyUp122,3593
KeyDown(int key)KeyDown127,3618
AppEventHandler(sk::Event e, void *param)AppEventHandler137,3725

tools/dumprwtree/dumprwtree.cpp,492
const char *chunks[] = { "None", "Struct", "String", "Extension", "Unknown",chunks11,135
const char *toolkitchunks0[] = { "Metrics PLG", "Spline PLG", "Stereo PLG",toolkitchunks026,953
const char *toolkitchunks1[] = {toolkitchunks143,1865
const char *RSchunks[] = { "Unused 1", "Unused 2", "Extra Normals",RSchunks64,2973
getChunkName(uint32 id)getChunkName72,3252
readchunk(StreamFile *s, ChunkHeaderInfo *h, int level)readchunk98,3841
main(int argc, char *argv[])main122,4399

tools/dumprwtree/CMakeLists.txt,41
add_executable(dumprwtreedumprwtree1,0

conanfile.py,890
class LibrwConan(ConanFile):LibrwConan8,153
    name = "librw"name9,182
    version = "master"version10,201
    license = "MIT"license11,224
    settings = "os", "arch", "compiler", "build_type"settings12,244
    generators = "cmake", "cmake_find_package"generators13,298
    options = {options14,345
    default_options = {default_options18,459
    no_copy_source = Trueno_copy_source26,680
    def _os_is_playstation2(self):_os_is_playstation229,721
    def config_options(self):config_options35,880
    def configure(self):configure41,1081
    def validate(self):validate45,1190
    def requirements(self):requirements55,1710
    def export_sources(self):export_sources67,2255
    def _librw_platform(self):_librw_platform76,2559
    def build(self):build84,2754
    def package(self):package124,4722
    def package_info(self):package_info128,4798

.github/workflows/build-cmake-conan.yml,0

premake-vs2019.cmd,0

rw.h,0

test/imgui.ini,323
[Window][ImGui Demo]Window1,0
Pos=378,20Pos2,21
Size=550,680Size3,32
Collapsed=0Collapsed4,45
[Window][Debug##Default]Window6,58
Pos=61,131Pos7,83
Size=400,400Size8,94
Collapsed=1Collapsed9,107
[Window][Another Window]Window11,120
Pos=98,29Pos12,145
Size=197,48Size13,155
Collapsed=0Collapsed14,167

test/build/imgui.d,0

test/build/gl3matfx.d,0

test/build/charset.d,0

test/build/xboxvfmt.d,0

test/build/3ds_skel.d,0

test/build/pds.d,0

test/build/render.d,0

test/build/geoplg.d,0

test/build/3dsskin.d,0

test/build/ps2device.d,0

test/build/d3d8matfx.d,0

test/build/raster.d,0

test/build/skin.shbin.d,0

test/build/d3d8render.d,0

test/build/frame.d,0

test/build/texture.d,0

test/build/hanim.d,0

test/build/image.d,0

test/build/im2d.shbin.d,0

test/build/3ds.d,0

test/build/d3d9skin.d,0

test/build/3dsimmed.d,0

test/build/d3dimmed.d,0

test/build/matfx.shbin.d,0

test/build/lodepng.d,0

test/build/gl3render.d,0

test/build/imgui_draw.d,0

test/build/xboxskin.d,0

test/build/matfx_shbin.h,0

test/build/camera.d,0

test/build/3dsmatfx.d,0

test/build/skeleton.d,0

test/build/gl3raster.d,0

test/build/bmp.d,0

test/build/ImGuizmo.d,0

test/build/world.d,0

test/build/xbox.d,0

test/build/skin_shbin.h,0

test/build/d3d9.d,0

test/build/sdl2.d,0

test/build/gl3shader.d,0

test/build/clump.d,0

test/build/skin.d,0

test/build/gl3device.d,0

test/build/im2d_shbin.h,0

test/build/userdata.d,0

test/build/d3drender.d,0

test/build/im3d_shbin.h,0

test/build/anim.d,0

test/build/d3ddevice.d,0

test/build/engine.d,0

test/build/3dsdevice.d,0

test/build/uvanim.d,0

test/build/png.d,0

test/build/glfw.d,0

test/build/pipeline.d,0

test/build/base.d,0

test/build/gl3.d,0

test/build/matfx.d,0

test/build/gl3immed.d,0

test/build/ps2skin.d,0

test/build/d3d.d,0

test/build/ps2raster.d,0

test/build/tga.d,0

test/build/ps2.d,0

test/build/wdgl.d,0

test/build/kitten.d,0

test/build/default.shbin.d,0

test/build/kitten_t3x.h,135
static constexpr size_t kitten_t3x_size=34569;kitten_t3x_size9,209
static const size_t kitten_t3x_size=34569;kitten_t3x_size11,262

test/build/plg.d,0

test/build/default_shbin.h,0

test/build/d3d9matfx.d,0

test/build/imgui_impl_rw.d,0

test/build/3dsrender.d,0

test/build/prim.d,0

test/build/win.d,0

test/build/gl3skin.d,0

test/build/im3d.shbin.d,0

test/build/tristrip.d,0

test/build/xboxmatfx.d,0

test/build/3dspipe.d,0

test/build/ps2matfx.d,0

test/build/geometry.d,0

test/build/d3d8.d,0

test/build/kitten.h,38
#define kitten__idx kitten__idx4,40

test/build/gl3pipe.d,0

test/build/3dsshader.d,0

test/build/d3d8skin.d,0

test/build/d3d9render.d,0

test/build/light.d,0

test/build/main.d,0

test/build/3dsraster.d,0

test/build/imgui_demo.d,0

test/build/error.d,0

test/.gdbinit,0

test/Makefile,3719
TOPDIR ?= $(CURDIR)TOPDIR9,304
TARGET		:=	imguitestTARGET34,1655
BUILD		:=	buildBUILD35,1676
GRAPHICS	:=	gfxGRAPHICS36,1692
DATA		:=	dataDATA37,1708
GFXBUILD	:=	$(BUILD)GFXBUILD38,1722
SOURCES		:=	../src \SOURCES39,1743
INCLUDES	:=	../ ../skeletonINCLUDES46,1914
ARCH	:=	-march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=softARCH51,2139
CFLAGS	:=	-g -Wall -O2 -mword-relocations \CFLAGS53,2203
CXXFLAGS	:= $(CFLAGS) -fno-rtti -fno-exceptions -std=gnu++11CXXFLAGS60,2369
ASFLAGS	:=	-g $(ARCH)ASFLAGS62,2431
LDFLAGS	=	-specs=3dsx.specs -g $(ARCH) -Wl,-Map,$(notdir $*.map)LDFLAGS63,2453
LIBS	:= -lcitro3d -lctru -lmLIBS65,2519
LIBDIRS	:= $(CTRULIB)LIBDIRS71,2815
export OUTPUT	:=	$(CURDIR)/$(TARGET)OUTPUT81,3246
export TOPDIR	:=	$(CURDIR)TOPDIR82,3283
export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir)) \VPATH84,3311
export DEPSDIR	:=	$(CURDIR)/$(BUILD)DEPSDIR88,3465
CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c)))CFILES90,3503
CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp)))CPPFILES91,3573
SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.s)))SFILES92,3646
PICAFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.v.pica)))PICAFILES93,3716
SHLISTFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.shlist)))SHLISTFILES94,3793
GFXFILES	:=	$(foreach dir,$(GRAPHICS),$(notdir $(wildcard $(dir)/*.t3s)))GFXFILES95,3872
BINFILES	:=	$(foreach dir,$(DATA),$(notdir $(wildcard $(dir)/*.*)))BINFILES96,3946
	export LD	:=	$(CC)LD103,4347
	export LD	:=	$(CXX)LD107,4538
export T3XFILES :=  $(GFXFILES:.t3s=.t3x)T3XFILES115,4926
export ROMFS_T3XFILES	:=	$(patsubst %.t3s, $(GFXBUILD)/%.t3x, $(GFXFILES))ROMFS_T3XFILES119,5139
export T3XHFILES		:=	$(patsubst %.t3s, $(BUILD)/%.h, $(GFXFILES))T3XHFILES120,5214
export OFILES_SOURCES 	:=	$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) $(SFILES:.s=.o)OFILES_SOURCES125,5453
export OFILES_BIN	:=	$(addsuffix .o,$(BINFILES)) \OFILES_BIN127,5532
export OFILES := $(OFILES_BIN) $(OFILES_SOURCES)OFILES131,5682
export HFILES	:=	$(PICAFILES:.v.pica=_shbin.h) $(SHLISTFILES:.shlist=_shbin.h) \HFILES133,5732
export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \INCLUDE137,5883
export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib)LIBPATHS141,6022
export _3DSXDEPS	:=	$(if $(NO_SMDH),,$(OUTPUT).smdh)_3DSXDEPS143,6081
	icons := $(wildcard *.png)icons146,6160
		export APP_ICON := $(TOPDIR)/$(TARGET).pngAPP_ICON148,6235
			export APP_ICON := $(TOPDIR)/icon.pngAPP_ICON151,6329
	export APP_ICON := $(TOPDIR)/$(ICON)APP_ICON155,6390
all: $(BUILD) $(GFXBUILD) $(DEPSDIR) $(ROMFS_T3XFILES) $(T3XHFILES)all169,6700
$(BUILD):$(BUILD)172,6834
$(GFXBUILD):$(GFXBUILD)176,6888
$(DEPSDIR):$(DEPSDIR)181,6950
clean:clean186,7066
$(GFXBUILD)/%.t3x	$(BUILD)/%.h	:	%.t3s$(GFXBUILD)/%.t3x191,7248
$(GFXBUILD)/%.t3x	$(BUILD)/%.h	:	%.t3s$(BUILD)/%.h191,7248
$(OUTPUT).3dsx	:	$(OUTPUT).elf $(_3DSXDEPS)$(OUTPUT).3dsx202,7734
$(OFILES_SOURCES) : $(HFILES)$(OFILES_SOURCES)204,7779
$(OUTPUT).elf	:	$(OFILES)$(OUTPUT).elf206,7810
%.bin.o	%_bin.h :	%.bin%.bin.o211,8073
%.bin.o	%_bin.h :	%.bin%_bin.h211,8073
%.t3x.o	%_t3x.h :	%.t3x%.t3x.o219,8396
%.t3x.o	%_t3x.h :	%.t3x%_t3x.h219,8396
define shader-asshader-as227,8736
%.shbin.o %_shbin.h : %.v.pica %.g.pica%.shbin.o238,9300
%.shbin.o %_shbin.h : %.v.pica %.g.pica%_shbin.h238,9300
%.shbin.o %_shbin.h : %.v.pica%.shbin.o242,9384
%.shbin.o %_shbin.h : %.v.pica%_shbin.h242,9384
%.shbin.o %_shbin.h : %.shlist%.shbin.o246,9459
%.shbin.o %_shbin.h : %.shlist%_shbin.h246,9459
%.t3x	%.h	:	%.t3s%.t3x251,9663
%.t3x	%.h	:	%.t3s%.h251,9663

src/rwerror.h,168
namespace rw {rw1,0
struct ErrorError3,16
	uint32 plugin;plugin5,31
	uint32 code;code6,47
#define _ERRORCODE(_ERRORCODE12,118
#define RWERROR(RWERROR16,263

src/tristrip.cpp,2438
#define PLUGIN_ID PLUGIN_ID14,228
namespace rw {rw16,249
struct GraphEdgeGraphEdge18,265
	int32 node;	/* index of the connected node */node20,284
	uint32 isConnected : 1;	/* is connected to other node */isConnected21,331
	uint32 otherEdge : 2;	/* edge number on connected node */otherEdge22,389
	uint32 isStrip : 1;	/* is strip edge */isStrip23,448
struct StripNodeStripNode26,493
	uint16 v[3];	/* vertex indices */v28,512
	uint8 parent : 2;	/* tunnel parent node (edge index) */parent29,547
	uint8 visited : 1;	/* visited in breadth first search */visited30,604
	uint8 stripVisited : 1;	/* strip starting at this node was visited during search */stripVisited31,662
	uint8 isEnd : 1;	/* is in end list */isEnd32,747
	GraphEdge e[3];e33,786
	int32 stripId;	/* index of start node */stripId34,803
	LLLink inlist;inlist35,845
struct StripMeshStripMesh38,865
	int32 numNodes;numNodes40,884
	StripNode *nodes;nodes41,901
	LinkList loneNodes;	/* nodes not connected to any others */loneNodes42,920
	LinkList endNodes;	/* strip start/end nodes */endNodes43,981
#define trace(trace47,1074
printNode(StripMesh *sm, StripNode *n)printNode50,1106
printLone(StripMesh *sm)printLone67,1392
printEnds(StripMesh *sm)printEnds74,1519
printSmesh(StripMesh *sm)printSmesh81,1645
collectFaces(Geometry *geo, StripMesh *sm, uint16 m)collectFaces88,1761
findEdge(StripMesh *sm, int32 e[2])findEdge124,2604
connectNodesPreserve(StripMesh *sm)connectNodesPreserve148,3077
numConnections(StripNode *n)numConnections180,3796
numStripEdges(StripNode *n)numStripEdges188,3921
#define IsEnd(IsEnd195,4020
complementEdge(StripMesh *sm, GraphEdge *e)complementEdge199,4141
extendStrip(StripMesh *sm, StripNode *start)extendStrip211,4540
buildStrips(StripMesh *sm)buildStrips245,5235
findTunnel(StripMesh *sm, StripNode *n)findTunnel258,5441
resetGraph(StripMesh *sm)resetGraph314,6708
walkStrip(StripMesh *sm, StripNode *start)walkStrip325,6879
applyTunnel(StripMesh *sm, StripNode *end, StripNode *start)applyTunnel363,7502
tunnel(StripMesh *sm)tunnel405,8528
getNextEdge(StripNode *n, int32 last)getNextEdge431,9085
#define NEXT(NEXT440,9222
#define PREV(PREV441,9252
#define RIGHT(RIGHT442,9282
#define LEFT(LEFT443,9307
makeMesh(StripMesh *sm, Mesh *m)makeMesh447,9402
Geometry::buildTristrips(void)buildTristrips563,12672
verifyMesh(Geometry *geo)verifyMesh622,14243

src/engine.cpp,4220
#define PLUGIN_ID PLUGIN_ID22,411
namespace rw {rw32,692
Engine *engine;engine34,708
Engine::State Engine::state = Dead;state36,770
MemoryFunctions Engine::memfuncs;memfuncs37,806
PluginList Driver::s_plglist[NUM_PLATFORMS];s_plglist38,840
const char *allocLocation;allocLocation40,886
void *malloc_h(size_t sz, uint32 hint) { if(sz == 0) return nil; return malloc(sz); }malloc_h42,914
void *realloc_h(void *p, size_t sz, uint32 hint) { return realloc(p, sz); }realloc_h43,1000
struct MemoryBlockMemoryBlock45,1077
	size_t sz;sz47,1098
	uint32 hint;hint48,1110
	void *origPtr;origPtr49,1124
	const char *codeline;codeline50,1140
	LLLink inAllocList;inAllocList51,1163
LinkList allocations;allocations53,1187
size_t totalMemoryAllocated;totalMemoryAllocated54,1209
#define ALIGN16(ALIGN1658,1296
malloc_managed(size_t sz, uint32 hint)malloc_managed60,1340
realloc_managed(void *p, size_t sz, uint32 hint)realloc_managed86,1866
free_managed(void *p)free_managed119,2589
printleaks(void)printleaks131,2801
void *mustmalloc_h(size_t sz, uint32 hint)mustmalloc_h140,3035
void *mustrealloc_h(void *p, size_t sz, uint32 hint)mustrealloc_h150,3239
char *strdup_LOC(const char *s, uint32 hint, const char *here) {strdup_LOC161,3458
MemoryFunctions defaultMemfuncs = {defaultMemfuncs170,3640
MemoryFunctions managedMemfuncs = {managedMemfuncs178,3721
Engine::init(MemoryFunctions *memfuncs)init188,3878
Engine::open(EngineOpenParams *p)open248,5362
Engine::start(void)start302,6951
Engine::term(void)term327,7575
Engine::close(void)close344,7873
Engine::stop(void)stop361,8213
Engine::getNumSubSystems(void)getNumSubSystems379,8537
Engine::getCurrentSubSystem(void)getCurrentSubSystem385,8642
Engine::setSubSystem(int32 subsys)setSubSystem391,8754
Engine::getSubSystemInfo(SubSystemInfo *info, int32 subsys)getSubSystemInfo397,8873
Engine::getNumVideoModes(void)getNumVideoModes406,9039
Engine::getCurrentVideoMode(void)getCurrentVideoMode412,9144
Engine::setVideoMode(int32 mode)setVideoMode418,9256
Engine::getVideoModeInfo(VideoMode *info, int32 mode)getVideoModeInfo424,9367
Engine::getMaxMultiSamplingLevels(void)getMaxMultiSamplingLevels433,9525
Engine::getMultiSamplingLevels(void)getMultiSamplingLevels439,9649
Engine::setMultiSamplingLevels(uint32 levels)setMultiSamplingLevels445,9767
namespace null {null451,9893
void beginUpdate(Camera*) { }beginUpdate453,9911
void endUpdate(Camera*) { }endUpdate454,9941
void clearCamera(Camera*,RGBA*,uint32) { }clearCamera455,9969
void showRaster(Raster*,uint32) { }showRaster456,10012
void   setRenderState(int32, void*) { }setRenderState458,10049
void  *getRenderState(int32) { return 0; }getRenderState459,10089
bool32 rasterRenderFast(Raster *raster, int32 x, int32 y) { return 0; }rasterRenderFast461,10133
void im2DRenderLine(void*, int32, int32, int32) { }im2DRenderLine463,10206
void im2DRenderTriangle(void*, int32, int32, int32, int32) { }im2DRenderTriangle464,10258
void im2DRenderPrimitive(PrimitiveType, void*, int32) { }im2DRenderPrimitive465,10321
void im2DRenderIndexedPrimitive(PrimitiveType, void*, int32, void*, int32) { }im2DRenderIndexedPrimitive466,10379
void im3DTransform(void *vertices, int32 numVertices, Matrix *world, uint32 flags) { }im3DTransform468,10459
void im3DRenderPrimitive(PrimitiveType primType) { }im3DRenderPrimitive469,10546
void im3DRenderIndexedPrimitive(PrimitiveType primType, void *indices, int32 numIndices) { }im3DRenderIndexedPrimitive470,10599
void im3DEnd(void) { }im3DEnd471,10692
rasterCreate(Raster*)rasterCreate474,10724
rasterLock(Raster*, int32, int32)rasterLock481,10817
rasterUnlock(Raster*, int32)rasterUnlock488,10918
rasterLockPalette(Raster*, int32)rasterLockPalette494,11005
rasterUnlockPalette(Raster*)rasterUnlockPalette501,11113
rasterNumLevels(Raster*)rasterNumLevels507,11206
imageFindRasterFormat(Image *img, int32 type,imageFindRasterFormat514,11303
rasterFromImage(Raster*, Image*)rasterFromImage522,11486
rasterToImage(Raster*)rasterToImage529,11591
deviceSystem(DeviceReq req, void *arg0, int32 n)deviceSystem536,11683
Device renderdevice = {renderdevice550,11912

src/world.cpp,717
#define PLUGIN_ID PLUGIN_ID13,210
namespace rw {rw15,238
int32 World::numAllocated = 0;numAllocated17,254
World::create(void)create22,338
World::destroy(void)destroy39,695
World::addLight(Light *light)addLight47,785
World::removeLight(Light *light)removeLight61,1080
World::addCamera(Camera *cam)addCamera69,1201
World::removeCamera(Camera *cam)removeCamera78,1346
World::addAtomic(Atomic *atomic)addAtomic85,1437
World::removeAtomic(Atomic *atomic)removeAtomic94,1597
World::addClump(Clump *clump)addClump101,1697
World::removeClump(Clump *clump)removeClump120,2147
World::render(void)render134,2493
World::enumerateLights(Atomic *atomic, WorldLights *lightData)enumerateLights143,2680

src/plg.cpp,1332
namespace rw {rw15,247
static void *defCtor(void *object, int32, int32) { return object; }defCtor17,263
static void *defDtor(void *object, int32, int32) { return object; }defDtor18,331
static void *defCopy(void *dst, void*, int32, int32) { return dst; }defCopy19,399
static LinkList allPlugins;allPlugins21,469
#define PLG(PLG23,498
PluginList::open(void)open26,562
PluginList::close(void)close32,615
PluginList::construct(void *object)construct49,932
PluginList::destruct(void *object)destruct58,1081
PluginList::copy(void *dst, void *src)copy67,1228
PluginList::streamRead(Stream *stream, void *object)streamRead76,1375
PluginList::streamWrite(Stream *stream, void *object)streamWrite109,2090
PluginList::streamGetSize(void *object)streamGetSize124,2491
PluginList::streamSkip(Stream *stream)streamSkip138,2750
PluginList::assertRights(void *object, uint32 pluginID, uint32 data)assertRights153,3051
PluginList::registerPlugin(int32 size, uint32 id,registerPlugin168,3333
PluginList::registerStream(uint32 id,registerStream194,4001
PluginList::setStreamRightsCallback(uint32 id, RightsCallback cb)setStreamRightsCallback210,4288
PluginList::setStreamAlwaysCallback(uint32 id, AlwaysCallback cb)setStreamAlwaysCallback223,4505
PluginList::getPluginOffset(uint32 id)getPluginOffset236,4722

src/anim.cpp,1168
#define PLUGIN_ID PLUGIN_ID15,253
namespace rw {rw17,289
#define MAXINTERPINFO MAXINTERPINFO23,336
static AnimInterpolatorInfo *interpInfoList[MAXINTERPINFO];interpInfoList25,362
AnimInterpolatorInfo::registerInterp(AnimInterpolatorInfo *interpInfo)registerInterp28,428
AnimInterpolatorInfo::unregisterInterp(AnimInterpolatorInfo *interpInfo)unregisterInterp39,679
AnimInterpolatorInfo::find(int32 id)find50,933
Animation::create(AnimInterpolatorInfo *interpInfo, int32 numFrames,create64,1149
Animation::destroy(void)destroy88,1830
Animation::getNumNodes(void)getNumNodes94,1881
Animation::streamRead(Stream *stream)streamRead105,2132
Animation::streamReadLegacy(Stream *stream)streamReadLegacy121,2586
Animation::streamWrite(Stream *stream)streamWrite142,3241
Animation::streamWriteLegacy(Stream *stream)streamWriteLegacy155,3588
Animation::streamGetSize(void)streamGetSize174,4132
AnimInterpolator::create(int32 numNodes, int32 maxFrameSize)create186,4309
AnimInterpolator::destroy(void)destroy214,5079
AnimInterpolator::setCurrentAnim(Animation *anim)setCurrentAnim220,5138
AnimInterpolator::addTime(float32 t)addTime256,6266

src/rwanim.h,3772
namespace rw {rw3,21
struct KeyFrameHeaderKeyFrameHeader10,151
	KeyFrameHeader *prev;prev12,175
	float32 time;time13,198
	KeyFrameHeader *next(int32 sz){next15,214
struct InterpFrameHeaderInterpFrameHeader19,300
	KeyFrameHeader *keyFrame1;keyFrame121,327
	KeyFrameHeader *keyFrame2;keyFrame222,355
struct AnimInterpolatorInfoAnimInterpolatorInfo25,387
	typedef void (*ApplyCB)(void *result, void *frame);ApplyCB27,417
	typedef void (*BlendCB)(void *out, void *in1, void *in2, float32 a);BlendCB28,470
	typedef void (*InterpCB)(void *out, void *in1, void *in2, float32 t,InterpCB29,540
	typedef void (*AddCB)(void *out, void *in1, void *in2);AddCB31,651
	typedef void (*MulRecipCB)(void *frame, void *start);MulRecipCB32,708
	int32      id;id34,764
	int32      interpKeyFrameSize;interpKeyFrameSize35,780
	int32      animKeyFrameSize;animKeyFrameSize36,812
	int32      customDataSize;customDataSize37,842
	ApplyCB    applyCB;applyCB39,871
	BlendCB    blendCB;blendCB40,892
	InterpCB   interpCB;interpCB41,913
	AddCB      addCB;addCB42,935
	MulRecipCB mulRecipCB;mulRecipCB43,954
	void (*streamRead)(Stream *stream, Animation *anim);streamRead44,978
	void (*streamWrite)(Stream *stream, Animation *anim);streamWrite45,1032
	uint32 (*streamGetSize)(Animation *anim);streamGetSize46,1087
struct AnimationAnimation53,1309
	AnimInterpolatorInfo *interpInfo;interpInfo55,1328
	int32    numFrames;numFrames56,1363
	int32    flags;flags57,1384
	float32  duration;duration58,1401
	void    *keyframes;keyframes59,1421
	void    *customData;customData60,1442
	KeyFrameHeader *getAnimFrame(int32 n){getAnimFrame66,1634
struct AnimInterpolatorAnimInterpolator77,2005
	Animation *currentAnim;currentAnim79,2031
	float32    currentTime;currentTime80,2056
	void      *nextFrame;nextFrame81,2081
	int32      maxInterpKeyFrameSize;maxInterpKeyFrameSize82,2104
	int32      currentInterpKeyFrameSize;currentInterpKeyFrameSize83,2139
	int32      currentAnimKeyFrameSize;currentAnimKeyFrameSize84,2178
	int32      numNodes;numNodes85,2215
	AnimInterpolatorInfo::ApplyCB    applyCB;applyCB88,2310
	AnimInterpolatorInfo::BlendCB    blendCB;blendCB89,2353
	AnimInterpolatorInfo::InterpCB   interpCB;interpCB90,2396
	AnimInterpolatorInfo::AddCB      addCB;addCB91,2440
	void *getFrames(void){ return this+1;}getFrames98,2678
	InterpFrameHeader *getInterpFrame(int32 n){getInterpFrame99,2718
	KeyFrameHeader *getAnimFrame(int32 n){getAnimFrame103,2878
struct UVAnimParamDataUVAnimParamData113,3058
	float32 theta;	// rotationtheta115,3083
	float32 s0;	// scale xs0116,3111
	float32 s1;	// scale ys1117,3135
	float32 skew;	// skewskew118,3159
	float32 x;	// x posx119,3182
	float32 y;	// y posy120,3203
struct UVAnimKeyFrameUVAnimKeyFrame123,3228
	UVAnimKeyFrame *prev;prev125,3252
	float32 time;time126,3275
	float32 uv[6];uv127,3290
struct UVAnimInterpFrameUVAnimInterpFrame130,3310
	UVAnimKeyFrame *keyFrame1;keyFrame1132,3337
	UVAnimKeyFrame *keyFrame2;keyFrame2133,3365
	float32 uv[6];uv134,3393
struct UVAnimCustomDataUVAnimCustomData142,3530
	char name[32];name144,3556
	int32 nodeToUVChannel[8];nodeToUVChannel145,3572
	int32 refCount;refCount146,3599
	static UVAnimCustomData *get(Animation *anim){get149,3649
struct UVAnimDictEntryUVAnimDictEntry154,3789
	Animation *anim;anim156,3814
	LLLink inDict;inDict157,3832
	static UVAnimDictEntry *fromDict(LLLink *lnk){fromDict158,3848
struct UVAnimDictionaryUVAnimDictionary163,3968
	LinkList animations;animations165,3994
	int32 count(void) { return this->animations.count(); }count169,4078
struct UVAnimUVAnim181,4391
	Matrix *uv[2];uv183,4407
	AnimInterpolator *interp[8];interp184,4423

src/ps2/ps2.cpp,6327
#define PLUGIN_ID PLUGIN_ID19,342
namespace rw {rw21,363
namespace ps2 {ps222,378
#define ALIGNPTR(ALIGNPTR24,395
driverOpen(void *o, int32, int32)driverOpen27,480
driverClose(void *o, int32, int32)driverClose46,1281
registerPlatformPlugins(void)registerPlatformPlugins52,1337
ObjPipeline *defaultObjPipe;defaultObjPipe60,1503
MatPipeline *defaultMatPipe;defaultMatPipe61,1532
destroyNativeData(void *object, int32, int32)destroyNativeData64,1568
readNativeData(Stream *stream, int32, void *object, int32, int32)readNativeData80,2024
writeNativeData(Stream *stream, int32 len, void *object, int32, int32)writeNativeData125,3383
getSizeNativeData(void *object, int32, int32)getSizeNativeData151,4123
registerNativeDataPlugin(void)registerNativeDataPlugin168,4567
fixDmaOffsets(InstanceData *inst)fixDmaOffsets181,4976
unfixDmaOffsets(InstanceData *inst)unfixDmaOffsets218,5701
PipeAttribute attribXYZ = {attribXYZ256,6308
PipeAttribute attribXYZW = {attribXYZW261,6358
PipeAttribute attribUV = {attribUV266,6410
PipeAttribute attribUV2 = {attribUV2271,6458
PipeAttribute attribRGBA = {attribRGBA276,6508
PipeAttribute attribNormal = {attribNormal281,6570
PipeAttribute attribWeights = {attribWeights286,6661
attribSize(uint32 unpack)attribSize292,6741
#define QWC(QWC298,6868
getBatchSize(MatPipeline *pipe, uint32 vertCount)getBatchSize301,6913
instanceXYZ(uint32 *p, Geometry *g, Mesh *m, uint32 idx, uint32 n)instanceXYZ316,7266
instanceXYZW(uint32 *p, Geometry *g, Mesh *m, uint32 idx, uint32 n)instanceXYZW332,7576
instanceUV(uint32 *p, Geometry *g, Mesh *m, uint32 idx, uint32 n)instanceUV349,7958
instanceUV2(uint32 *p, Geometry *g, Mesh *m, uint32 idx, uint32 n)instanceUV2371,8393
instanceRGBA(uint32 *p, Geometry *g, Mesh *m, uint32 idx, uint32 n)instanceRGBA399,8897
instanceNormal(uint32 *wp, Geometry *g, Mesh *m, uint32 idx, uint32 n)instanceNormal417,9253
MatPipeline::init(void)init441,9729
MatPipeline::create(void)create453,9972
MatPipeline::destroy(void)destroy461,10097
MatPipeline::dump(void)dump467,10149
MatPipeline::setTriBufferSizes(uint32 inputStride, uint32 bufferSize)setTriBufferSizes487,10699
uint32 markcnt = 0;markcnt539,12114
enum {__anon0a562ca60103541,12135
	DMAcnt       = 0x10000000,DMAcnt542,12142
	DMAref       = 0x30000000,DMAref543,12170
	DMAret       = 0x60000000,DMAret544,12198
	VIF_NOP      = 0,VIF_NOP546,12227
	VIF_STCYCL   = 0x01000000,VIF_STCYCL547,12246
	VIF_STCYCL1  = 0x01000100,	// WL = 1VIF_STCYCL1548,12274
	VIF_OFFSET   = 0x02000000,VIF_OFFSET549,12312
	VIF_BASE     = 0x03000000,VIF_BASE550,12340
	VIF_ITOP     = 0x04000000,VIF_ITOP551,12368
	VIF_STMOD    = 0x05000000,VIF_STMOD552,12396
	VIF_MSKPATH3 = 0x06000000,VIF_MSKPATH3553,12424
	VIF_MARK     = 0x07000000,VIF_MARK554,12452
	VIF_FLUSHE   = 0x10000000,VIF_FLUSHE555,12480
	VIF_FLUSH    = 0x11000000,VIF_FLUSH556,12508
	VIF_FLUSHA   = 0x13000000,VIF_FLUSHA557,12536
	VIF_MSCAL    = 0x14000000,VIF_MSCAL558,12564
	VIF_MSCALF   = 0x15000000,VIF_MSCALF559,12592
	VIF_MSCNT    = 0x17000000,VIF_MSCNT560,12620
	VIF_STMASK   = 0x20000000,VIF_STMASK561,12648
	VIF_STROW    = 0x30000000,VIF_STROW562,12676
	VIF_STCOL    = 0x31000000,VIF_STCOL563,12704
	VIF_MPG      = 0x4A000000,VIF_MPG564,12732
	VIF_DIRECT   = 0x50000000,VIF_DIRECT565,12760
	VIF_DIRECTHL = 0x51000000,VIF_DIRECTHL566,12788
	VIF_UNPACK   = 0x60000000	// no mode encodedVIF_UNPACK567,12816
struct InstMeshInfoInstMeshInfo570,12866
	uint32 numAttribs, numBrokenAttribs;numAttribs572,12888
	uint32 numAttribs, numBrokenAttribs;numBrokenAttribs572,12888
	uint32 batchVertCount, lastBatchVertCount;batchVertCount573,12926
	uint32 batchVertCount, lastBatchVertCount;lastBatchVertCount573,12926
	uint32 numBatches;numBatches574,12970
	uint32 batchSize, lastBatchSize;batchSize575,12990
	uint32 batchSize, lastBatchSize;lastBatchSize575,12990
	uint32 size;	// size of DMA chain without broken out datasize576,13024
	uint32 size2;	// size of broken out datasize2577,13083
	uint32 vertexSize;vertexSize578,13125
	uint32 attribPos[10];attribPos579,13145
getInstMeshInfo(MatPipeline *pipe, Geometry *g, Mesh *m)getInstMeshInfo583,13185
MatPipeline::instance(Geometry *g, InstanceData *inst, Mesh *m)instance636,14838
MatPipeline::collectData(Geometry *g, InstanceData *inst, Mesh *m, uint8 *data[])collectData754,18263
objInstance(rw::ObjPipeline *rwpipe, Atomic *atomic)objInstance804,19749
objUninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)objUninstance864,21385
ObjPipeline::init(void)init935,23768
ObjPipeline::create(void)create944,23958
insertVertex(Geometry *geo, int32 i, uint32 mask, Vertex *v)insertVertex952,24083
genericPreCB(MatPipeline *pipe, Geometry *geo)genericPreCB967,24416
genericUninstanceCB(MatPipeline *pipe, Geometry *geo, uint32 flags[], Mesh *mesh, uint8 *data[])genericUninstanceCB980,24661
makeDefaultPipeline(void)makeDefaultPipeline1111,28007
int32 adcOffset;adcOffset1135,28632
getADCbits(Geometry *geo)getADCbits1138,28656
getADCbitsForMesh(Geometry *geo, Mesh *mesh)getADCbitsForMesh1150,28849
convertADC(Geometry*)convertADC1163,29120
unconvertADC(Geometry *g)unconvertADC1169,29177
allocateADC(Geometry *geo)allocateADC1218,30442
createADC(void *object, int32 offset, int32)createADC1229,30739
copyADC(void *dst, void *src, int32 offset, int32)copyADC1237,30897
destroyADC(void *object, int32 offset, int32)destroyADC1252,31361
readADC(Stream *stream, int32, void *object, int32 offset, int32)readADC1261,31545
writeADC(Stream *stream, int32 len, void *object, int32 offset, int32)writeADC1282,32068
getSizeADC(void *object, int32 offset, int32)getSizeADC1298,32501
registerADCPlugin(void)registerADCPlugin1310,32778
unpackSize(uint32 unpack)unpackSize1323,33138
sendVIF(uint32 w)sendVIF1331,33312
	enum VIFstate {VIFstate1333,33332
		VST_cmd,VST_cmd1334,33349
		VST_stmask,VST_stmask1335,33360
		VST_strow,VST_strow1336,33374
		VST_stcol,VST_stcol1337,33387
		VST_mpg,VST_mpg1338,33400
		VST_direct,VST_direct1339,33411
		VST_unpackVST_unpack1340,33425
dmaVIF(int32 qwc, uint32 *data)dmaVIF1465,35965
printDMAVIF(InstanceData *inst)printDMAVIF1473,36052
printDMA(InstanceData *inst)printDMA1510,36716

src/ps2/ps2raster.cpp,5338
#define PLUGIN_ID PLUGIN_ID14,247
#define min(min16,276
#define max(max17,318
namespace rw {rw19,361
namespace ps2 {ps220,376
int32 nativeRasterOffset;nativeRasterOffset22,393
#define MAXLEVEL(MAXLEVEL24,420
static bool32 noNewStyleRasters;noNewStyleRasters25,460
enum Psm {Psm27,494
	PSMCT32  = 0x0,PSMCT3228,505
	PSMCT24  = 0x1,PSMCT2429,522
	PSMCT16  = 0x2,PSMCT1630,539
	PSMCT16S = 0xA,PSMCT16S31,556
	PSMT8    = 0x13,PSMT832,573
	PSMT4    = 0x14,PSMT433,591
	PSMT8H   = 0x1B,PSMT8H34,609
	PSMT4HL  = 0x24,PSMT4HL35,627
	PSMT4HH  = 0x2C,PSMT4HH36,645
	PSMZ32   = 0x30,PSMZ3237,663
	PSMZ24   = 0x31,PSMZ2438,681
	PSMZ16   = 0x32,PSMZ1639,699
	PSMZ16S  = 0x3APSMZ16S40,717
transferMinSize(int32 psm, int32 flags, int32 *minw, int32 *minh)transferMinSize45,800
#define ALIGN(ALIGN79,1321
#define ALIGN16(ALIGN1680,1365
#define ALIGN64(ALIGN6481,1403
#define NSIZE(NSIZE82,1443
mallocalign(size_t size, int32 alignment)mallocalign85,1511
freealign(void *p)freealign97,1794
int32 cameraFormat = Raster::C8888;cameraFormat106,1945
int32 cameraDepth = 32;cameraDepth107,1981
int32 cameraZDepth = 16;cameraZDepth108,2005
int32 defaultMipMapKL = 0xFC0;defaultMipMapKL110,2031
int32 maxMipLevels = 7;maxMipLevels111,2062
getRasterFormat(Raster *raster)getRasterFormat114,2093
static uint8 blockmap_PSMCT32[32] = {blockmap_PSMCT32315,7441
static uint8 blockmap_PSMCT16[32] = {blockmap_PSMCT16321,7614
static uint8 blockmap_PSMCT16S[32] = {blockmap_PSMCT16S331,7791
static uint8 blockmap_PSMZ32[32] = {blockmap_PSMZ32341,7969
static uint8 blockmap_PSMZ16[32] = {blockmap_PSMZ16347,8141
static uint8 blockmap_PSMZ16S[32] = {blockmap_PSMZ16S357,8317
static uint8 blockmaprev_PSMCT32[32] = {blockmaprev_PSMCT32368,8495
static uint8 blockmaprev_PSMCT16[32] = {blockmaprev_PSMCT16374,8671
calcOffsets(int32 width_Px, int32 height_Px, int32 psm, uint64 *bufferBase_B, uint64 *bufferWidtcalcOffsets394,9010
#define PAGEWIDTH_B PAGEWIDTH_B459,10526
#define NBLKX(NBLKX460,10615
#define NBLKY(NBLKY461,10664
#define NPGX(NPGX462,10714
#define NPGY(NPGY463,10761
#define REALWIDTH(REALWIDTH464,10809
#define REALHEIGHT(REALHEIGHT465,10856
rasterCreateTexture(Raster *raster)rasterCreateTexture752,21240
	enum {__anonf5d18bf70103769,21702
		TCC_RGBA = 1 << 2,TCC_RGBA770,21710
		CLD_1 = 1 << 29,CLD_1771,21731
		WD2BLK = 64,	// words per blockWD2BLK773,21751
		WD2PG = 2048,	// words per pageWD2PG774,21785
rasterCreate(Raster *raster)rasterCreate1316,38575
swizzle(uint32 x, uint32 y, uint32 logw)swizzle1357,39521
#define X(X1359,39564
#define Y(Y1360,39590
unswizzleRaster(Raster *raster)unswizzleRaster1371,39777
swizzleRaster(Raster *raster)swizzleRaster1418,41094
rasterLock(Raster *raster, int32 level, int32 lockMode)rasterLock1465,42427
rasterUnlock(Raster *raster, int32 level)rasterUnlock1491,43221
convertCSM1_16(uint32 *pal)convertCSM1_161509,43821
convertCSM1_32(uint32 *pal)convertCSM1_321524,44067
convertPalette(Raster *raster)convertPalette1539,44313
rasterLockPalette(Raster *raster, int32 lockMode)rasterLockPalette1551,44647
rasterUnlockPalette(Raster *raster)rasterUnlockPalette1563,45058
imageFindRasterFormat(Image *img, int32 type,imageFindRasterFormat1572,45324
rasterFromImage(Raster *raster, Image *image)rasterFromImage1616,46086
rasterToImage(Raster *raster)rasterToImage1707,48112
rasterNumLevels(Raster *raster)rasterNumLevels1813,50411
createNativeRaster(void *object, int32 offset, int32)createNativeRaster1823,50643
destroyNativeRaster(void *object, int32 offset, int32)destroyNativeRaster1844,51093
copyNativeRaster(void *dst, void *src, int32 offset, int32)copyNativeRaster1852,51270
readMipmap(Stream *stream, int32, void *object, int32 offset, int32)readMipmap1861,51513
writeMipmap(Stream *stream, int32, void *object, int32 offset, int32)writeMipmap1873,51812
getSizeMipmap(void*, int32, int32)getSizeMipmap1886,52123
registerNativeRaster(void)registerNativeRaster1892,52214
printTEX0(uint64 tex0)printTEX01905,52714
printTEX1(uint64 tex1)printTEX11925,53393
calcTEX1(Raster *raster, uint64 *tex1, int32 filter)calcTEX11940,53807
	enum {__anonf5d18bf702031942,53862
		NEAREST = 0,NEAREST1943,53870
		LINEAR,LINEAR1944,53885
		NEAREST_MIPMAP_NEAREST,NEAREST_MIPMAP_NEAREST1945,53895
		NEAREST_MIPMAP_LINEAR,NEAREST_MIPMAP_LINEAR1946,53921
		LINEAR_MIPMAP_NEAREST,LINEAR_MIPMAP_NEAREST1947,53946
		LINEAR_MIPMAP_LINEAR,LINEAR_MIPMAP_LINEAR1948,53971
struct StreamRasterExtStreamRasterExt1985,54806
	int32 width;width1987,54831
	int32 height;height1988,54845
	int32 depth;depth1989,54860
	uint16 rasterFormat;rasterFormat1990,54874
	int16  version;version1991,54896
	uint64 tex0;tex01992,54913
	uint32 paletteOffset;paletteOffset1993,54927
	uint32 tex1low;tex1low1994,54950
	uint64 miptbp1;miptbp11995,54967
	uint64 miptbp2;miptbp21996,54984
	uint32 pixelSize;pixelSize1997,55001
	uint32 paletteSize;paletteSize1998,55020
	uint32 totalSize;totalSize1999,55041
	uint32 mipmapVal;mipmapVal2000,55060
readNativeTexture(Stream *stream)readNativeTexture2004,55092
writeNativeTexture(Texture *tex, Stream *stream)writeNativeTexture2176,60597
getSizeNativeTexture(Texture *tex)getSizeNativeTexture2225,62256

src/ps2/ps2device.cpp,132
#define PLUGIN_ID PLUGIN_ID21,357
namespace rw {rw23,378
namespace ps2 {ps224,393
Device renderdevice = {renderdevice26,410

src/ps2/rwps2plg.h,47
namespace rw {rw1,0
namespace ps2 {ps22,15

src/ps2/pds.cpp,771
namespace rw {rw16,294
namespace ps2 {ps217,309
struct PdsGlobalsPdsGlobals19,326
	Pipeline **pipes;pipes21,346
	int32 maxPipes;maxPipes22,365
	int32 numPipes;numPipes23,382
static PdsGlobals pdsGlobals;pdsGlobals25,402
getPDSPipe(uint32 data)getPDSPipe28,443
registerPDSPipe(Pipeline *pipe)registerPDSPipe37,615
atomicPDSRights(void *object, int32, int32, uint32 data)atomicPDSRights46,879
materialPDSRights(void *object, int32, int32, uint32 data)materialPDSRights54,1118
static void *pdsOpen(void *object, int32 offset, int32 size) { return object; }pdsOpen61,1351
pdsClose(void *object, int32 offset, int32 size)pdsClose63,1444
registerPDSPlugin(int32 n)registerPDSPlugin71,1589
registerPluginPDSPipes(void)registerPluginPDSPipes85,1985

src/ps2/ps2skin.cpp,1002
#define PLUGIN_ID PLUGIN_ID19,342
namespace rw {rw21,369
namespace ps2 {ps222,384
skinOpen(void *o, int32, int32)skinOpen25,414
skinClose(void *o, int32, int32)skinClose32,534
initSkin(void)initSkin42,852
makeSkinPipeline(void)makeSkinPipeline49,981
readNativeSkin(Stream *stream, int32, void *object, int32 offset)readNativeSkin75,1760
writeNativeSkin(Stream *stream, int32 len, void *object, int32 offset)writeNativeSkin126,3044
getSizeNativeSkin(void *object, int32 offset)getSizeNativeSkin159,3841
instanceSkinData(Geometry*, Mesh *m, Skin *skin, uint32 *data)instanceSkinData172,4177
skinInstanceCB(MatPipeline *, Geometry *g, Mesh *m, uint8 **data)skinInstanceCB189,4591
findVertexSkin(Geometry *g, uint32 flags[], uint32 mask, Vertex *v)findVertexSkin199,4809
insertVertexSkin(Geometry *geo, int32 i, uint32 mask, Vertex *v)insertVertexSkin247,5966
skinPreCB(MatPipeline*, Geometry *geo)skinPreCB310,7490
skinPostCB(MatPipeline*, Geometry *geo)skinPostCB324,7889

src/ps2/rwps2impl.h,47
namespace rw {rw1,0
namespace ps2 {ps22,15

src/ps2/ps2matfx.cpp,272
#define PLUGIN_ID PLUGIN_ID17,318
namespace rw {rw19,346
namespace ps2 {ps220,361
matfxOpen(void *o, int32, int32)matfxOpen23,391
matfxClose(void *o, int32, int32)matfxClose30,514
initMatFX(void)initMatFX39,761
makeMatFXPipeline(void)makeMatFXPipeline46,894

src/ps2/rwps2.h,4847
namespace rw {rw1,0
struct EngineOpenParamsEngineOpenParams4,30
namespace ps2 {ps29,67
struct Im2DVertexIm2DVertex15,150
	float32 x, y, z, w;x17,170
	float32 x, y, z, w;y17,170
	float32 x, y, z, w;z17,170
	float32 x, y, z, w;w17,170
	uint32  r, g, b, a;r18,191
	uint32  r, g, b, a;g18,191
	uint32  r, g, b, a;b18,191
	uint32  r, g, b, a;a18,191
	float32 u, v, q, PAD;u19,212
	float32 u, v, q, PAD;v19,212
	float32 u, v, q, PAD;q19,212
	float32 u, v, q, PAD;PAD19,212
	void setScreenX(float32 x) { this->x = x; }setScreenX21,236
	void setScreenY(float32 y) { this->y = y; }setScreenY22,281
	void setScreenZ(float32 z) { this->z = z; }setScreenZ23,326
	void setCameraZ(float32 z) { this->w = z; }setCameraZ24,371
	void setRecipCameraZ(float32 recipz) { this->q = recipz; }setRecipCameraZ25,416
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a) {setColor26,476
	void setU(float32 u, float recipz) { this->u = u; }setU28,585
	void setV(float32 v, float recipz) { this->v = v; }setV29,638
	float getScreenX(void) { return this->x; }getScreenX31,692
	float getScreenY(void) { return this->y; }getScreenY32,736
	float getScreenZ(void) { return this->z; }getScreenZ33,780
	float getCameraZ(void) { return this->w; }getCameraZ34,824
	float getRecipCameraZ(void) { return this->q; }getRecipCameraZ35,868
	RGBA getColor(void) { return makeRGBA(this->r, this->g, this->b, this->a); }getColor36,917
	float getU(void) { return this->u; }getU37,995
	float getV(void) { return this->v; }getV38,1033
struct InstanceDataInstanceData42,1076
	uint32 dataSize;dataSize44,1098
	uint8 *dataRaw;dataRaw45,1116
	uint8 *data;data46,1133
	Material *material;material47,1147
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader50,1172
	uint32 numMeshes;numMeshes52,1225
	InstanceData *instanceMeshes;instanceMeshes53,1244
enum {__anonb2263514010356,1279
	VU_Lights	= 0x3d0VU_Lights57,1286
enum PS2Attribs {PS2Attribs60,1309
	AT_V2_32	= 0x64000000,AT_V2_3261,1327
	AT_V2_16	= 0x65000000,AT_V2_1662,1351
	AT_V2_8		= 0x66000000,AT_V2_863,1375
	AT_V3_32	= 0x68000000,AT_V3_3264,1399
	AT_V3_16	= 0x69000000,AT_V3_1665,1423
	AT_V3_8		= 0x6A000000,AT_V3_866,1447
	AT_V4_32	= 0x6C000000,AT_V4_3267,1471
	AT_V4_16	= 0x6D000000,AT_V4_1668,1495
	AT_V4_8		= 0x6E000000,AT_V4_869,1519
	AT_UNSGN	= 0x00004000,AT_UNSGN70,1543
	AT_RW		= 0x6AT_RW72,1568
enum PS2AttibTypes {PS2AttibTypes76,1627
	AT_XYZ		= 0,AT_XYZ77,1648
	AT_UV		= 1,AT_UV78,1662
	AT_RGBA		= 2,AT_RGBA79,1675
	AT_NORMAL	= 3AT_NORMAL80,1690
struct PipeAttributePipeAttribute96,2221
	const char *name;name98,2244
	uint32 attrib;attrib99,2263
class MatPipeline : public rw::PipelineMatPipeline110,2516
	uint32 vifOffset;vifOffset113,2566
	uint32 inputStride;inputStride114,2585
	uint32 triStripCount, triListCount;triStripCount116,2654
	uint32 triStripCount, triListCount;triListCount116,2654
	PipeAttribute *attribs[10];attribs117,2691
	void (*instanceCB)(MatPipeline*, Geometry*, Mesh*, uint8**);instanceCB118,2720
	void (*uninstanceCB)(MatPipeline*, Geometry*, uint32*, Mesh*, uint8**);uninstanceCB119,2782
	void (*preUninstCB)(MatPipeline*, Geometry*);preUninstCB120,2855
	void (*postUninstCB)(MatPipeline*, Geometry*);postUninstCB121,2902
	static uint32 getVertCount(uint32 top, uint32 inAttribs,getVertCount130,3074
class ObjPipeline : public rw::ObjPipelineObjPipeline144,3554
	MatPipeline *groupPipeline;groupPipeline150,3661
struct Vertex {Vertex158,3776
	V3d       p;p159,3792
	TexCoords t;t160,3806
	TexCoords t1;t1161,3820
	RGBA      c;c162,3835
	V3d       n;n163,3849
	float32 w[4];w165,3872
	uint8   i[4];i166,3887
struct ADCDataADCData192,4917
	bool32 adcFormatted;adcFormatted194,4934
	int8 *adcBits;adcBits195,4956
	int32 numBits;numBits196,4972
struct Ps2RasterPs2Raster216,5416
	enum Flags {Flags218,5435
		NEWSTYLE  = 0x1,	// has GIF tags and transfer DMA chainNEWSTYLE219,5449
		SWIZZLED8 = 0x2,SWIZZLED8220,5507
		SWIZZLED4 = 0x4SWIZZLED4221,5526
	struct PixelPtr {PixelPtr223,5548
		uint8 *pixels;pixels226,5666
		int32 numTransfers;numTransfers229,5795
		int32 numTotalTransfers;numTotalTransfers230,5817
	uint64 tex0;tex0233,5849
	uint32 paletteBase;   // block address from beginning of GS data (words/64)paletteBase234,5863
	uint16 kl;kl235,5940
	uint8 tex1low;          // MXL and LCM of TEX1tex1low236,5952
	uint8 unk2;unk2237,6000
	uint64 miptbp1;miptbp1238,6013
	uint64 miptbp2;miptbp2239,6030
	uint32 pixelSize;	// in bytespixelSize240,6047
	uint32 paletteSize;	// in bytespaletteSize241,6078
	uint32 totalSize;	// total size of texture on GS in wordstotalSize242,6111
	int8 flags;flags243,6170
	uint8 *data;	//tmpdata245,6184
	uint32 dataSize;dataSize246,6204

src/lodepng/lodepng.h,11985
#define LODEPNG_HLODEPNG_H27,932
#define LODEPNG_COMPILE_ZLIBLODEPNG_COMPILE_ZLIB45,1666
#define LODEPNG_COMPILE_PNGLODEPNG_COMPILE_PNG50,1766
#define LODEPNG_COMPILE_DECODERLODEPNG_COMPILE_DECODER55,1878
#define LODEPNG_COMPILE_ENCODERLODEPNG_COMPILE_ENCODER60,1994
#define LODEPNG_COMPILE_DISKLODEPNG_COMPILE_DISK65,2135
#define LODEPNG_COMPILE_ANCILLARY_CHUNKSLODEPNG_COMPILE_ANCILLARY_CHUNKS70,2309
#define LODEPNG_COMPILE_ERROR_TEXTLODEPNG_COMPILE_ERROR_TEXT75,2464
#define LODEPNG_COMPILE_ALLOCATORSLODEPNG_COMPILE_ALLOCATORS82,2756
#define LODEPNG_COMPILE_CPPLODEPNG_COMPILE_CPP88,2944
typedef enum LodePNGColorType {LodePNGColorType99,3160
  LCT_GREY = 0, /*grayscale: 1,2,4,8,16 bit*/LCT_GREY100,3192
  LCT_RGB = 2, /*RGB: 8,16 bit*/LCT_RGB101,3238
  LCT_PALETTE = 3, /*palette: 1,2,4,8 bit*/LCT_PALETTE102,3271
  LCT_GREY_ALPHA = 4, /*grayscale with alpha: 8,16 bit*/LCT_GREY_ALPHA103,3315
  LCT_RGBA = 6, /*RGB with alpha: 8,16 bit*/LCT_RGBA104,3372
  LCT_MAX_OCTET_VALUE = 255LCT_MAX_OCTET_VALUE110,3829
} LodePNGColorType;LodePNGColorType111,3857
namespace lodepng {lodepng212,8889
typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;LodePNGDecompressSettings267,11560
struct LodePNGDecompressSettings {LodePNGDecompressSettings268,11628
  unsigned ignore_adler32; /*if 1, continue and don't give an error message if the Adler32 checkignore_adler32270,11745
  unsigned ignore_nlen; /*ignore complement of len checksum in uncompressed blocks*/ignore_nlen271,11860
  unsigned (*custom_zlib)(unsigned char**, size_t*,custom_zlib274,12016
  unsigned (*custom_inflate)(unsigned char**, size_t*,custom_inflate279,12345
  const void* custom_context; /*optional custom settings for custom functions*/custom_context283,12524
typedef struct LodePNGCompressSettings LodePNGCompressSettings;LodePNGCompressSettings295,12944
struct LodePNGCompressSettings /*deflate = compress*/ {LodePNGCompressSettings296,13008
  unsigned btype; /*the block type for LZ (0, 1, 2 or 3, see zlib standard). Should be 2 for probtype298,13092
  unsigned use_lz77; /*whether or not to use LZ77. Should be 1 for proper compression.*/use_lz77299,13207
  unsigned windowsize; /*must be a power of two <= 32768. higher compresses more but is slower. windowsize300,13296
  unsigned minmatch; /*minimum lz77 length. 3 is normally best, 6 can be better for some PNGs. Dminmatch301,13415
  unsigned nicematch; /*stop searching if >= this length found. Set to 258 for best compression.nicematch302,13523
  unsigned lazymatching; /*use lazy matching: better compression but a bit slower. Default: truelazymatching303,13635
  unsigned (*custom_zlib)(unsigned char**, size_t*,custom_zlib306,13805
  unsigned (*custom_deflate)(unsigned char**, size_t*,custom_deflate312,14162
  const void* custom_context; /*optional custom settings for custom functions*/custom_context316,14339
typedef struct LodePNGColorMode {LodePNGColorMode329,14852
  LodePNGColorType colortype; /*color type, see PNG standard or documentation further in this hecolortype331,14906
  unsigned bitdepth;  /*bits per sample, see PNG standard or documentation further in this headebitdepth332,15014
  unsigned char* palette; /*palette in RGBARGBA... order. Must be either 0, or when allocated mupalette349,15689
  size_t palettesize; /*palette size in number of colors (amount of used bytes is 4 * palettesizpalettesize350,15806
  unsigned key_defined; /*is a transparent color key given? 0 = false, 1 = true*/key_defined363,16330
  unsigned key_r;       /*red/grayscale component of color key*/key_r364,16412
  unsigned key_g;       /*green component of color key*/key_g365,16477
  unsigned key_b;       /*blue component of color key*/key_b366,16534
} LodePNGColorMode;LodePNGColorMode367,16590
typedef struct LodePNGTime {LodePNGTime409,18948
  unsigned year;    /*2 bytes used (0-65535)*/year410,18977
  unsigned month;   /*1-12*/month411,19024
  unsigned day;     /*1-31*/day412,19053
  unsigned hour;    /*0-23*/hour413,19082
  unsigned minute;  /*0-59*/minute414,19111
  unsigned second;  /*0-60 (to allow for leap seconds)*/second415,19140
} LodePNGTime;LodePNGTime416,19197
typedef struct LodePNGInfo {LodePNGInfo420,19327
  unsigned compression_method;/*compression method of the original file. Always 0.*/compression_method422,19423
  unsigned filter_method;     /*filter method of the original file*/filter_method423,19508
  unsigned interlace_method;  /*interlace method of the original file: 0=none, 1=Adam7*/interlace_method424,19577
  LodePNGColorMode color;     /*color type and bits, palette and transparency of the PNG file*/color425,19666
  unsigned background_defined; /*is a suggested background color given?*/background_defined451,20911
  unsigned background_r;       /*red/gray/palette component of suggested background color*/background_r452,20985
  unsigned background_g;       /*green component of suggested background color*/background_g453,21077
  unsigned background_b;       /*blue component of suggested background color*/background_b454,21158
  size_t text_num; /*the amount of texts in these char** buffers (there may be more texts in itetext_num473,22105
  char** text_keys; /*the keyword of a text chunk (e.g. "Comment")*/text_keys474,22207
  char** text_strings; /*the actual text*/text_strings475,22276
  size_t itext_num; /*the amount of international texts in this PNG*/itext_num482,22471
  char** itext_keys; /*the English keyword of the text chunk (e.g. "Comment")*/itext_keys483,22541
  char** itext_langtags; /*language tag for this text's language, ISO/IEC 646 string, e.g. ISO 6itext_langtags484,22621
  char** itext_transkeys; /*keyword translated to the international language - UTF-8 string*/itext_transkeys485,22735
  char** itext_strings; /*the actual international text - UTF-8 string*/itext_strings486,22829
  unsigned time_defined; /*set to 1 to make the encoder generate a tIME chunk*/time_defined489,22927
  LodePNGTime time;time490,23007
  unsigned phys_defined; /*if 0, there is no pHYs chunk and the values below are undefined, if 1phys_defined493,23052
  unsigned phys_x; /*pixels per unit in x direction*/phys_x494,23169
  unsigned phys_y; /*pixels per unit in y direction*/phys_y495,23223
  unsigned phys_unit; /*may be 0 (unknown unit) or 1 (metre)*/phys_unit496,23277
  unsigned gama_defined; /* Whether a gAMA chunk is present (0 = not present, 1 = present). */gama_defined509,23873
  unsigned gama_gamma;   /* Gamma exponent times 100000 */gama_gamma510,23968
  unsigned chrm_defined; /* Whether a cHRM chunk is present (0 = not present, 1 = present). */chrm_defined513,24107
  unsigned chrm_white_x; /* White Point x times 100000 */chrm_white_x514,24202
  unsigned chrm_white_y; /* White Point y times 100000 */chrm_white_y515,24260
  unsigned chrm_red_x;   /* Red x times 100000 */chrm_red_x516,24318
  unsigned chrm_red_y;   /* Red y times 100000 */chrm_red_y517,24368
  unsigned chrm_green_x; /* Green x times 100000 */chrm_green_x518,24418
  unsigned chrm_green_y; /* Green y times 100000 */chrm_green_y519,24470
  unsigned chrm_blue_x;  /* Blue x times 100000 */chrm_blue_x520,24522
  unsigned chrm_blue_y;  /* Blue y times 100000 */chrm_blue_y521,24573
  unsigned srgb_defined; /* Whether an sRGB chunk is present (0 = not present, 1 = present). */srgb_defined528,24862
  unsigned srgb_intent;  /* Rendering intent: 0=perceptual, 1=rel. colorimetric, 2=saturation, 3srgb_intent529,24958
  unsigned iccp_defined;      /* Whether an iCCP chunk is present (0 = not present, 1 = present)iccp_defined552,26548
  char* iccp_name;            /* Null terminated string with profile name, 1-79 bytes */iccp_name553,26649
  unsigned char* iccp_profile;iccp_profile559,26923
  unsigned iccp_profile_size; /* The size of iccp_profile in bytes */iccp_profile_size560,26954
  unsigned char* unknown_chunks_data[3];unknown_chunks_data582,28043
  size_t unknown_chunks_size[3]; /*size in bytes of the unknown chunks, given for protection*/unknown_chunks_size583,28084
} LodePNGInfo;LodePNGInfo585,28223
typedef struct LodePNGDecoderSettings {LodePNGDecoderSettings626,30411
  LodePNGDecompressSettings zlibsettings; /*in here is the setting to ignore Adler32 checksums*/zlibsettings627,30451
  unsigned ignore_crc; /*ignore CRC checksums*/ignore_crc630,30638
  unsigned ignore_critical; /*ignore unknown critical chunks*/ignore_critical631,30686
  unsigned ignore_end; /*ignore issues at end of file if possible (missing IEND chunk, too largeignore_end632,30749
  unsigned color_convert; /*whether to convert the PNG to the color type you want. Default: yes*color_convert638,31223
  unsigned read_text_chunks; /*if false but remember_unknown_chunks is true, they're stored in tread_text_chunks641,31362
  unsigned remember_unknown_chunks;remember_unknown_chunks643,31581
} LodePNGDecoderSettings;LodePNGDecoderSettings645,31661
typedef enum LodePNGFilterStrategy {LodePNGFilterStrategy652,31921
  LFS_ZERO = 0,LFS_ZERO654,31985
  LFS_ONE = 1,LFS_ONE656,32096
  LFS_TWO = 2,LFS_TWO657,32111
  LFS_THREE = 3,LFS_THREE658,32126
  LFS_FOUR = 4,LFS_FOUR659,32143
  LFS_MINSUM,LFS_MINSUM661,32251
  LFS_ENTROPY,LFS_ENTROPY664,32409
  LFS_BRUTE_FORCE,LFS_BRUTE_FORCE669,32594
  LFS_PREDEFINEDLFS_PREDEFINED671,32696
} LodePNGFilterStrategy;LodePNGFilterStrategy672,32713
typedef struct LodePNGColorStats {LodePNGColorStats677,33019
  unsigned colored; /*not grayscale*/colored678,33054
  unsigned key; /*image is not opaque and color key is possible instead of full alpha*/key679,33092
  unsigned short key_r; /*key values, always as 16-bit, in 8-bit case the byte is duplicated, e.key_r680,33180
  unsigned short key_g;key_g681,33297
  unsigned short key_b;key_b682,33321
  unsigned alpha; /*image is not opaque and alpha channel or alpha palette required*/alpha683,33345
  unsigned numcolors; /*amount of colors, up to 257. Not valid if bits == 16 or allow_palette isnumcolors684,33431
  unsigned char palette[1024]; /*Remembers up to the first 256 RGBA colors, in no particular ordpalette685,33540
  unsigned bits; /*bits per channel (not for palette). 1,2 or 4 for grayscale only. 16 if 16-bitbits686,33677
  size_t numpixels;numpixels687,33798
  unsigned allow_palette; /*default 1. if 0, disallow choosing palette colortype in auto_choose_allow_palette690,33869
  unsigned allow_greyscale; /*default 1. if 0, choose RGB or RGBA even if the image only has graallow_greyscale691,34000
} LodePNGColorStats;LodePNGColorStats692,34107
typedef struct LodePNGEncoderSettings {LodePNGEncoderSettings703,34573
  LodePNGCompressSettings zlibsettings; /*settings for the zlib encoder, such as window size, ..zlibsettings704,34613
  unsigned auto_convert; /*automatically choose output PNG color type. Default: true*/auto_convert706,34714
  unsigned filter_palette_zero;filter_palette_zero712,35103
  LodePNGFilterStrategy filter_strategy;filter_strategy715,35316
  const unsigned char* predefined_filters;predefined_filters720,35721
  unsigned force_palette;force_palette724,35894
  unsigned add_id;add_id727,36032
  unsigned text_compression;text_compression729,36150
} LodePNGEncoderSettings;LodePNGEncoderSettings731,36223
typedef struct LodePNGState {LodePNGState739,36506
  LodePNGDecoderSettings decoder; /*the decoding settings*/decoder741,36567
  LodePNGEncoderSettings encoder; /*the encoding settings*/encoder744,36693
  LodePNGColorMode info_raw; /*specifies the format in which you would like to get the raw pixelinfo_raw746,36788
  LodePNGInfo info_png; /*info of the PNG image obtained after decoding*/info_png747,36894
  unsigned error;error748,36968
} LodePNGState;LodePNGState749,36986
namespace lodepng {lodepng969,47181
class State : public LodePNGState {State971,47228

src/lodepng/lodepng.cpp,32195
const char* LODEPNG_VERSION_STRING = "20200306";LODEPNG_VERSION_STRING47,1693
static void* lodepng_malloc(size_t size) {lodepng_malloc74,3082
static void* lodepng_realloc(void* ptr, size_t new_size) {lodepng_realloc82,3303
static void lodepng_free(void* ptr) {lodepng_free89,3475
#define LODEPNG_INLINE LODEPNG_INLINE102,4096
#define LODEPNG_INLINE LODEPNG_INLINE104,4132
#define LODEPNG_RESTRICT LODEPNG_RESTRICT111,4481
#define LODEPNG_RESTRICT LODEPNG_RESTRICT113,4523
static void lodepng_memcpy(void* LODEPNG_RESTRICT dst,lodepng_memcpy120,4775
static void lodepng_memset(void* LODEPNG_RESTRICT dst,lodepng_memset126,4990
static size_t lodepng_strlen(const char* a) {lodepng_strlen133,5242
#define LODEPNG_MAX(LODEPNG_MAX141,5470
#define LODEPNG_MIN(LODEPNG_MIN142,5522
#define LODEPNG_ABS(LODEPNG_ABS143,5574
static int lodepng_addofl(size_t a, size_t b, size_t* result) {lodepng_addofl148,5825
static int lodepng_mulofl(size_t a, size_t b, size_t* result) {lodepng_mulofl157,6236
static int lodepng_gtofl(size_t a, size_t b, size_t c) {lodepng_gtofl164,6515
#define CERROR_BREAK(CERROR_BREAK180,7010
#define ERROR_BREAK(ERROR_BREAK186,7181
#define CERROR_RETURN_ERROR(CERROR_RETURN_ERROR189,7286
#define CERROR_TRY_RETURN(CERROR_TRY_RETURN195,7433
#define CERROR_RETURN(CERROR_RETURN201,7595
typedef struct uivector {uivector218,8278
  unsigned* data;data219,8304
  size_t size; /*size in number of unsigned longs*/size220,8322
  size_t allocsize; /*allocated size in bytes*/allocsize221,8374
} uivector;uivector222,8422
static void uivector_cleanup(void* p) {uivector_cleanup224,8435
static unsigned uivector_resize(uivector* p, size_t size) {uivector_resize231,8659
static void uivector_init(uivector* p) {uivector_init246,9086
static unsigned uivector_push_back(uivector* p, unsigned c) {uivector_push_back252,9234
typedef struct ucvector {ucvector263,9575
  unsigned char* data;data264,9601
  size_t size; /*used size*/size265,9624
  size_t allocsize; /*allocated size*/allocsize266,9653
} ucvector;ucvector267,9692
static unsigned ucvector_resize(ucvector* p, size_t size) {ucvector_resize270,9761
static ucvector ucvector_init(unsigned char* buffer, size_t size) {ucvector_init284,10137
static void string_cleanup(char** out) {string_cleanup297,10477
static char* alloc_string_sized(const char* in, size_t insize) {alloc_string_sized302,10558
static char* alloc_string(const char* in) {alloc_string312,10850
static unsigned lodepng_read32bitInt(const unsigned char* buffer) {lodepng_read32bitInt321,11176
static void lodepng_set32bitInt(unsigned char* buffer, unsigned value) {lodepng_set32bitInt329,11583
static long lodepng_filesize(const char* filename) {lodepng_filesize344,12306
static unsigned lodepng_buffer_file(unsigned char* out, size_t size, const char* filename) {lodepng_buffer_file364,12773
unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename) {lodepng_load_file377,13061
unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename)lodepng_save_file389,13513
typedef struct {__anon4ba4f98e0108409,14251
  ucvector* data;data410,14268
  unsigned char bp; /*ok to overflow, indicates bit pos inside byte*/bp411,14286
} LodePNGBitWriter;LodePNGBitWriter412,14356
static void LodePNGBitWriter_init(LodePNGBitWriter* writer, ucvector* data) {LodePNGBitWriter_init414,14377
#define WRITEBIT(WRITEBIT420,14553
static void writeBits(LodePNGBitWriter* writer, unsigned value, size_t nbits) {writeBits431,14943
static void writeBitsReversed(LodePNGBitWriter* writer, unsigned value, size_t nbits) {writeBitsReversed444,15437
typedef struct {__anon4ba4f98e0208455,15797
  const unsigned char* data;data456,15814
  size_t size; /*size of data in bytes*/size457,15843
  size_t bitsize; /*size of data in bits, end of valid bp values, should be 8*size*/bitsize458,15884
  size_t bp;bp459,15969
  unsigned buffer; /*buffer for reading bits. NOTE: 'unsigned' must support at least 32 bits*/buffer460,15982
} LodePNGBitReader;LodePNGBitReader461,16077
static unsigned LodePNGBitReader_init(LodePNGBitReader* reader, const unsigned char* data, size_LodePNGBitReader_init464,16185
static unsigned ensureBits9(LodePNGBitReader* reader, size_t nbits) {ensureBits9493,17343
static unsigned ensureBits17(LodePNGBitReader* reader, size_t nbits) {ensureBits17509,17935
static LODEPNG_INLINE unsigned ensureBits25(LodePNGBitReader* reader, size_t nbits) {ensureBits25527,18681
static LODEPNG_INLINE unsigned ensureBits32(LodePNGBitReader* reader, size_t nbits) {ensureBits32546,19575
static unsigned peekBits(LodePNGBitReader* reader, size_t nbits) {peekBits567,20697
static void advanceBits(LodePNGBitReader* reader, size_t nbits) {advanceBits573,20921
static unsigned readBits(LodePNGBitReader* reader, size_t nbits) {readBits579,21095
unsigned lode_png_test_bitreader(const unsigned char* data, size_t size,lode_png_test_bitreader586,21332
static unsigned reverseBits(unsigned bits, unsigned num) {reverseBits606,22023
#define FIRST_LENGTH_CODE_INDEX FIRST_LENGTH_CODE_INDEX617,22515
#define LAST_LENGTH_CODE_INDEX LAST_LENGTH_CODE_INDEX618,22551
#define NUM_DEFLATE_CODE_SYMBOLS NUM_DEFLATE_CODE_SYMBOLS620,22656
#define NUM_DISTANCE_SYMBOLS NUM_DISTANCE_SYMBOLS622,22758
#define NUM_CODE_LENGTH_CODES NUM_CODE_LENGTH_CODES624,22899
static const unsigned LENGTHBASE[29]LENGTHBASE627,22983
static const unsigned LENGTHEXTRA[29]LENGTHEXTRA632,23211
static const unsigned DISTANCEBASE[30]DISTANCEBASE637,23495
static const unsigned DISTANCEEXTRA[30]DISTANCEEXTRA642,23746
static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]CLCL_ORDER648,24113
typedef struct HuffmanTree {HuffmanTree656,24399
  unsigned* codes; /*the huffman codes (bit patterns representing the symbols)*/codes657,24428
  unsigned* lengths; /*the lengths of the huffman codes*/lengths658,24509
  unsigned maxbitlen; /*maximum number of bits a single code can get*/maxbitlen659,24567
  unsigned numcodes; /*number of symbols in the alphabet = number of codes*/numcodes660,24638
  unsigned char* table_len; /*length of symbol from lookup table, or max length if secondary lootable_len662,24740
  unsigned short* table_value; /*value of symbol from lookup table, or pointer to secondary tabltable_value663,24849
} HuffmanTree;HuffmanTree664,24959
static void HuffmanTree_init(HuffmanTree* tree) {HuffmanTree_init666,24975
static void HuffmanTree_cleanup(HuffmanTree* tree) {HuffmanTree_cleanup673,25116
#define FIRSTBITS FIRSTBITS682,25459
#define INVALIDSYMBOL INVALIDSYMBOL686,25656
static unsigned HuffmanTree_makeTable(HuffmanTree* tree) {HuffmanTree_makeTable689,25724
static unsigned HuffmanTree_makeFromLengths2(HuffmanTree* tree) {HuffmanTree_makeFromLengths2809,31277
static unsigned HuffmanTree_makeFromLengths(HuffmanTree* tree, const unsigned* bitlen,HuffmanTree_makeFromLengths850,32758
typedef struct BPMNode {BPMNode867,33501
  int weight; /*the sum of all weights in this chain*/weight868,33526
  unsigned index; /*index of this leaf node (called "count" in the paper)*/index869,33581
  struct BPMNode* tail; /*the next nodes in this chain (null if last)*/tail870,33657
  int in_use;in_use871,33729
} BPMNode;BPMNode872,33743
typedef struct BPMLists {BPMLists875,33775
  unsigned memsize;memsize877,33819
  BPMNode* memory;memory878,33839
  unsigned numfree;numfree879,33858
  unsigned nextfree;nextfree880,33878
  BPMNode** freelist;freelist881,33899
  unsigned listsize;listsize883,33966
  BPMNode** chains0;chains0884,33987
  BPMNode** chains1;chains1885,34008
} BPMLists;BPMLists886,34029
static BPMNode* bpmnode_create(BPMLists* lists, int weight, unsigned index, BPMNode* tail) {bpmnode_create889,34128
static void bpmnode_sort(BPMNode* leaves, size_t num) {bpmnode_sort918,35097
static void boundaryPM(BPMLists* lists, BPMNode* leaves, size_t numpresent, int c, int num) {boundaryPM941,35950
unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,lodepng_huffman_code_lengths966,37110
static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,HuffmanTree_makeFromFrequencies1045,40237
static unsigned generateFixedLitLenTree(HuffmanTree* tree) {generateFixedLitLenTree1061,41071
static unsigned generateFixedDistanceTree(HuffmanTree* tree) {generateFixedDistanceTree1079,41800
static unsigned huffmanDecodeSymbol(LodePNGBitReader* reader, const HuffmanTree* codetree) {huffmanDecodeSymbol1097,42376
static unsigned getTreeInflateFixed(HuffmanTree* tree_ll, HuffmanTree* tree_d) {getTreeInflateFixed1122,43357
static unsigned getTreeInflateDynamic(HuffmanTree* tree_ll, HuffmanTree* tree_d,getTreeInflateDynamic1129,43681
static unsigned inflateHuffmanBlock(ucvector* out, LodePNGBitReader* reader,inflateHuffmanBlock1262,49566
static unsigned inflateNoCompression(ucvector* out, LodePNGBitReader* reader,inflateNoCompression1352,53297
static unsigned lodepng_inflatev(ucvector* out,lodepng_inflatev1384,54496
unsigned lodepng_inflate(unsigned char** out, size_t* outsize,lodepng_inflate1409,55330
static unsigned inflatev(ucvector* out, const unsigned char* in, size_t insize,inflatev1419,55694
static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258;MAX_SUPPORTED_DEFLATE_LENGTH1438,56405
static size_t searchCodeIndex(const unsigned* array, size_t array_size, size_t value) {searchCodeIndex1442,56658
static void addLengthDistance(uivector* values, size_t length, size_t distance) {addLengthDistance1456,57120
static const unsigned HASH_NUM_VALUES = 65536;HASH_NUM_VALUES1481,58230
static const unsigned HASH_BIT_MASK = 65535; /*HASH_NUM_VALUES - 1, but C90 does not like that aHASH_BIT_MASK1482,58277
typedef struct Hash {Hash1484,58390
  int* head; /*hash value to head circular pos - can be outdated if went around window*/head1485,58412
  unsigned short* chain;chain1487,58541
  int* val; /*circular pos to hash value*/val1488,58566
  int* headz; /*similar to head, but for chainz*/headz1492,58768
  unsigned short* chainz; /*those with same amount of zeros*/chainz1493,58818
  unsigned short* zeros; /*length of zeros streak, used as a second hash chain*/zeros1494,58880
} Hash;Hash1495,58961
static unsigned hash_init(Hash* hash, unsigned windowsize) {hash_init1497,58970
static void hash_cleanup(Hash* hash) {hash_cleanup1522,60098
static unsigned getHash(const unsigned char* data, size_t size, size_t pos) {getHash1534,60315
static unsigned countZeros(const unsigned char* data, size_t size, size_t pos) {countZeros1553,61048
static void updateHashChain(Hash* hash, size_t wpos, unsigned hashval, unsigned short numzeros) updateHashChain1564,61515
static unsigned encodeLZ77(uivector* out, Hash* hash,encodeLZ771583,62438
static unsigned deflateNoCompression(ucvector* out, const unsigned char* data, size_t datasize) deflateNoCompression1734,68305
static void writeLZ77data(LodePNGBitWriter* writer, const uivector* lz77_encoded,writeLZ77data1772,69669
static unsigned deflateDynamic(LodePNGBitWriter* writer, Hash* hash,deflateDynamic1797,70849
static unsigned deflateFixed(LodePNGBitWriter* writer, Hash* hash,deflateFixed2019,80815
static unsigned lodepng_deflatev(ucvector* out, const unsigned char* in, size_t insize,lodepng_deflatev2064,82406
unsigned lodepng_deflate(unsigned char** out, size_t* outsize,lodepng_deflate2105,83785
static unsigned deflate(unsigned char** out, size_t* outsize,deflate2115,84147
static unsigned update_adler32(unsigned adler, const unsigned char* data, unsigned len) {update_adler322131,84808
static unsigned adler32(const unsigned char* data, unsigned len) {adler322152,85379
static unsigned lodepng_zlib_decompressv(ucvector* out,lodepng_zlib_decompressv2162,85765
unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,lodepng_zlib_decompress2204,87226
static unsigned zlib_decompress(unsigned char** out, size_t* outsize, size_t expected_size,zlib_decompress2214,87691
unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,lodepng_zlib_compress2237,88451
static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,zlib_compress2275,89770
static unsigned zlib_decompress(unsigned char** out, size_t* outsize, size_t expected_size,zlib_decompress2289,90241
static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,zlib_compress2297,90687
#define DEFAULT_WINDOWSIZE DEFAULT_WINDOWSIZE2311,91263
void lodepng_compress_settings_init(LodePNGCompressSettings* settings) {lodepng_compress_settings_init2313,91296
const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, DEFAULT_WINDOWSIZE, 3, lodepng_default_compress_settings2327,91747
void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings) {lodepng_decompress_settings_init2334,91931
const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0, 0};lodepng_default_decompress_settings2343,92166
static unsigned lodepng_crc32_table[256] = {lodepng_crc32_table2362,93033
unsigned lodepng_crc32(const unsigned char* data, size_t length) {lodepng_crc322398,96520
static unsigned char readBitFromReversedStream(size_t* bitpointer, const unsigned char* bitstreareadBitFromReversedStream2417,97299
static unsigned readBitsFromReversedStream(size_t* bitpointer, const unsigned char* bitstream, sreadBitsFromReversedStream2424,97578
static void setBitOfReversedStream(size_t* bitpointer, unsigned char* bitstream, unsigned char bsetBitOfReversedStream2434,97873
unsigned lodepng_chunk_length(const unsigned char* chunk) {lodepng_chunk_length2445,98499
void lodepng_chunk_type(char type[5], const unsigned char* chunk) {lodepng_chunk_type2449,98604
unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type) {lodepng_chunk_type_equals2455,98786
unsigned char lodepng_chunk_ancillary(const unsigned char* chunk) {lodepng_chunk_ancillary2460,99020
unsigned char lodepng_chunk_private(const unsigned char* chunk) {lodepng_chunk_private2464,99123
unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk) {lodepng_chunk_safetocopy2468,99224
unsigned char* lodepng_chunk_data(unsigned char* chunk) {lodepng_chunk_data2472,99328
const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk) {lodepng_chunk_data_const2476,99409
unsigned lodepng_chunk_check_crc(const unsigned char* chunk) {lodepng_chunk_check_crc2480,99508
void lodepng_chunk_generate_crc(unsigned char* chunk) {lodepng_chunk_generate_crc2489,99871
unsigned char* lodepng_chunk_next(unsigned char* chunk, unsigned char* end) {lodepng_chunk_next2495,100082
const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk, const unsigned char* elodepng_chunk_next_const2511,100796
unsigned char* lodepng_chunk_find(unsigned char* chunk, unsigned char* end, const char type[5]) lodepng_chunk_find2527,101540
const unsigned char* lodepng_chunk_find_const(const unsigned char* chunk, const unsigned char* elodepng_chunk_find_const2535,101851
unsigned lodepng_chunk_append(unsigned char** out, size_t* outsize, const unsigned char* chunk) lodepng_chunk_append2543,102192
static unsigned lodepng_chunk_init(unsigned char** chunk,lodepng_chunk_init2566,103106
static unsigned lodepng_chunk_createv(ucvector* out,lodepng_chunk_createv2585,103763
unsigned lodepng_chunk_create(unsigned char** out, size_t* outsize,lodepng_chunk_create2599,104182
static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd) {checkColorValidity2614,104883
static unsigned getNumColorChannels(LodePNGColorType colortype) {getNumColorChannels2627,105674
static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth) {lodepng_get_bpp_lct2639,106033
void lodepng_color_mode_init(LodePNGColorMode* info) {lodepng_color_mode_init2646,106317
static void lodepng_color_mode_alloc_palette(LodePNGColorMode* info) {lodepng_color_mode_alloc_palette2656,106621
void lodepng_color_mode_cleanup(LodePNGColorMode* info) {lodepng_color_mode_cleanup2673,107445
unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source) {lodepng_color_mode_copy2677,107537
LodePNGColorMode lodepng_color_mode_make(LodePNGColorType colortype, unsigned bitdepth) {lodepng_color_mode_make2688,107972
static int lodepng_color_mode_equal(const LodePNGColorMode* a, const LodePNGColorMode* b) {lodepng_color_mode_equal2696,108207
void lodepng_palette_clear(LodePNGColorMode* info) {lodepng_palette_clear2713,108754
unsigned lodepng_palette_add(LodePNGColorMode* info,lodepng_palette_add2719,108905
unsigned lodepng_get_bpp(const LodePNGColorMode* info) {lodepng_get_bpp2737,109577
unsigned lodepng_get_channels(const LodePNGColorMode* info) {lodepng_get_channels2741,109700
unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info) {lodepng_is_greyscale_type2745,109812
unsigned lodepng_is_alpha_type(const LodePNGColorMode* info) {lodepng_is_alpha_type2749,109957
unsigned lodepng_is_palette_type(const LodePNGColorMode* info) {lodepng_is_palette_type2753,110071
unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info) {lodepng_has_palette_alpha2757,110180
unsigned lodepng_can_have_alpha(const LodePNGColorMode* info) {lodepng_can_have_alpha2765,110371
static size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsiglodepng_get_raw_size_lct2771,110544
size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color) {lodepng_get_raw_size2777,110808
static size_t lodepng_get_raw_size_idat(unsigned w, unsigned h, unsigned bpp) {lodepng_get_raw_size_idat2787,111275
static int lodepng_pixel_overflow(unsigned w, unsigned h,lodepng_pixel_overflow2803,112070
static void LodePNGUnknownChunks_init(LodePNGInfo* info) {LodePNGUnknownChunks_init2826,113142
static void LodePNGUnknownChunks_cleanup(LodePNGInfo* info) {LodePNGUnknownChunks_cleanup2832,113338
static unsigned LodePNGUnknownChunks_copy(LodePNGInfo* dest, const LodePNGInfo* src) {LodePNGUnknownChunks_copy2837,113487
static void LodePNGText_init(LodePNGInfo* info) {LodePNGText_init2857,114161
static void LodePNGText_cleanup(LodePNGInfo* info) {LodePNGText_cleanup2863,114291
static unsigned LodePNGText_copy(LodePNGInfo* dest, const LodePNGInfo* source) {LodePNGText_copy2873,114558
static unsigned lodepng_add_text_sized(LodePNGInfo* info, const char* key, const char* str, sizelodepng_add_text_sized2884,114882
unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str) {lodepng_add_text2901,115636
void lodepng_clear_text(LodePNGInfo* info) {lodepng_clear_text2905,115790
static void LodePNGIText_init(LodePNGInfo* info) {LodePNGIText_init2911,115949
static void LodePNGIText_cleanup(LodePNGInfo* info) {LodePNGIText_cleanup2919,116146
static unsigned LodePNGIText_copy(LodePNGInfo* dest, const LodePNGInfo* source) {LodePNGIText_copy2933,116589
void lodepng_clear_itext(LodePNGInfo* info) {lodepng_clear_itext2947,117073
static unsigned lodepng_add_itext_sized(LodePNGInfo* info, const char* key, const char* langtag,lodepng_add_itext_sized2951,117152
unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,lodepng_add_itext2975,118406
static unsigned lodepng_assign_icc(LodePNGInfo* info, const char* name, const unsigned char* prolodepng_assign_icc2981,118689
unsigned lodepng_set_icc(LodePNGInfo* info, const char* name, const unsigned char* profile, unsilodepng_set_icc2995,119191
void lodepng_clear_icc(LodePNGInfo* info) {lodepng_clear_icc3002,119449
void lodepng_info_init(LodePNGInfo* info) {lodepng_info_init3011,119698
void lodepng_info_cleanup(LodePNGInfo* info) {lodepng_info_cleanup3037,120362
unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source) {lodepng_info_copy3049,120666
static void addColorBits(unsigned char* out, size_t index, unsigned bits, unsigned in) {addColorBits3071,121589
typedef struct ColorTree ColorTree;ColorTree3081,122069
struct ColorTree {ColorTree3089,122350
  ColorTree* children[16]; /*up to 16 pointers to ColorTree of next level*/children3090,122369
  int index; /*the payload. Only has a meaningful value if this is in the last level*/index3091,122445
static void color_tree_init(ColorTree* tree) {color_tree_init3094,122536
static void color_tree_cleanup(ColorTree* tree) {color_tree_cleanup3099,122673
static int color_tree_get(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, uncolor_tree_get3110,122943
static int color_tree_has(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, uncolor_tree_has3121,123352
static unsigned color_tree_add(ColorTree* tree,color_tree_add3129,123711
static unsigned rgba8ToPixel(unsigned char* out, size_t i,rgba8ToPixel3146,124373
static void rgba16ToPixel(unsigned char* out, size_t i,rgba16ToPixel3200,126418
static void getPixelColorRGBA8(unsigned char* r, unsigned char* g,getPixelColorRGBA83233,127709
static void getPixelColorsRGBA8(unsigned char* LODEPNG_RESTRICT buffer, size_t numpixels,getPixelColorsRGBA83307,130534
static void getPixelColorsRGB8(unsigned char* LODEPNG_RESTRICT buffer, size_t numpixels,getPixelColorsRGB83403,134381
static void getPixelColorRGBA16(unsigned short* r, unsigned short* g, unsigned short* b, unsignegetPixelColorRGBA163477,137255
unsigned lodepng_convert(unsigned char* out, const unsigned char* in,lodepng_convert3503,138479
unsigned lodepng_convert_rgb(lodepng_convert_rgb3584,141847
void lodepng_color_stats_init(LodePNGColorStats* stats) {lodepng_color_stats_init3636,143605
static unsigned getValueRequiredBits(unsigned char value) {getValueRequiredBits3663,144515
unsigned lodepng_compute_color_stats(LodePNGColorStats* stats,lodepng_compute_color_stats3671,144801
static unsigned lodepng_color_stats_add(LodePNGColorStats* stats,lodepng_color_stats_add3858,151840
static unsigned auto_choose_color(LodePNGColorMode* mode_out,auto_choose_color3881,153018
static unsigned char paethPredictor(short a, short b, short c) {paethPredictor3953,155713
static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; /*x start values*/ADAM7_IX3964,156109
static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; /*y start values*/ADAM7_IY3965,156189
static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; /*x delta values*/ADAM7_DX3966,156269
static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; /*y delta values*/ADAM7_DY3967,156349
static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8]Adam7_getpassvalues3984,157202
unsigned lodepng_inspect(unsigned* w, unsigned* h, LodePNGState* state,lodepng_inspect4016,158822
static unsigned unfilterScanline(unsigned char* recon, const unsigned char* scanline, const unsiunfilterScanline4080,161534
static unsigned unfilter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, ununfilter4177,166060
static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned Adam7_deinterlace4218,167880
static void removePaddingBits(unsigned char* out, const unsigned char* in,removePaddingBits4258,169466
static unsigned postProcessScanlines(unsigned char* out, unsigned char* in,postProcessScanlines4285,170824
static unsigned readChunk_PLTE(LodePNGColorMode* color, const unsigned char* data, size_t chunkLreadChunk_PLTE4328,172844
static unsigned readChunk_tRNS(LodePNGColorMode* color, const unsigned char* data, size_t chunkLreadChunk_tRNS4348,173544
static unsigned readChunk_bKGD(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_bKGD4378,174625
static unsigned readChunk_tEXt(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_tEXt4410,175978
static unsigned readChunk_zTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,readChunk_zTXt4450,177191
static unsigned readChunk_iTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,readChunk_iTXt4492,178644
static unsigned readChunk_tIME(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_tIME4572,181431
static unsigned readChunk_pHYs(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_pHYs4586,181839
static unsigned readChunk_gAMA(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_gAMA4597,182249
static unsigned readChunk_cHRM(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_cHRM4606,182550
static unsigned readChunk_sRGB(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)readChunk_sRGB4622,183516
static unsigned readChunk_iCCP(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,readChunk_iCCP4631,183788
unsigned lodepng_inspect_chunk(LodePNGState* state, size_t pos,lodepng_inspect_chunk4667,185140
static void decodeGeneric(unsigned char** out, unsigned* w, unsigned* h,decodeGeneric4720,187590
unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,lodepng_decode4914,196464
unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h, const unsigned chalodepng_decode_memory4951,198097
unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* inlodepng_decode324963,198552
unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* inlodepng_decode244967,198738
unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h, const char* filenamelodepng_decode_file4972,198951
unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h, const char* filenalodepng_decode32_file4986,199471
unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h, const char* filenalodepng_decode24_file4990,199640
void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings) {lodepng_decoder_settings_init4995,199840
void lodepng_state_init(LodePNGState* state) {lodepng_state_init5011,200364
void lodepng_state_cleanup(LodePNGState* state) {lodepng_state_cleanup5023,200750
void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source) {lodepng_state_copy5028,200893
static unsigned writeSignature(ucvector* out) {writeSignature5046,201658
static unsigned addChunk_IHDR(ucvector* out, unsigned w, unsigned h,addChunk_IHDR5055,201985
static unsigned addChunk_PLTE(ucvector* out, const LodePNGColorMode* info) {addChunk_PLTE5074,202728
static unsigned addChunk_tRNS(ucvector* out, const LodePNGColorMode* info) {addChunk_tRNS5091,203211
static unsigned addChunk_IDAT(ucvector* out, const unsigned char* data, size_t datasize,addChunk_IDAT5128,204623
static unsigned addChunk_IEND(ucvector* out) {addChunk_IEND5142,205053
static unsigned addChunk_tEXt(ucvector* out, const char* keyword, const char* textstring) {addChunk_tEXt5148,205195
static unsigned addChunk_zTXt(ucvector* out, const char* keyword, const char* textstring,addChunk_zTXt5161,205795
static unsigned addChunk_iTXt(ucvector* out, unsigned compress, const char* keyword, const char*addChunk_iTXt5189,206834
static unsigned addChunk_bKGD(ucvector* out, const LodePNGInfo* info) {addChunk_bKGD5233,208513
static unsigned addChunk_tIME(ucvector* out, const LodePNGTime* time) {addChunk_tIME5255,209642
static unsigned addChunk_pHYs(ucvector* out, const LodePNGInfo* info) {addChunk_pHYs5269,210159
static unsigned addChunk_gAMA(ucvector* out, const LodePNGInfo* info) {addChunk_gAMA5279,210500
static unsigned addChunk_cHRM(ucvector* out, const LodePNGInfo* info) {addChunk_cHRM5287,210765
static unsigned addChunk_sRGB(ucvector* out, const LodePNGInfo* info) {addChunk_sRGB5302,211412
static unsigned addChunk_iCCP(ucvector* out, const LodePNGInfo* info, LodePNGCompressSettings* zaddChunk_iCCP5307,211584
static void filterScanline(unsigned char* out, const unsigned char* scanline, const unsigned chafilterScanline5335,212587
static size_t ilog2(size_t i) {ilog25380,214497
static size_t ilog2i(size_t i) {ilog2i5391,214855
static unsigned filter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,filter5400,215131
static void addPaddingBits(unsigned char* out, const unsigned char* in,addPaddingBits5594,223797
static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,Adam7_interlace5624,225056
static unsigned preProcessScanlines(unsigned char** out, size_t* outsize, const unsigned char* ipreProcessScanlines5665,226705
static unsigned addUnknownChunks(ucvector* out, unsigned char* data, size_t datasize) {addUnknownChunks5739,229812
static unsigned isGrayICCProfile(const unsigned char* profile, unsigned size) {isGrayICCProfile5749,230197
static unsigned isRGBICCProfile(const unsigned char* profile, unsigned size) {isRGBICCProfile5763,230951
unsigned lodepng_encode(unsigned char** out, size_t* outsize,lodepng_encode5770,231240
unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize, const unsigned char* image,lodepng_encode_memory6031,241778
unsigned lodepng_encode32(unsigned char** out, size_t* outsize, const unsigned char* image, unsilodepng_encode326046,242345
unsigned lodepng_encode24(unsigned char** out, size_t* outsize, const unsigned char* image, unsilodepng_encode246050,242538
unsigned lodepng_encode_file(const char* filename, const unsigned char* image, unsigned w, unsiglodepng_encode_file6055,242758
unsigned lodepng_encode32_file(const char* filename, const unsigned char* image, unsigned w, unslodepng_encode32_file6065,243196
unsigned lodepng_encode24_file(const char* filename, const unsigned char* image, unsigned w, unslodepng_encode24_file6069,243372
void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings) {lodepng_encoder_settings_init6074,243579
const char* lodepng_error_text(unsigned code) {lodepng_error_text6095,244259
namespace lodepng {lodepng6219,253140
unsigned load_file(std::vector<unsigned char>& buffer, const std::string& filename) {load_file6222,253189
unsigned save_file(const std::vector<unsigned char>& buffer, const std::string& filename) {save_file6230,253558
unsigned decompress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,decompress6237,253840
unsigned decompress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,decompress6249,254260
unsigned compress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,compress6256,254559
unsigned compress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,compress6268,254968
State::State() {State6278,255291
State::State(const State& other) {State6282,255339
State::~State() {~State6287,255441
State& State::operator=(const State& other) {operator =6291,255493
unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const unsigned char* decode6298,255626
unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,decode6313,256227
unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,decode6318,256503
unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,decode6331,256971
unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const std::string& fidecode6338,257234
unsigned encode(std::vector<unsigned char>& out, const unsigned char* in, unsigned w, unsigned hencode6351,257738
unsigned encode(std::vector<unsigned char>& out,encode6363,258166
unsigned encode(std::vector<unsigned char>& out,encode6370,258516
unsigned encode(std::vector<unsigned char>& out,encode6383,258907
unsigned encode(const std::string& filename,encode6391,259230
unsigned encode(const std::string& filename,encode6400,259577

src/gl/rwgl3impl.h,811
namespace rw {rw1,0
namespace gl3 {gl32,15
struct DisplayModeDisplayMode25,815
	SDL_DisplayMode mode;mode28,854
	int32 depth;depth32,909
	uint32 flags;flags33,923
struct GlGlobalsGlGlobals36,942
	SDL_Window **pWindow;pWindow39,979
	SDL_Window *window;window40,1002
	SDL_GLContext glcontext;glcontext41,1023
	DisplayMode *modes;modes51,1170
	int numModes;numModes52,1191
	int currentMode;currentMode53,1206
	int presentWidth, presentHeight;presentWidth54,1224
	int presentWidth, presentHeight;presentHeight54,1224
	int presentOffX, presentOffY;presentOffX55,1258
	int presentOffX, presentOffY;presentOffY55,1258
	int winWidth, winHeight;winWidth58,1317
	int winWidth, winHeight;winHeight58,1317
	const char *winTitle;winTitle59,1343
	uint32 numSamples;numSamples60,1366

src/gl/rwgl3.h,6255
namespace rw {rw10,115
struct EngineOpenParamsEngineOpenParams13,145
	SDL_Window **window;window16,189
	bool32 fullscreen;fullscreen17,211
	int width, height;width21,266
	int width, height;height21,266
	const char *windowtitle;windowtitle22,286
namespace gl3 {gl326,323
struct AttribDescAttribDesc33,454
	uint32 index;index35,474
	int32  type;type36,489
	bool32 normalized;normalized37,503
	int32  size;size38,523
	uint32 stride;stride39,537
	uint32 offset;offset40,553
enum AttribIndicesAttribIndices43,573
	ATTRIB_POS = 0,ATTRIB_POS45,594
	ATTRIB_NORMAL,ATTRIB_NORMAL46,611
	ATTRIB_COLOR,ATTRIB_COLOR47,627
	ATTRIB_WEIGHTS,ATTRIB_WEIGHTS48,642
	ATTRIB_INDICES,ATTRIB_INDICES49,659
	ATTRIB_TEXCOORDS0,ATTRIB_TEXCOORDS050,676
	ATTRIB_TEXCOORDS1,ATTRIB_TEXCOORDS151,696
	ATTRIB_TEXCOORDS2,ATTRIB_TEXCOORDS252,716
	ATTRIB_TEXCOORDS3,ATTRIB_TEXCOORDS353,736
	ATTRIB_TEXCOORDS4,ATTRIB_TEXCOORDS454,756
	ATTRIB_TEXCOORDS5,ATTRIB_TEXCOORDS555,776
	ATTRIB_TEXCOORDS6,ATTRIB_TEXCOORDS656,796
	ATTRIB_TEXCOORDS7,ATTRIB_TEXCOORDS757,816
struct InstanceDataInstanceData64,919
	uint32    numIndex;numIndex66,941
	uint32    minVert;	// not used for renderingminVert67,962
	int32     numVertices;	//numVertices68,1008
	Material *material;material69,1035
	bool32    vertexAlpha;vertexAlpha70,1056
	uint32    program;program71,1080
	uint32    offset;offset72,1100
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader75,1123
	uint32      serialNumber;serialNumber77,1176
	uint32      numMeshes;numMeshes78,1203
	uint16     *indexBuffer;indexBuffer79,1227
	uint32      primType;primType80,1253
	uint8      *vertexBuffer;vertexBuffer81,1276
	int32       numAttribs;numAttribs82,1303
	AttribDesc *attribDesc;attribDesc83,1328
	uint32      totalNumIndex;totalNumIndex84,1353
	uint32      totalNumVertex;totalNumVertex85,1381
	uint32      ibo;ibo87,1411
	uint32      vbo;		// or 2?vbo88,1429
	uint32      vao;vao90,1479
	InstanceData *inst;inst93,1505
struct Im3DVertexIm3DVertex102,1592
	V3d     position;position104,1612
	uint8   r, g, b, a;r105,1631
	uint8   r, g, b, a;g105,1631
	uint8   r, g, b, a;b105,1631
	uint8   r, g, b, a;a105,1631
	float32 u, v;u106,1652
	float32 u, v;v106,1652
	void setX(float32 x) { this->position.x = x; }setX108,1668
	void setY(float32 y) { this->position.y = y; }setY109,1716
	void setZ(float32 z) { this->position.z = z; }setZ110,1764
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a) {setColor111,1812
	void setU(float32 u) { this->u = u; }setU113,1921
	void setV(float32 v) { this->v = v; }setV114,1960
	float getX(void) { return this->position.x; }getX116,2000
	float getY(void) { return this->position.y; }getY117,2047
	float getZ(void) { return this->position.z; }getZ118,2094
	RGBA getColor(void) { return makeRGBA(this->r, this->g, this->b, this->a); }getColor119,2141
	float getU(void) { return this->u; }getU120,2219
	float getV(void) { return this->v; }getV121,2257
struct Im2DVertexIm2DVertex124,2299
	float32 x, y, z, w;x126,2319
	float32 x, y, z, w;y126,2319
	float32 x, y, z, w;z126,2319
	float32 x, y, z, w;w126,2319
	uint8   r, g, b, a;r127,2340
	uint8   r, g, b, a;g127,2340
	uint8   r, g, b, a;b127,2340
	uint8   r, g, b, a;a127,2340
	float32 u, v;u128,2361
	float32 u, v;v128,2361
	void setScreenX(float32 x) { this->x = x; }setScreenX130,2377
	void setScreenY(float32 y) { this->y = y; }setScreenY131,2422
	void setScreenZ(float32 z) { this->z = z; }setScreenZ132,2467
	void setCameraZ(float32 z) { this->w = z; }setCameraZ134,2593
	void setRecipCameraZ(float32 recipz) { this->w = 1.0f/recipz; }setRecipCameraZ135,2638
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a) {setColor136,2703
	void setU(float32 u, float recipz) { this->u = u; }setU138,2812
	void setV(float32 v, float recipz) { this->v = v; }setV139,2865
	float getScreenX(void) { return this->x; }getScreenX141,2919
	float getScreenY(void) { return this->y; }getScreenY142,2963
	float getScreenZ(void) { return this->z; }getScreenZ143,3007
	float getCameraZ(void) { return this->w; }getCameraZ144,3051
	float getRecipCameraZ(void) { return 1.0f/this->w; }getRecipCameraZ145,3095
	RGBA getColor(void) { return makeRGBA(this->r, this->g, this->b, this->a); }getColor146,3149
	float getU(void) { return this->u; }getU147,3227
	float getV(void) { return this->v; }getV148,3265
{__anonf61386e30103158,3490
	VSLIGHT_DIRECT	= 1,VSLIGHT_DIRECT160,3549
	VSLIGHT_POINT	= 2,VSLIGHT_POINT161,3570
	VSLIGHT_SPOT	= 4,VSLIGHT_SPOT162,3590
	VSLIGHT_MASK	= 7,	// all the aboveVSLIGHT_MASK163,3609
	VSLIGHT_AMBIENT = 8,VSLIGHT_AMBIENT165,3663
inline void setMaterial(uint32 flags, const RGBA &color, const SurfaceProperties &surfaceprops, setMaterial185,4169
class ObjPipeline : public rw::ObjPipelineObjPipeline204,4648
	void (*instanceCB)(Geometry *geo, InstanceDataHeader *header, bool32 reinstance);instanceCB210,4755
	void (*uninstanceCB)(Geometry *geo, InstanceDataHeader *header);uninstanceCB211,4838
	void (*renderCB)(Atomic *atomic, InstanceDataHeader *header);renderCB212,4904
struct Gl3RasterGl3Raster233,5723
	int32 internalFormat;internalFormat236,5772
	int32 type;type237,5795
	int32 format;format238,5808
	int32 bpp;	// bytes per pixelbpp239,5823
	uint32 texid;texid241,5873
	bool isCompressed;isCompressed243,5889
	bool hasAlpha;hasAlpha244,5909
	bool autogenMipmap;autogenMipmap245,5925
	int8 numLevels;numLevels246,5946
	uint8 filterMode;filterMode248,6000
	uint8 addressU;addressU249,6019
	uint8 addressV;addressV250,6036
	int32 maxAnisotropy;maxAnisotropy251,6053
	uint32 fbo;		// used for camera texture only!fbo253,6076
	Raster *fboMate;	// color or zbuffer raster mate of this onefboMate254,6123
	RasterLevels *backingStore;	// if we can't read back GPU memory but have tobackingStore255,6185
struct Gl3CapsGl3Caps258,6266
	int gles;gles260,6283
	int glversion;glversion261,6294
	bool dxtSupported;dxtSupported262,6310
	bool astcSupported;	// not used yetastcSupported263,6330
	float maxAnisotropy;maxAnisotropy264,6367
#define GETGL3RASTEREXT(GETGL3RASTEREXT280,6896

src/gl/gl3immed.cpp,1790
namespace rw {rw19,358
namespace gl3 {gl320,373
uint32 im2DVbo, im2DIbo;im2DVbo22,390
uint32 im2DVbo, im2DIbo;im2DIbo22,390
uint32 im2DVao;im2DVao24,437
Shader *im2dOverrideShader;im2dOverrideShader27,461
static int32 u_xform;u_xform29,490
#define STARTINDICES STARTINDICES31,513
#define STARTVERTICES STARTVERTICES32,540
static Shader *im2dShader;im2dShader34,569
static AttribDesc im2dattribDesc[3] = {im2dattribDesc35,596
static int primTypeMap[] = {primTypeMap44,924
openIm2D(void)openIm2D55,1076
closeIm2D(void)closeIm2D82,1858
static Im2DVertex tmpprimbuf[3];tmpprimbuf93,2049
im2DRenderLine(void *vertices, int32 numVertices, int32 vert1, int32 vert2)im2DRenderLine96,2088
im2DRenderTriangle(void *vertices, int32 numVertices, int32 vert1, int32 vert2, int32 vert3)im2DRenderTriangle105,2335
im2DSetXform(void)im2DSetXform115,2629
im2DRenderPrimitive(PrimitiveType primType, void *vertices, int32 numVertices)im2DRenderPrimitive128,2920
im2DRenderIndexedPrimitive(PrimitiveType primType,im2DRenderIndexedPrimitive156,3587
static Shader *im3dShader;im3dShader194,4536
static AttribDesc im3dattribDesc[3] = {im3dattribDesc195,4563
static uint32 im3DVbo, im3DIbo;im3DVbo203,4890
static uint32 im3DVbo, im3DIbo;im3DIbo203,4890
static uint32 im3DVao;im3DVao205,4944
static int32 num3DVertices;	// not actually needed herenum3DVertices207,4974
openIm3D(void)openIm3D210,5036
closeIm3D(void)closeIm3D235,5778
im3DTransform(void *vertices, int32 numVertices, Matrix *world, uint32 flags)im3DTransform247,5974
im3DRenderPrimitive(PrimitiveType primType)im3DRenderPrimitive274,6636
im3DRenderIndexedPrimitive(PrimitiveType primType, void *indices, int32 numIndices)im3DRenderIndexedPrimitive283,6811
im3DEnd(void)im3DEnd295,7208

src/gl/gl3shader.cpp,927
namespace rw {rw17,310
namespace gl3 {gl318,325
UniformRegistry uniformRegistry;uniformRegistry23,409
static char nameBuffer[(MAX_UNIFORMS + MAX_BLOCKS)*32];	// static because memory system isn't upnameBuffer24,442
static uint32 nameBufPtr;nameBufPtr25,560
shader_strdup(const char *name)shader_strdup28,600
registerUniform(const char *name)registerUniform39,805
findUniform(const char *name)findUniform54,1154
registerBlock(const char *name)registerBlock64,1335
findBlock(const char *name)findBlock77,1627
Shader *currentShader;currentShader86,1796
printShaderSource(const char **src)printShaderSource89,1832
compileshader(GLenum type, const char **src, GLuint *shader)compileshader111,2204
linkprogram(GLint vs, GLint fs, GLuint *program)linkprogram140,2873
Shader::create(const char **vsrc, const char **fsrc)create177,3934
Shader::use(void)use264,5965
Shader::destroy(void)destroy273,6079

src/gl/gl3skin.cpp,730
namespace rw {rw24,437
namespace gl3 {gl325,452
#define U(U29,487
static Shader *skinShader;skinShader31,536
static int32 u_boneMatrices;u_boneMatrices32,563
skinInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance)skinInstanceCB35,598
skinUninstanceCB(Geometry *geo, InstanceDataHeader *header)skinUninstanceCB209,4655
static float skinMatrices[64*16];skinMatrices214,4754
uploadSkinMatrices(Atomic *a)uploadSkinMatrices217,4794
skinRenderCB(Atomic *atomic, InstanceDataHeader *header)skinRenderCB256,5723
skinOpen(void *o, int32, int32)skinOpen297,6598
skinClose(void *o, int32, int32)skinClose312,6994
initSkin(void)initSkin324,7202
makeSkinPipeline(void)makeSkinPipeline333,7385

src/gl/rwgl3plg.h,47
namespace rw {rw1,0
namespace gl3 {gl32,15

src/gl/gl3pipe.cpp,796
namespace rw {rw18,317
namespace gl3 {gl319,332
freeInstanceData(Geometry *geometry)freeInstanceData26,429
destroyNativeData(void *object, int32, int32)destroyNativeData46,932
instanceMesh(rw::ObjPipeline *rwpipe, Geometry *geo)instanceMesh53,1064
instance(rw::ObjPipeline *rwpipe, Atomic *atomic)instance106,2762
uninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)uninstance135,3629
render(rw::ObjPipeline *rwpipe, Atomic *atomic)render141,3732
ObjPipeline::init(void)init153,4056
ObjPipeline::create(void)create165,4331
defaultInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance)defaultInstanceCB173,4456
defaultUninstanceCB(Geometry *geo, InstanceDataHeader *header)defaultUninstanceCB315,7904
makeDefaultPipeline(void)makeDefaultPipeline321,8019

src/gl/gl3matfx.cpp,910
namespace rw {rw24,437
namespace gl3 {gl325,452
#define U(U29,487
static Shader *envShader;envShader31,536
static int32 u_texMatrix;u_texMatrix32,562
static int32 u_fxparams;u_fxparams33,588
static int32 u_colorClamp;u_colorClamp34,613
matfxDefaultRender(InstanceDataHeader *header, InstanceData *inst, uint32 flags)matfxDefaultRender37,646
static Frame *lastEnvFrame;lastEnvFrame53,975
static RawMatrix normal2texcoord = {normal2texcoord55,1004
uploadEnvMatrix(Frame *frame)uploadEnvMatrix63,1169
matfxEnvRender(InstanceDataHeader *header, InstanceData *inst, uint32 flags, MatFX::Env *env)matfxEnvRender86,1716
matfxRenderCB(Atomic *atomic, InstanceDataHeader *header)matfxRenderCB126,2690
makeMatFXPipeline(void)makeMatFXPipeline166,3609
matfxOpen(void *o, int32, int32)matfxOpen178,3875
matfxClose(void *o, int32, int32)matfxClose192,4245
initMatFX(void)initMatFX204,4454

src/gl/gl3.cpp,221
namespace rw {rw20,341
namespace gl3 {gl321,356
driverOpen(void *o, int32, int32)driverOpen26,443
driverClose(void *o, int32, int32)driverClose44,1154
registerPlatformPlugins(void)registerPlatformPlugins50,1210

src/gl/gl3render.cpp,671
namespace rw {rw19,339
namespace gl3 {gl320,354
#define MAX_LIGHTS MAX_LIGHTS22,371
drawInst_simple(InstanceDataHeader *header, InstanceData *inst)drawInst_simple25,397
drawInst_GSemu(InstanceDataHeader *header, InstanceData *inst)drawInst_GSemu34,699
drawInst(InstanceDataHeader *header, InstanceData *inst)drawInst66,1708
setAttribPointers(AttribDesc *attribDescs, int32 numAttribs)setAttribPointers76,1888
disableAttribPointers(AttribDesc *attribDescs, int32 numAttribs)disableAttribPointers87,2205
lightingCB(Atomic *atomic)lightingCB95,2395
#define U(U119,3057
defaultRenderCB(Atomic *atomic, InstanceDataHeader *header)defaultRenderCB122,3111

src/gl/wdgl.cpp,2561
#define PLUGIN_ID PLUGIN_ID20,343
namespace rw {rw22,364
namespace wdgl {wdgl23,379
driverOpen(void *o, int32, int32)driverOpen26,410
driverClose(void *o, int32, int32)driverClose33,546
registerPlatformPlugins(void)registerPlatformPlugins39,602
uploadGeo(Geometry *geo)uploadGeo82,1531
setAttribPointers(InstanceDataHeader *inst)setAttribPointers107,2289
packattrib(uint8 *dst, float32 *src, AttribDesc *a, float32 scale=1.0f)packattrib125,2747
unpackattrib(float *dst, uint8 *src, AttribDesc *a, float32 scale=1.0f)unpackattrib179,3696
destroyNativeData(void *object, int32, int32)destroyNativeData233,4646
readNativeData(Stream *stream, int32, void *object, int32, int32)readNativeData250,5058
writeNativeData(Stream *stream, int32, void *object, int32, int32)writeNativeData270,5807
getSizeNativeData(void *object, int32, int32)getSizeNativeData285,6291
registerNativeDataPlugin(void)registerNativeDataPlugin296,6625
printPipeinfo(Atomic *a)printPipeinfo307,6962
instance(rw::ObjPipeline *rwpipe, Atomic *atomic)instance323,7393
uninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)uninstance450,10216
ObjPipeline::init(void)init523,11914
ObjPipeline::create(void)create534,12163
makeDefaultPipeline(void)makeDefaultPipeline542,12296
readNativeSkin(Stream *stream, int32, void *object, int32 offset)readNativeSkin551,12402
writeNativeSkin(Stream *stream, int32 len, void *object, int32 offset)writeNativeSkin574,12997
getSizeNativeSkin(void *object, int32 offset)getSizeNativeSkin585,13320
skinInstanceCB(Geometry *g, int32 i, uint32 offset)skinInstanceCB595,13520
skinUninstanceCB(Geometry *geo)skinUninstanceCB643,14526
skinOpen(void *o, int32, int32)skinOpen699,15729
skinClose(void *o, int32, int32)skinClose706,15850
initSkin(void)initSkin714,16015
makeSkinPipeline(void)makeSkinPipeline721,16145
matfxOpen(void *o, int32, int32)matfxOpen735,16409
matfxClose(void *o, int32, int32)matfxClose742,16533
initMatFX(void)initMatFX750,16701
makeMatFXPipeline(void)makeMatFXPipeline757,16835
int32 nativeRasterOffset;nativeRasterOffset767,16984
struct GlRaster {GlRaster770,17028
	GLuint id;id771,17046
createNativeRaster(void *object, int32 offset, int32)createNativeRaster775,17075
destroyNativeRaster(void *object, int32 offset, int32)destroyNativeRaster783,17240
copyNativeRaster(void *dst, void *, int32 offset, int32)copyNativeRaster790,17339
registerNativeRaster(void)registerNativeRaster798,17493
Texture::upload(void)upload808,17848
Texture::bind(int n)bind858,19216

src/gl/shaders/Makefile,501
all: header_vs.inc header_fs.inc im2d_gl.inc im3d_gl.inc default_vs_gl.inc simple_fs_gl.inc matfall1,0
header_vs.inc: header.vertheader_vs.inc3,118
header_fs.inc: header.fragheader_fs.inc8,250
im2d_gl.inc: im2d.vertim2d_gl.inc13,382
im3d_gl.inc: im3d.vertim3d_gl.inc18,504
default_vs_gl.inc: default.vertdefault_vs_gl.inc23,626
simple_fs_gl.inc: simple.fragsimple_fs_gl.inc28,769
matfx_gl.inc: matfx_env.frag matfx_env.vertmatfx_gl.inc33,907
skin_gl.inc: skin.vertskin_gl.inc41,1157

src/gl/rwgl3shader.h,485
namespace rw {rw3,18
namespace gl3 {gl34,33
enum {__anoncd518aba01037,77
	MAX_UNIFORMS = 40,MAX_UNIFORMS8,84
	MAX_BLOCKS = 20MAX_BLOCKS9,104
struct UniformRegistryUniformRegistry12,125
	int32 numUniforms;numUniforms14,150
	char *uniformNames[MAX_UNIFORMS];uniformNames15,170
	int32 numBlocks;numBlocks17,206
	char *blockNames[MAX_BLOCKS];blockNames18,224
struct ShaderShader28,453
	GLuint program;program30,469
	GLint *uniformLocations;uniformLocations32,546

src/gl/gl3raster.cpp,1543
#define PLUGIN_ID PLUGIN_ID19,340
namespace rw {rw21,369
namespace gl3 {gl322,384
int32 nativeRasterOffset;nativeRasterOffset24,401
getLevelSize(Raster *raster, int32 level)getLevelSize27,442
rasterCreateTexture(Raster *raster)rasterCreateTexture63,1054
rasterCreateCameraTexture(Raster *raster)rasterCreateCameraTexture142,3039
rasterCreateCamera(Raster *raster)rasterCreateCamera212,4874
rasterCreateZbuffer(Raster *raster)rasterCreateZbuffer236,5335
allocateDXT(Raster *raster, int32 dxt, int32 numLevels, bool32 hasAlpha)allocateDXT276,6298
rasterCreate(Raster *raster)rasterCreate391,9388
rasterLock(Raster *raster, int32 level, int32 lockMode)rasterLock440,10352
rasterUnlock(Raster *raster, int32 level)rasterUnlock531,12936
rasterNumLevels(Raster *raster)rasterNumLevels582,14314
imageFindRasterFormat(Image *img, int32 type,imageFindRasterFormat589,14446
rasterFromImage(Raster *raster, Image *image)rasterFromImage641,15309
rasterToImage(Raster *raster)rasterToImage736,17427
createNativeRaster(void *object, int32 offset, int32)createNativeRaster813,18939
destroyNativeRaster(void *object, int32 offset, int32)destroyNativeRaster824,19165
copyNativeRaster(void *dst, void *, int32 offset, int32)copyNativeRaster881,20532
readNativeTexture(Stream *stream)readNativeTexture892,20741
writeNativeTexture(Texture *tex, Stream *stream)writeNativeTexture960,22369
getSizeNativeTexture(Texture *tex)getSizeNativeTexture1023,23823
void registerNativeRaster(void)registerNativeRaster1034,24032

src/gl/gl3device.cpp,10273
#define PLUGIN_ID PLUGIN_ID24,430
namespace rw {rw26,451
namespace gl3 {gl327,466
GlGlobals glGlobals;glGlobals29,483
Gl3Caps gl3Caps;gl3Caps31,505
bool32 needToReadBackTextures;needToReadBackTextures33,548
int32   alphaFunc;alphaFunc35,580
float32 alphaRef;alphaRef36,599
struct UniformStateUniformState38,618
	float32 alphaRefLow;alphaRefLow40,640
	float32 alphaRefHigh;alphaRefHigh41,662
	int32   pad[2];pad42,685
	float32 fogStart;fogStart44,703
	float32 fogEnd;fogEnd45,722
	float32 fogRange;fogRange46,739
	float32 fogDisable;fogDisable47,758
	RGBAf   fogColor;fogColor49,780
struct UniformSceneUniformScene52,803
	float32 proj[16];proj54,825
	float32 view[16];view55,844
#define MAX_LIGHTS MAX_LIGHTS58,867
struct UniformObjectUniformObject60,889
	RawMatrix    world;world62,912
	RGBAf        ambLight;ambLight63,933
	struct {__anone9499c05010864,957
		float type;type65,967
		float radius;radius66,981
		float minusCosAngle;minusCosAngle67,997
		float hardSpot;hardSpot68,1020
	} lightParams[MAX_LIGHTS];lightParams69,1038
	V4d lightPosition[MAX_LIGHTS];lightPosition70,1066
	V4d lightDirection[MAX_LIGHTS];lightDirection71,1098
	RGBAf lightColor[MAX_LIGHTS];lightColor72,1131
struct GLShaderStateGLShaderState75,1166
	RGBA matColor;matColor77,1189
	SurfaceProperties surfProps;surfProps78,1205
	float extraSurfProp;extraSurfProp79,1235
const char *shaderDecl120 =shaderDecl12082,1261
const char *shaderDecl330 =shaderDecl33090,1482
const char *shaderDecl100es =shaderDecl100es96,1663
const char *shaderDecl310es =shaderDecl310es106,1938
const char *shaderDecl;shaderDecl115,2177
static GLuint vao;vao120,2275
static GLuint ubo_state, ubo_scene, ubo_object;ubo_state122,2316
static GLuint ubo_state, ubo_scene, ubo_object;ubo_scene122,2316
static GLuint ubo_state, ubo_scene, ubo_object;ubo_object122,2316
static GLuint whitetex;whitetex124,2371
static UniformState uniformState;uniformState125,2395
static UniformScene uniformScene;uniformScene126,2429
static UniformObject uniformObject;uniformObject127,2463
static GLShaderState shaderState;shaderState128,2499
int32 u_alphaRef;u_alphaRef132,2566
int32 u_fogData;u_fogData133,2584
int32 u_fogColor;u_fogColor138,2681
int32 u_proj;u_proj141,2709
int32 u_view;u_view142,2723
int32 u_world;u_world145,2748
int32 u_ambLight;u_ambLight146,2763
int32 u_lightParams;u_lightParams147,2781
int32 u_lightPosition;u_lightPosition148,2802
int32 u_lightDirection;u_lightDirection149,2825
int32 u_lightColor;u_lightColor150,2849
int32 u_matColor;u_matColor153,2877
int32 u_surfProps;u_surfProps154,2895
Shader *defaultShader;defaultShader156,2915
static bool32 stateDirty = 1;stateDirty158,2939
static bool32 sceneDirty = 1;sceneDirty159,2969
static bool32 objectDirty = 1;objectDirty160,2999
struct RwRasterStateCache {RwRasterStateCache162,3031
	Raster *raster;raster163,3059
	Texture::Addressing addressingU;addressingU164,3076
	Texture::Addressing addressingV;addressingV165,3110
	Texture::FilterMode filter;filter166,3144
#define MAXNUMSTAGES MAXNUMSTAGES169,3177
struct RwStateCache {RwStateCache172,3228
	bool32 vertexAlpha;vertexAlpha173,3250
	uint32 alphaTestEnable;alphaTestEnable174,3271
	uint32 alphaFunc;alphaFunc175,3296
	bool32 textureAlpha;textureAlpha176,3315
	bool32 blendEnable;blendEnable177,3337
	uint32 srcblend, destblend;srcblend178,3358
	uint32 srcblend, destblend;destblend178,3358
	uint32 zwrite;zwrite179,3387
	uint32 ztest;ztest180,3403
	uint32 cullmode;cullmode181,3418
	uint32 stencilenable;stencilenable182,3436
	uint32 stencilpass;stencilpass183,3459
	uint32 stencilfail;stencilfail184,3480
	uint32 stencilzfail;stencilzfail185,3501
	uint32 stencilfunc;stencilfunc186,3523
	uint32 stencilref;stencilref187,3544
	uint32 stencilmask;stencilmask188,3564
	uint32 stencilwritemask;stencilwritemask189,3585
	uint32 fogEnable;fogEnable190,3611
	float32 fogStart;fogStart191,3630
	float32 fogEnd;fogEnd192,3649
	bool32 gsalpha;gsalpha195,3691
	uint32 gsalpharef;gsalpharef196,3708
	RwRasterStateCache texstage[MAXNUMSTAGES];texstage198,3729
static RwStateCache rwStateCache;rwStateCache200,3776
{__anone9499c050203203,3816
	RWGL_BLEND,RWGL_BLEND205,3839
	RWGL_SRCBLEND,RWGL_SRCBLEND206,3852
	RWGL_DESTBLEND,RWGL_DESTBLEND207,3868
	RWGL_DEPTHTEST,RWGL_DEPTHTEST208,3885
	RWGL_DEPTHFUNC,RWGL_DEPTHFUNC209,3902
	RWGL_DEPTHMASK,RWGL_DEPTHMASK210,3919
	RWGL_CULL,RWGL_CULL211,3936
	RWGL_CULLFACE,RWGL_CULLFACE212,3948
	RWGL_STENCIL,RWGL_STENCIL213,3964
	RWGL_STENCILFUNC,RWGL_STENCILFUNC214,3979
	RWGL_STENCILFAIL,RWGL_STENCILFAIL215,3998
	RWGL_STENCILZFAIL,RWGL_STENCILZFAIL216,4017
	RWGL_STENCILPASS,RWGL_STENCILPASS217,4037
	RWGL_STENCILREF,RWGL_STENCILREF218,4056
	RWGL_STENCILMASK,RWGL_STENCILMASK219,4074
	RWGL_STENCILWRITEMASK,RWGL_STENCILWRITEMASK220,4093
	RWGL_ALPHAFUNC,RWGL_ALPHAFUNC223,4131
	RWGL_ALPHAREF,RWGL_ALPHAREF224,4148
	RWGL_FOG,RWGL_FOG225,4164
	RWGL_FOGSTART,RWGL_FOGSTART226,4175
	RWGL_FOGEND,RWGL_FOGEND227,4191
	RWGL_FOGCOLOR,RWGL_FOGCOLOR228,4205
	RWGL_NUM_STATESRWGL_NUM_STATES230,4222
static bool uniformStateDirty[RWGL_NUM_STATES];uniformStateDirty232,4242
struct GlState {GlState234,4291
	bool32 blendEnable;blendEnable235,4308
	uint32 srcblend, destblend;srcblend236,4329
	uint32 srcblend, destblend;destblend236,4329
	bool32 depthTest;depthTest238,4359
	uint32 depthFunc;depthFunc239,4378
	uint32 depthMask;depthMask241,4398
	bool32 cullEnable;cullEnable243,4418
	uint32 cullFace;cullFace244,4438
	bool32 stencilEnable;stencilEnable246,4457
	uint32 stencilFunc;stencilFunc248,4498
	uint32 stencilRef;stencilRef249,4519
	uint32 stencilMask;stencilMask250,4539
	uint32 stencilPass;stencilPass252,4576
	uint32 stencilFail;stencilFail253,4597
	uint32 stencilZFail;stencilZFail254,4618
	uint32 stencilWriteMask;stencilWriteMask256,4658
static GlState curGlState, oldGlState;curGlState258,4687
static GlState curGlState, oldGlState;oldGlState258,4687
static int32 activeTexture;activeTexture260,4727
static uint32 boundTexture[MAXNUMSTAGES];boundTexture261,4755
static uint32 currentFramebuffer;currentFramebuffer263,4798
static uint32 blendMap[] = {blendMap265,4833
static uint32 stencilOpMap[] = {stencilOpMap280,5099
static uint32 stencilFuncMap[] = {stencilFuncMap292,5260
static float maxAnisotropy;maxAnisotropy304,5424
setGlRenderState(uint32 state, uint32 value)setGlRenderState311,5484
flushGlRenderState(void)flushGlRenderState334,6532
setAlphaBlend(bool32 enable)setAlphaBlend399,8923
getAlphaBlend(void)getAlphaBlend408,9085
setDepthTest(bool32 enable)setDepthTest414,9156
setDepthWrite(bool32 enable)setDepthWrite430,9580
setAlphaTest(bool32 enable)setAlphaTest445,9975
setAlphaTestFunction(uint32 function)setAlphaTestFunction460,10339
setVertexAlpha(bool32 enable)setVertexAlpha475,10705
setActiveTexture(int32 n)setActiveTexture487,10922
bindTexture(uint32 texid)bindTexture496,11043
bindFramebuffer(uint32 fbo)bindFramebuffer505,11213
static GLint filterConvMap_NoMIP[] = {filterConvMap_NoMIP513,11351
static GLint filterConvMap_MIP[] = {filterConvMap_MIP518,11473
static GLint addressConvMap[] = {addressConvMap524,11652
setFilterMode(uint32 stage, int32 filter, int32 maxAniso = 1)setFilterMode530,11775
setAddressU(uint32 stage, int32 addressing)setAddressU558,12905
setAddressV(uint32 stage, int32 addressing)setAddressV575,13470
setRasterStageOnly(uint32 stage, Raster *raster)setRasterStageOnly592,14064
setRasterStage(uint32 stage, Raster *raster)setRasterStage626,14993
setTexture(int32 stage, Texture *tex)setTexture676,16615
setRenderState(int32 state, void *pvalue)setRenderState689,16941
getRenderState(int32 state)getRenderState828,20322
resetRenderState(void)resetRenderState921,22268
setWorldMatrix(Matrix *mat)setWorldMatrix985,24221
setLights(WorldLights *lightData)setLights992,24318
setProjectionMatrix(float32 *mat)setProjectionMatrix1059,26062
setViewMatrix(float32 *mat)setViewMatrix1066,26161
Shader *lastShaderUploaded;lastShaderUploaded1072,26249
#define U(U1074,26278
setMaterial(const RGBA &color, const SurfaceProperties &surfaceprops, float extraSurfProp)setMaterial1077,26332
flushCache(void)flushCache1103,27173
setFrameBuffer(Camera *cam)setFrameBuffer1225,30915
beginUpdate(Camera *cam)beginUpdate1270,32289
endUpdate(Camera *cam)endUpdate1381,34890
clearCamera(Camera *cam, RGBA *col, uint32 mode)clearCamera1386,34930
showRaster(Raster *raster, uint32 flags)showRaster1408,35406
rasterRenderFast(Raster *raster, int32 x, int32 y)rasterRenderFast1427,35787
addVideoMode(int displayIndex, int modeIndex)addVideoMode1455,36493
makeVideoModeList(int displayIndex)makeVideoModeList1480,37187
openSDL2(EngineOpenParams *openparams)openSDL21503,37829
closeSDL2(void)closeSDL21524,38246
static struct {__anone9499c0503081530,38314
	int gl;gl1531,38330
	int major, minor;major1532,38339
	int major, minor;minor1532,38339
} profiles[] = {profiles1533,38358
startSDL2(void)startSDL21542,38560
stopSDL2(void)stopSDL21607,40470
addVideoMode(const GLFWvidmode *mode)addVideoMode1616,40601
makeVideoModeList(void)makeVideoModeList1640,41352
openGLFW(EngineOpenParams *openparams)openGLFW1666,42057
closeGLFW(void)closeGLFW1689,42523
glfwerr(int error, const char *desc)glfwerr1696,42585
static struct {__anone9499c0504081701,42671
	int gl;gl1702,42687
	int major, minor;major1703,42696
	int major, minor;minor1703,42696
} profiles[] = {profiles1704,42715
startGLFW(void)startGLFW1713,42879
stopGLFW(void)stopGLFW1774,44602
initOpenGL(void)initOpenGL1782,44689
termOpenGL(void)termOpenGL1894,48327
finalizeOpenGL(void)finalizeOpenGL1902,48399
deviceSystemSDL2(DeviceReq req, void *arg, int32 n)deviceSystemSDL21909,48465
deviceSystemGLFW(DeviceReq req, void *arg, int32 n)deviceSystemGLFW1974,49799
Device renderdevice = {renderdevice2060,51734
namespace rw {rw2090,52282
namespace gl3 { gl32091,52297
Gl3Caps gl3Caps;gl3Caps2092,52314
bool32 needToReadBackTextures;needToReadBackTextures2093,52331

src/gl/rwwdgl.h,814
namespace rw {rw2,1
namespace wdgl {wdgl3,16
struct AttribDescAttribDesc9,148
	uint32 index;index13,311
	int32 type;type15,368
	bool32 normalized;normalized16,381
	int32 size;size17,401
	uint32 stride;stride18,414
	uint32 offset;offset19,430
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader22,450
	int32 numAttribs;numAttribs24,503
	AttribDesc *attribs;attribs25,522
	uint32 dataSize;dataSize26,544
	uint8 *data;data27,562
	uint32 vbo;vbo30,602
	uint32 ibo;ibo31,615
class ObjPipeline : public rw::ObjPipelineObjPipeline49,1214
	uint32 numCustomAttribs;numCustomAttribs55,1321
	uint32 (*instanceCB)(Geometry *g, int32 i, uint32 offset);instanceCB56,1347
	void (*uninstanceCB)(Geometry *g);uninstanceCB57,1407
struct Texture : rw::TextureTexture78,1861

src/rwuserdata.h,1346
namespace rw {rw1,0
enum UserDataTypeUserDataType3,16
	USERDATANA = 0,USERDATANA5,36
	USERDATAINT = 1,USERDATAINT6,53
	USERDATAFLOAT = 2,USERDATAFLOAT7,71
	USERDATASTRING = 3USERDATASTRING8,91
struct UserDataArrayUserDataArray11,115
	char *name;name13,138
	uint32 datatype;datatype14,151
	int32 numElements;numElements15,169
	void *data;data16,189
	int32 getInt(int32 n) { return ((int32*)this->data)[n]; }getInt18,203
	float32 getFloat(int32 n) { return ((float32*)this->data)[n]; }getFloat19,262
	char *getString(int32 n) { return ((char**)this->data)[n]; }getString20,327
	void setInt(int32 n, int32 i) { ((int32*)this->data)[n] = i; }setInt21,389
	void setFloat(int32 n, float32 f) { ((float32*)this->data)[n] = f; }setFloat22,453
struct UserDataExtensionUserDataExtension62,2350
	int32 numArrays;numArrays64,2377
	UserDataArray *arrays;arrays65,2395
	int32 getCount(void) { return numArrays; }getCount69,2508
	UserDataArray *get(int32 n) { return n >= numArrays ? nil : &arrays[n]; }get70,2552
struct UserDataGlobalsUserDataGlobals81,2945
	int32 geometryOffset;geometryOffset83,2970
	int32 frameOffset;frameOffset84,2993
	int32 cameraOffset;cameraOffset85,3013
	int32 lightOffset;lightOffset86,3034
	int32 materialOffset;materialOffset87,3054
	int32 textureOffset;textureOffset88,3077

src/rwrender.h,2825
namespace rw {rw1,0
enum RenderStateRenderState5,34
	TEXTURERASTER,TEXTURERASTER7,53
	TEXTUREADDRESS,TEXTUREADDRESS8,69
	TEXTUREADDRESSU,TEXTUREADDRESSU9,86
	TEXTUREADDRESSV,TEXTUREADDRESSV10,104
	TEXTUREFILTER,TEXTUREFILTER11,122
	VERTEXALPHA,VERTEXALPHA12,138
	SRCBLEND,SRCBLEND13,152
	DESTBLEND,DESTBLEND14,163
	ZTESTENABLE,ZTESTENABLE15,175
	ZWRITEENABLE,ZWRITEENABLE16,189
	FOGENABLE,FOGENABLE17,204
	FOGCOLOR,FOGCOLOR18,216
	CULLMODE,CULLMODE19,227
	STENCILENABLE,STENCILENABLE24,289
	STENCILFAIL,STENCILFAIL25,305
	STENCILZFAIL,STENCILZFAIL26,319
	STENCILPASS,STENCILPASS27,334
	STENCILFUNCTION,STENCILFUNCTION28,348
	STENCILFUNCTIONREF,STENCILFUNCTIONREF29,366
	STENCILFUNCTIONMASK,STENCILFUNCTIONMASK30,387
	STENCILFUNCTIONWRITEMASK,STENCILFUNCTIONWRITEMASK31,409
	ALPHATESTFUNC,ALPHATESTFUNC34,470
	ALPHATESTREF,ALPHATESTREF35,486
	GSALPHATEST,GSALPHATEST39,596
	GSALPHATESTREFGSALPHATESTREF40,610
enum AlphaTestFuncAlphaTestFunc43,630
	ALPHAALWAYS,ALPHAALWAYS45,651
	ALPHAGREATEREQUAL,ALPHAGREATEREQUAL46,665
	ALPHALESSALPHALESS47,685
enum StencilOpStencilOp50,700
	STENCILKEEP = 1,STENCILKEEP52,717
	STENCILZERO,STENCILZERO53,735
	STENCILREPLACE,STENCILREPLACE54,749
	STENCILINCSAT,STENCILINCSAT55,766
	STENCILDECSAT,STENCILDECSAT56,782
	STENCILINVERT,STENCILINVERT57,798
	STENCILINC,STENCILINC58,814
	STENCILDECSTENCILDEC59,827
enum StencilFuncStencilFunc62,843
	STENCILNEVER = 1,STENCILNEVER64,862
	STENCILLESS,STENCILLESS65,881
	STENCILEQUAL,STENCILEQUAL66,895
	STENCILLESSEQUAL,STENCILLESSEQUAL67,910
	STENCILGREATER,STENCILGREATER68,929
	STENCILNOTEQUAL,STENCILNOTEQUAL69,946
	STENCILGREATEREQUAL,STENCILGREATEREQUAL70,964
	STENCILALWAYSSTENCILALWAYS71,986
enum CullModeCullMode74,1005
	CULLNONE = 1,CULLNONE76,1021
	CULLBACK,CULLBACK77,1036
	CULLFRONTCULLFRONT78,1047
enum BlendFunctionBlendFunction81,1062
	BLENDZERO = 1,BLENDZERO83,1083
	BLENDONE,BLENDONE84,1099
	BLENDSRCCOLOR,BLENDSRCCOLOR85,1110
	BLENDINVSRCCOLOR,BLENDINVSRCCOLOR86,1126
	BLENDSRCALPHA,BLENDSRCALPHA87,1145
	BLENDINVSRCALPHA,BLENDINVSRCALPHA88,1161
	BLENDDESTALPHA,BLENDDESTALPHA89,1180
	BLENDINVDESTALPHA,BLENDINVDESTALPHA90,1197
	BLENDDESTCOLOR,BLENDDESTCOLOR91,1217
	BLENDINVDESTCOLOR,BLENDINVDESTCOLOR92,1234
	BLENDSRCALPHASATBLENDSRCALPHASAT93,1254
namespace im2d {im2d104,1485
namespace im3d {im3d117,1901
enum TransformFlagsTransformFlags119,1919
	VERTEXUV      = 1,	// has tex CoordsVERTEXUV121,1941
	ALLOPAQUE     = 2,	// no vertex alphaALLOPAQUE122,1979
	NOCLIP        = 4,	// don't frustum clipNOCLIP123,2018
	VERTEXXYZ     = 8,	// has positionVERTEXXYZ124,2060
	VERTEXRGBA    = 16,	// has colorVERTEXRGBA125,2096
	EVERYTHING = VERTEXUV|VERTEXXYZ|VERTEXRGBAEVERYTHING126,2130

src/rwobjects.h,19030
namespace rw {rw3,21
struct ObjectObject5,37
	uint8 type;type7,53
	uint8 subType;subType8,66
	uint8 flags;flags9,82
	uint8 privateFlags;privateFlags10,96
	void *parent;parent11,117
	void init(uint8 type, uint8 subType){init13,133
	void copy(Object *o){copy20,290
struct FrameFrame29,462
	typedef Frame *(*Callback)(Frame *f, void *data);Callback32,489
	enum { ID = 0 };__anon0d15db25010333,540
	enum { ID = 0 };ID33,540
	enum {		// private flags__anon0d15db25020334,558
		HIERARCHYSYNCLTM = 0x01,	// LTM not synchedHIERARCHYSYNCLTM36,624
		HIERARCHYSYNCOBJ = 0x02,	// attached objects not synchedHIERARCHYSYNCOBJ37,670
		HIERARCHYSYNC    = HIERARCHYSYNCLTM  | HIERARCHYSYNCOBJ,HIERARCHYSYNC38,729
		SUBTREESYNCLTM   = 0x04,SUBTREESYNCLTM40,819
		SUBTREESYNCOBJ   = 0x08,SUBTREESYNCOBJ41,846
		SUBTREESYNC      = SUBTREESYNCLTM | SUBTREESYNCOBJ,SUBTREESYNC42,873
		SYNCLTM          = HIERARCHYSYNCLTM | SUBTREESYNCLTM,SYNCLTM43,927
		SYNCOBJ          = HIERARCHYSYNCOBJ | SUBTREESYNCOBJSYNCOBJ44,983
	Object object;object48,1062
	LLLink inDirtyList;inDirtyList49,1078
	LinkList objectList;objectList50,1099
	Matrix matrix;matrix51,1121
	Matrix ltm;ltm52,1137
	Frame *child;child54,1151
	Frame *next;next55,1166
	Frame *root;root56,1180
	static int32 numAllocated;numAllocated58,1195
	Frame *getParent(void) const {getParent67,1457
	bool32 dirty(void) const {dirty70,1549
struct FrameList_FrameList_91,2110
	int32 numFrames;numFrames93,2130
	Frame **frames;frames94,2148
struct ObjectWithFrameObjectWithFrame102,2338
	typedef void (*Sync)(ObjectWithFrame*);Sync104,2363
	Object object;object106,2405
	LLLink inFrame;inFrame107,2421
	Sync syncCB;syncCB108,2438
	void setFrame(Frame *f){setFrame110,2453
	void sync(void){ this->syncCB(this); }sync119,2636
	static ObjectWithFrame *fromFrame(LLLink *lnk){fromFrame120,2676
struct ImageImage125,2787
	int32 flags;flags127,2802
	int32 width, height;width128,2816
	int32 width, height;height128,2816
	int32 depth;depth129,2838
	int32 bpp;	// bytes per pixelbpp130,2852
	int32 stride;stride131,2883
	uint8 *pixels;pixels132,2898
	uint8 *palette;palette133,2914
	static int32 numAllocated;numAllocated135,2932
	typedef Image *(*fileRead)(const char *afilename);fileRead163,3769
	typedef void (*fileWrite)(Image *image, const char *filename);fileWrite164,3821
enum { QUANTDEPTH = 8 };__anon0d15db250303179,4301
enum { QUANTDEPTH = 8 };QUANTDEPTH179,4301
struct ColorQuantColorQuant181,4327
	struct Node {Node183,4347
		uint32 r, g, b, a;r184,4362
		uint32 r, g, b, a;g184,4362
		uint32 r, g, b, a;b184,4362
		uint32 r, g, b, a;a184,4362
		int32 numPixels;numPixels185,4383
		Node *parent;parent186,4402
		Node *children[16];children187,4418
		LLLink link;link188,4440
		bool isLeaf(void) { for(int32 i = 0; i < 16; i++) if(this->children[i]) return false; return tisLeaf192,4507
	Node *root;root195,4615
	LinkList leaves;leaves196,4628
struct RasterLevelsRasterLevels212,5104
	int32 numlevels;numlevels214,5126
	uint32 format;format215,5144
	struct Level {Level216,5160
		int32 width, height, size;width217,5176
		int32 width, height, size;height217,5176
		int32 width, height, size;size217,5176
		uint8 *data;data218,5205
	} levels[1];	// 0 is illegal :/levels219,5220
struct RasterRaster222,5257
	enum { FLIPWAITVSYNCH = 1 };__anon0d15db250403224,5273
	enum { FLIPWAITVSYNCH = 1 };FLIPWAITVSYNCH224,5273
	int32 platform;platform227,5316
	int32 type;type230,5354
	int32 flags;flags231,5367
	int32 privateFlags;privateFlags232,5381
	int32 format;format233,5402
	int32 width, height, depth;width234,5417
	int32 width, height, depth;height234,5417
	int32 width, height, depth;depth234,5417
	int32 stride;stride235,5446
	uint8 *pixels;pixels236,5461
	uint8 *palette;palette237,5477
	uint8 *originalPixels;originalPixels239,5526
	int32 originalWidth;originalWidth240,5550
	int32 originalHeight;originalHeight241,5572
	int32 originalStride;originalStride242,5595
	Raster *parent;parent244,5632
	int32 offsetX, offsetY;offsetX245,5649
	int32 offsetX, offsetY;offsetY245,5649
	static int32 numAllocated;numAllocated247,5675
	enum Format {Format278,6753
		DEFAULT    = 0,DEFAULT279,6768
		C1555      = 0x0100,C1555280,6786
		C565       = 0x0200,C565281,6809
		C4444      = 0x0300,C4444282,6832
		LUM8       = 0x0400,LUM8283,6855
		C8888      = 0x0500,C8888284,6878
		C888       = 0x0600,C888285,6901
		D16        = 0x0700,D16286,6924
		D24        = 0x0800,D24287,6947
		D32        = 0x0900,D32288,6970
		C555       = 0x0A00,C555289,6993
		AUTOMIPMAP = 0x1000,AUTOMIPMAP290,7016
		PAL8       = 0x2000,PAL8291,7039
		PAL4       = 0x4000,PAL4292,7062
		MIPMAP     = 0x8000MIPMAP293,7085
	enum Type {Type295,7111
		NORMAL        = 0x00,NORMAL296,7124
		ZBUFFER       = 0x01,ZBUFFER297,7148
		CAMERA        = 0x02,CAMERA298,7172
		TEXTURE       = 0x04,TEXTURE299,7196
		CAMERATEXTURE = 0x05,CAMERATEXTURE300,7220
		DONTALLOCATE  = 0x80DONTALLOCATE301,7244
	enum LockMode {LockMode303,7271
		LOCKWRITE	= 1,LOCKWRITE304,7288
		LOCKREAD	= 2,LOCKREAD305,7305
		LOCKNOFETCH	= 4,	// don't fetch pixel dataLOCKNOFETCH306,7321
		LOCKRAW		= 8,LOCKRAW307,7366
	{__anon0d15db250503311,7393
		PRIVATELOCK_READ		= 0x02,PRIVATELOCK_READ313,7409
		PRIVATELOCK_WRITE		= 0x04,PRIVATELOCK_WRITE314,7437
		PRIVATELOCK_READ_PALETTE	= 0x08,PRIVATELOCK_READ_PALETTE315,7466
		PRIVATELOCK_WRITE_PALETTE	= 0x10,PRIVATELOCK_WRITE_PALETTE316,7501
inline void conv_8_from_8(uint8 *out, uint8 *in) { *out = *in; }conv_8_from_8334,8327
inline void conv_RGBA8888_from_BGRA8888(uint8 *out, uint8 *in) { conv_BGRA8888_from_RGBA8888(outconv_RGBA8888_from_BGRA8888336,8461
inline void conv_RGB888_from_BGR888(uint8 *out, uint8 *in) { conv_BGR888_from_RGB888(out, in); }conv_RGB888_from_BGR888337,8566
inline void conv_ARGB1555_from_ABGR1555(uint8 *out, uint8 *in) { conv_ABGR1555_from_ARGB1555(outconv_ARGB1555_from_ABGR1555338,8663
#define IGNORERASTERIMP IGNORERASTERIMP349,9334
struct TextureTexture353,9384
	enum FilterMode {FilterMode355,9401
		NEAREST = 1,NEAREST356,9420
		LINEAR,LINEAR357,9435
		MIPNEAREST,	// one mipmapMIPNEAREST358,9445
		MIPLINEAR,MIPLINEAR359,9473
		LINEARMIPNEAREST,	// mipmap interpolatedLINEARMIPNEAREST360,9486
		LINEARMIPLINEARLINEARMIPLINEAR361,9529
	enum Addressing {Addressing363,9551
		WRAP = 1,WRAP364,9570
		MIRROR,MIRROR365,9582
		CLAMP,CLAMP366,9592
		BORDERBORDER367,9601
	Raster *raster;raster371,9627
	TexDictionary *dict;dict372,9644
	LLLink inDict;inDict373,9666
	char name[32];name374,9682
	char mask[32];mask375,9698
	uint32 filterAddressing; // VVVVUUUU FFFFFFFFfilterAddressing376,9714
	int32 refCount;refCount377,9761
	LLLink inGlobalList;	// actually not in RWinGlobalList379,9779
	static int32 numAllocated;numAllocated381,9824
	void addRef(void) { this->refCount++; }addRef384,9894
	static Texture *fromDict(LLLink *lnk){fromDict386,9956
	FilterMode getFilter(void) { return (FilterMode)(filterAddressing & 0xFF); }getFilter388,10044
	void setFilter(FilterMode f) { filterAddressing = (filterAddressing & ~0xFF) | f; }setFilter389,10122
	Addressing getAddressU(void) { return (Addressing)((filterAddressing >> 8) & 0xF); }getAddressU390,10207
	Addressing getAddressV(void) { return (Addressing)((filterAddressing >> 12) & 0xF); }getAddressV391,10293
	void setAddressU(Addressing u) { filterAddressing = (filterAddressing & ~0xF00) | u<<8; }setAddressU392,10380
	void setAddressV(Addressing v) { filterAddressing = (filterAddressing & ~0xF000) | v<<12; }setAddressV393,10471
	static Texture *(*findCB)(const char *name);findCB402,10860
	static Texture *(*readCB)(const char *name, const char *mask);readCB403,10906
#define GETANISOTROPYEXT(GETANISOTROPYEXT420,11463
struct SurfacePropertiesSurfaceProperties424,11624
	float32 ambient;ambient426,11651
	float32 specular;specular427,11669
	float32 diffuse;diffuse428,11688
struct MaterialMaterial431,11710
	Texture *texture;texture434,11740
	RGBA color;color435,11759
	SurfaceProperties surfaceProps;surfaceProps436,11772
	Pipeline *pipeline;pipeline437,11805
	int32 refCount;refCount438,11826
	static int32 numAllocated;numAllocated440,11844
	void addRef(void) { this->refCount++; }addRef443,11905
struct MeshMesh454,12179
	uint16 *indices;indices456,12193
	uint32 numIndices;numIndices457,12211
	Material *material;material458,12231
struct MeshHeaderMeshHeader461,12256
	enum {__anon0d15db250603463,12276
		TRISTRIP = 1TRISTRIP464,12284
	uint32 flags;flags466,12303
	uint16 numMeshes;numMeshes467,12318
	uint16 serialNum;serialNum468,12337
	uint32 totalIndices;totalIndices469,12356
	uint32 pad;	// needed for alignment of Meshespad470,12378
	Mesh *getMeshes(void) { return (Mesh*)(this+1); }getMeshes473,12452
struct MorphTargetMorphTarget480,12584
	Geometry *parent;parent482,12605
	Sphere boundingSphere;boundingSphere483,12624
	V3d *vertices;vertices484,12648
	V3d *normals;normals485,12664
struct InstanceDataHeaderInstanceDataHeader490,12729
	uint32 platform;platform492,12757
struct TriangleTriangle495,12779
	uint16 v[3];v497,12797
	uint16 matId;matId498,12811
struct MaterialListMaterialList501,12830
	Material **materials;materials503,12852
	int32 numMaterials;numMaterials504,12875
	int32 space;space505,12896
struct GeometryGeometry516,13161
	enum { ID = 8 };__anon0d15db250703519,13191
	enum { ID = 8 };ID519,13191
	Object object;object520,13209
	uint32 flags;flags521,13225
	uint16 lockedSinceInst;lockedSinceInst522,13240
	int32 numTriangles;numTriangles523,13265
	int32 numVertices;numVertices524,13286
	int32 numMorphTargets;numMorphTargets525,13306
	int32 numTexCoordSets;numTexCoordSets526,13330
	Triangle *triangles;triangles528,13355
	RGBA *colors;colors529,13377
	TexCoords *texCoords[8];texCoords530,13392
	MorphTarget *morphTargets;morphTargets532,13419
	MaterialList matList;matList533,13447
	MeshHeader *meshHeader;meshHeader535,13471
	InstanceDataHeader *instData;instData536,13496
	int32 refCount;refCount538,13528
	static int32 numAllocated;numAllocated540,13546
	void addRef(void) { this->refCount++; }addRef543,13646
	enum FlagsFlags561,14278
		TRISTRIP  = 0x01,TRISTRIP563,14293
		POSITIONS = 0x02,POSITIONS564,14313
		TEXTURED  = 0x04,TEXTURED565,14333
		PRELIT    = 0x08,PRELIT566,14353
		NORMALS   = 0x10,NORMALS567,14373
		LIGHT     = 0x20,LIGHT568,14393
		MODULATE  = 0x40,MODULATE569,14413
		TEXTURED2 = 0x80,TEXTURED2570,14433
		NATIVE         = 0x01000000,NATIVE575,14681
		NATIVEINSTANCE = 0x02000000NATIVEINSTANCE580,14906
	enum LockFlagsLockFlags583,14941
		LOCKPOLYGONS     = 0x0001,LOCKPOLYGONS585,14960
		LOCKVERTICES     = 0x0002,LOCKVERTICES586,14989
		LOCKNORMALS      = 0x0004,LOCKNORMALS587,15018
		LOCKPRELIGHT     = 0x0008,LOCKPRELIGHT588,15047
		LOCKTEXCOORDS    = 0x0010,LOCKTEXCOORDS590,15077
		LOCKTEXCOORDS1   = 0x0010,LOCKTEXCOORDS1591,15106
		LOCKTEXCOORDS2   = 0x0020,LOCKTEXCOORDS2592,15135
		LOCKTEXCOORDS3   = 0x0040,LOCKTEXCOORDS3593,15164
		LOCKTEXCOORDS4   = 0x0080,LOCKTEXCOORDS4594,15193
		LOCKTEXCOORDS5   = 0x0100,LOCKTEXCOORDS5595,15222
		LOCKTEXCOORDS6   = 0x0200,LOCKTEXCOORDS6596,15251
		LOCKTEXCOORDS7   = 0x0400,LOCKTEXCOORDS7597,15280
		LOCKTEXCOORDS8   = 0x0800,LOCKTEXCOORDS8598,15309
		LOCKTEXCOORDSALL = 0x0ff0,LOCKTEXCOORDSALL599,15338
		LOCKALL          = 0x0fffLOCKALL601,15368
struct AtomicAtomic611,15502
	typedef void (*RenderCB)(Atomic *atomic);RenderCB614,15530
	enum { ID = 1 };__anon0d15db250803615,15573
	enum { ID = 1 };ID615,15573
	enum {__anon0d15db250903616,15591
		COLLISIONTEST = 0x01,	// unused hereCOLLISIONTEST618,15609
		RENDER = 0x04,RENDER619,15648
		WORLDBOUNDDIRTY = 0x01,WORLDBOUNDDIRTY621,15683
		SAMEBOUNDINGSPHERE = 0x01SAMEBOUNDINGSPHERE623,15729
	ObjectWithFrame object;object626,15762
	Geometry *geometry;geometry627,15787
	Sphere boundingSphere;boundingSphere628,15808
	Sphere worldBoundingSphere;worldBoundingSphere629,15832
	Clump *clump;clump630,15861
	LLLink inClump;inClump631,15876
	ObjPipeline *pipeline;pipeline632,15893
	RenderCB renderCB;renderCB633,15917
	World *world;world635,15938
	ObjectWithFrame::Sync originalSync;originalSync636,15953
	static int32 numAllocated;numAllocated638,15991
	void setFrame(Frame *f) {setFrame643,16093
	Frame *getFrame(void) const { return (Frame*)this->object.object.parent; }getFrame647,16206
	static Atomic *fromClump(LLLink *lnk){fromClump648,16282
	void render(void) { this->renderCB(this); }render655,16536
	void setRenderCB(RenderCB renderCB){setRenderCB656,16581
	void setFlags(uint32 flags) { this->object.object.flags = flags; }setFlags661,16717
	uint32 getFlags(void) const { return this->object.object.flags; }getFlags662,16785
struct LightLight673,17131
	enum { ID = 3 };__anon0d15db250a03676,17158
	enum { ID = 3 };ID676,17158
	ObjectWithFrame object;object677,17176
	float32 radius;radius678,17201
	RGBAf color;color679,17218
	float32 minusCosAngle;minusCosAngle680,17232
	LLLink inWorld;inWorld681,17256
	Clump *clump;clump684,17294
	LLLink inClump;inClump685,17309
	World *world;world688,17347
	ObjectWithFrame::Sync originalSync;originalSync689,17362
	static int32 numAllocated;numAllocated691,17400
	void setFrame(Frame *f) { this->object.setFrame(f); }setFrame695,17485
	Frame *getFrame(void) const { return (Frame*)this->object.object.parent; }getFrame696,17540
	static Light *fromClump(LLLink *lnk){fromClump697,17616
	static Light *fromWorld(LLLink *lnk){fromWorld699,17702
	int32 getType(void){ return this->object.object.subType; }getType704,17893
	void setFlags(uint32 flags) { this->object.object.flags = flags; }setFlags705,17953
	uint32 getFlags(void) { return this->object.object.flags; }getFlags706,18021
	enum Type {Type711,18190
		DIRECTIONAL = 1,DIRECTIONAL712,18203
		AMBIENT,AMBIENT713,18222
		POINT = 0x80,	// positionedPOINT714,18233
		SPOT,SPOT715,18263
		SOFTSPOTSOFTSPOT716,18271
	enum Flags {Flags718,18286
		LIGHTATOMICS = 1,LIGHTATOMICS719,18300
		LIGHTWORLD = 2LIGHTWORLD720,18320
struct FrustumPlaneFrustumPlane724,18345
	Plane plane;plane726,18367
	uint8 closestX;closestX730,18493
	uint8 closestY;closestY731,18510
	uint8 closestZ;closestZ732,18527
struct CameraCamera735,18548
	enum { ID = 4 };__anon0d15db250b03738,18576
	enum { ID = 4 };ID738,18576
	enum { PERSPECTIVE = 1, PARALLEL };__anon0d15db250c03739,18594
	enum { PERSPECTIVE = 1, PARALLEL };PERSPECTIVE739,18594
	enum { PERSPECTIVE = 1, PARALLEL };PARALLEL739,18594
	enum { CLEARIMAGE = 0x1, CLEARZ = 0x2, CLEARSTENCIL = 0x4 };__anon0d15db250d03740,18631
	enum { CLEARIMAGE = 0x1, CLEARZ = 0x2, CLEARSTENCIL = 0x4 };CLEARIMAGE740,18631
	enum { CLEARIMAGE = 0x1, CLEARZ = 0x2, CLEARSTENCIL = 0x4 };CLEARZ740,18631
	enum { CLEARIMAGE = 0x1, CLEARZ = 0x2, CLEARSTENCIL = 0x4 };CLEARSTENCIL740,18631
	enum { SPHEREOUTSIDE, SPHEREBOUNDARY, SPHEREINSIDE };__anon0d15db250e03742,18731
	enum { SPHEREOUTSIDE, SPHEREBOUNDARY, SPHEREINSIDE };SPHEREOUTSIDE742,18731
	enum { SPHEREOUTSIDE, SPHEREBOUNDARY, SPHEREINSIDE };SPHEREBOUNDARY742,18731
	enum { SPHEREOUTSIDE, SPHEREBOUNDARY, SPHEREINSIDE };SPHEREINSIDE742,18731
	ObjectWithFrame object;object744,18787
	void (*beginUpdateCB)(Camera*);beginUpdateCB745,18812
	void (*endUpdateCB)(Camera*);endUpdateCB746,18845
	V2d viewWindow;viewWindow747,18876
	V2d viewOffset;viewOffset748,18893
	float32 nearPlane, farPlane;nearPlane749,18910
	float32 nearPlane, farPlane;farPlane749,18910
	float32 fogPlane;fogPlane750,18940
	int32 projection;projection751,18959
	Matrix viewMatrix;viewMatrix753,18979
	float32 zScale, zShift;zScale754,18999
	float32 zScale, zShift;zShift754,18999
	FrustumPlane frustumPlanes[6];frustumPlanes756,19025
	V3d frustumCorners[8];frustumCorners757,19057
	BBox frustumBoundBox;frustumBoundBox758,19081
	Raster *frameBuffer;frameBuffer760,19105
	Raster *zBuffer;zBuffer761,19127
	RawMatrix devView;devView765,19209
	RawMatrix devProj;devProj766,19229
	Clump *clump;clump769,19289
	LLLink inClump;inClump770,19304
	World *world;world774,19386
	ObjectWithFrame::Sync originalSync;originalSync775,19401
	void (*originalBeginUpdate)(Camera*);originalBeginUpdate776,19438
	void (*originalEndUpdate)(Camera*);originalEndUpdate777,19477
	static int32 numAllocated;numAllocated779,19515
	void setFrame(Frame *f) { this->object.setFrame(f); }setFrame784,19617
	Frame *getFrame(void)const { return (Frame*)this->object.object.parent; }getFrame785,19672
	static Camera *fromClump(LLLink *lnk){fromClump786,19747
	void beginUpdate(void) { this->beginUpdateCB(this); }beginUpdate788,19835
	void endUpdate(void) { this->endUpdateCB(this); }endUpdate789,19890
struct ClumpClump806,20403
	enum { ID = 2 };__anon0d15db250f03809,20430
	enum { ID = 2 };ID809,20430
	Object object;object810,20448
	LinkList atomics;atomics811,20464
	LinkList lights;lights812,20483
	LinkList cameras;cameras813,20501
	World *world;world815,20521
	LLLink inWorld;inWorld816,20536
	static int32 numAllocated;numAllocated818,20554
	static Clump *fromWorld(LLLink *lnk){fromWorld823,20654
	int32 countAtomics(void) { return this->atomics.count(); }countAtomics825,20740
	int32 countLights(void) { return this->lights.count(); }countLights828,20859
	int32 countCameras(void) { return this->cameras.count(); }countCameras831,20972
	void setFrame(Frame *f){setFrame834,21091
	Frame *getFrame(void) const {getFrame836,21146
struct WorldLightsWorldLights845,21397
	int32 numAmbients;numAmbients847,21418
	RGBAf ambient;	// all ambients addedambient848,21438
	int32 numDirectionals;numDirectionals849,21476
	Light **directionals;	// only directionalsdirectionals850,21500
	int32 numLocals;numLocals851,21544
	Light **locals;	// points, (soft)spotslocals852,21562
struct WorldWorld856,21635
	enum { ID = 7 };__anon0d15db251003859,21662
	enum { ID = 7 };ID859,21662
	Object object;object860,21680
	LinkList localLights;	// these have positions (type >= 0x80)localLights861,21696
	LinkList globalLights;	// these do not (type < 0x80)globalLights862,21758
	LinkList clumps;clumps863,21812
	static int32 numAllocated;numAllocated865,21831
struct TexDictionaryTexDictionary881,22255
	enum { ID = 6 };__anon0d15db251103884,22290
	enum { ID = 6 };ID884,22290
	Object object;object885,22308
	LinkList textures;textures886,22324
	LLLink inGlobalList;inGlobalList887,22344
	static int32 numAllocated;numAllocated889,22367
	static TexDictionary *fromLink(LLLink *lnk){fromLink892,22433
	int32 count(void) { return this->textures.count(); }count895,22560

src/texture.cpp,3545
#define WITH_D3DWITH_D3D6,80
#define PLUGIN_ID PLUGIN_ID22,417
namespace rw {rw24,438
int32 Texture::numAllocated;numAllocated26,454
int32 TexDictionary::numAllocated;numAllocated27,483
struct TextureGlobalsTextureGlobals33,674
	TexDictionary *initialTexDict;initialTexDict35,698
	TexDictionary *currentTexDict;currentTexDict36,730
	bool32 loadTextures;loadTextures38,791
	bool32 makeDummies;makeDummies40,859
	bool32 mipmapping;mipmapping41,880
	bool32 autoMipmapping;autoMipmapping42,900
	LinkList texDicts;texDicts43,924
	LinkList textures;textures45,945
int32 textureModuleOffset;textureModuleOffset47,968
#define TEXTUREGLOBAL(TEXTUREGLOBAL49,996
textureOpen(void *object, int32 offset, int32 size)textureOpen52,1098
textureClose(void *object, int32 offset, int32 size)textureClose68,1555
Texture::registerModule(void)registerModule85,2025
Texture::setLoadTextures(bool32 b)setLoadTextures91,2159
Texture::setCreateDummies(bool32 b)setCreateDummies97,2238
void Texture::setMipmapping(bool32 b) { TEXTUREGLOBAL(mipmapping) = b; }setMipmapping102,2312
void Texture::setAutoMipmapping(bool32 b) { TEXTUREGLOBAL(autoMipmapping) = b; }setAutoMipmapping103,2385
bool32 Texture::getMipmapping(void) { return TEXTUREGLOBAL(mipmapping); }getMipmapping104,2466
bool32 Texture::getAutoMipmapping(void) { return TEXTUREGLOBAL(autoMipmapping); }getAutoMipmapping105,2540
TexDictionary::create(void)create112,2662
TexDictionary::destroy(void)destroy128,3049
TexDictionary::add(Texture *t)add144,3373
TexDictionary::remove(Texture *t)remove153,3502
TexDictionary::addFront(Texture *t)addFront161,3609
TexDictionary::find(const char *name)find170,3744
TexDictionary::streamRead(Stream *stream)streamRead181,3948
TexDictionary::streamWrite(Stream *stream)streamWrite214,4788
TexDictionary::streamGetSize(void)streamGetSize233,5370
TexDictionary::setCurrent(TexDictionary *txd)setCurrent246,5669
TexDictionary::getCurrent(void)getCurrent252,5817
Texture *(*Texture::findCB)(const char *name) = defaultFindCB;findCB264,6072
Texture *(*Texture::readCB)(const char *name, const char *mask) = defaultReadCB;readCB265,6135
Texture::create(Raster *raster)create268,6226
Texture::destroy(void)destroy289,6727
defaultFindCB(const char *name)defaultFindCB305,7002
defaultReadCB(const char *name, const char *mask)defaultReadCB315,7199
Texture::read(const char *name, const char *mask)read333,7524
Texture::streamRead(Stream *stream)streamRead367,8307
Texture::streamWrite(Stream *stream)streamWrite427,9714
Texture::streamGetSize(void)streamGetSize455,10434
Texture::streamReadNative(Stream *stream)streamReadNative467,10661
Texture::streamWriteNative(Stream *stream)streamWriteNative492,11349
Texture::streamGetSizeNative(void)streamGetSizeNative511,11990
int32 anisotOffset;anisotOffset531,12603
createAnisot(void *object, int32 offset, int32)createAnisot534,12637
copyAnisot(void *dst, void *src, int32 offset, int32)copyAnisot541,12751
readAnisot(Stream *stream, int32, void *object, int32 offset, int32)readAnisot548,12888
writeAnisot(Stream *stream, int32, void *object, int32 offset, int32)writeAnisot555,13041
getSizeAnisot(void *object, int32 offset, int32)getSizeAnisot562,13191
registerAnisotropyPlugin(void)registerAnisotropyPlugin570,13321
Texture::setMaxAnisotropy(int32 maxaniso)setMaxAnisotropy577,13543
Texture::getMaxAnisotropy(void)getMaxAnisotropy584,13656
getMaxSupportedMaxAnisotropy(void)getMaxSupportedMaxAnisotropy592,13766

src/uvanim.cpp,2219
#define PLUGIN_ID PLUGIN_ID15,253
namespace rw {rw17,287
UVAnimCustomData::destroy(Animation *anim)destroy24,325
UVAnimDictionary *currentUVAnimDictionary;currentUVAnimDictionary31,436
UVAnimDictionary::create(void)create34,498
UVAnimDictionary::destroy(void)destroy46,776
UVAnimDictionary::add(Animation *anim)add58,1026
UVAnimDictionary::streamRead(Stream *stream)streamRead66,1226
UVAnimDictionary::streamWrite(Stream *stream)streamWrite94,1815
UVAnimDictionary::streamGetSize(void)streamGetSize109,2201
UVAnimDictionary::find(const char *name)find120,2426
uvAnimStreamRead(Stream *stream, Animation *anim)uvAnimStreamRead132,2711
uvAnimStreamWrite(Stream *stream, Animation *anim)uvAnimStreamWrite150,3211
uvAnimStreamGetSize(Animation *anim)uvAnimStreamGetSize166,3671
uvAnimLinearApplyCB(void *result, void *frame)uvAnimLinearApplyCB172,3779
uvAnimLinearInterpCB(void *out, void *in1, void *in2, float32 t, void *custom)uvAnimLinearInterpCB192,4178
uvAnimParamApplyCB(void *result, void *frame)uvAnimParamApplyCB207,4814
uvAnimParamInterpCB(void *out, void *in1, void *in2, float32 t, void *custom)uvAnimParamInterpCB235,5521
registerUVAnimInterpolator(void)registerUVAnimInterpolator255,6264
int32 uvAnimOffset;uvAnimOffset292,7494
createUVAnim(void *object, int32 offset, int32)createUVAnim295,7528
destroyUVAnim(void *object, int32 offset, int32)destroyUVAnim304,7712
copyUVAnim(void *dst, void *src, int32 offset, int32)copyUVAnim321,8078
makeDummyAnimation(const char *name)makeDummyAnimation343,8705
readUVAnim(Stream *stream, int32, void *object, int32 offset, int32)readUVAnim360,9252
writeUVAnim(Stream *stream, int32 size, void *object, int32 offset, int32)writeUVAnim400,10323
getSizeUVAnim(void *object, int32 offset, int32)getSizeUVAnim423,10872
uvanimOpen(void *object, int32 offset, int32 size)uvanimOpen434,11115
static void *uvanimClose(void *object, int32 offset, int32 size) { return object; }uvanimClose439,11217
registerUVAnimPlugin(void)registerUVAnimPlugin442,11307
UVAnim::exists(Material *mat)exists452,11624
UVAnim::addTime(Material *mat, float32 t)addTime463,11805
UVAnim::applyUpdate(Material *mat)applyUpdate473,12008

src/userdata.cpp,1606
#define PLUGIN_ID PLUGIN_ID14,234
namespace rw {rw16,265
UserDataGlobals userDataGlobals;userDataGlobals18,281
#define udMalloc(udMalloc20,315
UserDataArray::setString(int32 n, const char *s)setString23,383
createUserData(void *object, int32 offset, int32)createUserData35,604
destroyUserData(void *object, int32 offset, int32)destroyUserData44,804
copyUserData(void *dst, void *src, int32 offset, int32)copyUserData73,1391
readUserData(Stream *stream, int32, void *object, int32 offset, int32)readUserData123,3022
writeUserData(Stream *stream, int32, void *object, int32 offset, int32)writeUserData163,4194
getSizeUserData(void *object, int32 offset, int32)getSizeUserData200,5109
UserDataExtension::add(const char *name, int32 datatype, int32 numElements)add236,5912
UserDataExtension::remove(int32 n)remove272,6891
UserDataExtension::findIndex(const char *name) {findIndex292,7245
#define ACCESSOR(ACCESSOR299,7412
ACCESSOR(Geometry, geometry)ACCESSOR326,8268
UserDataExtension *UserDataExtension::get(Frame *frame) { return PLUGINOFFSET(UserDataExtension,get334,8563
UserDataExtension *UserDataExtension::get(Camera *cam) { return PLUGINOFFSET(UserDataExtension, get335,8699
UserDataExtension *UserDataExtension::get(Light *light) { return PLUGINOFFSET(UserDataExtension,get336,8833
UserDataExtension *UserDataExtension::get(Material *mat) { return PLUGINOFFSET(UserDataExtensionget337,8969
UserDataExtension *UserDataExtension::get(Texture *tex) { return PLUGINOFFSET(UserDataExtension,get338,9107
registerUserDataPlugin(void)registerUserDataPlugin341,9249

src/skin.cpp,1649
#define PLUGIN_ID PLUGIN_ID24,470
namespace rw {rw26,497
SkinGlobals skinGlobals = { 0, 0, { nil }, nil };skinGlobals28,513
createSkin(void *object, int32 offset, int32)createSkin31,577
destroySkin(void *object, int32 offset, int32)destroySkin38,702
copySkin(void *dst, void *src, int32 offset, int32)copySkin51,949
readSkinSplitData(Stream *stream, Skin *skin)readSkinSplitData77,1934
writeSkinSplitData(Stream *stream, Skin *skin)writeSkinSplitData97,2473
skinSplitDataSize(Skin *skin)skinSplitDataSize109,2780
readSkin(Stream *stream, int32 len, void *object, int32 offset, int32)readSkin117,2934
writeSkin(Stream *stream, int32 len, void *object, int32 offset, int32)writeSkin177,4748
getSizeSkin(void *object, int32 offset, int32)getSizeSkin224,6103
readSkinLegacy(Stream *stream, int32 len, void *object, int32, int32)readSkinLegacy257,7076
skinRights(void *object, int32, int32, uint32)skinRights307,8877
skinAlways(void *object, int32, int32)skinAlways313,8981
createSkinAtm(void *object, int32 offset, int32)createSkinAtm324,9227
destroySkinAtm(void *object, int32 offset, int32)destroySkinAtm331,9355
copySkinAtm(void *dst, void *src, int32 offset, int32)copySkinAtm337,9439
skinOpen(void *o, int32, int32)skinOpen344,9597
skinClose(void *o, int32, int32)skinClose356,9923
registerSkinPlugin(void)registerSkinPlugin367,10190
Skin::init(int32 numBones, int32 numUsedBones, int32 numVertices)init394,11060
Skin::findNumWeights(int32 numVertices)findNumWeights444,12117
Skin::findUsedBones(int32 numVertices)findUsedBones459,12359
Skin::setPipeline(Atomic *a, int32 type)setPipeline482,12891

src/frame.cpp,2238
#define PLUGIN_ID PLUGIN_ID12,190
namespace rw {rw14,222
int32 Frame::numAllocated;numAllocated16,238
static void *frameOpen(void *object, int32 offset, int32 size) { engine->frameDirtyList.init(); frameOpen19,310
static void *frameClose(void *object, int32 offset, int32 size) { return object; }frameClose20,423
Frame::registerModule(void)registerModule23,512
Frame::create(void)create29,619
Frame::cloneHierarchy(void)cloneHierarchy49,1001
Frame::destroy(void)destroy56,1112
Frame::destroyHierarchy(void)destroyHierarchy72,1485
Frame::addChild(Frame *child, bool32 append)addChild87,1813
Frame::removeChild(void)removeChild118,2514
Frame::forAllChildren(Callback cb, void *data)forAllChildren137,2902
countCB(Frame *f, void *count)countCB149,3101
Frame::count(void)count157,3211
syncLTMRecurse(Frame *frame, uint8 hierarchyFlags)syncLTMRecurse174,3705
syncObjRecurse(Frame *frame)syncObjRecurse191,4230
syncRecurse(Frame *frame, uint8 hierarchyFlags)syncRecurse205,4565
Frame::syncHierarchyLTM(void)syncHierarchyLTM224,5199
Frame::getLTM(void)getLTM236,5487
Frame::syncDirty(void)syncDirty245,5681
Frame::rotate(const V3d *axis, float32 angle, CombineOp op)rotate272,6468
Frame::translate(const V3d *trans, CombineOp op)translate279,6595
Frame::scale(const V3d *scl, CombineOp op)scale286,6708
Frame::transform(const Matrix *mat, CombineOp op)transform293,6809
Frame::updateObjects(void)updateObjects300,6921
Frame::setHierarchyRoot(Frame *root)setHierarchyRoot311,7265
cloneRecurse(Frame *old, Frame *newroot)cloneRecurse319,7435
Frame::cloneAndLink(void)cloneAndLink340,8048
Frame::purgeClone(void)purgeClone353,8356
struct FrameStreamDataFrameStreamData359,8476
	V3d right, up, at, pos;right361,8501
	V3d right, up, at, pos;up361,8501
	V3d right, up, at, pos;at361,8501
	V3d right, up, at, pos;pos361,8501
	int32 parent;parent362,8526
	int32 matflag;matflag363,8541
FrameList_::streamRead(Stream *stream)streamRead367,8573
FrameList_::streamWrite(Stream *stream)streamWrite407,9655
sizeCB(Frame *f, void *size)sizeCB436,10563
FrameList_::streamGetSize(Frame *f)streamGetSize444,10702
makeFrameList(Frame *frame, Frame **flist)makeFrameList453,10891

src/base.cpp,5697
#define PSEP_C PSEP_C8,117
#define PSEP_S PSEP_S9,136
namespace rw {rw22,373
#define PLUGIN_ID PLUGIN_ID24,389
int32 version = 0x36003;version26,410
int32 build = 0xFFFF;build27,435
	int32 platform = PLATFORM_PS2;platform29,471
	int32 platform = PLATFORM_WDGL;platform31,517
	int32 platform = PLATFORM_GL3;platform33,563
	int32 platform = PLATFORM_D3D9;platform35,609
	int32 platform = PLATFORM_3DS;platform37,655
	int32 platform = PLATFORM_NULL;platform39,693
bool32 streamAppendFrames = 0;streamAppendFrames41,733
char *debugFile = nil;debugFile42,764
static Matrix identMat = {identMat44,788
strcmp_ci(const char *s1, const char *s2)strcmp_ci53,988
strncmp_ci(const char *s1, const char *s2, int n)strncmp_ci69,1188
mult(const Quat &q, const Quat &p)mult86,1411
Quat::rotate(const V3d *axis, float32 angle, CombineOp op)rotate96,1683
lerp(const Quat &q, const Quat &p, float32 r)lerp114,1987
slerp(const Quat &q, const Quat &p, float32 a)slerp130,2295
cross(const V3d &a, const V3d &b)cross153,2627
V3d::transformPoints(V3d *out, const V3d *in, int32 n, const Matrix *m)transformPoints161,2777
V3d::transformVectors(V3d *out, const V3d *in, int32 n, const Matrix *m)transformVectors174,3154
RawMatrix::mult(RawMatrix *dst, RawMatrix *src1, RawMatrix *src2)mult191,3519
RawMatrix::transpose(RawMatrix *dst, RawMatrix *src)transpose212,5543
RawMatrix::setIdentity(RawMatrix *dst)setIdentity233,6014
static Matrix::Tolerance matrixDefaultTolerance = { 0.01f, 0.01f, 0.01f };matrixDefaultTolerance248,6247
Matrix::create(void)create251,6331
Matrix::destroy(void)destroy259,6466
Matrix::setIdentity(void)setIdentity265,6513
Matrix::optimize(Tolerance *tolerance)optimize271,6568
Matrix::mult(Matrix *dst, const Matrix *src1, const Matrix *src2)mult294,7126
Matrix::invert(Matrix *dst, const Matrix *src)invert308,7389
Matrix::transpose(Matrix *dst, const Matrix *src)transpose321,7676
Matrix::rotate(const V3d *axis, float32 angle, CombineOp op)rotate341,8085
Matrix::rotate(const Quat &q, CombineOp op)rotate362,8436
Matrix::translate(const V3d *translation, CombineOp op)translate382,8759
Matrix::scale(const V3d *scale, CombineOp op)scale405,9152
Matrix::transform(const Matrix *mat, CombineOp op)transform430,9567
Matrix::getRotation(void)getRotation450,9865
Matrix::lookAt(const V3d &dir, const V3d &up)lookAt484,10694
Matrix::mult_(Matrix *dst, const Matrix *src1, const Matrix *src2)mult_498,11096
Matrix::invertOrthonormal(Matrix *dst, const Matrix *src)invertOrthonormal515,12379
Matrix::invertGeneral(Matrix *dst, const Matrix *src)invertGeneral539,13075
Matrix::makeRotation(Matrix *dst, const V3d *axis, float32 angle)makeRotation568,14361
Matrix::makeRotation(Matrix *dst, const Quat &q)makeRotation596,15083
Matrix::normalError(void)normalError624,15756
Matrix::orthogonalError(void)orthogonalError634,15919
Matrix::identityError(void)identityError644,16065
correctPathCase(char *filename)correctPathCase653,16275
makePath(char *filename)makePath689,16997
memNative32_func(void *data, uint32 size)memNative32_func701,17242
memNative16_func(void *data, uint32 size)memNative16_func714,17504
memLittle32_func(void *data, uint32 size)memLittle32_func726,17717
memLittle16_func(void *data, uint32 size)memLittle16_func742,17971
Stream::write32(const void *data, uint32 length)write32756,18190
Stream::write16(const void *data, uint32 length)write16776,18551
Stream::read32(void *data, uint32 length)read32796,18912
Stream::read16(void *data, uint32 length)read16805,19048
Stream::writeI8(int8 val)writeI8814,19183
Stream::writeU8(uint8 val)writeU8820,19256
Stream::writeI16(int16 val)writeI16826,19331
Stream::writeU16(uint16 val)writeU16832,19408
Stream::writeI32(int32 val)writeI32838,19487
Stream::writeU32(uint32 val)writeU32844,19564
Stream::writeF32(float32 val)writeF32850,19643
Stream::readI8(void)readI8856,19723
Stream::readU8(void)readU8864,19807
Stream::readI16(void)readI16872,19893
Stream::readU16(void)readU16880,19982
Stream::readI32(void)readI32888,20072
Stream::readU32(void)readU32896,20161
Stream::readF32(void)readF32904,20253
StreamMemory::close(void)close914,20346
StreamMemory::write8(const void *data, uint32 len)write8919,20384
StreamMemory::read8(void *data, uint32 len)read8937,20767
StreamMemory::seek(int32 offset, int32 whence)seek952,21059
StreamMemory::tell(void)tell970,21452
StreamMemory::eof(void)eof976,21511
StreamMemory::open(uint8 *data, uint32 length, uint32 capacity)open982,21587
StreamMemory::getLength(void)getLength994,21838
StreamFile::open(const char *path, const char *mode)open1001,21908
StreamFile::close(void)close1013,22116
StreamFile::write8(const void *data, uint32 length)write81021,22213
StreamFile::read8(void *data, uint32 length)read81027,22330
StreamFile::seek(int32 offset, int32 whence)seek1033,22437
StreamFile::tell(void)tell1039,22530
StreamFile::eof(void)eof1045,22590
writeChunkHeader(Stream *s, int32 type, int32 size)writeChunkHeader1051,22657
	struct {__anon5bb1a8e801081053,22711
		int32 type, size;type1054,22721
		int32 type, size;size1054,22721
		uint32 id;id1055,22741
readChunkHeaderInfo(Stream *s, ChunkHeaderInfo *header)readChunkHeaderInfo1062,22855
	struct {__anon5bb1a8e802081064,22913
		int32 type, size;type1065,22923
		int32 type, size;size1065,22923
		uint32 id;id1066,22943
findChunk(Stream *s, uint32 type, uint32 *length, uint32 *version)findChunk1080,23214
findPointer(void *p, void **list, int32 num)findPointer1099,23588
getFileContents(const char *name, uint32 *len)getFileContents1109,23723

src/charset.cpp,949
#define PLUGIN_ID PLUGIN_ID18,288
#define HALFPX HALFPX23,374
#define HALFPX HALFPX25,402
namespace rw {rw28,432
const uint8 fontbits[256*256] = {fontbits30,448
#define NUMCHARS NUMCHARS34,509
static uint16 *indices;indices35,530
static RWDEVICE::Im2DVertex *vertices;vertices36,554
static int32 numChars;numChars37,593
static Raster *lastRaster;lastRaster38,616
Charset::open(void)open41,651
Charset::close(void)close57,950
Charset::create(const RGBA *foreground, const RGBA *background)create66,1055
Charset::destroy(void)destroy89,1632
Charset::setColors(const RGBA *foreground, const RGBA *background)setColors97,1717
Charset::flushBuffer(void)flushBuffer125,2426
Charset::printChar(int32 c, int32 x, int32 y)printChar141,2796
Charset::print(const char *str, int32 x, int32 y, bool32 hideSpaces)print217,4859
Charset::printBuffered(const char *str, int32 x, int32 y, bool32 hideSpaces)printBuffered224,4999

src/pipeline.cpp,1084
#define COLOR_ARGB(COLOR_ARGB12,189
namespace rw {rw15,297
static void nothing(ObjPipeline *, Atomic*) {}nothing17,313
ObjPipeline::init(uint32 platform)init20,366
ObjPipeline::create(void)create29,542
ObjPipeline::destroy(void)destroy37,680
findMinVertAndNumVertices(uint16 *indices, uint32 numIndices, uint32 *minVert, int32 *numVerticefindMinVertAndNumVertices45,753
instV4d(int type, uint8 *dst, V4d *src, uint32 numVertices, uint32 stride)instV4d69,1201
instV3d(int type, uint8 *dst, V3d *src, uint32 numVertices, uint32 stride)instV3d82,1460
uninstV3d(int type, V3d *dst, uint8 *src, uint32 numVertices, uint32 stride)uninstV3d116,2410
instTexCoords(int type, uint8 *dst, TexCoords *src, uint32 numVertices, uint32 stride)instTexCoords146,3177
uninstTexCoords(int type, TexCoords *dst, uint8 *src, uint32 numVertices, uint32 stride)uninstTexCoords157,3398
instColor(int type, uint8 *dst, RGBA *src, uint32 numVertices, uint32 stride)instColor168,3623
uninstColor(int type, RGBA *dst, uint8 *src, uint32 numVertices, uint32 stride)uninstColor197,4241

src/rwplugins.h,4384
namespace rw {rw1,0
struct HAnimKeyFrameHAnimKeyFrame7,33
	HAnimKeyFrame *prev;prev9,56
	float32        time;time10,78
	Quat           q;q11,100
	V3d            t;t12,119
struct HAnimInterpFrameHAnimInterpFrame15,142
	HAnimKeyFrame *keyFrame1;keyFrame117,168
	HAnimKeyFrame *keyFrame2;keyFrame218,195
	Quat           q;q19,222
	V3d            t;t20,241
struct HAnimNodeInfoHAnimNodeInfo23,264
	int32 id;id25,287
	int32 index;index26,298
	int32 flags;flags27,312
	Frame *frame;frame28,326
struct HAnimHierarchyHAnimHierarchy31,345
	int32 flags;flags33,369
	int32 numNodes;numNodes34,383
	Matrix *matrices;matrices35,400
	void  *matricesUnaligned;matricesUnaligned36,419
	HAnimNodeInfo *nodeInfo;nodeInfo37,446
	Frame *parentFrame;parentFrame38,472
	HAnimHierarchy *parentHierarchy;	// mostly unusedparentHierarchy39,493
	AnimInterpolator *interpolator;interpolator40,544
	static HAnimHierarchy *get(Clump *c){get52,888
	enum Flags {Flags56,1000
		SUBHIERARCHY = 0x1,SUBHIERARCHY57,1014
		NOMATRICES   = 0x2,NOMATRICES58,1036
		UPDATEMODELLINGMATRICES = 0x1000,UPDATEMODELLINGMATRICES60,1059
		UPDATELTMS              = 0x2000,UPDATELTMS61,1095
		LOCALSPACEMATRICES      = 0x4000LOCALSPACEMATRICES62,1131
	enum NodeFlag {NodeFlag64,1170
		POP = 1,POP65,1187
		PUSHPUSH66,1198
struct HAnimDataHAnimData70,1213
	int32 id;id72,1232
	HAnimHierarchy *hierarchy;hierarchy73,1243
struct MatFXMatFX87,1416
	enum {__anon0ff8d33d010389,1431
		NOTHING = 0,NOTHING90,1439
		BUMPMAP,BUMPMAP91,1454
		ENVMAP,ENVMAP92,1465
		BUMPENVMAP,	// BUMP | ENVBUMPENVMAP93,1475
		DUAL,DUAL94,1503
		UVTRANSFORM,UVTRANSFORM95,1511
		DUALUVTRANSFORMDUALUVTRANSFORM96,1526
	struct Bump {Bump98,1548
		Frame   *frame;frame99,1563
		Texture *bumpedTex;bumpedTex100,1581
		Texture *tex;tex101,1603
		float    coefficient;coefficient102,1619
	struct Env {Env104,1647
		Frame   *frame;frame105,1661
		Texture *tex;tex106,1679
		float    coefficient;coefficient107,1695
		int32    fbAlpha;fbAlpha108,1719
	struct Dual {Dual110,1743
		Texture *tex;tex111,1758
		int32    srcBlend;srcBlend112,1774
		int32    dstBlend;dstBlend113,1795
	struct UVtransform {UVtransform115,1820
		Matrix *baseTransform;baseTransform116,1842
		Matrix *dualTransform;dualTransform117,1867
	struct {__anon0ff8d33d0208119,1896
		uint32 type;type120,1906
		union {__anon0ff8d33d030a121,1921
			Bump bump;bump122,1931
			Env  env;env123,1945
			Dual dual;dual124,1958
			UVtransform uvtransform;uvtransform125,1972
	} fx[2];fx127,2005
	uint32 type;type128,2015
	static bool32 modulateEnvMap;modulateEnvMap163,3101
struct MatFXGlobalsMatFXGlobals166,3136
	int32 atomicOffset;atomicOffset168,3158
	int32 materialOffset;materialOffset169,3179
	ObjPipeline *pipelines[NUM_PLATFORMS];pipelines170,3202
	ObjPipeline *dummypipe;dummypipe171,3242
struct SkinGlobalsSkinGlobals181,3354
	int32 geoOffset;geoOffset183,3375
	int32 atomicOffset;atomicOffset184,3393
	ObjPipeline *pipelines[NUM_PLATFORMS];pipelines185,3414
	ObjPipeline *dummypipe;dummypipe186,3454
struct SkinSkin190,3515
	int32 numBones;numBones192,3529
	int32 numUsedBones;numUsedBones193,3546
	int32 numWeights;numWeights194,3567
	uint8 *usedBones;usedBones195,3586
	float *inverseMatrices;inverseMatrices196,3605
	uint8 *indices;indices197,3630
	float *weights;weights198,3647
	struct RLEcount {RLEcount203,3715
		uint8 start;start204,3734
		uint8 size;size205,3749
	struct RLE {RLE208,3801
		uint8 startbone;  // into remapIndicesstartbone209,3815
		uint8 n;n210,3856
	int32 boneLimit;boneLimit212,3871
	int32 numMeshes;numMeshes213,3889
	int32 rleSize;rleSize214,3907
	int8 *remapIndices;remapIndices215,3923
	RLEcount *rleCount;rleCount216,3944
	RLE *rle;rle217,3965
	uint8 *data;	// only used by deletedata219,3977
	void *platformData; // a place to store platform specific stuffplatformData220,4014
	bool32 legacyType;	// old skin attached to atomic, needed for always CBlegacyType221,4079
	static Skin *get(const Geometry *geo){get228,4351
	static void set(Geometry *geo, Skin *skin){set231,4453
	static void setHierarchy(Atomic *atomic, HAnimHierarchy *hier){setHierarchy234,4560
	static HAnimHierarchy *getHierarchy(const Atomic *atomic){getHierarchy238,4719

src/rwengine.h,5909
namespace rw {rw1,0
enum DeviceReqDeviceReq4,66
	DEVICEINIT,DEVICEINIT7,149
	DEVICETERM,DEVICETERM9,230
	DEVICEOPEN,DEVICEOPEN12,272
	DEVICECLOSE,DEVICECLOSE14,313
	DEVICEFINALIZE,DEVICEFINALIZE17,393
	DEVICEGETNUMSUBSYSTEMS,DEVICEGETNUMSUBSYSTEMS21,465
	DEVICEGETCURRENTSUBSYSTEM,DEVICEGETCURRENTSUBSYSTEM22,490
	DEVICESETSUBSYSTEM,DEVICESETSUBSYSTEM23,518
	DEVICEGETSUBSSYSTEMINFO,DEVICEGETSUBSSYSTEMINFO24,539
	DEVICEGETNUMVIDEOMODES,DEVICEGETNUMVIDEOMODES27,582
	DEVICEGETCURRENTVIDEOMODE,DEVICEGETCURRENTVIDEOMODE28,607
	DEVICESETVIDEOMODE,DEVICESETVIDEOMODE29,635
	DEVICEGETVIDEOMODEINFO,DEVICEGETVIDEOMODEINFO30,656
	DEVICEGETMAXMULTISAMPLINGLEVELS,DEVICEGETMAXMULTISAMPLINGLEVELS33,700
	DEVICEGETMULTISAMPLINGLEVELS,DEVICEGETMULTISAMPLINGLEVELS34,734
	DEVICESETMULTISAMPLINGLEVELS,DEVICESETMULTISAMPLINGLEVELS35,765
typedef int DeviceSystem(DeviceReq req, void *arg, int32 n);n39,801
struct DeviceDevice48,994
	float32 zNear, zFar;zNear50,1010
	float32 zNear, zFar;zFar50,1010
	void  (*beginUpdate)(Camera*);beginUpdate51,1032
	void  (*endUpdate)(Camera*);endUpdate52,1064
	void  (*clearCamera)(Camera*, RGBA *col, uint32 mode);clearCamera53,1094
	void  (*showRaster)(Raster *raster, uint32 flags);showRaster54,1150
	bool32 (*rasterRenderFast)(Raster *raster, int32 x, int32 y);rasterRenderFast55,1202
	void  (*setRenderState)(int32 state, void *value);setRenderState56,1265
	void *(*getRenderState)(int32 state);getRenderState57,1317
	void   (*im2DRenderLine)(void *vertices, int32 numVertices, int32 vert1, int32 vert2);im2DRenderLine59,1357
	void   (*im2DRenderTriangle)(void *vertices, int32 numVertices, int32 vert1, int32 vert2, int32im2DRenderTriangle60,1445
	void   (*im2DRenderPrimitive)(PrimitiveType primType, void *vertices, int32 numVertices);im2DRenderPrimitive61,1550
	void   (*im2DRenderIndexedPrimitive)(PrimitiveType primType, void *vertices, int32 numVertices,im2DRenderIndexedPrimitive62,1641
	void (*im3DTransform)(void *vertices, int32 numVertices, Matrix *world, uint32 flags);im3DTransform64,1773
	void (*im3DRenderPrimitive)(PrimitiveType primType);im3DRenderPrimitive65,1861
	void (*im3DRenderIndexedPrimitive)(PrimitiveType primType, void *indices, int32 numIndices);im3DRenderIndexedPrimitive66,1915
	void (*im3DEnd)(void);im3DEnd67,2009
	DeviceSystem *system;system69,2034
struct DriverDriver74,2159
	ObjPipeline *defaultPipeline;defaultPipeline76,2175
	int32 rasterNativeOffset;rasterNativeOffset77,2206
	Raster* (*rasterCreate)(Raster*);rasterCreate79,2234
	uint8 *(*rasterLock)(Raster*, int32 level, int32 lockMode);rasterLock80,2269
	void   (*rasterUnlock)(Raster*, int32 level);rasterUnlock81,2330
	uint8 *(*rasterLockPalette)(Raster*, int32 lockMode);rasterLockPalette82,2377
	void   (*rasterUnlockPalette)(Raster*);rasterUnlockPalette83,2432
	int32  (*rasterNumLevels)(Raster*);rasterNumLevels84,2473
	bool32 (*imageFindRasterFormat)(Image *img, int32 type,imageFindRasterFormat85,2510
	bool32 (*rasterFromImage)(Raster*, Image*);rasterFromImage87,2628
	Image *(*rasterToImage)(Raster*);rasterToImage88,2673
	static PluginList s_plglist[NUM_PLATFORMS];s_plglist90,2709
	static int32 registerPlugin(int32 platform, int32 size, uint32 id,registerPlugin91,2754
enum MemHintMemHint100,3036
	MEMDUR_NA = 0,MEMDUR_NA102,3051
	MEMDUR_FUNCTION = 0x10000,MEMDUR_FUNCTION104,3092
	MEMDUR_FRAME = 0x20000,MEMDUR_FRAME106,3143
	MEMDUR_EVENT = 0x30000,MEMDUR_EVENT108,3193
	MEMDUR_GLOBAL = 0x40000MEMDUR_GLOBAL110,3255
struct MemoryFunctionsMemoryFunctions113,3284
	void *(*rwmalloc)(size_t sz, uint32 hint);rwmalloc115,3309
	void *(*rwrealloc)(void *p, size_t sz, uint32 hint);rwrealloc116,3353
	void  (*rwfree)(void *p);rwfree117,3407
	void *(*rwmustmalloc)(size_t sz, uint32 hint);rwmustmalloc120,3574
	void *(*rwmustrealloc)(void *p, size_t sz, uint32 hint);rwmustrealloc121,3622
struct SubSystemInfoSubSystemInfo124,3684
	char name[80];name126,3707
enum VideoModeFlagsVideoModeFlags129,3727
	VIDEOMODEEXCLUSIVE = 1VIDEOMODEEXCLUSIVE131,3749
struct VideoModeVideoMode134,3777
	int32 width;width136,3796
	int32 height;height137,3810
	int32 depth;depth138,3825
	uint32 flags;flags139,3839
struct EngineEngine147,3966
	enum State {State149,3982
		Dead = 0,Dead150,3996
		Initialized,Initialized151,4008
		Opened,Opened152,4023
		StartedStarted153,4033
	Camera *currentCamera;currentCamera155,4047
	World *currentWorld;currentWorld156,4071
	LinkList frameDirtyList;frameDirtyList157,4093
	Driver *driver[NUM_PLATFORMS];driver160,4165
	Device device;device161,4197
	ObjPipeline *dummyDefaultPipeline;dummyDefaultPipeline162,4213
	static MemoryFunctions memfuncs;memfuncs165,4285
	static State state;state166,4319
	static PluginList s_plglist;s_plglist189,5074
	static int32 registerPlugin(int32 size, uint32 id,registerPlugin190,5104
#define RWTOSTR_(RWTOSTR_198,5314
#define RWTOSTR(RWTOSTR199,5337
#define RWHERE RWHERE200,5368
inline void *malloc_LOC(size_t sz, uint32 hint, const char *here) { allocLocation = here; returnmalloc_LOC204,5465
inline void *realloc_LOC(void *p, size_t sz, uint32 hint, const char *here) { allocLocation = herealloc_LOC205,5604
inline void *mustmalloc_LOC(size_t sz, uint32 hint, const char *here) { allocLocation = here; remustmalloc_LOC206,5756
inline void *mustrealloc_LOC(void *p, size_t sz, uint32 hint, const char *here) { allocLocation mustrealloc_LOC207,5903
#define rwMalloc(rwMalloc211,6129
#define rwMallocT(rwMallocT212,6179
#define rwRealloc(rwRealloc213,6249
#define rwReallocT(rwReallocT214,6306
#define rwFree(rwFree215,6383
#define rwNew(rwNew216,6432
#define rwNewT(rwNewT217,6483
#define rwResize(rwResize218,6554
#define rwResizeT(rwResizeT219,6614
#define rwStrdup(rwStrdup220,6694
namespace null {null226,6881

src/tga.cpp,746
#define PLUGIN_ID PLUGIN_ID13,210
namespace rw {rw15,231
struct TGAHeaderTGAHeader19,305
	int8  IDlen;IDlen21,324
	int8  colorMapType;colorMapType22,338
	int8  imageType;imageType23,359
	int16 colorMapOrigin;colorMapOrigin24,377
	int16 colorMapLength;colorMapLength25,400
	int8  colorMapDepth;colorMapDepth26,423
	int16 xOrigin, yOrigin;xOrigin27,445
	int16 xOrigin, yOrigin;yOrigin27,445
	int16 width, height;width28,470
	int16 width, height;height28,470
	uint8 depth;depth29,492
	uint8 descriptor;descriptor30,506
TGAHeader::read(Stream *stream)read37,592
TGAHeader::write(Stream *stream)write54,1011
readTGA(const char *filename)readTGA71,1409
writeTGA(Image *image, const char *filename)writeTGA156,3425

src/light.cpp,890
#define PLUGIN_ID PLUGIN_ID12,190
namespace rw {rw14,218
int32 Light::numAllocated;numAllocated16,234
lightSync(ObjectWithFrame*)lightSync21,319
worldLightSync(ObjectWithFrame *obj)worldLightSync26,364
Light::create(int32 type)create33,469
Light::destroy(void)destroy67,1274
Light::setAngle(float32 angle)setAngle78,1444
Light::getAngle(void)getAngle84,1525
Light::setColor(float32 r, float32 g, float32 b)setColor90,1594
struct LightChunkDataLightChunkData98,1771
	float32 radius;radius100,1795
	float32 red, green, blue;red101,1812
	float32 red, green, blue;green101,1812
	float32 red, green, blue;blue101,1812
	float32 minusCosAngle;minusCosAngle102,1839
	uint32 type_flags;type_flags103,1863
Light::streamRead(Stream *stream)streamRead107,1894
Light::streamWrite(Stream *stream)streamWrite136,2583
Light::streamGetSize(void)streamGetSize158,3224

src/bmp.cpp,1001
#define PLUGIN_ID PLUGIN_ID13,210
namespace rw {rw15,231
struct BMPheaderBMPheader18,304
	uint16 magic;magic20,323
	uint32 size;size21,338
	uint16 reserved[2];reserved22,352
	uint32 offset;offset23,373
struct DIBheaderDIBheader30,505
	uint32 headerSize;headerSize32,524
	int32 width;width33,544
	int32 height;height34,558
	int16 numPlanes;numPlanes35,573
	int16 depth;depth36,591
	uint32 compression;compression37,605
	uint32 imgSize;imgSize38,626
	int32 hres;hres39,643
	int32 vres;vres40,656
	int32 paletteLen;paletteLen41,669
	int32 numImportant;numImportant42,688
	uint32 rmask, gmask, bmask, amask;rmask45,730
	uint32 rmask, gmask, bmask, amask;gmask45,730
	uint32 rmask, gmask, bmask, amask;bmask45,730
	uint32 rmask, gmask, bmask, amask;amask45,730
BMPheader::read(Stream *stream)read49,777
BMPheader::write(Stream *stream)write60,996
readBMP(const char *filename)readBMP71,1184
writeBMP(Image *image, const char *filename)writeBMP197,3549

src/hanim.cpp,1828
#define PLUGIN_ID PLUGIN_ID22,419
namespace rw {rw24,447
int32 hAnimOffset;hAnimOffset26,463
bool32 hAnimDoStream = 1;hAnimDoStream27,482
HAnimHierarchy::create(int32 numNodes, int32 *nodeFlags, int32 *nodeIDs,create30,525
HAnimHierarchy::destroy(void)destroy69,1665
findById(Frame *f, int32 id)findById78,1820
findUnattachedById(HAnimHierarchy *hier, Frame *f, int32 id)findUnattachedById89,2069
HAnimHierarchy::attachByIndex(int32 idx)attachByIndex100,2400
HAnimHierarchy::attach(void)attach110,2635
HAnimHierarchy::getIndex(int32 id)getIndex117,2744
HAnimHierarchy::getIndex(Frame *f)getIndex126,2891
HAnimHierarchy::get(Frame *f)get135,3050
HAnimHierarchy::find(Frame *f)find141,3139
HAnimHierarchy::updateMatrices(void)updateMatrices152,3379
HAnimData::get(Frame *f)get197,4329
createHAnim(void *object, int32 offset, int32)createHAnim203,4421
destroyHAnim(void *object, int32 offset, int32)destroyHAnim212,4605
copyHAnim(void *dst, void *src, int32 offset, int32)copyHAnim228,4998
readHAnim(Stream *stream, int32, void *object, int32 offset, int32)readHAnim252,5864
writeHAnim(Stream *stream, int32, void *object, int32 offset, int32)writeHAnim284,6856
getSizeHAnim(void *object, int32 offset, int32)getSizeHAnim306,7497
hAnimFrameRead(Stream *stream, Animation *anim)hAnimFrameRead318,7812
hAnimFrameWrite(Stream *stream, Animation *anim)hAnimFrameWrite331,8168
hAnimFrameGetSize(Animation *anim)hAnimFrameGetSize343,8506
hanimApplyCB(void *result, void *frame)hanimApplyCB353,8771
hanimInterpCB(void *vout, void *vin1, void *vin2, float32 t, void*)hanimInterpCB362,8957
hanimOpen(void *object, int32 offset, int32 size)hanimOpen374,9349
hanimClose(void *object, int32 offset, int32 size)hanimClose394,9959
registerHAnimPlugin(void)registerHAnimPlugin402,10109

src/CMakeLists.txt,94
add_library(librwlibrw1,0
    set(OpenGL_GL_PREFERENCE GLVND)OpenGL_GL_PREFERENCE148,2823

src/rwplg.h,1698
namespace rw {rw1,0
#define PLUGINOFFSET(PLUGINOFFSET3,16
typedef void *(*Constructor)(void *object, int32 offset, int32 size);Constructor6,97
typedef void *(*Destructor)(void *object, int32 offset, int32 size);Destructor7,167
typedef void *(*CopyConstructor)(void *dst, void *src, int32 offset, int32 size);CopyConstructor8,236
typedef Stream *(*StreamRead)(Stream *stream, int32 length, void *object, int32 offset, int32 siStreamRead9,318
typedef Stream *(*StreamWrite)(Stream *stream, int32 length, void *object, int32 offset, int32 sStreamWrite10,419
typedef int32 (*StreamGetSize)(void *object, int32 offset, int32 size);StreamGetSize11,521
typedef void (*RightsCallback)(void *object, int32 offset, int32 size, uint32 data);RightsCallback12,593
typedef void (*AlwaysCallback)(void *object, int32 offset, int32 size);AlwaysCallback13,678
struct PluginListPluginList15,751
	int32 size;size17,771
	int32 defaultSize;defaultSize18,784
	LinkList plugins;plugins19,804
	PluginList(void) {}PluginList21,824
	PluginList(int32 defSize)PluginList22,845
struct PluginPlugin46,1602
	int32 offset;offset48,1618
	int32 size;size49,1633
	uint32 id;id50,1646
	Constructor constructor;constructor51,1658
	Destructor destructor;destructor52,1684
	CopyConstructor copy;copy53,1708
	StreamRead read;read54,1731
	StreamWrite write;write55,1749
	StreamGetSize getSize;getSize56,1769
	RightsCallback rightsCallback;rightsCallback57,1793
	AlwaysCallback alwaysCallback;alwaysCallback58,1825
	PluginList *parentList;parentList59,1857
	LLLink inParentList;inParentList60,1882
	LLLink inGlobalList;inGlobalList61,1904
#define PLUGINBASE PLUGINBASE64,1930

src/camera.cpp,1791
#define PLUGIN_ID PLUGIN_ID12,190
namespace rw {rw14,219
int32 Camera::numAllocated;numAllocated16,235
defaultBeginUpdateCB(Camera *cam)defaultBeginUpdateCB21,316
defaultEndUpdateCB(Camera *cam)defaultEndUpdateCB29,445
buildPlanes(Camera *cam)buildPlanes35,526
buildClipPersp(Camera *cam)buildClipPersp90,2570
buildClipParallel(Camera *cam)buildClipParallel117,3431
cameraSync(ObjectWithFrame *obj)cameraSync164,4704
worldBeginUpdateCB(Camera *cam)worldBeginUpdateCB258,7288
worldEndUpdateCB(Camera *cam)worldEndUpdateCB265,7398
worldCameraSync(ObjectWithFrame *obj)worldCameraSync271,7475
Camera::create(void)create278,7586
Camera::clone(void)clone318,8568
Camera::destroy(void)destroy343,9117
Camera::clear(RGBA *col, uint32 mode)clear354,9288
Camera::showRaster(uint32 flags)showRaster360,9382
calczShiftScale(Camera *cam)calczShiftScale366,9458
Camera::setNearPlane(float32 near)setNearPlane385,9887
Camera::setFarPlane(float32 far)setFarPlane394,10040
Camera::setViewWindow(const V2d *window)setViewWindow403,10189
Camera::setViewOffset(const V2d *offset)setViewOffset411,10328
Camera::setProjection(int32 proj)setProjection419,10467
Camera::frustumTestSphere(const Sphere *s) constfrustumTestSphere427,10597
struct CameraChunkDataCameraChunkData442,10945
	V2d viewWindow;viewWindow444,10970
	V2d viewOffset;viewOffset445,10987
	float32 nearPlane, farPlane;nearPlane446,11004
	float32 nearPlane, farPlane;farPlane446,11004
	float32 fogPlane;fogPlane447,11034
	int32 projection;projection448,11053
Camera::streamRead(Stream *stream)streamRead452,11084
Camera::streamWrite(Stream *stream)streamWrite474,11612
Camera::streamGetSize(void)streamGetSize491,12114
Camera::setFOV(float32 hfov, float32 ratio)setFOV499,12301

src/rwbase.h,15697
#define M_PI M_PI6,73
#define RW_OPENGLRW_OPENGL12,218
#define RWDEVICE RWDEVICE13,236
#define RW_GLESRW_GLES19,322
#define RW_GLESRW_GLES22,361
#define RWDEVICE RWDEVICE26,400
#define RWHALFPIXELRWHALFPIXEL27,421
#define RWDEVICE RWDEVICE31,464
#define RWHALFPIXELRWHALFPIXEL35,507
#define RWDEVICE RWDEVICE36,527
#define RW_OPENGLRW_OPENGL40,571
#define RWDEVICE RWDEVICE44,611
namespace rw {rw47,640
	typedef char int8;int850,670
	typedef short int16;int1651,690
	typedef int int32;int3252,712
	typedef long long int64;int6453,732
	typedef unsigned char uint8;uint854,758
	typedef unsigned short uint16;uint1655,788
	typedef unsigned int uint32;uint3256,820
	typedef unsigned long long uint64;uint6457,850
	typedef unsigned int uintptr;uintptr58,886
typedef float float32;float3272,1187
typedef int32 bool32;bool3273,1210
typedef uint8 byte;byte74,1232
typedef uint32 uint;uint75,1252
#define nil nil77,1274
#define nelem(nelem79,1292
#define RWALIGN(RWALIGN82,1352
#define RWALIGN(RWALIGN85,1423
#define RWALIGN(RWALIGN87,1469
struct LLLinkLLLink93,1542
	LLLink *next;next95,1558
	LLLink *prev;prev96,1573
	void init(void){init97,1588
	void remove(void){remove101,1649
#define LLLinkGetData(LLLinkGetData107,1742
#define FORLIST(FORLIST111,1902
struct LinkListLinkList116,2065
	LLLink link;link118,2083
	void init(void){init119,2097
	bool32 isEmpty(void){isEmpty123,2184
	void add(LLLink *link){add126,2251
	void append(LLLink *link){append132,2397
	LLLink *end(void){end138,2546
	int32 count(void){count141,2591
struct RGBARGBA151,2700
	uint8 red;red153,2714
	uint8 green;green154,2726
	uint8 blue;blue155,2740
	uint8 alpha;alpha156,2753
inline RGBA makeRGBA(uint8 r, uint8 g, uint8 b, uint8 a) { RGBA c = { r, g, b, a }; return c; }makeRGBA158,2770
inline bool32 equal(const RGBA &c1, const RGBA &c2) { return c1.red == c2.red && c1.green == c2.equal159,2866
#define RWRGBAINT(RWRGBAINT160,3017
struct RGBAfRGBAf162,3121
	float32 red;red164,3136
	float32 green;green165,3150
	float32 blue;blue166,3166
	float32 alpha;alpha167,3181
inline RGBAf makeRGBAf(float32 r, float32 g, float32 b, float32 a) { RGBAf c = { r, g, b, a }; rmakeRGBAf169,3200
inline bool32 equal(const RGBAf &c1, const RGBAf &c2) { return c1.red == c2.red && c1.green == cequal170,3307
inline RGBAf add(const RGBAf &a, const RGBAf &b) { return makeRGBAf(a.red+b.red, a.green+b.greenadd171,3460
inline RGBAf modulate(const RGBAf &a, const RGBAf &b) { return makeRGBAf(a.red*b.red, a.green*b.modulate172,3593
inline RGBAf scale(const RGBAf &a, float32 f) { return makeRGBAf(a.red*f, a.green*f, a.blue*f, ascale173,3731
inline void clamp(RGBAf *a) {clamp174,3840
inline void convColor(RGBA *i, const RGBAf *f){convColor185,4165
inline void convColor(RGBAf *f, const RGBA *i){convColor197,4463
struct TexCoordsTexCoords204,4627
	float32 u, v;u206,4646
	float32 u, v;v206,4646
inline bool32 equal(const TexCoords &t1, const TexCoords &t2) { return t1.u == t2.u && t1.v == tequal208,4664
struct V2dV2d215,4821
	float32 x, y;x217,4834
	float32 x, y;y217,4834
	void set(float32 x, float32 y){set218,4849
inline V2d makeV2d(float32 x, float32 y) { V2d v = { x, y }; return v; }makeV2d222,4916
inline bool32 equal(const V2d &v1, const V2d &v2) { return v1.x == v2.x && v1.y == v2.y; }equal223,4989
inline V2d neg(const V2d &a) { return makeV2d(-a.x, -a.y); }neg224,5080
inline V2d add(const V2d &a, const V2d &b) { return makeV2d(a.x+b.x, a.y+b.y); }add225,5141
inline V2d sub(const V2d &a, const V2d &b) { return makeV2d(a.x-b.x, a.y-b.y); }sub226,5222
inline V2d scale(const V2d &a, float32 r) { return makeV2d(a.x*r, a.y*r); }scale227,5303
inline float32 length(const V2d &v) { return sqrtf(v.x*v.x + v.y*v.y); }length228,5379
inline V2d normalize(const V2d &v) { return scale(v, 1.0f/length(v)); }normalize229,5452
struct V3dV3d231,5525
	float32 x, y, z;x233,5538
	float32 x, y, z;y233,5538
	float32 x, y, z;z233,5538
	void set(float32 x, float32 y, float32 z){set234,5556
inline V3d makeV3d(float32 x, float32 y, float32 z) { V3d v = { x, y, z }; return v; }makeV3d240,5810
inline bool32 equal(const V3d &v1, const V3d &v2) { return v1.x == v2.x && v1.y == v2.y && v1.z equal241,5897
inline V3d neg(const V3d &a) { return makeV3d(-a.x, -a.y, -a.z); }neg242,6004
inline V3d add(const V3d &a, const V3d &b) { return makeV3d(a.x+b.x, a.y+b.y, a.z+b.z); }add243,6071
inline V3d sub(const V3d &a, const V3d &b) { return makeV3d(a.x-b.x, a.y-b.y, a.z-b.z); }sub244,6161
inline V3d scale(const V3d &a, float32 r) { return makeV3d(a.x*r, a.y*r, a.z*r); }scale245,6251
inline float32 length(const V3d &v) { return sqrtf(v.x*v.x + v.y*v.y + v.z*v.z); }length246,6334
inline V3d normalize(const V3d &v) { return scale(v, 1.0f/length(v)); }normalize247,6417
inline V3d setlength(const V3d &v, float32 l) { return scale(v, l/length(v)); }setlength248,6489
inline float32 dot(const V3d &a, const V3d &b) { return a.x*b.x + a.y*b.y + a.z*b.z; }dot250,6608
inline V3d lerp(const V3d &a, const V3d &b, float32 r){lerp251,6695
struct V4dV4d257,6867
	float32 x, y, z, w;x259,6880
	float32 x, y, z, w;y259,6880
	float32 x, y, z, w;z259,6880
	float32 x, y, z, w;w259,6880
inline bool32 equal(const V4d &v1, const V4d &v2) { return v1.x == v2.x && v1.y == v2.y && v1.z equal261,6904
enum CombineOpCombineOp263,7028
	COMBINEREPLACE,COMBINEREPLACE265,7045
	COMBINEPRECONCAT,COMBINEPRECONCAT266,7062
	COMBINEPOSTCONCATCOMBINEPOSTCONCAT267,7081
struct QuatQuat274,7207
	float32 x, y, z, w;x277,7279
	float32 x, y, z, w;y277,7279
	float32 x, y, z, w;z277,7279
	float32 x, y, z, w;w277,7279
	static Quat rotation(float32 angle, const V3d &axis){rotation279,7301
	void set(float32 w, float32 x, float32 y, float32 z){set281,7437
	V3d vec(void){ return makeV3d(x, y, z); }vec283,7548
inline Quat makeQuat(float32 w, float32 x, float32 y, float32 z) { Quat q = { x, y, z, w }; retumakeQuat288,7657
inline Quat makeQuat(float32 w, const V3d &vec) { Quat q = { vec.x, vec.y, vec.z, w }; return q;makeQuat289,7761
inline Quat add(const Quat &q, const Quat &p) { return makeQuat(q.w+p.w, q.x+p.x, q.y+p.y, q.z+padd290,7860
inline Quat sub(const Quat &q, const Quat &p) { return makeQuat(q.w-p.w, q.x-p.x, q.y-p.y, q.z-psub291,7963
inline Quat negate(const Quat &q) { return makeQuat(-q.w, -q.x, -q.y, -q.z); }negate292,8066
inline float32 dot(const Quat &q, const Quat &p) { return q.w*p.w + q.x*p.x + q.y*p.y + q.z*p.z;dot293,8145
inline Quat scale(const Quat &q, float32 r) { return makeQuat(q.w*r, q.x*r, q.y*r, q.z*r); }scale294,8244
inline float32 length(const Quat &q) { return sqrtf(q.w*q.w + q.x*q.x + q.y*q.y + q.z*q.z); }length295,8337
inline Quat normalize(const Quat &q) { return scale(q, 1.0f/length(q)); }normalize296,8431
inline Quat conj(const Quat &q) { return makeQuat(q.w, -q.x, -q.y, -q.z); }conj297,8505
inline V3d rotate(const V3d &v, const Quat &q) { return mult(mult(q, makeQuat(0.0f, v)), conj(q)rotate299,8622
struct RawMatrixRawMatrix303,8835
	V3d right;right305,8854
	float32 rightw;rightw306,8866
	V3d up;up307,8883
	float32 upw;upw308,8892
	V3d at;at309,8906
	float32 atw;atw310,8915
	V3d pos;pos311,8929
	float32 posw;posw312,8939
struct MatrixMatrix319,9126
	enum Type {Type321,9142
		TYPENORMAL	= 1,TYPENORMAL322,9155
		TYPEORTHOGONAL	= 2,TYPEORTHOGONAL323,9173
		TYPEORTHONORMAL	= 3,TYPEORTHONORMAL324,9195
		TYPEMASK = 3TYPEMASK325,9218
	enum Flags {Flags327,9237
		IDENTITY = 0x20000IDENTITY328,9251
	struct Tolerance {Tolerance330,9276
		float32 normal;normal331,9296
		float32 orthogonal;orthogonal332,9314
		float32 identity;identity333,9336
	V3d right;right336,9361
	uint32 flags;flags337,9373
	V3d up;up338,9388
	uint32 pad1;pad1339,9397
	V3d at;at340,9411
	uint32 pad2;pad2341,9420
	V3d pos;pos342,9434
	uint32 pad3;pad3343,9444
	void update(void) { flags &= ~(IDENTITY|TYPEMASK); }update349,9579
inline void convMatrix(Matrix *dst, RawMatrix *src){convMatrix373,10629
inline void convMatrix(RawMatrix *dst, Matrix *src){convMatrix378,10726
struct LineLine386,10880
	V3d start;start388,10894
	V3d end;end389,10906
struct RectRect392,10920
	int32 x, y;x394,10934
	int32 x, y;y394,10934
	int32 w, h;w395,10947
	int32 w, h;h395,10947
struct SphereSphere398,10964
	V3d center;center400,10980
	float32 radius;radius401,10993
struct PlanePlane404,11014
	V3d normal;normal406,11029
	float32 distance;distance407,11042
struct BBoxBBox410,11065
	V3d sup;sup412,11079
	V3d inf;inf413,11089
enum PrimitiveTypePrimitiveType421,11234
	PRIMTYPENONE = 0,PRIMTYPENONE423,11255
	PRIMTYPELINELIST,PRIMTYPELINELIST424,11274
	PRIMTYPEPOLYLINE,PRIMTYPEPOLYLINE425,11293
	PRIMTYPETRILIST,PRIMTYPETRILIST426,11312
	PRIMTYPETRISTRIP,PRIMTYPETRISTRIP427,11330
	PRIMTYPETRIFAN,PRIMTYPETRIFAN428,11349
	PRIMTYPEPOINTLISTPRIMTYPEPOINTLIST429,11366
inline void memNative32(void *data, uint32 size) { memNative32_func(data, size); }memNative32442,11617
inline void memNative16(void *data, uint32 size) { memNative16_func(data, size); }memNative16443,11700
inline void memLittle32(void *data, uint32 size) { memLittle32_func(data, size); }memLittle32444,11783
inline void memLittle16(void *data, uint32 size) { memLittle16_func(data, size); }memLittle16445,11866
#define ASSERTLITTLE ASSERTLITTLE446,11949
inline void memNative32(void *data, uint32 size) { }memNative32448,12017
inline void memNative16(void *data, uint32 size) { }memNative16449,12070
inline void memLittle32(void *data, uint32 size) { }memLittle32450,12123
inline void memLittle16(void *data, uint32 size) { }memLittle16451,12176
#define ASSERTLITTLEASSERTLITTLE452,12229
class StreamStream461,12309
	virtual ~Stream(void) { close(); }~Stream464,12332
	virtual void close(void) {}close465,12368
class StreamMemory : public StreamStreamMemory491,13200
	uint8 *data;data493,13237
	uint32 length;length494,13251
	uint32 capacity;capacity495,13267
	uint32 position;position496,13285
	enum {__anon9585f0f60103507,13598
		S_EOF = 0xFFFFFFFFS_EOF508,13606
class StreamFile : public StreamStreamFile512,13635
	FILE *file;file514,13670
	StreamFile(void) { file = nil; }StreamFile516,13691
enum PlatformPlatform526,13975
	PLATFORM_NULL = 0,PLATFORM_NULL528,13991
	PLATFORM_GL   = 2,PLATFORM_GL530,14020
	PLATFORM_PS2  = 4,PLATFORM_PS2532,14048
	PLATFORM_XBOX = 5,PLATFORM_XBOX533,14068
	PLATFORM_D3D8 = 8,PLATFORM_D3D8536,14113
	PLATFORM_D3D9 = 9,PLATFORM_D3D9537,14133
	PLATFORM_WDGL = 11,	// WarDrum OpenGLPLATFORM_WDGL542,14190
	PLATFORM_GL3  = 12,	// my GL3 implementationPLATFORM_GL3543,14229
	PLATFORM_3DS  = 13,PLATFORM_3DS544,14275
	NUM_PLATFORMS,NUM_PLATFORMS546,14297
	FOURCC_PS2 = 0x00325350		// 'PS2\0'FOURCC_PS2548,14314
#define MAKEPLUGINID(MAKEPLUGINID551,14355
#define MAKEPIPEID(MAKEPIPEID552,14421
enum VendorIDVendorID554,14487
	VEND_CORE           = 0,VEND_CORE556,14503
	VEND_CRITERIONTK    = 1,VEND_CRITERIONTK557,14529
	VEND_CRITERIONINT   = 4,VEND_CRITERIONINT558,14555
	VEND_CRITERIONWORLD = 5,VEND_CRITERIONWORLD559,14581
	VEND_RASTER         = 10,VEND_RASTER561,14648
	VEND_DRIVER         = 11VEND_DRIVER563,14718
enum PluginIDPluginID568,14786
	ID_NAOBJECT      = MAKEPLUGINID(VEND_CORE, 0x00),ID_NAOBJECT571,14811
	ID_STRUCT        = MAKEPLUGINID(VEND_CORE, 0x01),ID_STRUCT572,14862
	ID_STRING        = MAKEPLUGINID(VEND_CORE, 0x02),ID_STRING573,14913
	ID_EXTENSION     = MAKEPLUGINID(VEND_CORE, 0x03),ID_EXTENSION574,14964
	ID_CAMERA        = MAKEPLUGINID(VEND_CORE, 0x05),ID_CAMERA575,15015
	ID_TEXTURE       = MAKEPLUGINID(VEND_CORE, 0x06),ID_TEXTURE576,15066
	ID_MATERIAL      = MAKEPLUGINID(VEND_CORE, 0x07),ID_MATERIAL577,15117
	ID_MATLIST       = MAKEPLUGINID(VEND_CORE, 0x08),ID_MATLIST578,15168
	ID_WORLD         = MAKEPLUGINID(VEND_CORE, 0x0B),ID_WORLD579,15219
	ID_MATRIX        = MAKEPLUGINID(VEND_CORE, 0x0D),ID_MATRIX580,15270
	ID_FRAMELIST     = MAKEPLUGINID(VEND_CORE, 0x0E),ID_FRAMELIST581,15321
	ID_GEOMETRY      = MAKEPLUGINID(VEND_CORE, 0x0F),ID_GEOMETRY582,15372
	ID_CLUMP         = MAKEPLUGINID(VEND_CORE, 0x10),ID_CLUMP583,15423
	ID_LIGHT         = MAKEPLUGINID(VEND_CORE, 0x12),ID_LIGHT584,15474
	ID_ATOMIC        = MAKEPLUGINID(VEND_CORE, 0x14),ID_ATOMIC585,15525
	ID_TEXTURENATIVE = MAKEPLUGINID(VEND_CORE, 0x15),ID_TEXTURENATIVE586,15576
	ID_TEXDICTIONARY = MAKEPLUGINID(VEND_CORE, 0x16),ID_TEXDICTIONARY587,15627
	ID_IMAGE         = MAKEPLUGINID(VEND_CORE, 0x18),ID_IMAGE588,15678
	ID_GEOMETRYLIST  = MAKEPLUGINID(VEND_CORE, 0x1A),ID_GEOMETRYLIST589,15729
	ID_ANIMANIMATION = MAKEPLUGINID(VEND_CORE, 0x1B),ID_ANIMANIMATION590,15780
	ID_RIGHTTORENDER = MAKEPLUGINID(VEND_CORE, 0x1F),ID_RIGHTTORENDER591,15831
	ID_UVANIMDICT    = MAKEPLUGINID(VEND_CORE, 0x2B),ID_UVANIMDICT592,15882
	ID_SKYMIPMAP     = MAKEPLUGINID(VEND_CRITERIONTK, 0x10),ID_SKYMIPMAP595,15946
	ID_SKIN          = MAKEPLUGINID(VEND_CRITERIONTK, 0x16),ID_SKIN596,16004
	ID_HANIM         = MAKEPLUGINID(VEND_CRITERIONTK, 0x1E),ID_HANIM597,16062
	ID_USERDATA      = MAKEPLUGINID(VEND_CRITERIONTK, 0x1F),ID_USERDATA598,16120
	ID_MATFX         = MAKEPLUGINID(VEND_CRITERIONTK, 0x20),ID_MATFX599,16178
	ID_ANISOT        = MAKEPLUGINID(VEND_CRITERIONTK, 0x27),ID_ANISOT600,16236
	ID_PDS           = MAKEPLUGINID(VEND_CRITERIONTK, 0x31),ID_PDS601,16294
	ID_ADC           = MAKEPLUGINID(VEND_CRITERIONTK, 0x34),ID_ADC602,16352
	ID_UVANIMATION   = MAKEPLUGINID(VEND_CRITERIONTK, 0x35),ID_UVANIMATION603,16410
	ID_MESH          = MAKEPLUGINID(VEND_CRITERIONWORLD, 0x0E),ID_MESH606,16479
	ID_NATIVEDATA    = MAKEPLUGINID(VEND_CRITERIONWORLD, 0x10),ID_NATIVEDATA607,16540
	ID_VERTEXFMT     = MAKEPLUGINID(VEND_CRITERIONWORLD, 0x11),ID_VERTEXFMT608,16601
	ID_RASTERGL      = MAKEPLUGINID(VEND_RASTER, PLATFORM_GL),ID_RASTERGL611,16688
	ID_RASTERPS2     = MAKEPLUGINID(VEND_RASTER, PLATFORM_PS2),ID_RASTERPS2612,16748
	ID_RASTERXBOX    = MAKEPLUGINID(VEND_RASTER, PLATFORM_XBOX),ID_RASTERXBOX613,16809
	ID_RASTERD3D8    = MAKEPLUGINID(VEND_RASTER, PLATFORM_D3D8),ID_RASTERD3D8614,16871
	ID_RASTERD3D9    = MAKEPLUGINID(VEND_RASTER, PLATFORM_D3D9),ID_RASTERD3D9615,16933
	ID_RASTERWDGL    = MAKEPLUGINID(VEND_RASTER, PLATFORM_WDGL),ID_RASTERWDGL616,16995
	ID_RASTERGL3     = MAKEPLUGINID(VEND_RASTER, PLATFORM_GL3),ID_RASTERGL3617,17057
	ID_RASTERC3D     = MAKEPLUGINID(VEND_RASTER, PLATFORM_3DS),ID_RASTERC3D618,17118
	ID_DRIVER        = MAKEPLUGINID(VEND_DRIVER, 0)ID_DRIVER621,17240
enum CoreModuleIDCoreModuleID624,17293
	ID_NAMODULE      = MAKEPLUGINID(VEND_CRITERIONINT, 0x00),ID_NAMODULE626,17313
	ID_FRAMEMODULE   = MAKEPLUGINID(VEND_CRITERIONINT, 0x03),ID_FRAMEMODULE629,17394
	ID_IMAGEMODULE   = MAKEPLUGINID(VEND_CRITERIONINT, 0x06),ID_IMAGEMODULE632,17475
	ID_RASTERMODULE  = MAKEPLUGINID(VEND_CRITERIONINT, 0x07),ID_RASTERMODULE633,17534
	ID_TEXTUREMODULE = MAKEPLUGINID(VEND_CRITERIONINT, 0x08)ID_TEXTUREMODULE634,17593
#define ECODE(ECODE647,17772
enum ErrorsErrors649,17795
	ERR_NONE = 0x80000000,ERR_NONE651,17809
libraryIDPack(int version, int build)libraryIDPack675,18239
libraryIDUnpackVersion(uint32 libid)libraryIDUnpackVersion684,18433
libraryIDUnpackBuild(uint32 libid)libraryIDUnpackBuild694,18609
struct ChunkHeaderInfoChunkHeaderInfo702,18716
	uint32 type;type704,18741
	uint32 length;length705,18755
	uint32 version, build;version706,18771
	uint32 version, build;build706,18771

src/d3d/d3d8render.cpp,245
#define WITH_D3DWITH_D3D6,80
namespace rw {rw15,260
namespace d3d8 {d3d816,275
void defaultRenderCB(Atomic*, InstanceDataHeader*) {}defaultRenderCB20,330
defaultRenderCB(Atomic *atomic, InstanceDataHeader *header)defaultRenderCB26,442

src/d3d/xboxskin.cpp,963
#define PLUGIN_ID PLUGIN_ID16,297
namespace rw {rw18,324
namespace xbox {xbox19,339
struct NativeSkinNativeSkin21,357
	int32 table1[256];	// maps indices to bonestable123,377
	int32 table2[256];	// maps bones to indicestable224,422
	int32 numUsedBones;numUsedBones25,467
	void *vertexBuffer;vertexBuffer26,488
	int32 stride;stride27,509
readNativeSkin(Stream *stream, int32, void *object, int32 offset)readNativeSkin31,536
writeNativeSkin(Stream *stream, int32 len, void *object, int32 offset)writeNativeSkin73,1808
getSizeNativeSkin(void *object, int32 offset)getSizeNativeSkin100,2764
skinInstanceCB(Geometry *geo, InstanceDataHeader *header)skinInstanceCB115,3172
skinUninstanceCB(Geometry *geo, InstanceDataHeader *header)skinUninstanceCB169,4564
skinOpen(void *o, int32, int32)skinOpen219,5757
skinClose(void *o, int32, int32)skinClose226,5878
initSkin(void)initSkin234,6043
makeSkinPipeline(void)makeSkinPipeline241,6173

src/d3d/xboxvfmt.cpp,810
namespace rw {rw16,297
namespace xbox {xbox17,312
static int32 vertexFmtOffset;vertexFmtOffset19,330
uint32 vertexFormatSizes[6] = {vertexFormatSizes21,361
getVertexFmt(Geometry *g)getVertexFmt26,423
makeVertexFmt(int32 flags, uint32 numTexSets)makeVertexFmt32,511
getVertexFmtStride(uint32 fmt)getVertexFmtStride47,845
createVertexFmt(void *object, int32 offset, int32)createVertexFmt66,1271
copyVertexFmt(void *dst, void *src, int32 offset, int32)copyVertexFmt73,1400
readVertexFmt(Stream *stream, int32, void *object, int32 offset, int32)readVertexFmt80,1564
writeVertexFmt(Stream *stream, int32, void *object, int32 offset, int32)writeVertexFmt89,1797
getSizeVertexFmt(void*, int32, int32)getSizeVertexFmt96,1962
registerVertexFormatPlugin(void)registerVertexFormatPlugin104,2069

src/d3d/d3d9skin.cpp,1204
#define WITH_D3DWITH_D3D6,80
namespace rw {rw19,358
namespace d3d9 {d3d920,373
void skinInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance) {}skinInstanceCB24,428
void skinRenderCB(Atomic *atomic, InstanceDataHeader *header) {}skinRenderCB25,513
static void *skin_amb_VS;skin_amb_VS29,586
static void *skin_amb_dir_VS;skin_amb_dir_VS30,612
static void *skin_all_VS;skin_all_VS31,642
#define NUMDECLELT NUMDECLELT33,669
skinInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance)skinInstanceCB36,697
{__anona81708800103228,6160
	VSLOC_boneMatrices = VSLOC_afterLightsVSLOC_boneMatrices229,6162
static float skinMatrices[64*16];skinMatrices232,6206
uploadSkinMatrices(Atomic *a)uploadSkinMatrices235,6246
skinRenderCB(Atomic *atomic, InstanceDataHeader *header)skinRenderCB289,7477
#define VS_NAME VS_NAME330,8628
#define PS_NAME PS_NAME331,8656
createSkinShaders(void)createSkinShaders334,8690
destroySkinShaders(void)destroySkinShaders359,9221
skinOpen(void *o, int32, int32)skinOpen376,9470
skinClose(void *o, int32, int32)skinClose387,9636
initSkin(void)initSkin399,9847
makeSkinPipeline(void)makeSkinPipeline406,9977

src/d3d/rwd3dimpl.h,978
namespace rw {rw1,0
namespace d3d {d3d2,15
struct DisplayModeDisplayMode20,771
	D3DDISPLAYMODE mode;mode22,792
	uint32 flags;flags23,814
struct D3d9GlobalsD3d9Globals26,833
	HWND window;window28,854
	IDirect3D9 *d3d9;d3d930,869
	int numAdapters;numAdapters31,888
	int adapter;adapter32,906
	D3DCAPS9 caps;caps33,920
	DisplayMode *modes;modes34,936
	int numModes;numModes35,957
	int currentMode;currentMode36,972
	DisplayMode startMode;startMode37,990
	uint32 msLevel;msLevel39,1016
	D3DPRESENT_PARAMETERS present;present41,1034
	IDirect3DSurface9 *defaultRenderTarget;defaultRenderTarget43,1067
	IDirect3DSurface9 *defaultDepthSurf;defaultDepthSurf44,1108
	int numTextures;numTextures46,1147
	int numVertexShaders;numVertexShaders47,1165
	int numPixelShaders;numPixelShaders48,1188
	int numVertexBuffers;numVertexBuffers49,1210
	int numIndexBuffers;numIndexBuffers50,1233
	int numVertexDeclarations;numVertexDeclarations51,1255

src/d3d/rwxboximpl.h,49
namespace rw {rw1,0
namespace xbox {xbox2,15

src/d3d/d3d9render.cpp,642
#define WITH_D3DWITH_D3D6,80
namespace rw {rw16,285
namespace d3d9 {d3d917,300
void defaultRenderCB(Atomic*, InstanceDataHeader*) {}defaultRenderCB21,355
void defaultRenderCB_Shader(Atomic *atomic, InstanceDataHeader *header) {}defaultRenderCB_Shader22,409
drawInst_simple(d3d9::InstanceDataHeader *header, d3d9::InstanceData *inst)drawInst_simple26,496
drawInst_GSemu(d3d9::InstanceDataHeader *header, InstanceData *inst)drawInst_GSemu36,913
drawInst(d3d9::InstanceDataHeader *header, d3d9::InstanceData *inst)drawInst68,1956
defaultRenderCB_Shader(Atomic *atomic, InstanceDataHeader *header)defaultRenderCB_Shader145,4883

src/d3d/rwd3d8.h,1087
namespace rw {rw1,0
namespace d3d8 {d3d82,15
struct InstanceDataInstanceData6,70
	uint32    minVert;minVert8,92
	int32     stride;stride9,112
	int32     numVertices;numVertices10,131
	int32     numIndices;numIndices11,155
	Material *material;material12,178
	uint32    vertexShader;vertexShader13,199
	uint32    primType;primType14,224
	void     *indexBuffer;indexBuffer15,245
	void     *vertexBuffer;vertexBuffer16,269
	uint32    baseIndex;baseIndex17,294
	uint8     vertexAlpha;vertexAlpha18,316
	uint8     managed;managed19,340
	uint8     remapped;remapped20,360
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader23,385
	uint16  serialNumber;serialNumber25,438
	uint16  numMeshes;numMeshes26,461
	InstanceData *inst;inst28,482
class ObjPipeline : public rw::ObjPipelineObjPipeline40,911
	void (*instanceCB)(Geometry *geo, InstanceData *header);instanceCB46,1018
	void (*uninstanceCB)(Geometry *geo, InstanceData *header);uninstanceCB47,1076
	void (*renderCB)(Atomic *atomic, InstanceDataHeader *header);renderCB48,1136

src/d3d/d3d9matfx.cpp,1650
#define WITH_D3DWITH_D3D6,80
namespace rw {rw19,358
namespace d3d9 {d3d920,373
void matfxRenderCB_Shader(Atomic *atomic, InstanceDataHeader *header) {}matfxRenderCB_Shader24,428
static void *matfx_env_amb_VS;matfx_env_amb_VS27,508
static void *matfx_env_amb_dir_VS;matfx_env_amb_dir_VS28,539
static void *matfx_env_all_VS;matfx_env_all_VS29,574
static void *matfx_env_PS;matfx_env_PS30,605
static void *matfx_env_tex_PS;matfx_env_tex_PS31,632
{__anonf6b0474b010334,669
	VSLOC_texMat = VSLOC_afterLights,VSLOC_texMat35,671
	PSLOC_shininess = 1,PSLOC_shininess37,707
	PSLOC_colorClamp = 2PSLOC_colorClamp38,729
matfxRender_Default(InstanceDataHeader *header, InstanceData *inst, int32 lightBits)matfxRender_Default42,760
static Frame *lastEnvFrame;lastEnvFrame65,1344
static RawMatrix normal2texcoord = {normal2texcoord67,1373
uploadEnvMatrix(Frame *frame)uploadEnvMatrix75,1538
matfxRender_EnvMap(InstanceDataHeader *header, InstanceData *inst, int32 lightBits, MatFX::Env *matfxRender_EnvMap96,2071
	struct  {__anonf6b0474b0208112,2492
		float shininess;shininess113,2503
		float disableFBA;disableFBA114,2522
		float unused[2];unused115,2542
matfxRenderCB_Shader(Atomic *atomic, InstanceDataHeader *header)matfxRenderCB_Shader150,3595
#define VS_NAME VS_NAME198,4914
#define PS_NAME PS_NAME199,4942
createMatFXShaders(void)createMatFXShaders202,4976
destroyMatFXShaders(void)destroyMatFXShaders240,5702
matfxOpen(void *o, int32, int32)matfxOpen262,6082
matfxClose(void *o, int32, int32)matfxClose273,6252
initMatFX(void)initMatFX285,6467
makeMatFXPipeline(void)makeMatFXPipeline292,6601

src/d3d/d3d8skin.cpp,230
namespace rw {rw17,316
namespace d3d8 {d3d818,331
skinOpen(void *o, int32, int32)skinOpen22,383
skinClose(void *o, int32, int32)skinClose29,504
initSkin(void)initSkin37,669
makeSkinPipeline(void)makeSkinPipeline44,799

src/d3d/rwd3d.h,12202
namespace rw {rw7,64
struct EngineOpenParamsEngineOpenParams12,113
	HWND window;window14,139
namespace d3d {d3d28,329
#define COLOR_ARGB(COLOR_ARGB40,521
struct Im3DVertexIm3DVertex42,630
	V3d position;position44,650
	uint32 color;color45,665
	float32 u, v;u46,680
	float32 u, v;v46,680
	void setX(float32 x) { this->position.x = x; }setX48,696
	void setY(float32 y) { this->position.y = y; }setY49,744
	void setZ(float32 z) { this->position.z = z; }setZ50,792
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a) { this->color = COLOR_ARGB(a, r, g, b); }setColor51,840
	void setU(float32 u) { this->u = u; }setU52,933
	void setV(float32 v) { this->v = v; }setV53,972
	float getX(void) { return this->position.x; }getX55,1012
	float getY(void) { return this->position.y; }getY56,1059
	float getZ(void) { return this->position.z; }getZ57,1106
	RGBA getColor(void) { return makeRGBA(this->color>>16 & 0xFF, this->color>>8 & 0xFF,getColor58,1153
	float getU(void) { return this->u; }getU60,1288
	float getV(void) { return this->v; }getV61,1326
struct Im2DVertexIm2DVertex64,1368
	float32 x, y, z;x66,1388
	float32 x, y, z;y66,1388
	float32 x, y, z;z66,1388
	float32 w;w68,1480
	uint32 color;color69,1492
	float32 u, v;u70,1507
	float32 u, v;v70,1507
	void setScreenX(float32 x) { this->x = x; }setScreenX72,1523
	void setScreenY(float32 y) { this->y = y; }setScreenY73,1568
	void setScreenZ(float32 z) { this->z = z; }setScreenZ74,1613
	void setCameraZ(float32 z) { this->w = z; }setCameraZ75,1658
	void setRecipCameraZ(float32 recipz) { this->w = 1.0f/recipz; }setRecipCameraZ77,1765
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a) { this->color = COLOR_ARGB(a, r, g, b); }setColor78,1830
	void setU(float32 u, float recipZ) { this->u = u; }setU79,1923
	void setV(float32 v, float recipZ) { this->v = v; }setV80,1976
	float getScreenX(void) { return this->x; }getScreenX82,2030
	float getScreenY(void) { return this->y; }getScreenY83,2074
	float getScreenZ(void) { return this->z; }getScreenZ84,2118
	float getCameraZ(void) { return this->w; }getCameraZ87,2264
	float getRecipCameraZ(void) { return 1.0f/this->w; }getRecipCameraZ88,2308
	RGBA getColor(void) { return makeRGBA(this->color>>16 & 0xFF, this->color>>8 & 0xFF,getColor89,2362
	float getU(void) { return this->u; }getU91,2497
	float getV(void) { return this->v; }getV92,2535
#define MAKEFOURCC(MAKEFOURCC97,2602
enum {__anon2e7c16600103101,2827
	D3DFMT_UNKNOWN              =  0,D3DFMT_UNKNOWN102,2834
	D3DFMT_R8G8B8               = 20,D3DFMT_R8G8B8104,2870
	D3DFMT_A8R8G8B8             = 21,D3DFMT_A8R8G8B8105,2905
	D3DFMT_X8R8G8B8             = 22,D3DFMT_X8R8G8B8106,2940
	D3DFMT_R5G6B5               = 23,D3DFMT_R5G6B5107,2975
	D3DFMT_X1R5G5B5             = 24,D3DFMT_X1R5G5B5108,3010
	D3DFMT_A1R5G5B5             = 25,D3DFMT_A1R5G5B5109,3045
	D3DFMT_A4R4G4B4             = 26,D3DFMT_A4R4G4B4110,3080
	D3DFMT_R3G3B2               = 27,D3DFMT_R3G3B2111,3115
	D3DFMT_A8                   = 28,D3DFMT_A8112,3150
	D3DFMT_A8R3G3B2             = 29,D3DFMT_A8R3G3B2113,3185
	D3DFMT_X4R4G4B4             = 30,D3DFMT_X4R4G4B4114,3220
	D3DFMT_A2B10G10R10          = 31,D3DFMT_A2B10G10R10115,3255
	D3DFMT_A8B8G8R8             = 32,D3DFMT_A8B8G8R8116,3290
	D3DFMT_X8B8G8R8             = 33,D3DFMT_X8B8G8R8117,3325
	D3DFMT_G16R16               = 34,D3DFMT_G16R16118,3360
	D3DFMT_A2R10G10B10          = 35,D3DFMT_A2R10G10B10119,3395
	D3DFMT_A16B16G16R16         = 36,D3DFMT_A16B16G16R16120,3430
	D3DFMT_A8P8                 = 40,D3DFMT_A8P8122,3466
	D3DFMT_P8                   = 41,D3DFMT_P8123,3501
	D3DFMT_L8                   = 50,D3DFMT_L8125,3537
	D3DFMT_A8L8                 = 51,D3DFMT_A8L8126,3572
	D3DFMT_A4L4                 = 52,D3DFMT_A4L4127,3607
	D3DFMT_V8U8                 = 60,D3DFMT_V8U8129,3643
	D3DFMT_L6V5U5               = 61,D3DFMT_L6V5U5130,3678
	D3DFMT_X8L8V8U8             = 62,D3DFMT_X8L8V8U8131,3713
	D3DFMT_Q8W8V8U8             = 63,D3DFMT_Q8W8V8U8132,3748
	D3DFMT_V16U16               = 64,D3DFMT_V16U16133,3783
	D3DFMT_A2W10V10U10          = 67,D3DFMT_A2W10V10U10134,3818
	D3DFMT_UYVY                 = MAKEFOURCC('U', 'Y', 'V', 'Y'),D3DFMT_UYVY136,3854
	D3DFMT_R8G8_B8G8            = MAKEFOURCC('R', 'G', 'B', 'G'),D3DFMT_R8G8_B8G8137,3917
	D3DFMT_YUY2                 = MAKEFOURCC('Y', 'U', 'Y', '2'),D3DFMT_YUY2138,3980
	D3DFMT_G8R8_G8B8            = MAKEFOURCC('G', 'R', 'G', 'B'),D3DFMT_G8R8_G8B8139,4043
	D3DFMT_DXT1                 = MAKEFOURCC('D', 'X', 'T', '1'),D3DFMT_DXT1140,4106
	D3DFMT_DXT2                 = MAKEFOURCC('D', 'X', 'T', '2'),D3DFMT_DXT2141,4169
	D3DFMT_DXT3                 = MAKEFOURCC('D', 'X', 'T', '3'),D3DFMT_DXT3142,4232
	D3DFMT_DXT4                 = MAKEFOURCC('D', 'X', 'T', '4'),D3DFMT_DXT4143,4295
	D3DFMT_DXT5                 = MAKEFOURCC('D', 'X', 'T', '5'),D3DFMT_DXT5144,4358
	D3DFMT_D16_LOCKABLE         = 70,D3DFMT_D16_LOCKABLE146,4422
	D3DFMT_D32                  = 71,D3DFMT_D32147,4457
	D3DFMT_D15S1                = 73,D3DFMT_D15S1148,4492
	D3DFMT_D24S8                = 75,D3DFMT_D24S8149,4527
	D3DFMT_D24X8                = 77,D3DFMT_D24X8150,4562
	D3DFMT_D24X4S4              = 79,D3DFMT_D24X4S4151,4597
	D3DFMT_D16                  = 80,D3DFMT_D16152,4632
	D3DFMT_D32F_LOCKABLE        = 82,D3DFMT_D32F_LOCKABLE154,4668
	D3DFMT_D24FS8               = 83,D3DFMT_D24FS8155,4703
	D3DFMT_D32_LOCKABLE         = 84,D3DFMT_D32_LOCKABLE159,4801
	D3DFMT_S8_LOCKABLE          = 85,D3DFMT_S8_LOCKABLE160,4836
	D3DFMT_L16                  = 81,D3DFMT_L16162,4872
	D3DFMT_VERTEXDATA           =100,D3DFMT_VERTEXDATA164,4908
	D3DFMT_INDEX16              =101,D3DFMT_INDEX16165,4943
	D3DFMT_INDEX32              =102,D3DFMT_INDEX32166,4978
	D3DFMT_Q16W16V16U16         =110,D3DFMT_Q16W16V16U16168,5014
	D3DFMT_MULTI2_ARGB8         = MAKEFOURCC('M','E','T','1'),D3DFMT_MULTI2_ARGB8170,5050
	D3DFMT_R16F                 = 111,D3DFMT_R16F175,5187
	D3DFMT_G16R16F              = 112,D3DFMT_G16R16F176,5223
	D3DFMT_A16B16G16R16F        = 113,D3DFMT_A16B16G16R16F177,5259
	D3DFMT_R32F                 = 114,D3DFMT_R32F180,5341
	D3DFMT_G32R32F              = 115,D3DFMT_G32R32F181,5377
	D3DFMT_A32B32G32R32F        = 116,D3DFMT_A32B32G32R32F182,5413
	D3DFMT_CxV8U8               = 117,D3DFMT_CxV8U8184,5450
	D3DFMT_A1                   = 118,D3DFMT_A1188,5541
	D3DFMT_A2B10G10R10_XR_BIAS  = 119,D3DFMT_A2B10G10R10_XR_BIAS190,5604
	D3DFMT_BINARYBUFFER         = 199D3DFMT_BINARYBUFFER192,5704
enum {__anon2e7c16600203195,5743
	D3DLOCK_NOSYSLOCK     =  0,  // ignoredD3DLOCK_NOSYSLOCK196,5750
	D3DPOOL_MANAGED       =  0,  // ignoredD3DPOOL_MANAGED197,5791
	D3DPT_TRIANGLELIST    =  4,D3DPT_TRIANGLELIST198,5832
	D3DPT_TRIANGLESTRIP   =  5,D3DPT_TRIANGLESTRIP199,5861
	D3DDECLTYPE_FLOAT1    =  0,  // 1D float expanded to (value, 0., 0., 1.)D3DDECLTYPE_FLOAT1202,5892
	D3DDECLTYPE_FLOAT2    =  1,  // 2D float expanded to (value, value, 0., 1.)D3DDECLTYPE_FLOAT2203,5966
	D3DDECLTYPE_FLOAT3    =  2,  // 3D float expanded to (value, value, value, 1.)D3DDECLTYPE_FLOAT3204,6043
	D3DDECLTYPE_FLOAT4    =  3,  // 4D floatD3DDECLTYPE_FLOAT4205,6123
	D3DDECLTYPE_D3DCOLOR  =  4,  // 4D packed unsigned bytes mapped to 0. to 1. rangeD3DDECLTYPE_D3DCOLOR206,6165
	D3DDECLTYPE_UBYTE4    =  5,  // 4D unsigned byteD3DDECLTYPE_UBYTE4208,6341
	D3DDECLTYPE_SHORT2    =  6,  // 2D signed short expanded to (value, value, 0., 1.)D3DDECLTYPE_SHORT2209,6391
	D3DDECLTYPE_SHORT4    =  7,  // 4D signed shortD3DDECLTYPE_SHORT4210,6475
	D3DDECLTYPE_UBYTE4N   =  8,  // Each of 4 bytes is normalized by dividing to 255.0D3DDECLTYPE_UBYTE4N212,6525
	D3DDECLTYPE_SHORT2N   =  9,  // 2D signed short normalized (v[0]/32767.0,v[1]/32767.0,0,1)D3DDECLTYPE_SHORT2N213,6609
	D3DDECLTYPE_SHORT4N   = 10,  // 4D signed short normalized (v[0]/32767.0,v[1]/32767.0,v[2]/3276D3DDECLTYPE_SHORT4N214,6701
	D3DDECLTYPE_USHORT2N  = 11,  // 2D unsigned short normalized (v[0]/65535.0,v[1]/65535.0,0,1)D3DDECLTYPE_USHORT2N215,6815
	D3DDECLTYPE_USHORT4N  = 12,  // 4D unsigned short normalized (v[0]/65535.0,v[1]/65535.0,v[2]/65D3DDECLTYPE_USHORT4N216,6909
	D3DDECLTYPE_UDEC3     = 13,  // 3D unsigned 10 10 10 format expanded to (value, value, value, 1D3DDECLTYPE_UDEC3217,7025
	D3DDECLTYPE_DEC3N     = 14,  // 3D signed 10 10 10 format normalized and expanded to (v[0]/511.D3DDECLTYPE_DEC3N218,7123
	D3DDECLTYPE_FLOAT16_2 = 15,  // Two 16-bit floating point values, expanded to (value, value, 0,D3DDECLTYPE_FLOAT16_2219,7249
	D3DDECLTYPE_FLOAT16_4 = 16,  // Four 16-bit floating point valuesD3DDECLTYPE_FLOAT16_4220,7349
	D3DDECLTYPE_UNUSED    = 17,  // When the type field in a decl is unused.D3DDECLTYPE_UNUSED221,7416
	D3DDECLMETHOD_DEFAULT =  0,D3DDECLMETHOD_DEFAULT224,7492
	D3DDECLUSAGE_POSITION = 0,D3DDECLUSAGE_POSITION227,7523
	D3DDECLUSAGE_BLENDWEIGHT,   // 1D3DDECLUSAGE_BLENDWEIGHT228,7551
	D3DDECLUSAGE_BLENDINDICES,  // 2D3DDECLUSAGE_BLENDINDICES229,7585
	D3DDECLUSAGE_NORMAL,        // 3D3DDECLUSAGE_NORMAL230,7619
	D3DDECLUSAGE_PSIZE,         // 4D3DDECLUSAGE_PSIZE231,7653
	D3DDECLUSAGE_TEXCOORD,      // 5D3DDECLUSAGE_TEXCOORD232,7687
	D3DDECLUSAGE_TANGENT,       // 6D3DDECLUSAGE_TANGENT233,7721
	D3DDECLUSAGE_BINORMAL,      // 7D3DDECLUSAGE_BINORMAL234,7755
	D3DDECLUSAGE_TESSFACTOR,    // 8D3DDECLUSAGE_TESSFACTOR235,7789
	D3DDECLUSAGE_POSITIONT,     // 9D3DDECLUSAGE_POSITIONT236,7823
	D3DDECLUSAGE_COLOR,         // 10D3DDECLUSAGE_COLOR237,7857
	D3DDECLUSAGE_FOG,           // 11D3DDECLUSAGE_FOG238,7892
	D3DDECLUSAGE_DEPTH,         // 12D3DDECLUSAGE_DEPTH239,7927
	D3DDECLUSAGE_SAMPLE         // 13D3DDECLUSAGE_SAMPLE240,7962
	D3DUSAGE_AUTOGENMIPMAP = 0x400D3DUSAGE_AUTOGENMIPMAP243,8001
struct D3dRasterD3dRaster266,8785
	void *texture;texture268,8804
	void *palette;palette269,8820
	void *lockedSurf;lockedSurf270,8836
	uint32 format;format271,8855
	uint32 bpp;	// bytes per pixelbpp272,8871
	bool hasAlpha;hasAlpha273,8903
	bool customFormat;customFormat274,8919
	bool autogenMipmap;autogenMipmap275,8939
#define GETD3DRASTEREXT(GETD3DRASTEREXT285,9278
inline void setMaterial(uint32 flags, const RGBA &color, const SurfaceProperties &surfaceprops, setMaterial299,9931
struct VertexConstantDataVertexConstantData325,10726
	V3d normal;normal327,10754
	RGBA color;color328,10767
	TexCoords texCoors[8];texCoors329,10780
struct D3dShaderStateD3dShaderState334,10893
	struct {__anon2e7c16600308337,10928
		float32 start;start338,10938
		float32 end;end339,10955
		float32 range;	// 1/(start-end)range340,10970
		float32 disable;	// lower clampdisable341,11004
	} fogData, fogDisable;fogData342,11038
	} fogData, fogDisable;fogDisable342,11038
	RGBA matColor;matColor343,11062
	SurfaceProperties surfProps;surfProps344,11078
	float extraSurfProp;extraSurfProp345,11108
	float lightOffset[3];lightOffset346,11130
	int32 numDir, numPoint, numSpot;numDir347,11153
	int32 numDir, numPoint, numSpot;numPoint347,11153
	int32 numDir, numPoint, numSpot;numSpot347,11153
	RGBAf ambient;ambient348,11187
	RGBAf fogColor;fogColor350,11214
	bool fogDirty;fogDirty352,11232
{__anon2e7c16600403358,11331
	VSLOC_combined	= 0,VSLOC_combined359,11333
	VSLOC_world	= 4,VSLOC_world360,11354
	VSLOC_normal	= 8,VSLOC_normal361,11372
	VSLOC_matColor	= 12,VSLOC_matColor362,11391
	VSLOC_surfProps	= 13,VSLOC_surfProps363,11413
	VSLOC_fogData	= 14,VSLOC_fogData364,11436
	VSLOC_ambLight	= 15,VSLOC_ambLight365,11457
	VSLOC_lightOffset	= 16,VSLOC_lightOffset366,11479
	VSLOC_lights	= 17,VSLOC_lights367,11504
	VSLOC_afterLights	= VSLOC_lights + 8*3,VSLOC_afterLights368,11524
	VSLOC_numLights	= 0,VSLOC_numLights370,11566
	PSLOC_fogColor = 0PSLOC_fogColor372,11589
{__anon2e7c16600503377,11640
	VSLIGHT_DIRECT	= 1,VSLIGHT_DIRECT379,11699
	VSLIGHT_POINT	= 2,VSLIGHT_POINT380,11720
	VSLIGHT_SPOT	= 4,VSLIGHT_SPOT381,11740
	VSLIGHT_MASK	= 7,	// all the aboveVSLIGHT_MASK382,11759
	VSLIGHT_AMBIENT = 8,VSLIGHT_AMBIENT384,11813

src/d3d/shaders/standardConstants.h,395
#define surfAmbient surfAmbient9,246
#define surfSpecular surfSpecular10,280
#define surfDiffuse surfDiffuse11,315
#define fogStart fogStart13,350
#define fogEnd fogEnd14,379
#define fogRange fogRange15,406
#define fogDisable fogDisable16,435
#define firstDirLight firstDirLight26,659
#define firstPointLight firstPointLight27,696
#define firstSpotLight firstSpotLight28,735

src/d3d/shaders/default_all_VS.h,48
const BYTE g_vs20_main[] =g_vs20_main147,3396

src/d3d/shaders/skin_amb_dir_VS.h,48
const BYTE g_vs20_main[] =g_vs20_main147,3277

src/d3d/shaders/make_matfx.cmd,0

src/d3d/shaders/default_tex_PS.h,46
const BYTE g_ps20_main[] =g_ps20_main35,604

src/d3d/shaders/skin_amb_VS.h,47
const BYTE g_vs20_main[] =g_vs20_main77,1653

src/d3d/shaders/default_amb_VS.h,47
const BYTE g_vs20_main[] =g_vs20_main53,1024

src/d3d/shaders/default_PS.h,46
const BYTE g_ps20_main[] =g_ps20_main31,473

src/d3d/shaders/matfx_env_amb_VS.h,47
const BYTE g_vs20_main[] =g_vs20_main65,1352

src/d3d/shaders/make_skin.cmd,0

src/d3d/shaders/skin_all_VS.h,48
const BYTE g_vs20_main[] =g_vs20_main189,4537

src/d3d/shaders/lighting.h,445
struct LightLight1,0
	float4 color;	// and radiuscolor3,15
	float4 position;	// and -cos(angle)position4,44
	float4 direction;	// and falloff clampdirection5,81
float3 DoDirLight(Light L, float3 N)DoDirLight8,125
float3 DoDirLightSpec(Light L, float3 N, float3 V, float power)DoDirLightSpec14,237
float3 DoPointLight(Light L, float3 V, float3 N)DoPointLight19,389
float3 DoSpotLight(Light L, float3 V, float3 N)DoSpotLight29,642

src/d3d/shaders/matfx_env_all_VS.h,48
const BYTE g_vs20_main[] =g_vs20_main153,3560

src/d3d/shaders/im2d_PS.h,46
const BYTE g_ps20_main[] =g_ps20_main31,467

src/d3d/shaders/im2d_VS.h,46
const BYTE g_vs20_main[] =g_vs20_main41,721

src/d3d/shaders/make_default.cmd,0

src/d3d/shaders/matfx_env_tex_PS.h,46
const BYTE g_ps20_main[] =g_ps20_main51,993

src/d3d/shaders/matfx_env_amb_dir_VS.h,47
const BYTE g_vs20_main[] =g_vs20_main92,1915

src/d3d/shaders/matfx_env_PS.h,46
const BYTE g_ps20_main[] =g_ps20_main47,885

src/d3d/shaders/default_amb_dir_VS.h,47
const BYTE g_vs20_main[] =g_vs20_main86,1753

src/d3d/shaders/im2d_tex_PS.h,46
const BYTE g_ps20_main[] =g_ps20_main35,598

src/d3d/xbox.cpp,3012
#define PLUGIN_ID PLUGIN_ID16,273
namespace rw {rw18,294
namespace xbox {xbox19,309
driverOpen(void *o, int32, int32)driverOpen22,340
driverClose(void *o, int32, int32)driverClose37,860
registerPlatformPlugins(void)registerPlatformPlugins43,916
destroyNativeData(void *object, int32, int32)destroyNativeData51,1089
readNativeData(Stream *stream, int32, void *object, int32, int32)readNativeData68,1501
writeNativeData(Stream *stream, int32 len, void *object, int32, int32)writeNativeData129,3422
getSizeNativeData(void *object, int32, int32)getSizeNativeData171,4866
registerNativeDataPlugin(void)registerNativeDataPlugin182,5198
enum {__anon556f83f80103192,5530
	D3DPT_TRIANGLELIST    =  5,D3DPT_TRIANGLELIST193,5537
	D3DPT_TRIANGLESTRIP   =  6D3DPT_TRIANGLESTRIP194,5566
instance(rw::ObjPipeline *rwpipe, Atomic *atomic)instance198,5610
uninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)uninstance249,7474
ObjPipeline::init(void)init290,8841
ObjPipeline::create(void)create300,9062
int v3dFormatMap[] = {v3dFormatMap307,9182
int v2dFormatMap[] = {v2dFormatMap311,9283
defaultInstanceCB(Geometry *geo, InstanceDataHeader *header)defaultInstanceCB316,9389
defaultUninstanceCB(Geometry *geo, InstanceDataHeader *header)defaultUninstanceCB358,10699
makeDefaultPipeline(void)makeDefaultPipeline394,11690
int32 nativeRasterOffset;nativeRasterOffset404,11891
calculateTextureSize(uint32 width, uint32 height, uint32 depth, uint32 format)calculateTextureSize407,11932
#define D3DFMT_W11V11U10 D3DFMT_W11V11U10409,12013
createTexture(int32 width, int32 height, int32 numlevels, uint32 format)createTexture490,13858
struct RasterFormatInfoRasterFormatInfo525,14804
	uint32 d3dformat;d3dformat527,14830
	int32 depth;depth528,14849
	bool32 hasAlpha;hasAlpha529,14863
	uint32 rwFormat;rwFormat530,14881
static RasterFormatInfo formatInfoRW[16] = {formatInfoRW534,14936
rasterSetFormat(Raster *raster)rasterSetFormat549,15442
rasterCreateTexture(Raster *raster)rasterCreateTexture567,15995
rasterCreate(Raster *raster)rasterCreate587,16594
rasterLock(Raster *raster, int32 level, int32 lockMode)rasterLock621,17251
rasterUnlock(Raster *raster, int32 level)rasterUnlock642,17925
rasterNumLevels(Raster *raster)rasterNumLevels653,18225
unswizzle(uint8 *dst, uint8 *src, int32 w, int32 h, int32 bpp)unswizzle661,18405
rasterToImage(Raster *raster)rasterToImage695,18904
getLevelSize(Raster *raster, int32 level)getLevelSize824,21556
createNativeRaster(void *object, int32 offset, int32)createNativeRaster832,21750
destroyNativeRaster(void *object, int32, int32)destroyNativeRaster845,22047
copyNativeRaster(void *dst, void *, int32 offset, int32)copyNativeRaster852,22139
registerNativeRaster(void)registerNativeRaster864,22398
readNativeTexture(Stream *stream)readNativeTexture874,22759
writeNativeTexture(Texture *tex, Stream *stream)writeNativeTexture947,24816
getSizeNativeTexture(Texture *tex)getSizeNativeTexture990,26046

src/d3d/xboxmatfx.cpp,238
namespace rw {rw16,297
namespace xbox {xbox17,312
matfxOpen(void *o, int32, int32)matfxOpen20,343
matfxClose(void *o, int32, int32)matfxClose27,467
initMatFX(void)initMatFX35,635
makeMatFXPipeline(void)makeMatFXPipeline42,769

src/d3d/d3dimmed.cpp,1645
#define WITH_D3DWITH_D3D6,80
namespace rw {rw17,308
namespace d3d {d3d18,323
#define NUMINDICES NUMINDICES23,384
#define NUMVERTICES NUMVERTICES24,409
static int primTypeMap[] = {primTypeMap26,436
static IDirect3DVertexDeclaration9 *im2ddecl;im2ddecl36,641
static IDirect3DVertexBuffer9 *im2dvertbuf;im2dvertbuf37,687
static IDirect3DIndexBuffer9 *im2dindbuf;im2dindbuf38,731
void *im2dOverridePS;im2dOverridePS40,774
openIm2D(void)openIm2D43,802
closeIm2D(void)closeIm2D69,1855
static Im2DVertex tmpprimbuf[3];tmpprimbuf83,2108
im2DRenderLine(void *vertices, int32 numVertices, int32 vert1, int32 vert2)im2DRenderLine86,2147
im2DRenderTriangle(void *vertices, int32 numVertices, int32 vert1, int32 vert2, int32 vert3)im2DRenderTriangle95,2394
im2DSetXform(void)im2DSetXform105,2688
im2DRenderPrimitive(PrimitiveType primType, void *vertices, int32 numVertices)im2DRenderPrimitive119,3008
im2DRenderIndexedPrimitive(PrimitiveType primType,im2DRenderIndexedPrimitive169,4187
static IDirect3DVertexDeclaration9 *im3ddecl;im3ddecl231,5743
static IDirect3DVertexBuffer9 *im3dvertbuf;im3dvertbuf232,5789
static IDirect3DIndexBuffer9 *im3dindbuf;im3dindbuf233,5833
static int32 num3DVertices;num3DVertices234,5875
openIm3D(void)openIm3D237,5909
closeIm3D(void)closeIm3D262,6842
im3DTransform(void *vertices, int32 numVertices, Matrix *world, uint32 flags)im3DTransform277,7100
im3DRenderPrimitive(PrimitiveType primType)im3DRenderPrimitive304,7831
im3DRenderIndexedPrimitive(PrimitiveType primType, void *indices, int32 numIndices)im3DRenderIndexedPrimitive338,8534
im3DEnd(void)im3DEnd380,9565

src/d3d/d3drender.cpp,1430
#define WITH_D3DWITH_D3D6,80
namespace rw {rw14,240
namespace d3d {d3d15,255
IDirect3DDevice9 *d3ddevice = nil;d3ddevice18,287
#define MAX_LIGHTS MAX_LIGHTS20,323
#define VS_NAME VS_NAME23,346
#define PS_NAME PS_NAME24,374
void *default_amb_VS;default_amb_VS25,402
void *default_amb_dir_VS;default_amb_dir_VS26,424
void *default_all_VS;default_all_VS27,450
void *default_PS;default_PS28,472
void *default_tex_PS;default_tex_PS29,490
void *im2d_VS;im2d_VS30,512
void *im2d_PS;im2d_PS31,527
void *im2d_tex_PS;im2d_tex_PS32,542
createDefaultShaders(void)createDefaultShaders36,568
destroyDefaultShaders(void)destroyDefaultShaders91,1608
lightingCB_Fix(Atomic *atomic)lightingCB_Fix115,2099
struct LightVSLightVS223,5193
	V3d color; float param0;color225,5210
	V3d color; float param0;param0225,5210
	V3d position; float param1;position226,5236
	V3d position; float param1;param1226,5236
	V3d direction; float param2;direction227,5265
	V3d direction; float param2;param2227,5265
setAmbient(const RGBAf &color)setAmbient231,5304
setNumLights(int numDir, int numPoint, int numSpot)setNumLights240,5500
uploadLights(WorldLights *lightData)uploadLights254,5941
lightingCB_Shader(Atomic *atomic)lightingCB_Shader347,8461
static RawMatrix identityXform = {identityXform374,9205
uploadMatrices(void)uploadMatrices382,9364
uploadMatrices(Matrix *worldMat)uploadMatrices394,9747

src/d3d/rwxbox.h,5944
namespace rw {rw1,0
namespace xbox {xbox2,15
struct InstanceDataInstanceData9,127
	uint32 minVert;minVert11,149
	int32 numVertices;numVertices12,166
	int32 numIndices;numIndices13,186
	void *indexBuffer;indexBuffer14,205
	Material *material;material15,225
	uint32 vertexShader;vertexShader16,246
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader19,272
	int32 size;size21,325
	uint16 serialNumber;serialNumber22,338
	uint16 numMeshes;numMeshes23,360
	uint32 primType;primType24,379
	int32 numVertices;numVertices25,397
	int32 stride;stride26,417
	void *vertexBuffer;vertexBuffer27,432
	bool32 vertexAlpha;vertexAlpha28,453
	InstanceData *begin;begin29,474
	InstanceData *end;end30,496
	uint8 *data;data32,517
class ObjPipeline : public rw::ObjPipelineObjPipeline41,838
	void (*instanceCB)(Geometry *geo, InstanceDataHeader *header);instanceCB47,945
	void (*uninstanceCB)(Geometry *geo, InstanceDataHeader *header);uninstanceCB48,1009
struct XboxRasterXboxRaster82,1880
	void *texture;texture84,1900
	void *palette;palette85,1916
	uint32 format;format86,1932
	uint32 bpp;	// bytes per pixelbpp87,1948
	bool hasAlpha;hasAlpha88,1980
	bool customFormat;customFormat89,1996
	bool32 unknownFlag;unknownFlag90,2016
#define GETXBOXRASTEREXT(GETXBOXRASTEREXT97,2157
enum {__anon2fffca860103103,2407
	D3DFMT_UNKNOWN              = 0xFFFFFFFF,D3DFMT_UNKNOWN104,2414
	D3DFMT_A8R8G8B8             = 0x00000006,D3DFMT_A8R8G8B8108,2483
	D3DFMT_X8R8G8B8             = 0x00000007,D3DFMT_X8R8G8B8109,2526
	D3DFMT_R5G6B5               = 0x00000005,D3DFMT_R5G6B5110,2569
	D3DFMT_R6G5B5               = 0x00000027,D3DFMT_R6G5B5111,2612
	D3DFMT_X1R5G5B5             = 0x00000003,D3DFMT_X1R5G5B5112,2655
	D3DFMT_A1R5G5B5             = 0x00000002,D3DFMT_A1R5G5B5113,2698
	D3DFMT_A4R4G4B4             = 0x00000004,D3DFMT_A4R4G4B4114,2741
	D3DFMT_A8                   = 0x00000019,D3DFMT_A8115,2784
	D3DFMT_A8B8G8R8             = 0x0000003A,D3DFMT_A8B8G8R8116,2827
	D3DFMT_B8G8R8A8             = 0x0000003B,D3DFMT_B8G8R8A8117,2870
	D3DFMT_R4G4B4A4             = 0x00000039,D3DFMT_R4G4B4A4118,2913
	D3DFMT_R5G5B5A1             = 0x00000038,D3DFMT_R5G5B5A1119,2956
	D3DFMT_R8G8B8A8             = 0x0000003C,D3DFMT_R8G8B8A8120,2999
	D3DFMT_R8B8                 = 0x00000029,D3DFMT_R8B8121,3042
	D3DFMT_G8B8                 = 0x00000028,D3DFMT_G8B8122,3085
	D3DFMT_P8                   = 0x0000000B,D3DFMT_P8124,3129
	D3DFMT_L8                   = 0x00000000,D3DFMT_L8126,3173
	D3DFMT_A8L8                 = 0x0000001A,D3DFMT_A8L8127,3216
	D3DFMT_AL8                  = 0x00000001,D3DFMT_AL8128,3259
	D3DFMT_L16                  = 0x00000032,D3DFMT_L16129,3302
	D3DFMT_V8U8                 = 0x00000028,D3DFMT_V8U8131,3346
	D3DFMT_L6V5U5               = 0x00000027,D3DFMT_L6V5U5132,3389
	D3DFMT_X8L8V8U8             = 0x00000007,D3DFMT_X8L8V8U8133,3432
	D3DFMT_Q8W8V8U8             = 0x0000003A,D3DFMT_Q8W8V8U8134,3475
	D3DFMT_V16U16               = 0x00000033,D3DFMT_V16U16135,3518
	D3DFMT_D16_LOCKABLE         = 0x0000002C,D3DFMT_D16_LOCKABLE137,3562
	D3DFMT_D16                  = 0x0000002C,D3DFMT_D16138,3605
	D3DFMT_D24S8                = 0x0000002A,D3DFMT_D24S8139,3648
	D3DFMT_F16                  = 0x0000002D,D3DFMT_F16140,3691
	D3DFMT_F24S8                = 0x0000002B,D3DFMT_F24S8141,3734
	D3DFMT_YUY2                 = 0x00000024,D3DFMT_YUY2145,3798
	D3DFMT_UYVY                 = 0x00000025,D3DFMT_UYVY146,3841
	D3DFMT_DXT1                 = 0x0000000C,D3DFMT_DXT1150,3912
	D3DFMT_DXT2                 = 0x0000000E,D3DFMT_DXT2151,3955
	D3DFMT_DXT3                 = 0x0000000E,D3DFMT_DXT3152,3998
	D3DFMT_DXT4                 = 0x0000000F,D3DFMT_DXT4153,4041
	D3DFMT_DXT5                 = 0x0000000F,D3DFMT_DXT5154,4084
	D3DFMT_LIN_A1R5G5B5         = 0x00000010,D3DFMT_LIN_A1R5G5B5158,4151
	D3DFMT_LIN_A4R4G4B4         = 0x0000001D,D3DFMT_LIN_A4R4G4B4159,4194
	D3DFMT_LIN_A8               = 0x0000001F,D3DFMT_LIN_A8160,4237
	D3DFMT_LIN_A8B8G8R8         = 0x0000003F,D3DFMT_LIN_A8B8G8R8161,4280
	D3DFMT_LIN_A8R8G8B8         = 0x00000012,D3DFMT_LIN_A8R8G8B8162,4323
	D3DFMT_LIN_B8G8R8A8         = 0x00000040,D3DFMT_LIN_B8G8R8A8163,4366
	D3DFMT_LIN_G8B8             = 0x00000017,D3DFMT_LIN_G8B8164,4409
	D3DFMT_LIN_R4G4B4A4         = 0x0000003E,D3DFMT_LIN_R4G4B4A4165,4452
	D3DFMT_LIN_R5G5B5A1         = 0x0000003D,D3DFMT_LIN_R5G5B5A1166,4495
	D3DFMT_LIN_R5G6B5           = 0x00000011,D3DFMT_LIN_R5G6B5167,4538
	D3DFMT_LIN_R6G5B5           = 0x00000037,D3DFMT_LIN_R6G5B5168,4581
	D3DFMT_LIN_R8B8             = 0x00000016,D3DFMT_LIN_R8B8169,4624
	D3DFMT_LIN_R8G8B8A8         = 0x00000041,D3DFMT_LIN_R8G8B8A8170,4667
	D3DFMT_LIN_X1R5G5B5         = 0x0000001C,D3DFMT_LIN_X1R5G5B5171,4710
	D3DFMT_LIN_X8R8G8B8         = 0x0000001E,D3DFMT_LIN_X8R8G8B8172,4753
	D3DFMT_LIN_A8L8             = 0x00000020,D3DFMT_LIN_A8L8174,4797
	D3DFMT_LIN_AL8              = 0x0000001B,D3DFMT_LIN_AL8175,4840
	D3DFMT_LIN_L16              = 0x00000035,D3DFMT_LIN_L16176,4883
	D3DFMT_LIN_L8               = 0x00000013,D3DFMT_LIN_L8177,4926
	D3DFMT_LIN_V16U16           = 0x00000036,D3DFMT_LIN_V16U16179,4970
	D3DFMT_LIN_V8U8             = 0x00000017,D3DFMT_LIN_V8U8180,5013
	D3DFMT_LIN_L6V5U5           = 0x00000037,D3DFMT_LIN_L6V5U5181,5056
	D3DFMT_LIN_X8L8V8U8         = 0x0000001E,D3DFMT_LIN_X8L8V8U8182,5099
	D3DFMT_LIN_Q8W8V8U8         = 0x00000012,D3DFMT_LIN_Q8W8V8U8183,5142
	D3DFMT_LIN_D24S8            = 0x0000002E,D3DFMT_LIN_D24S8185,5186
	D3DFMT_LIN_F24S8            = 0x0000002F,D3DFMT_LIN_F24S8186,5229
	D3DFMT_LIN_D16              = 0x00000030,D3DFMT_LIN_D16187,5272
	D3DFMT_LIN_F16              = 0x00000031,D3DFMT_LIN_F16188,5315
	D3DFMT_VERTEXDATA           = 100,D3DFMT_VERTEXDATA190,5359
	D3DFMT_INDEX16              = 101D3DFMT_INDEX16191,5395

src/d3d/d3d8.cpp,1649
#define WITH_D3DWITH_D3D6,80
#define PLUGIN_ID PLUGIN_ID18,308
namespace rw {rw20,329
namespace d3d8 {d3d821,344
driverOpen(void *o, int32, int32)driverOpen25,396
driverClose(void *o, int32, int32)driverClose41,1092
registerPlatformPlugins(void)registerPlatformPlugins47,1148
makeFVFDeclaration(uint32 flags, int32 numTex)makeFVFDeclaration57,1382
getStride(uint32 flags, int32 numTex)getStride69,1584
destroyNativeData(void *object, int32, int32)destroyNativeData81,1783
readNativeData(Stream *stream, int32, void *object, int32, int32)readNativeData102,2321
writeNativeData(Stream *stream, int32 len, void *object, int32, int32)writeNativeData169,4506
getSizeNativeData(void *object, int32, int32)getSizeNativeData223,6252
registerNativeDataPlugin(void)registerNativeDataPlugin241,6745
instance(rw::ObjPipeline *rwpipe, Atomic *atomic)instance253,7090
uninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)uninstance300,8626
render(rw::ObjPipeline *rwpipe, Atomic *atomic)render334,9698
ObjPipeline::init(void)init348,10081
ObjPipeline::create(void)create360,10360
defaultInstanceCB(Geometry *geo, InstanceData *inst)defaultInstanceCB368,10485
defaultUninstanceCB(Geometry *geo, InstanceData *inst)defaultUninstanceCB407,11705
makeDefaultPipeline(void)makeDefaultPipeline438,12568
readAsImage(Stream *stream, int32 width, int32 height, int32 depth, int32 format, int32 numLevelreadAsImage451,12859
readNativeTexture(Stream *stream)readNativeTexture530,14779
writeNativeTexture(Texture *tex, Stream *stream)writeNativeTexture603,16633
getSizeNativeTexture(Texture *tex)getSizeNativeTexture663,18069

src/d3d/rwd3d9.h,1778
namespace rw {rw1,0
namespace d3d9 {d3d92,15
struct VertexElementVertexElement6,70
	uint16   stream;stream8,93
	uint16   offset;offset9,111
	uint8    type;type10,129
	uint8    method;method11,145
	uint8    usage;usage12,163
	uint8    usageIndex;usageIndex13,180
struct VertexStreamVertexStream16,206
	void  *vertexBuffer;vertexBuffer18,228
	uint32 offset;offset19,250
	uint32 stride;stride20,266
	uint16 geometryFlags;geometryFlags21,282
	uint8  managed;managed22,305
	uint8  dynamicLock;dynamicLock23,322
struct InstanceDataInstanceData26,347
	uint32    numIndex;numIndex28,369
	uint32    minVert;minVert29,390
	Material *material;material30,410
	bool32    vertexAlpha;vertexAlpha31,431
	void     *vertexShader;vertexShader32,455
	uint32    baseIndex;baseIndex33,480
	uint32    numVertices;numVertices34,502
	uint32    startIndex;startIndex35,526
	uint32    numPrimitives;numPrimitives36,549
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader39,579
	uint32  serialNumber;serialNumber41,632
	uint32  numMeshes;numMeshes42,655
	void   *indexBuffer;indexBuffer43,675
	uint32  primType;primType44,697
	VertexStream vertexStream[2];vertexStream45,716
	bool32  useOffsets;useOffsets46,747
	void   *vertexDeclaration;vertexDeclaration47,768
	uint32  totalNumIndex;totalNumIndex48,796
	uint32  totalNumVertex;totalNumVertex49,820
	InstanceData *inst;inst51,846
class ObjPipeline : public rw::ObjPipelineObjPipeline73,1750
	void (*instanceCB)(Geometry *geo, InstanceDataHeader *header, bool32 reinstance);instanceCB79,1857
	void (*uninstanceCB)(Geometry *geo, InstanceDataHeader *header);uninstanceCB80,1940
	void (*renderCB)(Atomic *atomic, InstanceDataHeader *header);renderCB81,2006

src/d3d/d3d.cpp,2988
#define WITH_D3DWITH_D3D6,80
#define PLUGIN_ID PLUGIN_ID16,287
namespace rw {rw18,316
namespace d3d {d3d19,331
bool32 isP8supported = 1;isP8supported21,348
calculateTextureSize(uint32 width, uint32 height, uint32 depth, uint32 format)calculateTextureSize25,412
#define D3DFMT_W11V11U10 D3DFMT_W11V11U1027,493
int vertFormatMap[] = {vertFormatMap84,1747
createIndexBuffer(uint32 length, bool dynamic)createIndexBuffer89,1866
destroyIndexBuffer(void *indexBuffer)destroyIndexBuffer106,2337
lockIndices(void *indexBuffer, uint32 offset, uint32 size, uint32 flags)lockIndices120,2584
unlockIndices(void *indexBuffer)unlockIndices138,2960
createVertexBuffer(uint32 length, uint32 fvf, bool dynamic)createVertexBuffer149,3145
destroyVertexBuffer(void *vertexBuffer)destroyVertexBuffer167,3623
lockVertices(void *vertexBuffer, uint32 offset, uint32 size, uint32 flags)lockVertices181,3876
unlockVertices(void *vertexBuffer)unlockVertices199,4257
createTexture(int32 width, int32 height, int32 numlevels, uint32 usage, uint32 format)createTexture210,4454
destroyTexture(void *texture)destroyTexture254,5632
int32 nativeRasterOffset;nativeRasterOffset269,5861
struct RasterFormatInfoRasterFormatInfo271,5888
	uint32 d3dformat;d3dformat273,5914
	int32 depth;depth274,5933
	bool32 hasAlpha;hasAlpha275,5947
	uint32 rwFormat;rwFormat276,5965
static RasterFormatInfo formatInfoRW[16] = {formatInfoRW280,6020
static RasterFormatInfo formatInfoFull[] = {formatInfoFull294,6515
findFormatInfoD3D(uint32 d3dformat)findFormatInfoD3D344,8168
rasterSetFormat(Raster *raster)rasterSetFormat356,8419
rasterCreateTexture(Raster *raster)rasterCreateTexture413,10220
rasterCreateCameraTexture(Raster *raster)rasterCreateCameraTexture442,10992
rasterCreateCamera(Raster *raster)rasterCreateCamera475,11825
rasterCreateZbuffer(Raster *raster)rasterCreateZbuffer489,12135
rasterCreate(Raster *raster)rasterCreate523,13061
rasterLock(Raster *raster, int32 level, int32 lockMode)rasterLock569,13929
rasterUnlock(Raster *raster, int32 level)rasterUnlock639,15988
rasterNumLevels(Raster *raster)rasterNumLevels657,16486
imageFindRasterFormat(Image *img, int32 type,imageFindRasterFormat671,16823
rasterFromImage(Raster *raster, Image *image)rasterFromImage726,17803
rasterToImage(Raster *raster)rasterToImage838,20232
getLevelSize(Raster *raster, int32 level)getLevelSize961,22731
allocateDXT(Raster *raster, int32 dxt, int32 numLevels, bool32 hasAlpha)allocateDXT976,23131
setPalette(Raster *raster, void *palette, int32 size)setPalette1003,23857
setTexels(Raster *raster, void *texels, int32 level)setTexels1010,24004
createNativeRaster(void *object, int32 offset, int32)createNativeRaster1018,24224
destroyNativeRaster(void *object, int32 offset, int32)destroyNativeRaster1031,24520
copyNativeRaster(void *dst, void *, int32 offset, int32)copyNativeRaster1063,25224
registerNativeRaster(void)registerNativeRaster1076,25509

src/d3d/d3d8matfx.cpp,238
namespace rw {rw17,316
namespace d3d8 {d3d818,331
matfxOpen(void *o, int32, int32)matfxOpen22,383
matfxClose(void *o, int32, int32)matfxClose29,507
initMatFX(void)initMatFX37,675
makeMatFXPipeline(void)makeMatFXPipeline44,809

src/d3d/d3ddevice.cpp,8792
#define WITH_D3DWITH_D3D6,80
#define PLUGIN_ID PLUGIN_ID17,312
namespace rw {rw19,333
namespace d3d {d3d20,348
D3d9Globals d3d9Globals;d3d9Globals24,381
struct VidmemRasterVidmemRaster28,504
	Raster *raster;raster30,526
	VidmemRaster *next;next31,543
static VidmemRaster *vidmemRasters;vidmemRasters33,567
struct DynamicVBDynamicVB38,724
	uint32 length;length40,743
	uint32 fvf;fvf41,759
	IDirect3DVertexBuffer9 **buf;buf42,772
	DynamicVB *next;next43,803
static DynamicVB *dynamicVBs;dynamicVBs45,824
struct DynamicIBDynamicIB50,1023
	uint32 length;length52,1042
	IDirect3DIndexBuffer9 **buf;buf53,1058
	DynamicIB *next;next54,1088
static DynamicIB *dynamicIBs;dynamicIBs56,1109
struct RwRasterStateCache {RwRasterStateCache61,1255
	Raster *raster;raster62,1283
	Texture::Addressing addressingU;addressingU63,1300
	Texture::Addressing addressingV;addressingV64,1334
	Texture::FilterMode filter;filter65,1368
	int32 maxAniso;maxAniso66,1397
#define MAXNUMSTAGES MAXNUMSTAGES69,1418
struct RwStateCache {RwStateCache72,1469
	bool32 vertexAlpha;vertexAlpha73,1491
	bool32 textureAlpha;textureAlpha74,1512
	uint32 srcblend, destblend;srcblend75,1534
	uint32 srcblend, destblend;destblend75,1534
	uint32 zwrite;zwrite76,1563
	uint32 ztest;ztest77,1579
	uint32 fogenable;fogenable78,1594
	RGBA fogcolor;fogcolor79,1613
	uint32 cullmode;cullmode80,1629
	uint32 stencilenable;stencilenable81,1647
	uint32 stencilpass;stencilpass82,1670
	uint32 stencilfail;stencilfail83,1691
	uint32 stencilzfail;stencilzfail84,1712
	uint32 stencilfunc;stencilfunc85,1734
	uint32 stencilref;stencilref86,1755
	uint32 stencilmask;stencilmask87,1775
	uint32 stencilwritemask;stencilwritemask88,1796
	uint32 alphafunc;alphafunc89,1822
	uint32 alpharef;alpharef90,1841
	bool32 gsalpha;gsalpha93,1884
	uint32 gsalpharef;gsalpharef94,1901
	RwRasterStateCache texstage[MAXNUMSTAGES];texstage96,1922
static RwStateCache rwStateCache;rwStateCache98,1969
void *constantVertexStream;constantVertexStream100,2004
static IDirect3DTexture9 *whiteTex;whiteTex101,2032
D3dShaderState d3dShaderState;d3dShaderState103,2069
#define MAXNUMSTATES MAXNUMSTATES105,2101
#define MAXNUMTEXSTATES MAXNUMTEXSTATES106,2145
#define MAXNUMSAMPLERSTATES MAXNUMSAMPLERSTATES107,2189
#define MAXNUMSTREAMS MAXNUMSTREAMS108,2240
#define MAXNUMRENDERTARGETS MAXNUMRENDERTARGETS109,2266
static int32 numDirtyStates;numDirtyStates111,2299
static uint32 dirtyStates[MAXNUMSTATES];dirtyStates112,2328
static struct {__anon0ae1ae820108113,2369
	uint32 value;value114,2385
	bool32 dirty;dirty115,2400
} stateCache[MAXNUMSTATES];stateCache116,2415
static uint32 d3dStates[MAXNUMSTATES];d3dStates117,2443
struct D3dDeviceCache {D3dDeviceCache120,2519
	IDirect3DVertexShader9 *vertexShader;vertexShader121,2543
	IDirect3DPixelShader9 *pixelShader;pixelShader122,2582
	IDirect3DVertexDeclaration9 *vertexDeclaration;vertexDeclaration123,2619
	IDirect3DIndexBuffer9 *indices;indices124,2668
	struct {__anon0ae1ae820208125,2701
		IDirect3DVertexBuffer9 *buffer;buffer126,2711
		uint32 offset;offset127,2745
		uint32 stride;stride128,2762
	} vertexStreams[MAXNUMSTREAMS];vertexStreams129,2779
	IDirect3DSurface9 *renderTargets[MAXNUMRENDERTARGETS];renderTargets130,2812
	IDirect3DSurface9 *depthSurface;depthSurface131,2868
static D3dDeviceCache deviceCache;deviceCache133,2905
static int32 numDirtyTextureStageStates;numDirtyTextureStageStates135,2941
static struct {__anon0ae1ae820308136,2982
	uint32 stage;stage137,2998
	uint32 type;type138,3013
} dirtyTextureStageStates[MAXNUMTEXSTATES*MAXNUMSTAGES];dirtyTextureStageStates139,3027
static struct {__anon0ae1ae820408140,3084
	uint32 value;value141,3100
	bool32 dirty;dirty142,3115
} textureStageStateCache[MAXNUMTEXSTATES][MAXNUMSTAGES];textureStageStateCache143,3130
static uint32 d3dTextureStageStates[MAXNUMTEXSTATES][MAXNUMSTAGES];d3dTextureStageStates144,3187
static uint32 d3dSamplerStates[MAXNUMSAMPLERSTATES][MAXNUMSTAGES];d3dSamplerStates146,3256
static bool validStates[MAXNUMSTATES];validStates149,3325
static bool validTexStates[MAXNUMTEXSTATES];validTexStates150,3364
static D3DMATERIAL9 d3dmaterial;d3dmaterial152,3410
static uint32 blendMap[] = {blendMap155,3445
static uint32 stencilOpMap[] = {stencilOpMap170,3743
static uint32 stencilFuncMap[] = {stencilFuncMap182,3990
static uint32 alphafuncMap[] = {alphafuncMap194,4199
static uint32 cullmodeMap[] = {cullmodeMap200,4287
static uint32 filterConvMap[] = {filterConvMap207,4399
static uint32 filterConvMap_MIP[] = {filterConvMap_MIP212,4540
static uint32 addressConvMap[] = {addressConvMap217,4682
setRenderState(uint32 state, uint32 value)setRenderState225,4828
getRenderState(uint32 state, uint32 *value)getRenderState237,5068
setRenderTarget(int n, void *surf)setRenderTarget243,5157
setDepthSurface(void *surf)setDepthSurface252,5370
setTextureStageState(uint32 stage, uint32 type, uint32 value)setTextureStageState261,5568
getTextureStageState(uint32 stage, uint32 type, uint32 *value)getTextureStageState275,6028
flushCache(void)flushCache281,6154
setSamplerState(uint32 stage, uint32 type, uint32 value)setSamplerState315,7112
getSamplerState(uint32 stage, uint32 type, uint32 *value)getSamplerState324,7339
restoreD3d9Device(void)restoreD3d9Device331,7530
evictD3D9Raster(Raster *raster)evictD3D9Raster391,9959
setDepthTest(bool32 enable)setDepthTest418,10693
setDepthWrite(bool32 enable)setDepthWrite434,11112
setVertexAlpha(bool32 enable)setVertexAlpha448,11466
setRasterStage(uint32 stage, Raster *raster)setRasterStage460,11726
setFilterMode(uint32 stage, int32 filter, int32 maxAniso = 1)setFilterMode489,12504
setAddressU(uint32 stage, int32 addressing)setAddressU511,13364
setAddressV(uint32 stage, int32 addressing)setAddressV520,13660
setTexture(uint32 stage, Texture *tex)setTexture529,13949
setD3dMaterial(D3DMATERIAL9 *mat9)setD3dMaterial544,14267
setMaterial_fix(const RGBA &color, const SurfaceProperties &surfProps)setMaterial_fix569,15193
setMaterial(const RGBA &color, const SurfaceProperties &surfaceprops, float extraSurfProp)setMaterial591,15806
setRwRenderState(int32 state, void *pvalue)setRwRenderState616,16696
getRwRenderState(int32 state)getRwRenderState756,20230
setVertexShader(void *vs)setVertexShader850,22194
setPixelShader(void *ps)setPixelShader859,22384
setIndices(void *indexBuffer)setIndices868,22568
setStreamSource(int n, void *buffer, uint32 offset, uint32 stride)setStreamSource877,22759
setVertexDeclaration(void *declaration)setVertexDeclaration890,23252
createVertexShader(void *csosrc)createVertexShader899,23500
createPixelShader(void *csosrc)createPixelShader910,23717
destroyVertexShader(void *shader)destroyVertexShader921,23929
destroyPixelShader(void *shader)destroyPixelShader930,24071
setRenderSurfaces(Camera *cam)setRenderSurfaces942,24229
beginUpdate(Camera *cam)beginUpdate971,24943
endUpdate(Camera *cam)endUpdate1063,27384
addVidmemRaster(Raster *raster)addVidmemRaster1072,27504
removeVidmemRaster(Raster *raster)removeVidmemRaster1081,27691
releaseVidmemRasters(void)releaseVidmemRasters1095,27916
recreateVidmemRasters(void)recreateVidmemRasters1121,28513
addDynamicVB(uint32 length, uint32 fvf, IDirect3DVertexBuffer9 **buf)addDynamicVB1165,29820
removeDynamicVB(IDirect3DVertexBuffer9 **buf)removeDynamicVB1176,30067
releaseDynamicVBs(void)releaseDynamicVBs1190,30291
recreateDynamicVBs(void)recreateDynamicVBs1204,30599
addDynamicIB(uint32 length, IDirect3DIndexBuffer9 **buf)addDynamicIB1215,30817
removeDynamicIB(IDirect3DIndexBuffer9 **buf)removeDynamicIB1225,31034
releaseDynamicIBs(void)releaseDynamicIBs1239,31257
recreateDynamicIBs(void)recreateDynamicIBs1251,31485
releaseVideoMemory(void)releaseVideoMemory1261,31697
restoreVideoMemory(void)restoreVideoMemory1284,32274
clearCamera(Camera *cam, RGBA *col, uint32 mode)clearCamera1303,32931
showRaster(Raster *raster, uint32 flag)showRaster1335,33777
rasterRenderFast(Raster *raster, int32 x, int32 y)rasterRenderFast1361,34549
findFormatDepth(uint32 format)findFormatDepth1406,35471
static D3DFORMAT fbFormats[] = {fbFormats1440,36365
addVideoMode(D3DDISPLAYMODE *mode)addVideoMode1450,36564
makeVideoModeList(void)makeVideoModeList1472,37214
openD3D(EngineOpenParams *params)openD3D1499,38034
closeD3D(void)closeD3D1533,38893
startD3D(void)startD3D1547,39177
initD3D(void)initD3D1622,41829
termD3D(void)termD3D1875,51244
finalizeD3D(void)finalizeD3D1896,51590
deviceSystem(DeviceReq req, void *arg, int32 n)deviceSystem1902,51635
Device renderdevice = {renderdevice1989,54002

src/d3d/d3d9.cpp,1986
#define WITH_D3DWITH_D3D6,80
#define PLUGIN_ID PLUGIN_ID18,308
namespace rw {rw20,329
namespace d3d9 {d3d921,344
static VertexElement _d3ddec_end = {0xFF,0,D3DDECLTYPE_UNUSED,0,0,0};_d3ddec_end26,443
#define D3DDECL_END(D3DDECL_END27,513
#define NUMDECLELT NUMDECLELT30,555
driverOpen(void *o, int32, int32)driverOpen33,591
driverClose(void *o, int32, int32)driverClose52,1334
registerPlatformPlugins(void)registerPlatformPlugins61,1438
createVertexDeclaration(VertexElement *elements)createVertexDeclaration71,1671
destroyVertexDeclaration(void *declaration)destroyVertexDeclaration91,2142
getDeclaration(void *declaration, VertexElement *elements)getDeclaration105,2400
freeInstanceData(Geometry *geometry)freeInstanceData124,2847
destroyNativeData(void *object, int32, int32)destroyNativeData143,3355
readNativeData(Stream *stream, int32, void *object, int32, int32)readNativeData150,3468
writeNativeData(Stream *stream, int32 len, void *object, int32, int32)writeNativeData243,6609
getSizeNativeData(void *object, int32, int32)getSizeNativeData317,9057
registerNativeDataPlugin(void)registerNativeDataPlugin334,9653
instanceMesh(rw::ObjPipeline *rwpipe, Geometry *geo)instanceMesh345,10012
instance(rw::ObjPipeline *rwpipe, Atomic *atomic)instance393,11739
uninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)uninstance422,12607
render(rw::ObjPipeline *rwpipe, Atomic *atomic)render456,13715
ObjPipeline::init(void)init468,14040
ObjPipeline::create(void)create480,14319
defaultInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance)defaultInstanceCB488,14444
defaultUninstanceCB(Geometry *geo, InstanceDataHeader *header)defaultUninstanceCB639,18788
makeDefaultPipeline(void)makeDefaultPipeline692,20491
readNativeTexture(Stream *stream)readNativeTexture704,20743
writeNativeTexture(Texture *tex, Stream *stream)writeNativeTexture790,23028
getSizeNativeTexture(Texture *tex)getSizeNativeTexture839,24255

src/raster.cpp,3654
#define PLUGIN_ID PLUGIN_ID21,408
namespace rw {rw23,429
int32 Raster::numAllocated;numAllocated25,445
struct RasterGlobalsRasterGlobals27,474
	int32 sp;sp29,497
	Raster *stack[32];stack30,508
int32 rasterModuleOffset;rasterModuleOffset32,531
#define RASTERGLOBAL(RASTERGLOBAL34,558
rasterOpen(void *object, int32 offset, int32 size)rasterOpen37,657
rasterClose(void *object, int32 offset, int32 size)rasterClose48,890
Raster::registerModule(void)registerModule54,968
Raster::create(int32 width, int32 height, int32 depth, int32 format, int32 platform)create60,1100
Raster::subRaster(Raster *parent, Rect *r)subRaster86,1955
Raster::destroy(void)destroy98,2180
Raster::lock(int32 level, int32 lockMode)lock106,2273
Raster::unlock(int32 level)unlock112,2400
Raster::lockPalette(int32 lockMode)lockPalette118,2500
Raster::unlockPalette(void)unlockPalette124,2621
Raster::getNumLevels(void)getNumLevels130,2720
Raster::calculateNumLevels(int32 width, int32 height)calculateNumLevels136,2821
Raster::formatHasAlpha(int32 format)formatHasAlpha146,2995
Raster::imageFindRasterFormat(Image *image, int32 type,imageFindRasterFormat154,3177
Raster::setFromImage(Image *image, int32 platform)setFromImage163,3459
Raster::createFromImage(Image *image, int32 platform)createFromImage171,3637
Raster::toImage(void)toImage184,4005
Raster::show(uint32 flags)show190,4098
Raster::pushContext(Raster *raster)pushContext196,4179
Raster::popContext(void)popContext205,4394
Raster::getCurrentContext(void)getCurrentContext214,4565
Raster::renderFast(int32 x, int32 y)renderFast223,4775
conv_RGBA8888_from_RGBA8888(uint8 *out, uint8 *in)conv_RGBA8888_from_RGBA8888229,4874
conv_BGRA8888_from_RGBA8888(uint8 *out, uint8 *in)conv_BGRA8888_from_RGBA8888238,5003
conv_ABGR8888_from_RGBA8888(uint8 *out, uint8 *in)conv_ABGR8888_from_RGBA8888247,5132
conv_RGBA8888_from_RGB888(uint8 *out, uint8 *in)conv_RGBA8888_from_RGB888256,5261
conv_BGRA8888_from_RGB888(uint8 *out, uint8 *in)conv_BGRA8888_from_RGB888265,5387
conv_ABGR8888_from_RGB888(uint8 *out, uint8 *in)conv_ABGR8888_from_RGB888274,5513
conv_RGB888_from_RGB888(uint8 *out, uint8 *in)conv_RGB888_from_RGB888283,5639
conv_BGR888_from_RGB888(uint8 *out, uint8 *in)conv_BGR888_from_RGB888291,5747
conv_ARGB1555_from_ARGB1555(uint8 *out, uint8 *in)conv_ARGB1555_from_ARGB1555299,5855
conv_ARGB1555_from_RGB555(uint8 *out, uint8 *in)conv_ARGB1555_from_RGB555306,5950
conv_RGBA5551_from_ARGB1555(uint8 *out, uint8 *in)conv_RGBA5551_from_ARGB1555313,6050
conv_ARGB1555_from_RGBA5551(uint8 *out, uint8 *in)conv_ARGB1555_from_RGBA5551325,6281
conv_RGBA8888_from_ARGB1555(uint8 *out, uint8 *in)conv_RGBA8888_from_ARGB1555337,6512
conv_ABGR1555_from_ARGB1555(uint8 *out, uint8 *in)conv_ABGR1555_from_ARGB1555351,6780
expandPal4(uint8 *dst, uint32 dststride, uint8 *src, uint32 srcstride, int32 w, int32 h)expandPal4361,6957
compressPal4(uint8 *dst, uint32 dststride, uint8 *src, uint32 srcstride, int32 w, int32 h)compressPal4371,7243
expandPal4_BE(uint8 *dst, uint32 dststride, uint8 *src, uint32 srcstride, int32 w, int32 h)expandPal4_BE380,7496
compressPal4_BE(uint8 *dst, uint32 dststride, uint8 *src, uint32 srcstride, int32 w, int32 h)compressPal4_BE390,7785
copyPal8(uint8 *dst, uint32 dststride, uint8 *src, uint32 srcstride, int32 w, int32 h)copyPal8399,8041
xbox_to_d3d(rw::Raster *ras)xbox_to_d3d410,8286
d3d_to_gl3(rw::Raster *ras)d3d_to_gl3447,9253
xbox_to_gl3(rw::Raster *ras)xbox_to_gl3486,10213
Raster::convertTexToCurrentPlatform(rw::Raster *ras)convertTexToCurrentPlatform573,12239
#define min(min622,13747

src/clump.cpp,1908
#define PLUGIN_ID PLUGIN_ID13,210
namespace rw {rw15,231
int32 Clump::numAllocated;numAllocated17,247
int32 Atomic::numAllocated;numAllocated18,274
Clump::create(void)create28,417
Clump::clone(void)clone50,834
Clump::destroy(void)destroy72,1289
Clump::addAtomic(Atomic *a)addAtomic99,1805
Clump::removeAtomic(Atomic *a)removeAtomic107,1923
Clump::addLight(Light *l)addLight115,2030
Clump::removeLight(Light *l)removeLight123,2145
Clump::addCamera(Camera *c)addCamera131,2250
Clump::removeCamera(Camera *c)removeCamera139,2368
Clump::streamRead(Stream *stream)streamRead148,2478
Clump::streamWrite(Stream *stream)streamWrite288,5605
Clump::streamGetSize(void)streamGetSize347,7364
Clump::render(void)render382,8132
atomicSync(ObjectWithFrame *obj)atomicSync397,8323
worldAtomicSync(ObjectWithFrame *obj)worldAtomicSync405,8450
Atomic::create(void)create412,8561
Atomic::clone()clone446,9540
Atomic::destroy(void)destroy465,9966
Atomic::setGeometry(Geometry *geo, uint32 flags)setGeometry478,10186
Atomic::getWorldBoundingSphere(void)getWorldBoundingSphere495,10548
static uint32 atomicRights[2];atomicRights510,11049
Atomic::streamReadClump(Stream *stream,streamReadClump513,11089
Atomic::streamWriteClump(Stream *stream, FrameList_ *frmlst)streamWriteClump555,12079
Atomic::streamGetSize(void)streamGetSize587,12901
Atomic::getPipeline(void)getPipeline598,13116
Atomic::instance(void)instance606,13241
Atomic::uninstance(void)uninstance615,13412
Atomic::defaultRenderCB(Atomic *atomic)defaultRenderCB625,13649
readAtomicRights(Stream *stream, int32, void *, int32, int32)readAtomicRights633,13774
writeAtomicRights(Stream *stream, int32, void *object, int32, int32)writeAtomicRights640,13906
getSizeAtomicRights(void *object, int32, int32)getSizeAtomicRights651,14176
registerAtomicRightsPlugin(void)registerAtomicRightsPlugin660,14356

src/rwpipeline.h,1269
namespace rw {rw1,0
class PipelinePipeline5,32
	uint32 pluginID;pluginID8,57
	uint32 pluginData;pluginData9,75
	int32 platform;platform10,95
	void init(uint32 platform) {init12,113
class ObjPipeline : public PipelineObjPipeline19,225
	struct {__anon81036a51010828,481
		void (*instance)(ObjPipeline *pipe, Atomic *atomic);instance29,491
		void (*uninstance)(ObjPipeline *pipe, Atomic *atomic);uninstance30,546
		void (*render)(ObjPipeline *pipe, Atomic *atomic);render31,603
	} impl;impl32,656
	void instance(Atomic *atomic) { this->impl.instance(this, atomic); }instance34,690
	void uninstance(Atomic *atomic) { this->impl.uninstance(this, atomic); }uninstance35,760
	void render(Atomic *atomic) { this->impl.render(this, atomic); }render36,834
enum {__anon81036a51020342,1060
	VERT_BYTE2 = 1,VERT_BYTE243,1067
	VERT_BYTE3,VERT_BYTE344,1084
	VERT_SHORT2,VERT_SHORT245,1097
	VERT_SHORT3,VERT_SHORT346,1111
	VERT_NORMSHORT2,VERT_NORMSHORT247,1125
	VERT_NORMSHORT3,VERT_NORMSHORT348,1143
	VERT_FLOAT2,VERT_FLOAT249,1161
	VERT_FLOAT3,VERT_FLOAT350,1175
	VERT_FLOAT4,VERT_FLOAT451,1189
	VERT_ARGB,VERT_ARGB52,1203
	VERT_RGBA,VERT_RGBA53,1215
	VERT_COMPNORM,VERT_COMPNORM54,1227
	VERT_COMPNORM2VERT_COMPNORM255,1243

src/geometry.cpp,2978
#define PLUGIN_ID PLUGIN_ID14,228
namespace rw {rw16,259
int32 Geometry::numAllocated;numAllocated18,275
int32 Material::numAllocated;numAllocated19,305
static SurfaceProperties defaultSurfaceProps = { 1.0f, 1.0f, 1.0f };defaultSurfaceProps24,437
Geometry::create(int32 numVerts, int32 numTris, uint32 flags)create28,603
Geometry::destroy(void)destroy90,2419
Geometry::lock(int32 lockFlags)lock108,2763
Geometry::unlock(void)unlock118,2924
struct GeoStreamDataGeoStreamData125,3007
	uint32 flags;flags127,3030
	int32 numTriangles;numTriangles128,3045
	int32 numVertices;numVertices129,3066
	int32 numMorphTargets;numMorphTargets130,3086
Geometry::streamRead(Stream *stream)streamRead134,3124
geoStructSize(Geometry *geo)geoStructSize203,4962
Geometry::streamWrite(Stream *stream)streamWrite230,5636
Geometry::streamGetSize(void)streamGetSize287,7263
Geometry::addMorphTargets(int32 n)addMorphTargets297,7460
Geometry::calculateBoundingSphere(void)calculateBoundingSphere353,8972
Geometry::hasColoredMaterial(void)hasColoredMaterial362,9173
Geometry::allocateData(void)allocateData375,9565
isDegenerate(uint16 *idx)isDegenerate425,11016
Geometry::generateTriangles(int8 *adc)generateTriangles436,11278
dumpMesh(Mesh *m)dumpMesh498,12746
Geometry::buildMeshes(void)buildMeshes514,13026
Geometry::correctTristripWinding(void)correctTristripWinding569,14637
Geometry::removeUnusedMaterials(void)removeUnusedMaterials624,16350
MorphTarget::calculateBoundingSphere(void) constcalculateBoundingSphere687,18146
#define PLUGIN_ID PLUGIN_ID713,18778
MaterialList::init(void)init716,18814
MaterialList::deinit(void)deinit724,18916
MaterialList::appendMaterial(Material *mat)appendMaterial734,19088
MaterialList::findIndex(Material *mat)findIndex756,19596
MaterialList::streamRead(Stream *stream, MaterialList *matlist)streamRead765,19758
MaterialList::streamWrite(Stream *stream)streamWrite811,20763
MaterialList::streamGetSize(void)streamGetSize839,21432
Material::create(void)create857,21771
Material::clone(void)clone875,22158
Material::destroy(void)destroy892,22496
Material::setTexture(Texture *tex)setTexture905,22689
struct MatStreamDataMatStreamData914,22824
	int32 flags;	// unused according to RWflags916,22847
	RGBA  color;color917,22887
	int32 unused;unused918,22901
	int32 textured;textured919,22916
static uint32 materialRights[2];materialRights922,22937
Material::streamRead(Stream *stream)streamRead925,22981
Material::streamWrite(Stream *stream)streamWrite967,23908
Material::streamGetSize(void)streamGetSize999,24705
readMaterialRights(Stream *stream, int32, void *, int32, int32)readMaterialRights1014,25004
writeMaterialRights(Stream *stream, int32, void *object, int32, int32)writeMaterialRights1022,25216
getSizeMaterialRights(void *object, int32, int32)getSizeMaterialRights1033,25498
registerMaterialRightsPlugin(void)registerMaterialRightsPlugin1042,25690

src/geoplg.cpp,1312
#define PLUGIN_ID PLUGIN_ID23,442
namespace rw {rw25,463
static uint16 nextSerialNum = 1;nextSerialNum27,479
Geometry::allocateMeshes(int32 numMeshes, uint32 numIndices, bool32 noIndices)allocateMeshes34,655
MeshHeader::setupIndices(void)setupIndices79,1667
struct MeshHeaderStreamMeshHeaderStream96,1940
	uint32 flags;flags98,1966
	uint32 numMeshes;numMeshes99,1981
	uint32 totalIndices;totalIndices100,2000
struct MeshStreamMeshStream103,2026
	uint32 numIndices;numIndices105,2046
	int32 matIndex;matIndex106,2066
readMesh(Stream *stream, int32 len, void *object, int32, int32)readMesh110,2102
writeMesh(Stream *stream, int32, void *object, int32, int32)writeMesh162,3555
getSizeMesh(void *object, int32, int32)getSizeMesh199,4660
registerMeshPlugin(void)registerMeshPlugin216,5063
MeshHeader::guessNumTriangles(void)guessNumTriangles227,5426
destroyNativeData(void *object, int32 offset, int32 size)destroyNativeData238,5623
readNativeData(Stream *stream, int32 len, void *object, int32 o, int32 s)readNativeData261,6549
writeNativeData(Stream *stream, int32 len, void *object, int32 o, int32 s)writeNativeData294,7532
getSizeNativeData(void *object, int32 offset, int32 size)getSizeNativeData313,8298
registerNativeDataPlugin(void)registerNativeDataPlugin332,9014

src/3ds/3dspipe.cpp,826
namespace rw {rw16,273
namespace c3d {c3d17,288
freeInstanceData(Geometry *geometry)freeInstanceData22,325
destroyNativeData(void *object, int32, int32)destroyNativeData43,776
instanceMesh(rw::ObjPipeline *rwpipe, Geometry *geo)instanceMesh50,908
instance(rw::ObjPipeline *rwpipe, Atomic *atomic)instance90,2167
uninstance(rw::ObjPipeline *rwpipe, Atomic *atomic)uninstance119,3034
render(rw::ObjPipeline *rwpipe, Atomic *atomic)render125,3137
ObjPipeline::init(void)init137,3461
ObjPipeline::create(void)create149,3736
defaultInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance)defaultInstanceCB157,3861
#define ATTRIB(ATTRIB170,4273
defaultUninstanceCB(Geometry *geo, InstanceDataHeader *header)defaultUninstanceCB261,6572
makeDefaultPipeline(void)makeDefaultPipeline267,6687

src/3ds/3dsshader.cpp,419
namespace rw {rw18,288
namespace c3d {c3d19,303
Shader *currentShader = NULL;currentShader21,320
DVLB_s* Shader::dvlb = NULL;dvlb23,351
Shader::loadDVLB(u8* shbinData, u32 shbinSize)loadDVLB26,387
Shader::create(u32 prgId, void (*combiner)(void))create32,509
Shader::use(void)use45,782
Shader::destroy(void)destroy55,925
combiner_simple()combiner_simple63,1046
combiner_matfx()combiner_matfx74,1311

src/3ds/3dsraster.cpp,2135
#define PLUGIN_ID PLUGIN_ID17,311
#define IMAX(IMAX19,340
#define MINT(MINT20,389
namespace rw {rw24,459
namespace c3d {c3d25,474
int32 nativeRasterOffset;nativeRasterOffset27,491
getLevelSize(Raster *raster, int32 level)getLevelSize33,586
#define GX_TRANSFER_FMT_NONE GX_TRANSFER_FMT_NONE42,758
textureFormatMapping(Raster *raster, C3DRaster *natras)textureFormatMapping45,827
#define FMT(FMT48,918
rasterCreateTexture(Raster *raster)rasterCreateTexture72,1831
allocateETC(Raster *raster)allocateETC105,2731
cameraFormat(GPU_TEXCOLOR tex_fmt)cameraFormat145,3961
rasterCreateCameraTexture(Raster *raster, bool tilt)rasterCreateCameraTexture158,4257
rasterCreateZbuffer(Raster *raster)rasterCreateZbuffer224,5924
rasterCreate(Raster *raster)rasterCreate256,6642
texCompress(Raster *raster, C3DRaster *natras, int level)texCompress305,7666
texSwizzle(Raster *raster, C3DRaster *natras, int level)texSwizzle338,8551
texUnswizzle(Raster *raster, C3DRaster *natras)texUnswizzle373,9569
rasterLock(Raster *raster, int32 level, int32 lockMode)rasterLock412,10656
rasterUnlock(Raster *raster, int32 level)rasterUnlock482,12507
rasterNumLevels(Raster *raster)rasterNumLevels527,13542
rasterFromImage_etc1(rw::Raster *ras, rw::Image *img)rasterFromImage_etc1533,13628
imageFindRasterFormat(Image *img, int32 type,imageFindRasterFormat578,14671
imageConvert(Image *image, Raster *raster, void (*conv)(uint8 *out, uint8 *in))imageConvert627,15454
rasterFromImage(Raster *raster, Image *image)rasterFromImage649,16034
rasterToImage(Raster *raster)rasterToImage742,18119
createNativeRaster(void *object, int32 offset, int32)createNativeRaster819,19629
destroyNativeRaster(void *object, int32 offset, int32)destroyNativeRaster829,19831
copyNativeRaster(void *dst, void *, int32 offset, int32)copyNativeRaster877,20784
readNativeTexture(Stream *stream)readNativeTexture887,20967
writeNativeTexture(Texture *tex, Stream *stream)writeNativeTexture967,23146
getSizeNativeTexture(Texture *tex)getSizeNativeTexture1014,24509
void registerNativeRaster(void)registerNativeRaster1025,24781

src/3ds/3dsrender.cpp,621
namespace rw {rw17,314
namespace c3d {c3d18,329
drawInst_simple(InstanceDataHeader *header, InstanceData *inst)drawInst_simple21,351
drawInst_GSemu(InstanceDataHeader *header, InstanceData *inst)drawInst_GSemu32,641
drawInst(InstanceDataHeader *header, InstanceData *inst)drawInst64,1650
genAttribPointers(InstanceDataHeader *header)genAttribPointers74,1835
setAttribPointers(InstanceDataHeader *header)setAttribPointers98,2359
setAttribsFixed(void)setAttribsFixed114,2833
lightingCB(Atomic *atomic)lightingCB127,3060
defaultRenderCB(Atomic *atomic, InstanceDataHeader *header)defaultRenderCB153,3728

src/3ds/rw3ds.h,5709
namespace rw {rw7,71
struct EngineOpenParamsEngineOpenParams10,101
	void **window;window12,127
	bool32 fullscreen;fullscreen13,143
	int width, height;width14,163
	int width, height;height14,163
	const char *windowtitle;windowtitle15,183
namespace c3d {c3d19,220
struct AttribDescAttribDesc25,303
	uint8 index;index27,323
	uint8 type;type28,337
	uint8 count;count29,350
	uint8 offset;offset30,364
enum AttribIndicesAttribIndices33,385
	ATTRIB_POS = 0,		// v0ATTRIB_POS35,406
	ATTRIB_NORMAL,		// v1ATTRIB_NORMAL36,430
	ATTRIB_COLOR,		// v2ATTRIB_COLOR37,453
	ATTRIB_TEXCOORDS0,	// v3ATTRIB_TEXCOORDS038,475
	ATTRIB_TEXCOORDS1,	// v4 (not actually used, matfx-env uses a uniform)ATTRIB_TEXCOORDS139,501
	ATTRIB_TEXCOORDS2,	// v5 (not actually used)ATTRIB_TEXCOORDS240,573
	MAX_ATTRIBSMAX_ATTRIBS41,619
struct InstanceDataInstanceData57,969
	uint32    numIndex;numIndex59,991
	uint32    minVert;	// not used for renderingminVert60,1012
	int32     numVertices;	//numVertices61,1058
	Material *material;material62,1085
	bool32    vertexAlpha;vertexAlpha63,1106
	uint32    program;program64,1130
	uint16   *indexBuffer;indexBuffer65,1150
struct InstanceDataHeader : rw::InstanceDataHeaderInstanceDataHeader70,1194
	uint32      serialNumber;serialNumber72,1247
	uint32      numMeshes;numMeshes73,1274
	GPU_Primitive_t primType;primType74,1298
	uint8      *vertexBuffer;vertexBuffer75,1325
	int32       numAttribs;numAttribs76,1352
	AttribDesc  attribDesc[MAX_ATTRIBS];attribDesc77,1377
	uint32      totalNumIndex;totalNumIndex78,1415
	uint32      totalNumVertex;totalNumVertex79,1443
	C3D_BufInfo  vbo;vbo81,1473
	C3D_AttrInfo vao;vao82,1492
	ptrdiff_t    stride;stride83,1511
	InstanceData *inst;inst85,1534
struct Im3DVertexIm3DVertex92,1606
	V3d     position;position94,1626
	uint8   r, g, b, a;r95,1645
	uint8   r, g, b, a;g95,1645
	uint8   r, g, b, a;b95,1645
	uint8   r, g, b, a;a95,1645
	float32 u, v;u96,1666
	float32 u, v;v96,1666
	void setX(float32 x) { this->position.x = x; }setX98,1682
	void setY(float32 y) { this->position.y = y; }setY99,1730
	void setZ(float32 z) { this->position.z = z; }setZ100,1778
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a){setColor101,1826
	void setU(float32 u) { this->u = u; }setU104,1935
	void setV(float32 v) { this->v = v; }setV105,1974
	float getX(void) { return this->position.x; }getX107,2014
	float getY(void) { return this->position.y; }getY108,2061
	float getZ(void) { return this->position.z; }getZ109,2108
	RGBA getColor(void) { return makeRGBA(this->r, this->g, this->b, this->a); }getColor110,2155
	float getU(void) { return this->u; }getU111,2233
	float getV(void) { return this->v; }getV112,2271
struct Im2DVertexIm2DVertex115,2313
	float32 x, y, z, w;x117,2333
	float32 x, y, z, w;y117,2333
	float32 x, y, z, w;z117,2333
	float32 x, y, z, w;w117,2333
	uint8   r, g, b, a;r118,2354
	uint8   r, g, b, a;g118,2354
	uint8   r, g, b, a;b118,2354
	uint8   r, g, b, a;a118,2354
	float32 u, v;u119,2375
	float32 u, v;v119,2375
	void setScreenX(float32 x) { this->x = x; }setScreenX121,2391
	void setScreenY(float32 y) { this->y = y; }setScreenY122,2436
	void setScreenZ(float32 z) { this->z = z; }setScreenZ123,2481
	void setCameraZ(float32 z) { this->w = z; }setCameraZ124,2526
	void setRecipCameraZ(float32 recipz) { this->w = 1.0f/recipz; }setRecipCameraZ125,2571
	void setColor(uint8 r, uint8 g, uint8 b, uint8 a) {setColor126,2636
	void setU(float32 u, float recipz) { this->u = u; }setU129,2746
	void setV(float32 v, float recipz) { this->v = v; }setV130,2799
	float getScreenX(void) { return this->x; }getScreenX132,2853
	float getScreenY(void) { return this->y; }getScreenY133,2897
	float getScreenZ(void) { return this->z; }getScreenZ134,2941
	float getCameraZ(void) { return this->w; }getCameraZ135,2985
	float getRecipCameraZ(void) { return 1.0f/this->w; }getRecipCameraZ136,3029
	RGBA getColor(void) { return makeRGBA(this->r, this->g, this->b, this->a); }getColor137,3083
	float getU(void) { return this->u; }getU138,3161
	float getV(void) { return this->v; }getV139,3199
{__anon3db238fe0103151,3421
	VSLIGHT_DIRECT	= 1,VSLIGHT_DIRECT153,3480
	VSLIGHT_POINT	= 2,VSLIGHT_POINT154,3501
	VSLIGHT_SPOT	= 4,VSLIGHT_SPOT155,3521
	VSLIGHT_MASK	= 7,	// all the aboveVSLIGHT_MASK156,3540
	VSLIGHT_AMBIENT = 8,VSLIGHT_AMBIENT158,3594
inline void setMaterial(uint32 flags, const RGBA &color, const SurfaceProperties &surfaceprops, setMaterial178,4106
class ObjPipeline : public rw::ObjPipelineObjPipeline199,4615
	void (*instanceCB)(Geometry *geo, InstanceDataHeader *header, bool32 reinstance);instanceCB205,4722
	void (*uninstanceCB)(Geometry *geo, InstanceDataHeader *header);uninstanceCB206,4805
	void (*renderCB)(Atomic *atomic, InstanceDataHeader *header);renderCB207,4871
struct C3DRasterC3DRaster228,5690
	int32 bpp;		// bytes per pixelbpp230,5709
	GPU_TEXCOLOR format;format231,5741
	GX_TRANSFER_FORMAT transfer;transfer232,5763
	int32 totalSize;totalSize233,5793
	{__anon3db238fe020a237,5839
		C3D_Tex *tex;tex238,5842
		void *zbuf;zbuf239,5858
	bool  onVram;onVram242,5879
	bool  isCompressed;isCompressed243,5894
	bool  hasAlpha;hasAlpha244,5915
	bool  autogenMipmap;autogenMipmap245,5932
	int8  numLevels;numLevels246,5954
	uint8 filterMode;filterMode249,6011
	uint8 addressU;addressU250,6030
	uint8 addressV;addressV251,6047
	bool tilt;tilt253,6065
	C3D_FrameBuf *fbo;fbo254,6077
	Raster *fboMate;	// color or zbuffer raster mate of this onefboMate255,6097
#define GETC3DRASTEREXT(GETC3DRASTEREXT274,6693

src/3ds/memory.cpp,790
namespace rw {rw15,270
namespace c3d {c3d16,285
#define DANGER_ZONE DANGER_ZONE18,302
struct LListNode_tLListNode_t24,411
	C3D_Tex *tex;tex26,432
	struct LListNode_t *cdr;cdr27,447
} LListNode;LListNode28,473
static LListNode *gTexPool = NULL;gTexPool30,487
LListNode_cons(C3D_Tex *tex)LListNode_cons33,534
TexPoolRemove(C3D_Tex *tex)TexPoolRemove42,676
TexPoolDebug()TexPoolDebug59,947
TexPoolPop()TexPoolPop74,1331
TexPoolInsert(LListNode *node)TexPoolInsert87,1476
safeLinearAlloc(size_t size)safeLinearAlloc108,1796
static inline size_t fmtSize(GPU_TEXCOLOR fmt)fmtSize130,2116
shrinkSomeTexture()shrinkSomeTexture159,2531
TexFree(C3DRaster *natras)TexFree204,3467
TexAlloc(Raster *raster, int w, int h, GPU_TEXCOLOR fmt, int mipmap)TexAlloc222,3716

src/3ds/3dsmatfx.cpp,774
namespace rw {rw21,392
namespace c3d {c3d22,407
#define U(U28,467
static Shader *envShader;envShader30,496
matfxDefaultRender(InstanceDataHeader *header, InstanceData *inst, uint32 flags)matfxDefaultRender33,528
static Frame *lastEnvFrame;lastEnvFrame45,852
static RawMatrix normal2texcoord = {normal2texcoord47,881
uploadEnvMatrix(Frame *frame)uploadEnvMatrix55,1046
matfxEnvRender(InstanceDataHeader *header, InstanceData *inst, uint32 flags, MatFX::Env *env)matfxEnvRender92,2072
matfxRenderCB(Atomic *atomic, InstanceDataHeader *header)matfxRenderCB130,3077
makeMatFXPipeline(void)makeMatFXPipeline160,3703
matfxOpen(void *o, int32, int32)matfxOpen172,3969
matfxClose(void *o, int32, int32)matfxClose181,4172
initMatFX(void)initMatFX191,4379

src/3ds/3dsdevice.cpp,7783
#define U(U20,362
#define VERTEX_LIGHTINGVERTEX_LIGHTING21,390
#define MAX_LIGHTS MAX_LIGHTS22,414
#define PLUGIN_ID PLUGIN_ID24,436
#define NATRAS(NATRAS26,457
namespace rw {rw28,533
namespace c3d {c3d29,548
C3DGlobals c3dGlobals;c3dGlobals31,565
struct UniformSceneUniformScene33,591
	C3D_Mtx proj;proj35,613
	C3D_Mtx view;view36,628
struct UniformObjectUniformObject39,649
	C3D_Mtx      world;world41,672
	RGBAf        ambLight;ambLight42,693
	int	     nLights;nLights43,717
	struct {__anond45bc760010844,736
		float type;type45,746
		float radius;radius46,760
		float minusCosAngle;minusCosAngle47,776
		float hardSpot;hardSpot48,799
	} lightParams[MAX_LIGHTS];lightParams49,817
	V4d lightPosition[MAX_LIGHTS];lightPosition50,845
	V4d lightDirection[MAX_LIGHTS];lightDirection51,877
	RGBAf lightColor[MAX_LIGHTS];lightColor52,910
struct C3DMaterialStateC3DMaterialState55,945
	RGBA matColor;matColor57,971
	SurfaceProperties surfProps;surfProps58,987
	float extraSurfProp;extraSurfProp59,1017
C3D_Tex whitetex;whitetex64,1045
static UniformScene uniformScene;uniformScene65,1063
static UniformObject uniformObject;uniformObject66,1097
static C3DMaterialState materialState;materialState67,1133
static C3D_FogLut       fogState;fogState68,1172
static C3D_LightEnv lightEnvState;lightEnvState71,1233
static C3D_Light lightState[8];	lightState72,1268
Shader *defaultShader;defaultShader75,1311
static bool32 stateDirty = 1;stateDirty77,1335
static bool32 sceneDirty = 1;sceneDirty78,1365
static bool32 objectDirty = 1;objectDirty79,1395
#define MAXNUMSTAGES MAXNUMSTAGES81,1427
struct RwStateCache {RwStateCache83,1451
	bool32 vertexAlpha;vertexAlpha84,1473
	uint32 alphaTestEnable;alphaTestEnable85,1494
	uint32 alphaFunc;alphaFunc86,1519
	uint32 alphaRef;alphaRef87,1538
	bool32 textureAlpha;textureAlpha88,1556
	bool32 blendEnable;blendEnable89,1578
	uint32 srcblend, destblend;srcblend90,1599
	uint32 srcblend, destblend;destblend90,1599
	uint32 zwrite;zwrite91,1628
	bool32 ztest;ztest92,1644
	uint32 cullmode;cullmode93,1659
	uint32 stencilenable;stencilenable94,1677
	uint32 stencilpass;stencilpass95,1700
	uint32 stencilfail;stencilfail96,1721
	uint32 stencilzfail;stencilzfail97,1742
	uint32 stencilfunc;stencilfunc98,1764
	uint32 stencilref;stencilref99,1785
	uint32 stencilmask;stencilmask100,1805
	uint32 stencilwritemask;stencilwritemask101,1826
	uint32 fogEnable;fogEnable103,1853
	uint32 fogColor;fogColor104,1872
	float32 fogStart;fogStart105,1890
	float32 fogEnd;fogEnd106,1909
	bool32 gsalpha;gsalpha109,1951
	uint32 gsalpharef;gsalpharef110,1968
	Raster *texstage[MAXNUMSTAGES];texstage113,2036
static RwStateCache rwStateCache;rwStateCache115,2072
{__anond45bc7600203118,2113
	RWC3D_ALPHATEST,RWC3D_ALPHATEST120,2163
	RWC3D_ALPHAFUNC,RWC3D_ALPHAFUNC121,2181
	RWC3D_ALPHAREF,RWC3D_ALPHAREF122,2199
	RWC3D_BLEND,RWC3D_BLEND123,2216
	RWC3D_SRCBLEND,RWC3D_SRCBLEND124,2230
	RWC3D_DESTBLEND,RWC3D_DESTBLEND125,2247
	RWC3D_DEPTHTEST,RWC3D_DEPTHTEST126,2265
	RWC3D_DEPTHFUNC,RWC3D_DEPTHFUNC127,2283
	RWC3D_DEPTHMASK,RWC3D_DEPTHMASK128,2301
	RWC3D_CULL,RWC3D_CULL129,2319
	RWC3D_CULLFACE,RWC3D_CULLFACE130,2332
	RWC3D_STENCIL,RWC3D_STENCIL131,2349
	RWC3D_STENCILFUNC,RWC3D_STENCILFUNC132,2365
	RWC3D_STENCILFAIL,RWC3D_STENCILFAIL133,2385
	RWC3D_STENCILZFAIL,RWC3D_STENCILZFAIL134,2405
	RWC3D_STENCILPASS,RWC3D_STENCILPASS135,2426
	RWC3D_STENCILREF,RWC3D_STENCILREF136,2446
	RWC3D_STENCILMASK,RWC3D_STENCILMASK137,2465
	RWC3D_STENCILWRITEMASK,RWC3D_STENCILWRITEMASK138,2485
	RWC3D_FOGMODE,RWC3D_FOGMODE139,2510
	RWC3D_FOGCOLOR,RWC3D_FOGCOLOR140,2526
	RWC3D_NUM_STATESRWC3D_NUM_STATES142,2544
struct C3DState {C3DState145,2566
	uint32 alphaFunc;	alphaFunc147,2607
	uint32 alphaRef;alphaRef148,2627
	uint32 blendEnable;blendEnable149,2645
	uint32 srcblend;srcblend150,2666
	uint32 destblend;destblend151,2684
	uint32 depthTest;depthTest152,2703
	uint32 depthFunc;depthFunc153,2722
	uint32 depthMask;depthMask154,2741
	uint32 cullEnable;cullEnable155,2760
	uint32 cullFace;cullFace156,2780
	uint32 stencilEnable;stencilEnable157,2798
	uint32 stencilFunc;stencilFunc158,2821
	uint32 stencilRef;stencilRef159,2842
	uint32 stencilMask;stencilMask160,2862
	uint32 stencilPass;stencilPass161,2883
	uint32 stencilFail;stencilFail162,2904
	uint32 stencilZFail;stencilZFail163,2925
	uint32 stencilWriteMask;stencilWriteMask164,2947
	uint32 fogMode;fogMode165,2973
	uint32 fogColor;fogColor166,2990
static C3DState curC3DState, oldC3DState;curC3DState169,3012
static C3DState curC3DState, oldC3DState;oldC3DState169,3012
alphaTestMap[]={alphaTestMap172,3075
blendMap[] = {blendMap179,3230
stencilOpMap[] = {stencilOpMap195,3515
stencilFuncMap[] = {stencilFuncMap208,3763
cullModeMap[] = {cullModeMap221,3942
filterConvMap_NoMIP[] = {filterConvMap_NoMIP229,4068
filterConvMap_MIP[] = {filterConvMap_MIP237,4231
addressConvMap[] = {addressConvMap245,4390
setC3DRenderState(uint32 state, uint32 value)setC3DRenderState255,4539
#define SET(SET262,4815
flushC3DRenderState(void)flushC3DRenderState287,5970
#define REQ(REQ289,5998
#define ACK(ACK290,6046
setAlphaBlend(bool32 enable)setAlphaBlend361,7766
getAlphaBlend(void)getAlphaBlend370,7930
setDepthTest(bool32 enable)setDepthTest376,8001
setDepthWrite(bool32 enable)setDepthWrite392,8435
setAlphaTest(bool32 enable)setAlphaTest410,8883
setAlphaTestFunction(uint32 function)setAlphaTestFunction424,9274
setVertexAlpha(bool32 enable)setVertexAlpha435,9578
setTextureAlpha(int alpha)setTextureAlpha447,9795
updateRasterParams(C3DRaster *natras)updateRasterParams459,10006
setRasterParams(int stage, int32 filter, int32 wrapS, int32 wrapT)setRasterParams470,10315
setRasterStage(int stage, Raster *raster)setRasterStage486,10677
setTexture(int32 stage, Texture *tex)setTexture506,11074
setRenderState(int32 state, void *pvalue)setRenderState520,11317
getRenderState(int32 state)getRenderState653,14643
resetRenderState(void)resetRenderState743,16546
setLights(WorldLights *lightData)setLights806,18515
setLights(WorldLights *lightData)setLights876,20320
setProjectionMatrix(C3D_Mtx proj)setProjectionMatrix960,22337
setViewMatrix(C3D_Mtx view)setViewMatrix967,22425
setWorldMatrix(Matrix *mat)setWorldMatrix974,22507
setMaterial(const RGBA &color, const SurfaceProperties &surfaceprops, float extraSurfProp)setMaterial1003,23260
flushCache(void)flushCache1027,24042
#define min(min1040,24349
prepareFrameBuffer(Camera *cam)prepareFrameBuffer1064,25229
cameraTilt(Camera *cam)cameraTilt1123,26701
cameraViewPort(Camera *cam, int tilt)cameraViewPort1131,26832
cameraRenderOn(Camera *cam)cameraRenderOn1158,27311
updateFog(Camera *cam)updateFog1175,27712
beginUpdate(Camera *cam)beginUpdate1188,27962
endUpdate(Camera *cam)endUpdate1274,29800
clearCamera(Camera *cam, RGBA *col, uint32 mode)clearCamera1280,29858
#define GX_TRANSFER_CROP GX_TRANSFER_CROP1292,30265
#define DISPLAY_TRANSFER_FLAGS	DISPLAY_TRANSFER_FLAGS1294,30293
showRaster(Raster *raster, uint32 flags)showRaster1305,30683
rasterBlit(C3DRaster *natsrc, Raster *src, Raster *dst)rasterBlit1336,31409
rasterRenderFast(Raster *raster, int32 x, int32 y)rasterRenderFast1366,32116
void *linearScratch;linearScratch1405,33058
openC3D(EngineOpenParams *openparams)openC3D1408,33091
closeC3D(void)closeC3D1437,33824
stopC3D(void)stopC3D1443,33866
initC3D(void)initC3D1452,33947
finalizeC3D(void)finalizeC3D1480,34462
deviceSystemC3D(DeviceReq req, void *arg, int32 n)deviceSystemC3D1486,34507
Device renderdevice = {renderdevice1566,35861

src/3ds/3ds.cpp,221
namespace rw {rw16,295
namespace c3d {c3d17,310
driverOpen(void *o, int32, int32)driverOpen20,340
driverClose(void *o, int32, int32)driverClose38,1051
registerPlatformPlugins(void)registerPlatformPlugins44,1107

src/3ds/tex/swizzle.h,52
namespace rw {rw25,953
namespace c3d {c3d26,968

src/3ds/tex/compress.cpp,135
namespace rw {rw35,1156
namespace c3d {c3d36,1171
etc1_common(uint8 *src, uint8 **dst, int stride, bool alpha)etc1_common39,1193

src/3ds/tex/rg_etc1.h,431
namespace rg_etc1rg_etc16,195
   enum etc1_qualityetc1_quality16,968
      cLowQuality,cLowQuality18,994
      cMediumQuality,cMediumQuality19,1013
      cHighQuality,cHighQuality20,1035
   struct etc1_pack_paramsetc1_pack_params23,1062
      etc1_quality m_quality;m_quality25,1094
      bool m_dithering;m_dithering26,1124
      inline etc1_pack_params()etc1_pack_params28,1149
      void clear()clear33,1216

src/3ds/tex/rg_etc1.cpp,18915
#define RG_ETC1_BUILD_DEBUGRG_ETC1_BUILD_DEBUG28,1016
#define RG_ETC1_ASSERT RG_ETC1_ASSERT31,1052
{__anon44a2da8b011034,1093
   template<typename T> inline T abs_diff(T a, T b)abs_diff35,1095
namespace rg_etc1rg_etc143,1219
   const uint32_t cUINT32_MAX = 0xFFFFFFFFU;cUINT32_MAX45,1239
   const uint64_t cUINT64_MAX = 0xFFFFFFFFFFFFFFFFULL; //0xFFFFFFFFFFFFFFFFui64;cUINT64_MAX46,1284
   template<typename T> inline T minimum(T a, T b, T c) { return std::min(std::min(a, b), c); }minimum48,1366
   template<typename T> inline T maximum(T a, T b, T c) { return std::max(std::max(a, b), c); }maximum49,1462
   template<typename T> inline T clamp(T value, T low, T high) { return (value < low) ? low : ((clamp50,1558
   template<typename T> inline T square(T value) { return value * value; }square51,1687
   template<typename T> inline void zero_object(T& obj) { std::memset((void*)&obj, 0, sizeof(objzero_object52,1762
   template<typename T> inline void zero_this(T* pObj) { std::memset((void*)pObj, 0, sizeof(*pObzero_this53,1864
#define RG_ETC1_ARRAY_SIZE(RG_ETC1_ARRAY_SIZE57,2037
   enum eNoClamp { cNoClamp };eNoClamp59,2116
   enum eNoClamp { cNoClamp };cNoClamp59,2116
   struct color_quad_u8color_quad_u861,2148
      static inline int clamp(int v) { if (v & 0xFFFFFF00U) v = (~(static_cast<int>(v) >> 31)) &clamp63,2177
      struct component_traits { enum { cSigned = false, cFloat = false, cMin = 0U, cMax = 255U }component_traits65,2293
      struct component_traits { enum { cSigned = false, cFloat = false, cMin = 0U, cMax = 255U }__anon44a2da8b020365,2293
      struct component_traits { enum { cSigned = false, cFloat = false, cMin = 0U, cMax = 255U }cSigned65,2293
      struct component_traits { enum { cSigned = false, cFloat = false, cMin = 0U, cMax = 255U }cFloat65,2293
      struct component_traits { enum { cSigned = false, cFloat = false, cMin = 0U, cMax = 255U }cMin65,2293
      struct component_traits { enum { cSigned = false, cFloat = false, cMin = 0U, cMax = 255U }cMax65,2293
      typedef unsigned char component_t;component_t68,2406
      typedef int parameter_t;parameter_t69,2447
      enum { cNumComps = 4 };__anon44a2da8b030371,2479
      enum { cNumComps = 4 };cNumComps71,2479
      {__anon44a2da8b040a74,2522
         {__anon44a2da8b050876,2546
            component_t r;r77,2557
            component_t g;g78,2584
            component_t b;b79,2611
            component_t a;a80,2638
         component_t c[cNumComps];c83,2678
         uint32_t m_u32;m_u3285,2714
      inline color_quad_u8()color_quad_u888,2749
      inline color_quad_u8(const color_quad_u8& other) : m_u32(other.m_u32)color_quad_u892,2795
      explicit inline color_quad_u8(parameter_t y, parameter_t alpha = component_traits::cMax)color_quad_u896,2888
      inline color_quad_u8(parameter_t red, parameter_t green, parameter_t blue, parameter_t alpcolor_quad_u8101,3024
      explicit inline color_quad_u8(eNoClamp, parameter_t y, parameter_t alpha = component_traitcolor_quad_u8106,3205
      inline color_quad_u8(eNoClamp, parameter_t red, parameter_t green, parameter_t blue, paramcolor_quad_u8111,3367
      inline void clear()clear116,3571
      inline color_quad_u8& operator= (const color_quad_u8& other)operator =121,3634
      inline color_quad_u8& set_rgb(const color_quad_u8& other)set_rgb127,3771
      inline color_quad_u8& operator= (parameter_t y)operator =135,3941
      inline color_quad_u8& set(parameter_t y, parameter_t alpha = component_traits::cMax)set141,4076
      inline color_quad_u8& set_noclamp_y_alpha(parameter_t y, parameter_t alpha = component_traset_noclamp_y_alpha152,4433
      inline color_quad_u8& set(parameter_t red, parameter_t green, parameter_t blue, parameter_set164,4943
      inline color_quad_u8& set_noclamp_rgba(parameter_t red, parameter_t green, parameter_t bluset_noclamp_rgba173,5322
      inline color_quad_u8& set_noclamp_rgb(parameter_t red, parameter_t green, parameter_t blueset_noclamp_rgb187,6052
      static inline parameter_t get_min_comp() { return component_traits::cMin; }get_min_comp199,6617
      static inline parameter_t get_max_comp() { return component_traits::cMax; }get_max_comp200,6699
      static inline bool get_comps_are_signed() { return component_traits::cSigned; }get_comps_are_signed201,6781
      inline component_t operator[] (uint32_t i) const { RG_ETC1_ASSERT(i < cNumComps); return c__anon44a2da8b0602203,6868
      inline component_t operator[] (uint32_t i) const { RG_ETC1_ASSERT(i < cNumComps); return coperator [] 203,6868
      inline color_quad_u8& set_component(uint32_t i, parameter_t f)set_component206,7070
      inline color_quad_u8& set_grayscale(parameter_t l)set_grayscale215,7273
      inline color_quad_u8& clamp(const color_quad_u8& l, const color_quad_u8& h)clamp224,7488
      inline color_quad_u8& clamp(parameter_t l, parameter_t h)clamp231,7752
      inline parameter_t get_luma() constget_luma239,8064
      inline parameter_t get_luma_rec709() constget_luma_rec709245,8251
      inline uint32_t squared_distance_rgb(const color_quad_u8& c) constsquared_distance_rgb250,8414
      inline uint32_t squared_distance_rgba(const color_quad_u8& c) constsquared_distance_rgba255,8600
      inline bool rgb_equals(const color_quad_u8& rhs) constrgb_equals260,8814
      inline bool operator== (const color_quad_u8& rhs) constoperator ==265,8954
      color_quad_u8& operator+= (const color_quad_u8& other)operator +=270,9069
      color_quad_u8& operator-= (const color_quad_u8& other)operator -=277,9283
      friend color_quad_u8 operator+ (const color_quad_u8& lhs, const color_quad_u8& rhs)operator +284,9497
      friend color_quad_u8 operator- (const color_quad_u8& lhs, const color_quad_u8& rhs)operator -291,9688
   struct vec3Fvec3F299,9908
      float m_s[3];m_s301,9929
      inline vec3F() { }vec3F303,9950
      inline vec3F(float s) { m_s[0] = s; m_s[1] = s; m_s[2] = s; }vec3F304,9975
      inline vec3F(float x, float y, float z) { m_s[0] = x; m_s[1] = y; m_s[2] = z; }vec3F305,10043
      inline float operator[] (uint32_t i) const { RG_ETC1_ASSERT(i < 3); return m_s[i]; }__anon44a2da8b0702307,10130
      inline vec3F& operator += (const vec3F& other) { for (uint32_t i = 0; i < 3; i++) m_s[i] +i309,10222
      inline vec3F& operator *= (float s) { for (uint32_t i = 0; i < 3; i++) m_s[i] *= s; returnoperator *=311,10351
   enum etc_constantsetc_constants314,10464
      cETC1BytesPerBlock = 8U,cETC1BytesPerBlock316,10491
      cETC1SelectorBits = 2U,cETC1SelectorBits318,10523
      cETC1SelectorValues = 1U << cETC1SelectorBits,cETC1SelectorValues319,10553
      cETC1SelectorMask = cETC1SelectorValues - 1U,cETC1SelectorMask320,10606
      cETC1BlockShift = 2U,cETC1BlockShift322,10659
      cETC1BlockSize = 1U << cETC1BlockShift,cETC1BlockSize323,10687
      cETC1LSBSelectorIndicesBitOffset = 0,cETC1LSBSelectorIndicesBitOffset325,10734
      cETC1MSBSelectorIndicesBitOffset = 16,cETC1MSBSelectorIndicesBitOffset326,10778
      cETC1FlipBitOffset = 32,cETC1FlipBitOffset328,10824
      cETC1DiffBitOffset = 33,cETC1DiffBitOffset329,10855
      cETC1IntenModifierNumBits = 3,cETC1IntenModifierNumBits331,10887
      cETC1IntenModifierValues = 1 << cETC1IntenModifierNumBits,cETC1IntenModifierValues332,10924
      cETC1RightIntenModifierTableBitOffset = 34,cETC1RightIntenModifierTableBitOffset333,10989
      cETC1LeftIntenModifierTableBitOffset = 37,cETC1LeftIntenModifierTableBitOffset334,11039
      cETC1BaseColorCompNumBits = 5,cETC1BaseColorCompNumBits337,11145
      cETC1BaseColorCompMax = 1 << cETC1BaseColorCompNumBits,cETC1BaseColorCompMax338,11182
      cETC1DeltaColorCompNumBits = 3,cETC1DeltaColorCompNumBits340,11245
      cETC1DeltaColorComp = 1 << cETC1DeltaColorCompNumBits,cETC1DeltaColorComp341,11283
      cETC1DeltaColorCompMax = 1 << cETC1DeltaColorCompNumBits,cETC1DeltaColorCompMax342,11344
      cETC1BaseColor5RBitOffset = 59,cETC1BaseColor5RBitOffset344,11409
      cETC1BaseColor5GBitOffset = 51,cETC1BaseColor5GBitOffset345,11447
      cETC1BaseColor5BBitOffset = 43,cETC1BaseColor5BBitOffset346,11485
      cETC1DeltaColor3RBitOffset = 56,cETC1DeltaColor3RBitOffset348,11524
      cETC1DeltaColor3GBitOffset = 48,cETC1DeltaColor3GBitOffset349,11563
      cETC1DeltaColor3BBitOffset = 40,cETC1DeltaColor3BBitOffset350,11602
      cETC1AbsColorCompNumBits = 4,cETC1AbsColorCompNumBits353,11713
      cETC1AbsColorCompMax = 1 << cETC1AbsColorCompNumBits,cETC1AbsColorCompMax354,11749
      cETC1AbsColor4R1BitOffset = 60,cETC1AbsColor4R1BitOffset356,11810
      cETC1AbsColor4G1BitOffset = 52,cETC1AbsColor4G1BitOffset357,11848
      cETC1AbsColor4B1BitOffset = 44,cETC1AbsColor4B1BitOffset358,11886
      cETC1AbsColor4R2BitOffset = 56,cETC1AbsColor4R2BitOffset360,11925
      cETC1AbsColor4G2BitOffset = 48,cETC1AbsColor4G2BitOffset361,11963
      cETC1AbsColor4B2BitOffset = 40,cETC1AbsColor4B2BitOffset362,12001
      cETC1ColorDeltaMin = -4,cETC1ColorDeltaMin364,12040
      cETC1ColorDeltaMax = 3,cETC1ColorDeltaMax365,12071
   static uint8_t g_quant5_tab[256+16];g_quant5_tab373,12246
   static const int g_etc1_inten_tables[cETC1IntenModifierValues][cETC1SelectorValues] =g_etc1_inten_tables375,12287
   static const uint8_t g_etc1_to_selector_index[cETC1SelectorValues] = { 2, 3, 1, 0 };g_etc1_to_selector_index381,12587
   static const uint8_t g_selector_index_to_etc1[cETC1SelectorValues] = { 3, 2, 0, 1 };g_selector_index_to_etc1382,12675
   static uint16_t g_etc1_inverse_lookup[2*8*4][256];      // [diff/inten_table/selector][desireg_etc1_inverse_lookup385,12933
   static const uint16_t g_color8_to_etc_block_config_0_255[2][33] =g_color8_to_etc_block_config_0_255389,13294
   static const uint16_t g_color8_to_etc_block_config_1_to_254[254][12] =g_color8_to_etc_block_config_1_to_254398,14028
   struct etc1_blocketc1_block513,27860
      uint8_t m_bytes[8];m_bytes518,28016
      uint8_t m_low_color[2];m_low_color520,28043
      uint8_t m_high_color[2];m_high_color521,28073
      enum { cNumSelectorBytes = 4 };__anon44a2da8b0803523,28105
      enum { cNumSelectorBytes = 4 };cNumSelectorBytes523,28105
      uint8_t m_selectors[cNumSelectorBytes];m_selectors524,28143
      inline void clear()clear526,28190
      inline uint32_t get_byte_bits(uint32_t ofs, uint32_t num) constget_byte_bits531,28259
      inline void set_byte_bits(uint32_t ofs, uint32_t num, uint32_t bits)set_byte_bits541,28670
      inline bool get_flip_bit() constget_flip_bit556,29291
      inline void set_flip_bit(bool flip)set_flip_bit561,29386
      inline bool get_diff_bit() constget_diff_bit567,29523
      inline void set_diff_bit(bool diff)set_diff_bit572,29618
      inline uint32_t get_inten_table(uint32_t subblock_id) constget_inten_table580,29903
      inline void set_inten_table(uint32_t subblock_id, uint32_t t)set_inten_table588,30203
      inline uint32_t get_selector(uint32_t x, uint32_t y) constget_selector598,30581
      inline void set_selector(uint32_t x, uint32_t y, uint32_t val)set_selector613,31164
      inline void set_base4_color(uint32_t idx, uint16_t c)set_base4_color635,31790
      inline uint16_t get_base4_color(uint32_t idx) constget_base4_color651,32361
      inline void set_base5_color(uint16_t c)set_base5_color669,32971
      inline uint16_t get_base5_color() constget_base5_color676,33235
      void set_delta3_color(uint16_t c)set_delta3_color684,33584
      inline uint16_t get_delta3_color() constget_delta3_color691,33841
      static inline void unscaled_to_scaled_color(color_quad_u8& dst, const color_quad_u8& src, unscaled_to_scaled_color728,36061
   T* indirect_radix_sort(uint32_t num_indices, T* pIndices0, T* pIndices1, const Q* pKeys, uintindirect_radix_sort748,36644
#define RG_ETC1_GET_KEY(RG_ETC1_GET_KEY772,37368
#define RG_ETC1_GET_KEY_FROM_INDEX(RG_ETC1_GET_KEY_FROM_INDEX773,37458
   uint16_t etc1_block::pack_color5(const color_quad_u8& color, bool scaled, uint32_t bias)pack_color5926,41465
   uint16_t etc1_block::pack_color5(uint32_t r, uint32_t g, uint32_t b, bool scaled, uint32_t bipack_color5931,41635
   color_quad_u8 etc1_block::unpack_color5(uint16_t packed_color5, bool scaled, uint32_t alpha)unpack_color5947,42071
   void etc1_block::unpack_color5(uint32_t& r, uint32_t& g, uint32_t& b, uint16_t packed_color5,unpack_color5963,42538
   bool etc1_block::unpack_color5(color_quad_u8& result, uint16_t packed_color5, uint16_t packedunpack_color5971,42768
   bool etc1_block::unpack_color5(uint32_t& r, uint32_t& g, uint32_t& b, uint16_t packed_color5,unpack_color51000,43635
   uint16_t etc1_block::pack_delta3(int r, int g, int b)pack_delta31010,44001
   void etc1_block::unpack_delta3(int& r, int& g, int& b, uint16_t packed_delta3)unpack_delta31021,44439
   uint16_t etc1_block::pack_color4(const color_quad_u8& color, bool scaled, uint32_t bias)pack_color41031,44711
   uint16_t etc1_block::pack_color4(uint32_t r, uint32_t g, uint32_t b, bool scaled, uint32_t bipack_color41036,44881
   color_quad_u8 etc1_block::unpack_color4(uint16_t packed_color4, bool scaled, uint32_t alpha)unpack_color41052,45316
   void etc1_block::unpack_color4(uint32_t& r, uint32_t& g, uint32_t& b, uint16_t packed_color4,unpack_color41068,45758
   void etc1_block::get_diff_subblock_colors(color_quad_u8* pDst, uint16_t packed_color5, uint32get_diff_subblock_colors1076,45988
   bool etc1_block::get_diff_subblock_colors(color_quad_u8* pDst, uint16_t packed_color5, uint16get_diff_subblock_colors1099,46788
   void etc1_block::get_abs_subblock_colors(color_quad_u8* pDst, uint16_t packed_color4, uint32_get_abs_subblock_colors1124,47665
   bool unpack_etc1_block(const void* pETC1_block, unsigned int* pDst_pixels_rgba, bool preserveunpack_etc1_block1147,48464
   struct etc1_solution_coordinatesetc1_solution_coordinates1259,52572
      inline etc1_solution_coordinates() :etc1_solution_coordinates1261,52613
      inline etc1_solution_coordinates(uint32_t r, uint32_t g, uint32_t b, uint32_t inten_table,etc1_solution_coordinates1268,52761
      inline etc1_solution_coordinates(const color_quad_u8& c, uint32_t inten_table, bool color4etc1_solution_coordinates1275,52991
      inline etc1_solution_coordinates(const etc1_solution_coordinates& other)etc1_solution_coordinates1282,53198
      inline etc1_solution_coordinates& operator= (const etc1_solution_coordinates& rhs)operator =1287,53318
      inline void clear()clear1295,53575
      inline color_quad_u8 get_scaled_color() constget_scaled_color1302,53708
      inline void get_block_colors(color_quad_u8* pBlock_colors)get_block_colors1320,54337
      color_quad_u8 m_unscaled_color;m_unscaled_color1342,55395
      uint32_t m_inten_table;m_inten_table1343,55433
      bool m_color4;m_color41344,55463
   class etc1_optimizeretc1_optimizer1347,55491
      etc1_optimizer()etc1_optimizer1353,55634
      void clear()clear1358,55692
      struct params : etc1_pack_paramsparams1366,55854
         params()params1368,55901
         params(const etc1_pack_params& base_params) :params1373,55963
         void clear()clear1379,56118
         void clear_optimizer_params()clear_optimizer_params1385,56240
         uint32_t m_num_src_pixels;m_num_src_pixels1399,56638
         const color_quad_u8* m_pSrc_pixels;m_pSrc_pixels1400,56674
         bool m_use_color4;m_use_color41402,56720
         const int* m_pScan_deltas;m_pScan_deltas1403,56748
         uint32_t m_scan_delta_size;m_scan_delta_size1404,56784
         color_quad_u8 m_base_color5;m_base_color51406,56822
         bool m_constrain_against_base_color5;m_constrain_against_base_color51407,56860
      struct resultsresults1410,56917
         uint64_t m_error;m_error1412,56946
         color_quad_u8 m_block_color_unscaled;m_block_color_unscaled1413,56973
         uint32_t m_block_inten_table;m_block_inten_table1414,57020
         uint32_t m_n;m_n1415,57059
         uint8_t* m_pSelectors;m_pSelectors1416,57082
         bool m_block_color4;m_block_color41417,57114
         inline results& operator= (const results& rhs)operator =1419,57145
      struct potential_solutionpotential_solution1435,57668
         potential_solution() : m_coords(), m_error(cUINT64_MAX), m_valid(false)potential_solution1437,57708
         etc1_solution_coordinates  m_coords;m_coords1441,57812
         uint8_t                      m_selectors[8];m_selectors1442,57858
         uint64_t                     m_error;m_error1443,57912
         bool                       m_valid;m_valid1444,57959
         void clear()clear1446,58005
      const params* m_pParams;m_pParams1454,58153
      results* m_pResult;m_pResult1455,58184
      int m_limit;m_limit1457,58211
      vec3F m_avg_color;m_avg_color1459,58231
      int m_br, m_bg, m_bb;m_br1460,58256
      int m_br, m_bg, m_bb;m_bg1460,58256
      int m_br, m_bg, m_bb;m_bb1460,58256
      uint16_t m_luma[8];m_luma1461,58284
      uint32_t m_sorted_luma[2][8];m_sorted_luma1462,58310
      const uint32_t* m_pSorted_luma_indices;m_pSorted_luma_indices1463,58346
      uint32_t* m_pSorted_luma;m_pSorted_luma1464,58392
      uint8_t m_selectors[8];m_selectors1466,58425
      uint8_t m_best_selectors[8];m_best_selectors1467,58455
      potential_solution m_best_solution;m_best_solution1469,58491
      potential_solution m_trial_solution;m_trial_solution1470,58533
      uint8_t m_temp_selectors[8];m_temp_selectors1471,58576
   bool etc1_optimizer::compute()compute1477,58910
   void etc1_optimizer::init(const params& p, results& r)init1621,66998
   bool etc1_optimizer::evaluate_solution(const etc1_solution_coordinates& coords, potential_solevaluate_solution1668,68604
   bool etc1_optimizer::evaluate_solution_fast(const etc1_solution_coordinates& coords, potentiaevaluate_solution_fast1761,72185
   static uint32_t etc1_decode_value(uint32_t diff, uint32_t inten, uint32_t selector, uint32_t etc1_decode_value1881,77020
   static inline int mul_8bit(int a, int b) { int t = a*b + 128; return (t + (t >> 8)) >> 8; }mul_8bit1894,77473
   void pack_etc1_block_init()pack_etc1_block_init1896,77569
   static uint64_t pack_etc1_block_solid_color(etc1_block& block, const uint8_t* pColor)pack_etc1_block_solid_color1942,79404
   static uint32_t pack_etc1_block_solid_color_constrained(pack_etc1_block_solid_color_constrained2028,82945
   static void dither_block_555(color_quad_u8* dest, const color_quad_u8* block)dither_block_5552143,87508
   unsigned int pack_etc1_block(void* pETC1_block, const unsigned int* pSrc_pixels_rgba, etc1_papack_etc1_block2185,88735

src/3ds/tex/swizzle.cpp,751
namespace rw{rw36,1331
namespace c3d{c3d37,1345
struct ColorColor39,1361
	uint8 data[4];data41,1376
class PacketPacket44,1396
	uint8 *src;src47,1421
	uint8 *dst;dst48,1434
	int bpp;bpp49,1447
	int stride;stride50,1457
	int height;height51,1470
	Color cache[64];cache53,1485
	uint8 *index(int x, int y, int i){index55,1505
	get(int i){get64,1665
	set(int i, Color col){set69,1707
	swap(int i, int j){swap74,1759
	position(int x, int y){position82,1860
	flush(){flush90,1985
	Packet(uint8 *_src, uint8 *_dst, int _bpp, int _stride, int _height)Packet98,2092
swizzle_8x8(Packet *p, bool reverse)swizzle_8x8110,2256
cpuSwizzle(uint8* src, uint8 *dst, int width, int height, int bpp, bool reverse)cpuSwizzle154,3211

src/3ds/rw3dsshader.h,426
namespace rw {rw3,15
namespace c3d {c3d4,30
struct ShaderShader23,400
	shaderProgram_s vsh_program;vsh_program25,416
	void (*combiner)(void);combiner26,446
	static DVLB_s *dvlb;dvlb28,473
c3dUniformMatrix4fv(int id, int count, int transpose, C3D_Mtx *mtx)c3dUniformMatrix4fv44,806
c3dUniform4fv(int id, int count, float *fv)c3dUniform4fv50,956
c3dUniform2fv(int id, int count, float *fv)c3dUniform2fv63,1219

src/3ds/3dsimmed.cpp,1540
#define U(U24,385
namespace rw {rw26,414
namespace c3d {c3d27,429
static Im2DVertex tmpprimbuf[3];tmpprimbuf29,446
static C3D_AttrInfo im2DVao;im2DVao31,480
static C3D_AttrInfo im3DVao;im3DVao32,509
static Shader *im2dShader;im2dShader34,540
static Shader *im3dShader;im3dShader35,567
Shader        *im2dOverrideShader;im2dOverrideShader36,594
static int32 im3D_vtx_count;im3D_vtx_count38,632
static Im3DVertex *im3D_vtx;im3D_vtx39,661
primTypeMap[] = {primTypeMap42,706
openIm2D(void)openIm2D53,951
closeIm2D(void)closeIm2D65,1275
im2DRenderPoint(void *vertices, int32 numVertices, int32 vert1)im2DRenderPoint72,1351
im2DRenderLine(void *vertices, int32 numVertices, int32 vert1, int32 vert2)im2DRenderLine82,1617
im2DRenderTriangle(void *vertices, int32 numVertices, int32 vert1, int32 vert2, int32 vert3)im2DRenderTriangle92,1894
int forceTiltOff = 0;forceTiltOff101,2183
im2DSetXform(void)im2DSetXform104,2212
im2DRenderIndexedPrimitive(PrimitiveType primType,im2DRenderIndexedPrimitive121,2644
im2DRenderPrimitive(PrimitiveType primType, void *vertices, int32 numVertices)im2DRenderPrimitive172,3750
openIm3D(void)openIm3D178,3910
closeIm3D(void)closeIm3D189,4232
im3DTransform(void *vertices, int32 numVertices, Matrix *world, uint32 flags)im3DTransform196,4301
im3DRenderIndexedPrimitive(PrimitiveType primType, void *indices, int32 numIndices)im3DRenderIndexedPrimitive216,4668
im3DRenderPrimitive(PrimitiveType primType)im3DRenderPrimitive248,5438
im3DEnd(void)im3DEnd254,5540

src/3ds/3dsskin.cpp,1005
namespace rw {rw21,392
namespace c3d {c3d22,407
static Matrix boneMatrices[64];boneMatrices33,834
skinInstanceCB(Geometry *geo, InstanceDataHeader *header, bool32 reinstance)skinInstanceCB36,873
#define ATTRIB(ATTRIB48,1305
skinUninstanceCB(Geometry *geo, InstanceDataHeader *header)skinUninstanceCB78,2017
immSkinPos(V3d in_pos, float *in_weights, uint8 *in_indices)immSkinPos84,2128
immSkinNrm(V3d in_nrm, float *in_weights, uint8 *in_indices)immSkinNrm100,2524
immSkinColor(RGBA col)immSkinColor116,2921
immSkinTexCoord(TexCoords tc)immSkinTexCoord125,3065
drawImmediate(Atomic *atom, InstanceDataHeader *header, InstanceData *inst)drawImmediate131,3157
uploadSkinMatrices(Atomic *atomic)uploadSkinMatrices170,4229
skinRenderCB(Atomic *atomic, InstanceDataHeader *header)skinRenderCB207,5089
skinOpen(void *o, int32, int32)skinOpen232,5720
skinClose(void *o, int32, int32)skinClose239,5840
initSkin(void)initSkin247,6003
makeSkinPipeline(void)makeSkinPipeline254,6132

src/3ds/rw3dsimpl.h,724
namespace rw {rw1,0
namespace c3d {c3d2,15
struct DisplayModeDisplayMode24,780
  int wide_mode;wide_mode26,801
  GSPGPU_FramebufferFormat format;format27,818
struct C3DGlobalsC3DGlobals30,857
	DisplayMode *modes;modes32,877
	int numModes;numModes33,898
	int currentMode;currentMode34,913
	int currentDisplay;currentDisplay35,931
	int presentWidth, presentHeight;presentWidth36,952
	int presentWidth, presentHeight;presentHeight36,952
	int presentOffX, presentOffY;presentOffX37,986
	int presentOffX, presentOffY;presentOffY37,986
	int winWidth, winHeight;winWidth40,1046
	int winWidth, winHeight;winHeight40,1046
	const char *winTitle;winTitle41,1072
	uint32 numSamples;numSamples42,1095

src/3ds/rw3dsplg.h,47
namespace rw {rw1,0
namespace c3d {c3d2,15

src/prim.cpp,260
#define PLUGIN_ID PLUGIN_ID11,170
namespace rw {rw13,191
BBox::initialize(V3d *point)initialize17,213
BBox::addPoint(V3d *point)addPoint24,294
BBox::calculate(V3d *points, int32 n)calculate41,655
BBox::containsPoint(V3d *point)containsPoint63,1127

src/rwcharset.h,542
namespace rw {rw1,0
struct CharsetCharset3,16
	struct Desc {Desc5,33
		int32 count;	// num of charscount6,48
		int32 tileWidth, tileHeight;	// chars in rastertileWidth7,79
		int32 tileWidth, tileHeight;	// chars in rastertileHeight7,79
		int32 width, height;	// of charwidth8,129
		int32 width, height;	// of charheight8,129
		int32 width_internal, height_internal;	// + borderwidth_internal9,163
		int32 width_internal, height_internal;	// + borderheight_internal9,163
	} desc;desc10,216
	Raster *raster;raster11,225

src/png.cpp,168
#define PLUGIN_ID PLUGIN_ID15,240
namespace rw {rw17,261
readPNG(const char *filename)readPNG21,285
writePNG(Image *image, const char *filename)writePNG83,1972

src/image.cpp,4024
#define PLUGIN_ID PLUGIN_ID18,328
namespace rw {rw20,356
int32 Image::numAllocated;numAllocated22,372
struct FileAssociationFileAssociation24,400
	char *extension;extension26,425
	Image *(*read)(const char *afilename);read27,443
	void (*write)(Image *image, const char *filename);write28,483
struct ImageGlobalsImageGlobals31,539
	char *searchPaths;searchPaths33,561
	int numSearchPaths;numSearchPaths34,581
	FileAssociation fileFormats[10];fileFormats35,602
	int numFileFormats;numFileFormats36,636
int32 imageModuleOffset;imageModuleOffset38,660
#define IMAGEGLOBAL(IMAGEGLOBAL40,686
Image::create(int32 width, int32 height, int32 depth)create51,1112
Image::destroy(void)destroy71,1529
Image::allocate(void)allocate79,1607
Image::free(void)free94,1986
Image::setPixels(uint8 *pixels)setPixels108,2172
decompressDXT1(uint8 *adst, int32 w, int32 h, uint8 *src)decompressDXT1115,2257
decompressDXT3(uint8 *adst, int32 w, int32 h, uint8 *src)decompressDXT3182,3915
decompressDXT5(uint8 *adst, int32 w, int32 h, uint8 *src)decompressDXT5240,5389
flipBlock(uint8 *dst, uint8 *src)flipBlock330,7585
flipBlock_half(uint8 *dst, uint8 *src)flipBlock_half346,7839
flipAlphaBlock3(uint8 *dst, uint8 *src)flipAlphaBlock3362,8091
flipAlphaBlock3_half(uint8 *dst, uint8 *src)flipAlphaBlock3_half376,8339
flipAlphaBlock5(uint8 *dst, uint8 *src)flipAlphaBlock5390,8578
flipAlphaBlock5_half(uint8 *dst, uint8 *src)flipAlphaBlock5_half408,8917
flipDXT1(uint8 *dst, uint8 *src, uint32 width, uint32 height)flipDXT1422,9202
flipDXT3(uint8 *dst, uint8 *src, uint32 width, uint32 height)flipDXT3457,9800
flipDXT5(uint8 *dst, uint8 *src, uint32 width, uint32 height)flipDXT5494,10468
flipDXT(int32 type, uint8 *dst, uint8 *src, uint32 width, uint32 height)flipDXT531,11136
Image::setPixelsDXT(int32 type, uint8 *pixels)setPixelsDXT547,11402
Image::setPalette(uint8 *palette)setPalette563,11732
Image::compressPalette(void)compressPalette570,11821
Image::hasAlpha(void)hasAlpha587,12129
Image::convertTo32(void)convertTo32626,12964
Image::palettize(int32 depth)palettize674,13897
Image::unpalettize(bool forceAlpha)unpalettize705,14567
Image::makeMask(void)makeMask743,15453
Image::applyMask(Image *mask)applyMask786,16279
Image::removeMask(void)removeMask817,16963
Image::extractMask(void)extractMask850,17525
Image::upscale(int size)upscale898,18415
boxFilter(uint8 *dst, Image *img, int x, int y)boxFilter939,19315
Image::downSample(int power)downSample967,19953
Image::setSearchPath(const char *path)setSearchPath1000,20680
Image::printSearchPath(void)printSearchPath1022,21081
Image::getFilename(const char *name)getFilename1033,21313
Image::readMasked(const char *imageName, const char *maskName)readMasked1073,22105
Image::read(const char *imageName)read1095,22532
Image::registerFileFormat(const char *ext, fileRead read, fileWrite write)registerFileFormat1127,23261
imageOpen(void *object, int32 offset, int32 size)imageOpen1140,23700
imageClose(void *object, int32 offset, int32 size)imageClose1151,23958
Image::registerModule(void)registerModule1165,24292
makeTreeAddr(RGBA color)makeTreeAddr1181,24671
ColorQuant::Node::destroy(void)destroy1204,25046
ColorQuant::createNode(int32 level)createNode1216,25250
ColorQuant::getNode(ColorQuant::Node *root, uint32 addr, int32 level)getNode1237,25636
ColorQuant::findNode(ColorQuant::Node *root, uint32 addr, int32 level)findNode1252,25965
ColorQuant::reduceNode(Node *node)reduceNode1265,26209
ColorQuant::Node::addColor(RGBA color)addColor1285,26705
ColorQuant::init(void)init1295,26871
ColorQuant::destroy(void)destroy1302,26970
ColorQuant::addColor(RGBA color)addColor1308,27030
ColorQuant::findColor(RGBA color)findColor1316,27199
ColorQuant::addImage(Image *img)addImage1324,27370
ColorQuant::makePalette(int32 numColors, RGBA *colors)makePalette1360,28117
ColorQuant::matchImage(uint8 *dstPixels, uint32 dstStride, Image *img)matchImage1383,28629

src/error.cpp,238
namespace rw {rw7,82
static Error error;error9,98
setError(Error *e)setError12,124
getError(Error *e)getError18,168
#define ECODE(ECODE26,252
const char *errstrs[] = {errstrs28,275
dbgsprint(uint32 code, ...)dbgsprint36,358

src/render.cpp,1181
namespace rw {rw7,82
void SetRenderState(int32 state, uint32 value){SetRenderState9,98
void SetRenderStatePtr(int32 state, void *value){SetRenderStatePtr12,211
uint32 GetRenderState(int32 state){GetRenderState15,310
void *GetRenderStatePtr(int32 state){GetRenderStatePtr18,412
namespace im2d {im2d23,508
float32 GetNearZ(void) { return engine->device.zNear; }GetNearZ25,526
float32 GetFarZ(void) { return engine->device.zFar; }GetFarZ26,582
RenderLine(void *verts, int32 numVerts, int32 vert1, int32 vert2)RenderLine28,641
RenderTriangle(void *verts, int32 numVerts, int32 vert1, int32 vert2, int32 vert3)RenderTriangle33,779
RenderIndexedPrimitive(PrimitiveType type, void *verts, int32 numVerts, void *indices, int32 numRenderIndexedPrimitive38,945
RenderPrimitive(PrimitiveType type, void *verts, int32 numVerts)RenderPrimitive43,1147
namespace im3d {im3d52,1289
Transform(void *vertices, int32 numVertices, Matrix *world, uint32 flags)Transform55,1312
RenderPrimitive(PrimitiveType primType)RenderPrimitive60,1463
RenderIndexedPrimitive(PrimitiveType primType, void *indices, int32 numIndices)RenderIndexedPrimitive65,1559
End(void)End70,1723

src/matfx.cpp,2985
#define PLUGIN_ID PLUGIN_ID25,493
namespace rw {rw27,521
bool32 MatFX::modulateEnvMap;modulateEnvMap29,537
createAtomicMatFX(void *object, int32 offset, int32)createAtomicMatFX34,592
copyAtomicMatFX(void *dst, void *src, int32 offset, int32)copyAtomicMatFX41,722
readAtomicMatFX(Stream *stream, int32, void *object, int32, int32)readAtomicMatFX50,951
writeAtomicMatFX(Stream *stream, int32, void *object, int32 offset, int32)writeAtomicMatFX58,1118
getSizeAtomicMatFX(void *object, int32 offset, int32)getSizeAtomicMatFX65,1284
MatFXGlobals matFXGlobals = { 0, 0, { nil }, nil };matFXGlobals74,1488
clearMatFX(MatFX *matfx)clearMatFX78,1583
MatFX::setEffects(Material *mat, uint32 type)setEffects103,2088
MatFX::getEffects(const Material *m)getEffects139,2784
MatFX::get(const Material *m)get148,2939
MatFX::getEffectIndex(uint32 type)getEffectIndex154,3043
MatFX::setBumpTexture(Texture *t)setBumpTexture163,3172
MatFX::setBumpCoefficient(float32 coef)setBumpCoefficient176,3389
MatFX::getBumpTexture(void)getBumpTexture184,3536
MatFX::getBumpCoefficient(void)getBumpCoefficient193,3675
MatFX::setEnvTexture(Texture *t)setEnvTexture202,3824
MatFX::setEnvFrame(Frame *f)setEnvFrame215,4036
MatFX::setEnvCoefficient(float32 coef)setEnvCoefficient223,4157
MatFX::setEnvFBAlpha(bool32 useFBAlpha)setEnvFBAlpha231,4297
MatFX::getEnvTexture(void)getEnvTexture239,4444
MatFX::getEnvFrame(void)getEnvFrame248,4579
MatFX::getEnvCoefficient(void)getEnvCoefficient257,4715
MatFX::getEnvFBAlpha(void)getEnvFBAlpha266,4863
MatFX::setDualTexture(Texture *t)setDualTexture276,4999
MatFX::setDualSrcBlend(int32 blend)setDualSrcBlend289,5213
MatFX::setDualDestBlend(int32 blend)setDualDestBlend297,5347
MatFX::getDualTexture(void)getDualTexture305,5486
MatFX::getDualSrcBlend(void)getDualSrcBlend314,5620
MatFX::getDualDestBlend(void)getDualDestBlend323,5758
MatFX::setUVTransformMatrices(Matrix *base, Matrix *dual)setUVTransformMatrices332,5896
MatFX::getUVTransformMatrices(Matrix **base, Matrix **dual)getUVTransformMatrices342,6122
createMaterialMatFX(void *object, int32 offset, int32)createMaterialMatFX355,6434
destroyMaterialMatFX(void *object, int32 offset, int32)destroyMaterialMatFX362,6569
copyMaterialMatFX(void *dst, void *src, int32 offset, int32)copyMaterialMatFX373,6767
readMaterialMatFX(Stream *stream, int32, void *object, int32 offset, int32)readMaterialMatFX404,7519
writeMaterialMatFX(Stream *stream, int32, void *object, int32 offset, int32)writeMaterialMatFX490,9624
getSizeMaterialMatFX(void *object, int32 offset, int32)getSizeMaterialMatFX529,10799
MatFX::enableEffects(Atomic *atomic)enableEffects567,11597
MatFX::disableEffects(Atomic *atomic)disableEffects575,11811
MatFX::getEffects(Atomic *atomic)getEffects581,11923
matfxOpen(void *o, int32, int32)matfxOpen587,12040
matfxClose(void *o, int32, int32)matfxClose599,12379
registerMatFXPlugin(void)registerMatFXPlugin610,12652

.travis.yml,0

CMakeLists.txt,2353
project(librw C CXX)librw2,36
    set(LIBRW_PLATFORMS "NULL" "GL3" "D3D9")LIBRW_PLATFORMS7,134
    set(LIBRW_PLATFORMS "NULL" "GL3" "PS2")LIBRW_PLATFORMS9,186
set(LIBRW_PLATFORM "NULL" CACHE STRING "Platform")LIBRW_PLATFORM11,238
set(LIBRW_GL3_GFXLIBS "GLFW" "SDL2")LIBRW_GL3_GFXLIBS19,609
set(LIBRW_GL3_GFXLIB "GLFW" CACHE STRING "gfxlib for gl3")LIBRW_GL3_GFXLIB20,646
option(LIBRW_TOOLS "Build librw tools" ON)LIBRW_TOOLS33,1092
option(LIBRW_INSTALL "Install librw files" OFF)LIBRW_INSTALL34,1135
    set(LIBRW_INSTALL_INCLUDEDIR "${CMAKE_INSTALL_INCLUDEDIR}/librw")LIBRW_INSTALL_INCLUDEDIR38,1230
    set(compiler)compiler67,2121
    set(os)os68,2139
            set(compiler "-msvc${MSVC_VERSION}")compiler71,2210
            set(compiler "-gcc${cmake_c_compiler_version_major}")compiler73,2310
            set(compiler "-clang${cmake_c_compiler_version_major}")compiler75,2429
            set(compiler "-appleclang${cmake_c_compiler_version_major}")compiler77,2555
            set(compiler "-UNK")compiler79,2643
        set(platform "-null")platform84,2844
        set(platform "-ps2")platform86,2905
            set(platform "-gl3-glfw")platform89,3010
            set(platform "-gl3-sdl2")platform91,3063
        set(platform "-d3d9")platform94,3149
            set(os "-win")os98,3240
            set(os "-apple")os100,3289
            set(os "-linux")os102,3339
            set(compiler "-UNK")compiler104,3383
    set(CPACK_PACKAGE_NAME "${PROJECT_NAME}${platform}${os}${compiler}")CPACK_PACKAGE_NAME109,3551
    set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A (partial) re-implementation of RenderWare Graphics"CPACK_PACKAGE_DESCRIPTION_SUMMARY110,3624
    set(CPACK_PACKAGE_VENDOR "aap")CPACK_PACKAGE_VENDOR111,3722
    set(CPACK_PACKAGE_DESCRIPTION_FILE "${PROJECT_SOURCE_DIR}/LICENSE")CPACK_PACKAGE_DESCRIPTION_FILE112,3758
    set(CPACK_RESOURCE_FILE_LICENSE "${PROJECT_SOURCE_DIR}/LICENSE")CPACK_RESOURCE_FILE_LICENSE113,3830
    set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_NAME}")CPACK_PACKAGE_INSTALL_DIRECTORY114,3899
    set(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}")CPACK_SOURCE_PACKAGE_FILE_NAME115,3964
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}")CPACK_PACKAGE_FILE_NAME116,4028
    set(CPACK_GENERATOR "TXZ")CPACK_GENERATOR117,4085

premake5.lua,151
function findlibs()findlibs136,3275
function skeleton()skeleton171,4343
function skeltool(dir)skeltool177,4496
function vucode()vucode193,4849

cmake/FindSDL2.cmake,0

cmake/librw-config.cmake.in,328
set(LIBRW_PLATFORM "@LIBRW_PLATFORM@")LIBRW_PLATFORM3,58
set(LIBRW_PLATFORMS "@LIBRW_PLATFORMS@")LIBRW_PLATFORMS4,97
    set(LIBRW_GL3_GFXLIB "@LIBRW_GL3_GFXLIB@")LIBRW_GL3_GFXLIB8,202
    set(LIBRW_GL3_GFXLIBS "@LIBRW_GL3_GFXLIBS@")LIBRW_GL3_GFXLIBS9,249
    set(OpenGL_GL_PREFERENCE GLVND)OpenGL_GL_PREFERENCE11,299

cmake/ps2toolchain/CMakeDetermineDSMCompiler.cmake,579
  set(CMAKE_DSM_COMPILER_ID_VENDOR_FLAGS_GNU "--version")CMAKE_DSM_COMPILER_ID_VENDOR_FLAGS_GNU13,365
  set(CMAKE_DSM_COMPILER_ID_VENDOR_REGEX_GNU "(GNU assembler)|(GCC)|(Free Software Foundation)")CMAKE_DSM_COMPILER_ID_VENDOR_REGEX_GNU14,423
    set(_version " ${CMAKE_DSM_COMPILER_VERSION}")_version27,798
    set(_version "")_version29,858
    set(_CMAKE_TOOLCHAIN_PREFIX ${CMAKE_MATCH_1})_CMAKE_TOOLCHAIN_PREFIX40,1267
set(_CMAKE_PROCESSING_LANGUAGE "DSM")_CMAKE_PROCESSING_LANGUAGE45,1337
set(CMAKE_DSM_COMPILER_ENV_VAR "DSM")CMAKE_DSM_COMPILER_ENV_VAR55,2081

cmake/ps2toolchain/CMakeDSMInformation.cmake,1749
  set(CMAKE_DSM_OUTPUT_EXTENSION .o)CMAKE_DSM_OUTPUT_EXTENSION2,9
  set(CMAKE_DSM_OUTPUT_EXTENSION .obj)CMAKE_DSM_OUTPUT_EXTENSION4,53
set(CMAKE_INCLUDE_FLAG_DSM "-I")CMAKE_INCLUDE_FLAG_DSM7,101
set(CMAKE_DSM_FLAGS_INIT "$ENV{DSMFLAGS} ${CMAKE_DSM_FLAGS_INIT}")CMAKE_DSM_FLAGS_INIT9,135
set (CMAKE_DSM_FLAGS "${CMAKE_DSM_FLAGS_INIT}" CACHE STRINGCMAKE_DSM_FLAGS16,374
    set (CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRINGCMAKE_BUILD_TYPE23,713
  set (CMAKE_DSM_FLAGS_DEBUG "${CMAKE_DSM_FLAGS_DEBUG_INIT}" CACHE STRINGCMAKE_DSM_FLAGS_DEBUG27,918
  set (CMAKE_DSM_FLAGS_MINSIZEREL "${CMAKE_DSM_FLAGS_MINSIZEREL_INIT}" CACHE STRINGCMAKE_DSM_FLAGS_MINSIZEREL29,1048
  set (CMAKE_DSM_FLAGS_RELEASE "${CMAKE_DSM_FLAGS_RELEASE_INIT}" CACHE STRINGCMAKE_DSM_FLAGS_RELEASE31,1198
  set (CMAKE_DSM_FLAGS_RELWITHDEBINFO "${CMAKE_DSM_FLAGS_RELWITHDEBINFO_INIT}" CACHE STRINGCMAKE_DSM_FLAGS_RELWITHDEBINFO33,1334
  set(CMAKE_DSM_COMPILE_OBJECT "<CMAKE_DSM_COMPILER> <INCLUDES> <FLAGS> -o <OBJECT> <SOURCE>")CMAKE_DSM_COMPILE_OBJECT46,1861
 set(CMAKE_DSM_CREATE_STATIC_LIBRARYCMAKE_DSM_CREATE_STATIC_LIBRARY50,2005
  set(CMAKE_DSM_LINK_EXECUTABLECMAKE_DSM_LINK_EXECUTABLE56,2193
  set(CMAKE_EXECUTABLE_RUNTIME_DSM_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_DSM_FLAG})CMAKE_EXECUTABLE_RUNTIME_DSM_FLAG61,2388
  set(CMAKE_EXECUTABLE_RUNTIME_DSM_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_DSM_FLAG_SEP})CMAKE_EXECUTABLE_RUNTIME_DSM_FLAG_SEP65,2525
  set(CMAKE_EXECUTABLE_RPATH_LINK_DSM_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_DSM_FLAG})CMAKE_EXECUTABLE_RPATH_LINK_DSM_FLAG69,2669
  set(CMAKE_DSM_CREATE_SHARED_LIBRARY)CMAKE_DSM_CREATE_SHARED_LIBRARY74,2819
  set(CMAKE_DSM_CREATE_SHARED_MODULE)CMAKE_DSM_CREATE_SHARED_MODULE78,2906

cmake/ps2toolchain/conanfile.py,410
class Ps2devCMakeToolchainConan(ConanFile):Ps2devCMakeToolchainConan6,55
    name = "ps2dev-cmaketoolchain"name7,99
    description = "CMake toolchain script for ps2dev"description8,134
    topics = "ps2", "sdk", "library", "sony", "playstation", "ps2"topics9,188
    def export_sources(self):export_sources11,256
    def package(self):package15,373
    def package_info(self):package_info19,532

cmake/ps2toolchain/cmaketoolchain.cmake,2217
set(CMAKE_SYSTEM_NAME "PlayStation2")CMAKE_SYSTEM_NAME5,97
set(CMAKE_SYSTEM_PROCESSOR "mipsel")CMAKE_SYSTEM_PROCESSOR6,135
set(CMAKE_SYSTEM_VERSION 1)CMAKE_SYSTEM_VERSION7,172
set(CMAKE_POSITION_INDEPENDENT_CODE ON)CMAKE_POSITION_INDEPENDENT_CODE9,201
set(CMAKE_NO_SYSTEM_FROM_IMPORTED ON)CMAKE_NO_SYSTEM_FROM_IMPORTED11,242
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)CMAKE_TRY_COMPILE_TARGET_TYPE13,281
set(PS2DEV "$ENV{PS2DEV}")PS2DEV21,532
set(PS2SDK "$ENV{PS2SDK}")PS2SDK22,559
set(CMAKE_DSM_SOURCE_FILE_EXTENSIONS "dsm")CMAKE_DSM_SOURCE_FILE_EXTENSIONS32,817
set(CMAKE_C_COMPILER "${PS2DEV}/ee/bin/ee-gcc")CMAKE_C_COMPILER34,862
set(CMAKE_CXX_COMPILER "${PS2DEV}/ee/bin/ee-g++")CMAKE_CXX_COMPILER35,910
set(CMAKE_ASM_COMPILER "${PS2DEV}/ee/bin/ee-g++")CMAKE_ASM_COMPILER36,960
set(CMAKE_DSM_COMPILER "${PS2DEV}/dvp/bin/dvp-as")CMAKE_DSM_COMPILER37,1010
set(CMAKE_AR "${PS2DEV}/ee/bin/ee-ar" CACHE FILEPATH "archiver")CMAKE_AR38,1061
set(CMAKE_LINKER "${PS2DEV}/ee/bin/ee-ld")CMAKE_LINKER39,1126
set(CMAKE_RANLIB "${PS2DEV}/ee/bin/ee-ranlib" CACHE FILEPATH "ranlib")CMAKE_RANLIB40,1169
set(CMAKE_STRIP "${PS2DEV}/ee/bin/ee-strip" CACHE FILEPATH "strip")CMAKE_STRIP41,1240
set(CMAKE_ASM_FLAGS_INIT "-G0 -I\"${PS2SDK}/ee/include\" -I\"${PS2SDK}/common/include\"")CMAKE_ASM_FLAGS_INIT43,1309
set(CMAKE_C_FLAGS_INIT "-G0 -fno-common -I\"${PS2SDK}/ee/include\" -I\"${PS2SDK}/common/include\CMAKE_C_FLAGS_INIT44,1399
set(CMAKE_CXX_FLAGS_INIT "-G0 -fno-common -I\"${PS2SDK}/ee/include\" -I\"${PS2SDK}/common/includCMAKE_CXX_FLAGS_INIT45,1499
set(CMAKE_EXE_LINKER_FLAGS_INIT "-G0 -L\"${PS2SDK}/ee/lib\" -Wl,-r -Wl,-d")CMAKE_EXE_LINKER_FLAGS_INIT46,1601
set(CMAKE_FIND_ROOT_PATH "${PS2DEV}/ee;${PS2SDK}/ee")CMAKE_FIND_ROOT_PATH48,1678
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)CMAKE_FIND_ROOT_PATH_MODE_PROGRAM49,1732
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)CMAKE_FIND_ROOT_PATH_MODE_LIBRARY50,1777
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)CMAKE_FIND_ROOT_PATH_MODE_INCLUDE51,1821
set(PS2 1)PS253,1866
set(EE 1)EE54,1877
function(add_erl_executable OUTFILE TARGET)add_erl_executable56,1888
    set(outfile "${output_dir}/${TARGET}.erl")outfile58,2012

cmake/ps2toolchain/Platform/PlayStation2.cmake,64
set(CMAKE_EXECUTABLE_SUFFIX ".elf")CMAKE_EXECUTABLE_SUFFIX1,0

cmake/ps2toolchain/CMakeDSMCompiler.cmake.in,952
set(CMAKE_DSM_COMPILER "@_CMAKE_DSM_COMPILER@")CMAKE_DSM_COMPILER1,0
set(CMAKE_DSM_COMPILER_ARG1 "@_CMAKE_DSM_COMPILER_ARG1@")CMAKE_DSM_COMPILER_ARG12,48
set(CMAKE_DSM_COMPILER_AR "@_CMAKE_DSM_COMPILER_AR@")CMAKE_DSM_COMPILER_AR3,106
set(CMAKE_RANLIB "@CMAKE_RANLIB@")CMAKE_RANLIB4,160
set(CMAKE_DSM_COMPILER_RANLIB "@_CMAKE_DSM_COMPILER_RANLIB@")CMAKE_DSM_COMPILER_RANLIB5,195
set(CMAKE_LINKER "@CMAKE_LINKER@")CMAKE_LINKER6,257
set(CMAKE_DSM_COMPILER_LOADED 1)CMAKE_DSM_COMPILER_LOADED7,292
set(CMAKE_DSM_COMPILER_ID "@_CMAKE_DSM_COMPILER_ID@")CMAKE_DSM_COMPILER_ID8,325
set(CMAKE_DSM_COMPILER_VERSION "@_CMAKE_DSM_COMPILER_VERSION@")CMAKE_DSM_COMPILER_VERSION9,379
set(CMAKE_DSM_COMPILER_ENV_VAR "@_CMAKE_DSM_COMPILER_ENV_VAR@")CMAKE_DSM_COMPILER_ENV_VAR10,443
set(CMAKE_DSM_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)CMAKE_DSM_IGNORE_EXTENSIONS13,550
set(CMAKE_DSM_LINKER_PREFERENCE 0)CMAKE_DSM_LINKER_PREFERENCE14,613

cmake/ps2toolchain/toolchain_ps2_ee.cmake,2213
set(CMAKE_SYSTEM_NAME "PlayStation2")CMAKE_SYSTEM_NAME5,97
set(CMAKE_SYSTEM_PROCESSOR "mipsel")CMAKE_SYSTEM_PROCESSOR6,135
set(CMAKE_SYSTEM_VERSION 1)CMAKE_SYSTEM_VERSION7,172
set(CMAKE_POSITION_INDEPENDENT_CODE ON)CMAKE_POSITION_INDEPENDENT_CODE9,201
set(CMAKE_NO_SYSTEM_FROM_IMPORTED ON)CMAKE_NO_SYSTEM_FROM_IMPORTED11,242
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)CMAKE_TRY_COMPILE_TARGET_TYPE13,281
set(PS2DEV "$ENV{PS2DEV}")PS2DEV21,532
set(PS2SDK "$ENV{PS2SDK}")PS2SDK22,559
set(CMAKE_DSM_SOURCE_FILE_EXTENSIONS "dsm")CMAKE_DSM_SOURCE_FILE_EXTENSIONS24,587
set(CMAKE_C_COMPILER "${PS2DEV}/ee/bin/ee-gcc")CMAKE_C_COMPILER26,632
set(CMAKE_CXX_COMPILER "${PS2DEV}/ee/bin/ee-g++")CMAKE_CXX_COMPILER27,680
set(CMAKE_ASM_COMPILER "${PS2DEV}/ee/bin/ee-g++")CMAKE_ASM_COMPILER28,730
set(CMAKE_DSM_COMPILER "${PS2DEV}/dvp/bin/dvp-as")CMAKE_DSM_COMPILER29,780
set(CMAKE_AR "${PS2DEV}/ee/bin/ee-ar" CACHE FILEPATH "archiver")CMAKE_AR30,831
set(CMAKE_LINKER "${PS2DEV}/ee/bin/ee-ld")CMAKE_LINKER31,896
set(CMAKE_RANLIB "${PS2DEV}/ee/bin/ee-ranlib" CACHE FILEPATH "ranlib")CMAKE_RANLIB32,939
set(CMAKE_STRIP "${PS2DEV}/ee/bin/ee-strip" CACHE FILEPATH "strip")CMAKE_STRIP33,1010
set(CMAKE_ASM_FLAGS_INIT "-G0 -I\"${PS2SDK}/ee/include\" -I\"${PS2SDK}/common/include\"")CMAKE_ASM_FLAGS_INIT35,1079
set(CMAKE_C_FLAGS_INIT "-G0 -fno-common -I\"${PS2SDK}/ee/include\" -I\"${PS2SDK}/common/include\CMAKE_C_FLAGS_INIT36,1169
set(CMAKE_CXX_FLAGS_INIT "-G0 -fno-common -I\"${PS2SDK}/ee/include\" -I\"${PS2SDK}/common/includCMAKE_CXX_FLAGS_INIT37,1269
set(CMAKE_EXE_LINKER_FLAGS_INIT "-G0 -L\"${PS2SDK}/ee/lib\" -Wl,-r -Wl,-d")CMAKE_EXE_LINKER_FLAGS_INIT38,1371
set(CMAKE_FIND_ROOT_PATH "${PS2DEV}/ee;${PS2SDK}/ee")CMAKE_FIND_ROOT_PATH40,1448
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)CMAKE_FIND_ROOT_PATH_MODE_PROGRAM41,1502
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)CMAKE_FIND_ROOT_PATH_MODE_LIBRARY42,1547
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)CMAKE_FIND_ROOT_PATH_MODE_INCLUDE43,1591
set(PS2 1)PS245,1636
set(EE 1)EE46,1647
function(add_erl_executable OUTFILE TARGET)add_erl_executable48,1658
    set(outfile "${output_dir}/${TARGET}.erl")outfile50,1782

cmake/ps2toolchain/CMakeTestDSMCompiler.cmake,204
set(_ASM_COMPILER_WORKS 0)_ASM_COMPILER_WORKS1,0
  set(_DSM_COMPILER_WORKS)_DSM_COMPILER_WORKS4,51
set(CMAKE_DSM_COMPILER_WORKS ${_DSM_COMPILER_WORKS} CACHE INTERNAL "")CMAKE_DSM_COMPILER_WORKS7,87

examples/collis3/src/main.c,1935
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1352
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1388
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1447
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1496
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1547
#define WORLD_SCALE WORLD_SCALE66,1584
static RwInt32 FrameCounter = 0;FrameCounter68,1615
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1649
static RwBool FPSOn = TRUE;FPSOn70,1686
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1717
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor73,1772
static const RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis75,1829
static const RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis76,1877
static RtCharset *Charset = NULL;Charset78,1927
static RpWorld *World = NULL;World79,1962
static RpLight *AmbientLight = NULL;AmbientLight81,1995
static RpLight *MainLight = NULL;MainLight82,2033
static RwV3d LightDir = {-1.0f, -2.0f, 0.0f};LightDir83,2068
static RwCamera *Camera = NULL;Camera85,2117
static RwV3d CameraPos = {-10.4f, 8.0f, -6.0f};CameraPos86,2150
static RwReal CameraAzimuth = 60.0f;CameraAzimuth87,2199
static RwReal CameraPitch = 55.0f;CameraPitch88,2237
CreateWorld(void)CreateWorld96,2386
CreateAmbientLight(RpWorld *world)CreateAmbientLight117,2787
CreateMainLight(RpWorld *world, RwV3d *direction)CreateMainLight142,3223
CreateCamera(RpWorld *world)CreateCamera187,4342
Initialize(void)Initialize222,5238
ResetCallback(RwBool testEnable)ResetCallback248,5778
InitializeMenu(void)InitializeMenu268,6163
Initialize3D(void *param)Initialize3D299,7024
Terminate3D(void)Terminate3D374,8565
AttachPlugins(void)AttachPlugins431,9496
DisplayOnScreenInfo(void)DisplayOnScreenInfo479,10230
Render(void)Render509,10890
Idle(void)Idle546,11548
AppEventHandler(RsEvent event, void *param)AppEventHandler599,12568

examples/collis3/src/collis3.h,36
#define COLLIS3_HCOLLIS3_H34,1052

examples/collis3/src/collis3.c,3174
#define FARAWAY FARAWAY42,1344
#define BOWL_RADIUS BOWL_RADIUS44,1378
#define BALL_RADIUS BALL_RADIUS45,1406
#define NUM_SPINNERS NUM_SPINNERS47,1436
#define NUM_BALLS NUM_BALLS48,1463
#define SPINNER_PERIOD_MIN SPINNER_PERIOD_MIN50,1488
#define SPINNER_PERIOD_MAX SPINNER_PERIOD_MAX51,1523
#define SPINNER_RANGE_MIN SPINNER_RANGE_MIN52,1558
#define SPINNER_RANGE_MAX SPINNER_RANGE_MAX53,1611
{__anon84da6e3c010856,1665
    RpAtomic *atomic;atomic57,1668
    RwReal omega2;omega258,1691
    RwReal speed;speed59,1711
    RwReal accel;accel60,1730
Spinner; Spinner62,1752
{__anon84da6e3c020865,1781
    RpAtomic *atomic;atomic66,1784
    RwV3d *pos;pos67,1807
    RwReal radius;radius68,1824
    RwV3d velocity;velocity69,1844
Ball;Ball71,1868
{__anon84da6e3c030874,1893
    RwV3d closestPoint;closestPoint75,1896
    RwReal distance;distance76,1921
    RwMatrix *ltm;ltm77,1943
CollisionParams;CollisionParams79,1966
{__anon84da6e3c040382,2001
    XDIM = 0,XDIM83,2004
    YDIM,YDIM84,2019
    ZDIM,ZDIM85,2030
    DIMENSIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINTDIMENSIONFORCEENUMSIZEINT87,2043
Dimension;Dimension89,2098
static RpAtomic *BowlAtomic = NULL;BowlAtomic91,2112
static RpAtomic *SpinnerAtomic = NULL;SpinnerAtomic92,2149
static RpAtomic *BallAtomic = NULL;BallAtomic93,2189
static Spinner Spinners[NUM_SPINNERS];Spinners95,2228
static Ball Balls[NUM_BALLS];Balls96,2268
static const RwV3d ZeroVec = {0.0f, 0.0f, 0.0f};ZeroVec98,2301
static const RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis100,2353
static const RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis101,2401
static const RwV3d Zaxis = {0.0f, 0.0f, 1.0f};Zaxis102,2449
RwBool CollisionDataGenerated = FALSE;CollisionDataGenerated104,2499
RandomReal(RwReal min, RwReal max)RandomReal112,2650
ClumpLoad(const RwChar *name)ClumpLoad129,3006
GetFirstAtomic(RpAtomic *atomic, void *data)GetFirstAtomic157,3589
SpinnerInitialize(Spinner *spinner, RpWorld *world, RwReal theta, RwReal phi)SpinnerInitialize169,3804
BallInitialize(Ball *ball, RpWorld *world)BallInitialize212,4959
CollisionObjectsCreate(RpWorld *world)CollisionObjectsCreate262,6215
DestroyAtomicWithFrame(RpAtomic *atomic)DestroyAtomicWithFrame348,8047
CollisionObjectsDestroy(RpWorld *world)CollisionObjectsDestroy372,8478
PointWithinTriangle(RwV3d *pt, RwV3d *tri[3], RwV3d *normal)PointWithinTriangle414,9321
FindNearestPointOnLine(RwV3d *result, RwV3d *point, RwV3d *start, RwV3d *end)FindNearestPointOnLine505,12042
SphereAtomicCollisionCB(RpIntersection *intersection,SphereAtomicCollisionCB560,13343
SphereAtomicCollision(RwSphere *sphere, RwV3d *delta, RpAtomic *atomic)SphereAtomicCollision668,16383
UpdateSpinners(RwReal deltaTime)UpdateSpinners731,18250
UpdateBalls(RwReal deltaTime  __RWUNUSED__)UpdateBalls760,18985
CollisionObjectsUpdate(RpWorld *world  __RWUNUSED__, CollisionObjectsUpdate858,21891
CollisionDataBuildCallback(RwBool testEnable)CollisionDataBuildCallback881,22374
ClumpSave(RpClump *clump, const RwChar *name)ClumpSave928,23637
CollisionDataSaveCallback(RwBool testEnable)CollisionDataSaveCallback952,24108

examples/collis3/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown43,1219
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp50,1347
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown60,1562
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp67,1691
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove77,1908
MouseHandler(RsEvent event, void *param)MouseHandler87,2121
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown139,3251
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp146,3369
KeyboardHandler(RsEvent event, void *param)KeyboardHandler156,3574
AttachInputDevices(void)AttachInputDevices193,4307

examples/collis3/makefile,105
DEMO = collis3DEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/lights/src/main.c,2008
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1297
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1333
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1392
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1441
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1492
static RwRaster *Charset = NULL;Charset64,1529
static RwBool FPSOn = FALSE;FPSOn65,1563
static RwInt32 FrameCounter = 0;FrameCounter67,1595
static RwInt32 FramesPerSecond = 0;FramesPerSecond68,1629
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor70,1668
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor71,1723
RwCamera *Camera = NULL;Camera73,1780
RpWorld *World = NULL;World74,1806
RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis76,1832
RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis77,1867
RwV3d Zaxis = {0.0f, 0.0f, 1.0f};Zaxis78,1902
CreateWorld(void)CreateWorld85,2048
CreateCamera(RpWorld *world)CreateCamera103,2372
CreateTestScene(RpWorld *world)CreateTestScene126,2844
Initialize(void)Initialize249,6194
LightDrawCallback(RwBool testEnable)LightDrawCallback276,6732
BaseAmbientLightCallback(RwBool testEnable)BaseAmbientLightCallback288,6911
LightTypeCallback(RwBool testEnable)LightTypeCallback309,7235
LightRadiusCallback(RwBool testEnable)LightRadiusCallback321,7379
LightConeAngleCallback(RwBool testEnable)LightConeAngleCallback334,7607
LightRedCallback(RwBool testEnable)LightRedCallback347,7837
LightGreenCallback(RwBool testEnable)LightGreenCallback359,7980
LightBlueCallback(RwBool testEnable)LightBlueCallback371,8125
InitializeMenu(void)InitializeMenu383,8270
Initialize3D(void *param)Initialize3D452,10777
DestroyClump(RpClump *clump, DestroyClump557,12964
Terminate3D(void)Terminate3D572,13236
AttachPlugins(void)AttachPlugins611,13804
DisplayOnScreenInfo(void)DisplayOnScreenInfo643,14357
Render(void)Render662,14711
Idle(void)Idle704,15487
AppEventHandler(RsEvent event, void *param)AppEventHandler750,16283

examples/lights/src/lights.h,583
#define LIGHTS_HLIGHTS_H33,1023
#define AMBIENT_LIGHT AMBIENT_LIGHT38,1088
#define POINT_LIGHT POINT_LIGHT39,1115
#define DIRECT_LIGHT DIRECT_LIGHT40,1140
#define SPOT_LIGHT SPOT_LIGHT41,1166
#define SOFTSPOT_LIGHT SOFTSPOT_LIGHT42,1190
#define MAX_LIGHT_RADIUS MAX_LIGHT_RADIUS44,1220
#define MIN_LIGHT_RADIUS MIN_LIGHT_RADIUS45,1255
#define STEP_LIGHT_RADIUS STEP_LIGHT_RADIUS46,1288
#define MAX_LIGHT_CONE_ANGLE MAX_LIGHT_CONE_ANGLE48,1324
#define MIN_LIGHT_CONE_ANGLE MIN_LIGHT_CONE_ANGLE49,1375
#define STEP_LIGHT_CONE_ANGLE STEP_LIGHT_CONE_ANGLE50,1426

examples/lights/src/lights.c,2591
#define POINT_LIGHT_RADIUS_FACTOR POINT_LIGHT_RADIUS_FACTOR47,1338
#define POINT_LIGHT_NUM_VERTICES POINT_LIGHT_NUM_VERTICES48,1381
#define DIRECT_LIGHT_CYLINDER_LENGTH DIRECT_LIGHT_CYLINDER_LENGTH53,1473
#define DIRECT_LIGHT_CYLINDER_DIAMETER DIRECT_LIGHT_CYLINDER_DIAMETER54,1518
#define DIRECT_LIGHT_NUM_VERTICES DIRECT_LIGHT_NUM_VERTICES55,1570
#define DIRECT_LIGHT_CONE_SIZE DIRECT_LIGHT_CONE_SIZE60,1659
#define DIRECT_LIGHT_CONE_ANGLE DIRECT_LIGHT_CONE_ANGLE61,1703
#define SPOT_LIGHTS_RADIUS_FACTOR SPOT_LIGHTS_RADIUS_FACTOR66,1789
#define CONE_NUM_VERTICES CONE_NUM_VERTICES71,1895
static const RwV3d LightStartPos = {0.0f, 0.0f, 75.0f};LightStartPos74,1931
RpLight *BaseAmbientLight = NULL;BaseAmbientLight77,1992
RwBool BaseAmbientLightOn = FALSE;BaseAmbientLightOn78,2027
RpLight *CurrentLight = NULL;CurrentLight80,2065
RpLight *AmbientLight = NULL;AmbientLight81,2096
RpLight *PointLight = NULL;PointLight82,2127
RpLight *DirectLight = NULL;DirectLight83,2156
RpLight *SpotLight = NULL;SpotLight84,2186
RpLight *SpotSoftLight = NULL;SpotSoftLight85,2214
RwReal LightRadius = 100.0f;LightRadius87,2248
RwReal LightConeAngle = 45.0f;LightConeAngle88,2278
RwRGBAReal LightColor = {1.0f, 1.0f, 1.0f, 1.0f};LightColor89,2310
RwRGBA LightSolidColor = {255, 255, 0, 255};LightSolidColor91,2363
RwBool LightOn = TRUE;LightOn92,2409
RwBool LightDrawOn = TRUE;LightDrawOn93,2433
RwV3d LightPos = {0.0f, 0.0f, 75.0f};LightPos94,2461
RwInt32 LightTypeIndex = 1;LightTypeIndex95,2500
RwReal AdvanceLightSpeed;AdvanceLightSpeed97,2531
RwBBox RoomBBox;RoomBBox99,2560
CreateBaseAmbientLight(void)CreateBaseAmbientLight107,2682
CreateAmbientLight(void)CreateAmbientLight133,3120
CreatePointLight(void)CreatePointLight143,3297
CreateDirectLight(void)CreateDirectLight185,4083
CreateSpotLight(void)CreateSpotLight231,5031
CreateSpotSoftLight(void)CreateSpotSoftLight276,5963
LightsDestroy(void)LightsDestroy321,6898
LightResetCallback(RwBool testEnable)LightResetCallback416,8935
LightsUpdate(void)LightsUpdate452,9631
DrawCone(RwReal coneAngle, RwReal coneSize, RwReal coneRatio)DrawCone561,12491
DrawDirectLight(void)DrawDirectLight731,17372
DrawPointLight(void)DrawPointLight908,22757
DrawCurrentLight(void)DrawCurrentLight954,23994
LightRotate(RwReal xAngle, RwReal yAngle)LightRotate1004,25072
ClampPosition(RwV3d *pos, RwV3d *delta, RwBBox *bbox)ClampPosition1051,26355
LightTranslateXY(RwReal xDelta, RwReal yDelta)LightTranslateXY1088,27156
LightTranslateZ(RwReal zDelta)LightTranslateZ1123,28163

examples/lights/src/main.h,30
#define MAIN_HMAIN_H33,1019

examples/lights/src/win/events.c,801
static RwBool RotateLight = FALSE;RotateLight40,1117
static RwBool TranslateLightZ = FALSE;TranslateLightZ41,1153
static RwBool TranslateLightXY = FALSE;TranslateLightXY42,1193
static RwBool Ctrl = FALSE;Ctrl44,1236
HandleLeftButtonDown(void)HandleLeftButtonDown51,1380
HandleLeftButtonUp(void)HandleLeftButtonUp70,1678
HandleRightButtonDown(void)HandleRightButtonDown83,1914
HandleRightButtonUp(void)HandleRightButtonUp98,2159
HandleMouseMove(void *param)HandleMouseMove110,2369
MouseHandler(RsEvent event, void *param)MouseHandler153,3196
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown199,4079
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp226,4588
KeyboardHandler(RsEvent event, void *param)KeyboardHandler253,5094
AttachInputDevices(void)AttachInputDevices290,5827

examples/lights/makefile,104
DEMO = lightsDEMO29,1009
RWGDIR = $(CURDIR)/../..RWGDIR34,1078
CSRC =	$(SRC)/main.c		\CSRC39,1158

examples/lights2/src/main.c,1586
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1257
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1293
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1352
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1401
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1452
static RwBool FPSOn = FALSE;FPSOn64,1489
static RwInt32 FrameCounter = 0;FrameCounter66,1521
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1555
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1594
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1649
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis72,1706
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis73,1748
RwCamera *Camera = NULL;Camera75,1792
RtCharset *Charset = NULL;Charset76,1818
RpWorld *World = NULL;World77,1846
CreateWorld(void)CreateWorld85,1983
CreateCamera(RpWorld *world)CreateCamera119,2713
Initialize(void)Initialize156,3776
PointRadiusCallback(RwBool testEnable)PointRadiusCallback183,4316
InitializeMenu(void)InitializeMenu195,4468
Initialize3D(void *param)Initialize3D227,5344
Terminate3D(void)Terminate3D286,6503
AttachPlugins(void)AttachPlugins358,7784
DisplayOnScreenInfo(void)DisplayOnScreenInfo386,8203
DrawBox(const RwBBox *bBox, RwRGBA *color)DrawBox405,8557
DrawSectorBox(RpWorldSector *sector, DrawSectorBox456,10419
DrawPointLightSectorBox(RpWorldSector *sector, DrawPointLightSectorBox470,10705
Render(void)Render487,11088
Idle(void)Idle554,12846
AppEventHandler(RsEvent event, void *param)AppEventHandler600,13642

examples/lights2/src/lights.h,35
#define LIGHTS2_HLIGHTS2_H33,985

examples/lights2/src/lights.c,909
#define NUMPOINTS NUMPOINTS43,1134
#define ARROW_LENGTH ARROW_LENGTH45,1163
#define ARROW_FRACTION ARROW_FRACTION46,1193
#define ARROW_WIDTH ARROW_WIDTH47,1224
RpLight *AmbientLight = NULL;AmbientLight49,1255
RpLight *DirectionalLight = NULL;DirectionalLight50,1286
RpLight *PointLight = NULL;PointLight51,1321
RwBool DirectLightOn = TRUE;DirectLightOn53,1352
RwBool PointLightOn = TRUE;PointLightOn54,1382
RwReal PointRadius = 70.0f;PointRadius56,1413
DirectionalToggle(RwBool on)DirectionalToggle63,1547
PointToggle(RwBool on)PointToggle94,2140
DrawLightDirection(void)DrawLightDirection125,2692
DrawLightRadius(void)DrawLightRadius188,4511
TranslatePointLight(RwReal dX, RwReal dY)TranslatePointLight240,5803
RotateDirectLight(RwReal angleX, RwReal angleY)RotateDirectLight307,7405
UpdateLights(void)UpdateLights334,8098
CreateLights(RpWorld *world)CreateLights350,8362

examples/lights2/src/main.h,29
#define MAIN_HMAIN_H33,979

examples/lights2/src/win/events.c,879
static RwBool MoveLight = FALSE;MoveLight40,1077
static RwBool RotateLight = FALSE;RotateLight41,1111
static RwBool Ctrl = FALSE;Ctrl43,1149
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown50,1293
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp56,1416
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown66,1628
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp91,2064
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove104,2330
MouseHandler(RsEvent event, void *param)MouseHandler124,2753
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown176,3883
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp200,4313
KeyboardHandler(RsEvent event, void *param)KeyboardHandler224,4742
AttachInputDevices(void)AttachInputDevices261,5475

examples/lights2/makefile,105
DEMO = lights2DEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/camtex/src/camtex.h,34
#define CAMTEX_HCAMTEX_H30,1002

examples/camtex/src/main.c,2381
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1259
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1295
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1354
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1403
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1454
#define TEXSIZE TEXSIZE61,1491
static RtCharset *Charset = NULL;Charset63,1516
static RpWorld *World = NULL;World64,1551
static RpLight *AmbientLight = NULL;AmbientLight65,1582
static RpLight *MainLight = NULL;MainLight66,1620
static RwCamera *Camera2 = NULL;Camera267,1655
static RwTexture *Texture = NULL;Texture68,1689
static RwTexture *CameraTexture = NULL;CameraTexture69,1724
static RwBool FPSOn = FALSE;FPSOn71,1767
static RwInt32 FrameCounter = 0;FrameCounter73,1799
static RwInt32 FramesPerSecond = 0;FramesPerSecond74,1833
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor76,1872
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor77,1927
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis79,1984
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis80,2026
RwCamera *Camera = NULL;Camera82,2070
RpClump *Clump = NULL;Clump83,2096
RwBool SpinOn = TRUE;SpinOn84,2120
CreateWorld(void)CreateWorld92,2256
CreateAmbientLight(RpWorld *world)CreateAmbientLight110,2580
CreateMainLight(RpWorld *world)CreateMainLight135,3017
CreateCamera(RpWorld *world)CreateCamera174,3811
CreateTextureCamera(RpWorld *world)CreateTextureCamera198,4288
CreateClump(RpWorld *world)CreateClump273,6181
CreateTexture(void)CreateTexture316,7161
Initialize(void)Initialize341,7658
InitializeMenu(void)InitializeMenu368,8205
Initialize3D(void *param)Initialize3D389,8674
Terminate3D(void)Terminate3D481,10564
AttachPlugins(void)AttachPlugins573,12292
MaterialApplyTexture(RpMaterial *material, void *data)MaterialApplyTexture601,12718
AtomicApplyTexture(RpAtomic *atomic, void *data)AtomicApplyTexture610,12883
ClumpApplyTexture(RpClump *clump, RwTexture *texture)ClumpApplyTexture620,13077
DisplayOnScreenInfo(void)DisplayOnScreenInfo632,13331
Render(void)Render651,13685
UpdateClump(RwReal timeStep)UpdateClump729,15265
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate753,15769
Idle(void)Idle792,16803
AppEventHandler(RsEvent event, void *param)AppEventHandler849,17843

examples/camtex/src/win/events.c,812
static RwBool RotateClump = FALSE;RotateClump37,1095
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown45,1248
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp56,1435
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown69,1677
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp75,1804
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove85,2021
MouseHandler(RsEvent event, void *param)MouseHandler103,2392
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown155,3522
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp165,3729
KeyboardHandler(RsEvent event, void *param)KeyboardHandler175,3934
AttachInputDevices(void)AttachInputDevices212,4667

examples/camtex/makefile,104
DEMO = camtexDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1084
CSRC =	$(SRC)/main.c		\CSRC39,1164

examples/alphasrt/src/main.c,2068
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1509
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1545
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1604
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1653
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1704
static RwBool FPSOn = FALSE;FPSOn64,1741
static RwInt32 FrameCounter = 0;FrameCounter66,1773
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1807
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1846
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1901
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis72,1958
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis73,2000
static RtCharset *Charset = NULL;Charset75,2044
static RpWorld *World = NULL;World76,2079
static RwCamera *Camera = NULL;Camera77,2110
static RpClump *Clump = NULL;Clump78,2143
static RwBool Spin = FALSE;Spin80,2176
static RwReal RotateX = 0.0f;RotateX81,2205
static RwReal RotateY = 0.0f;RotateY82,2236
static RwBool AlphaSort = TRUE;AlphaSort84,2269
CreateWorld(void)CreateWorld92,2415
CreateLights(RpWorld *world)CreateLights110,2737
CreateCamera(RpWorld *world)CreateCamera157,3659
CreateClump(RpWorld *world)CreateClump186,4324
Initialize(void)Initialize235,5484
AlphaSortMenuCallback(RwBool testEnable)AlphaSortMenuCallback262,6030
ResetRotationMenuCallback(RwBool testEnable)ResetRotationMenuCallback276,6230
InitializeMenu(void)InitializeMenu293,6448
Initialize3D(void *param)Initialize3D319,7121
DestroyLight(RpLight *light, void *data)DestroyLight386,8439
Terminate3D(void)Terminate3D409,8858
AttachPlugins(void)AttachPlugins455,9556
DisplayOnScreenInfo(void)DisplayOnScreenInfo483,9975
Render(void)Render533,11135
CameraTranslateZ(RwReal zDelta)CameraTranslateZ592,12420
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump611,12806
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation636,13373
Idle(void)Idle672,14161
AppEventHandler(RsEvent event, void *param)AppEventHandler729,15191

examples/alphasrt/src/alpha.c,2071
typedef struct sortAtomic SortAtomic;SortAtomic40,1328
struct sortAtomicsortAtomic41,1367
    RpAtomic *atomic;atomic43,1389
    RwReal depth;depth44,1412
    RwChar id;id45,1431
    SortAtomic *next;next47,1449
typedef struct alphaAtomic AlphaAtomic;AlphaAtomic50,1478
struct alphaAtomicalphaAtomic51,1519
    RpAtomic *atomic;atomic53,1542
    RwChar id;id54,1565
    AlphaAtomic *next;next56,1583
static SortAtomic *AlphaSortedAtomics = NULL;AlphaSortedAtomics59,1613
static AlphaAtomic *AlphaAtomics = NULL;AlphaAtomics60,1660
static RwInt32 NumAlphaAtomics = 0;NumAlphaAtomics61,1702
static RpAtomicCallBackRender DefaultAtomicRenderCallback;DefaultAtomicRenderCallback63,1741
RwChar *RenderOrderString;RenderOrderString65,1803
ColorGetID(const RwRGBA *color)ColorGetID73,1941
AlphaTestPalettizedTexture(RwRaster *raster)AlphaTestPalettizedTexture118,2684
AlphaTestTrueColorTexture(RwRaster *raster)AlphaTestTrueColorTexture176,4058
TextureTestAlpha(RwTexture *texture)TextureTestAlpha254,6076
MaterialTestAlpha(RpMaterial *material, void *data)MaterialTestAlpha294,7151
GeometryPreLightsTestAlpha(RpGeometry *geometry)GeometryPreLightsTestAlpha362,8639
MaterialGetColorID(RpMaterial *material, void *data)MaterialGetColorID392,9227
AtomicTestAlpha(RpAtomic *atomic, AtomicTestAlpha404,9484
ClumpGetAlphaAtomics(RpClump *clump)ClumpGetAlphaAtomics456,10823
DestroyAlphaAtomicsList(void)DestroyAlphaAtomicsList480,11391
AtomicGetCameraDistance(RpAtomic *atomic)AtomicGetCameraDistance504,11765
AtomicAddToSortedList(SortAtomic *entry)AtomicAddToSortedList542,12660
AlphaSortedAtomicRenderCallback(RpAtomic *atomic)AlphaSortedAtomicRenderCallback602,13866
NonAlphaSortedAtomicRenderCallback(RpAtomic *atomic)NonAlphaSortedAtomicRenderCallback658,15034
AtomicSetRenderCallback(RpAtomic *atomic, void *data)AtomicSetRenderCallback704,15967
ClumpSetAtomicRenderCallback(RpClump *clump, RwBool alphaSort)ClumpSetAtomicRenderCallback736,16692
RenderAlphaSortedAtomics(void)RenderAlphaSortedAtomics748,16955

examples/alphasrt/src/main.h,30
#define MAIN_HMAIN_H33,1232

examples/alphasrt/src/alpha.h,32
#define ALPHA_HALPHA_H33,1234

examples/alphasrt/src/win/events.c,840
RwBool Rotate = FALSE;Rotate40,1235
RwBool Translate = FALSE;Translate41,1259
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1403
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp58,1550
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown70,1785
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp79,1936
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove91,2176
MouseHandler(RsEvent event, void *param)MouseHandler111,2568
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown163,3684
HandleKeyUp(RsKeyStatus *keyStatus  __RWUNUSED__)HandleKeyUp170,3802
KeyboardHandler(RsEvent event, void *param)KeyboardHandler180,4008
AttachInputDevices(void)AttachInputDevices217,4741

examples/alphasrt/makefile,106
DEMO = alphasrtDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/rwsview/src/main.c,2268
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1241
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1277
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1336
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1385
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1436
static RwBool FPSOn = FALSE;FPSOn64,1473
static RwInt32 FrameCounter = 0;FrameCounter66,1505
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1539
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1578
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1633
static RwChar rwsFilename[] = "models/scene.rws";rwsFilename72,1690
RtCharset *Charset = NULL;Charset74,1743
typedef struct ClumpHierarchy ClumpHierarchy;ClumpHierarchy79,1935
struct ClumpHierarchyClumpHierarchy80,1982
    RpClump             *clump;clump82,2008
    RpHAnimHierarchy    *hierarchy;hierarchy84,2043
RwCamera *currentCamera = (RwCamera *)NULL;currentCamera88,2114
static RwUInt32 numWorlds = 0;numWorlds90,2161
static RwUInt32 numClumps = 0;numClumps91,2193
static RwUInt32 numAnims = 0;numAnims92,2225
static RwUInt32 numPITexDicts = 0;numPITexDicts93,2256
static RpWorld **worldList = (RpWorld **)NULL;worldList95,2294
static ClumpHierarchy *clumpList = (ClumpHierarchy *)NULL;clumpList96,2342
static RtAnimAnimation **animList = (RtAnimAnimation **)NULL;animList97,2402
static RwTexDictionary  **texDictList = (RwTexDictionary **)NULL;texDictList98,2465
LoadRWSAssets( void )LoadRWSAssets105,2641
FirstAtomicGetFrame( RpAtomic *atomic,FirstAtomicGetFrame381,10940
FirstLightGetFrame( RpLight *light,FirstLightGetFrame398,11251
SetDefaultAssets( void )SetDefaultAssets415,11554
CameraInitPosition(RwCamera *camera, RpWorld *world)CameraInitPosition480,13372
CreateCamera(RpWorld *world)CreateCamera527,14950
Initialize(void)Initialize548,15375
InitializeMenu(void)InitializeMenu575,15915
Initialize3D(void *param)Initialize3D594,16281
Terminate3D(void)Terminate3D654,17549
AttachPlugins(void)AttachPlugins752,19531
DisplayOnScreenInfo(void)DisplayOnScreenInfo790,20111
Render(void)Render809,20465
Idle(void)Idle848,21240
AppEventHandler(RsEvent event, void *param)AppEventHandler912,22508

examples/rwsview/src/win/events.c,757
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown42,1106
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp51,1295
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown65,1573
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp74,1764
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove87,2043
MouseHandler(RsEvent event, void *param)MouseHandler100,2307
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown152,3437
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp225,4795
KeyboardHandler(RsEvent event, void *param)KeyboardHandler238,5049
AttachInputDevices(void)AttachInputDevices275,5782

examples/rwsview/makefile,105
DEMO = rwsviewDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/fog/src/main.c,3231
#define SCREEN_WIDTH SCREEN_WIDTH50,1204
#define SCREEN_HEIGHT SCREEN_HEIGHT51,1232
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1283
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1332
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1383
#define MAXCLIPPLANE MAXCLIPPLANE61,1420
#define FOGDISTANCE FOGDISTANCE62,1451
#define MINCLIPPLANE MINCLIPPLANE63,1480
#define NUMFOGTYPES NUMFOGTYPES65,1512
static RwFogType FogTypes[NUMFOGTYPES] = FogTypes67,1539
static RwBool FogMode[NUMFOGTYPES];FogMode74,1667
static RwInt32 FogTypeID = 0;FogTypeID75,1704
static RwBool FogAvailable;FogAvailable76,1735
static RpWorld *World = NULL;World78,1766
static RpLight *AmbientLight = NULL;AmbientLight79,1797
static RpLight *MainLight = NULL;MainLight80,1835
static RwCamera *Camera = NULL;Camera81,1870
static RwRaster *Charset = NULL;Charset82,1903
static RwBool FogOn = FALSE;FogOn84,1939
static RwRGBAReal FogColorReal = {1.0f, 1.0f, 1.0f, 1.0f};FogColorReal85,1969
static RwUInt32 FogColor = 0xFFFFFFFF;FogColor86,2029
static RwReal FogDensity = 0.02f;FogDensity87,2069
static RwReal FogDistance = FOGDISTANCE;FogDistance88,2104
static RwReal NearClipPlane = MINCLIPPLANE;NearClipPlane90,2148
static RwReal FarClipPlane = MAXCLIPPLANE;FarClipPlane91,2193
static RwBool FPSOn = FALSE;FPSOn93,2239
static RwInt32 FrameCounter = 0;FrameCounter95,2271
static RwInt32 FramesPerSecond = 0;FramesPerSecond96,2305
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor98,2344
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor99,2399
static RwRGBA ClearColor      = { 64,  64,  64,   0};ClearColor100,2454
RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis102,2511
RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis103,2546
RwV3d Zaxis = {0.0f, 0.0f, 1.0f};Zaxis104,2581
CreateWorld(void)CreateWorld112,2729
CreateAmbientLight(RpWorld *world)CreateAmbientLight130,3053
CreateMainLight(RpWorld *world)CreateMainLight150,3389
CreateCamera(RpWorld *world)CreateCamera186,4158
GetRandomVector(RwV3d *vec)GetRandomVector211,4699
GetRandomUnitReal(void)GetRandomUnitReal229,5203
CreateTestScene(RpWorld *world)CreateTestScene240,5435
Initialize(void)Initialize369,9062
FogCallback(RwBool testEnable)FogCallback396,9582
FogTypeCallback(RwBool testEnable)FogTypeCallback408,9726
FogDistanceCallback(RwBool testEnable)FogDistanceCallback420,9867
FogDensityCallback(RwBool testEnable)FogDensityCallback439,10208
FogColorCallback(RwBool testEnable)FogColorCallback451,10426
NearClipPlaneCallback(RwBool testEnable)NearClipPlaneCallback471,10838
FarClipPlaneCallback(RwBool testEnable)FarClipPlaneCallback490,11154
InitializeMenu(void)InitializeMenu533,12158
Initialize3D(void *param)Initialize3D600,14357
DestroyClump(RpClump *clump, void *data)DestroyClump675,15920
Terminate3D(void)Terminate3D689,16175
AttachPlugins(void)AttachPlugins746,17124
DisplayOnScreenInfo(void)DisplayOnScreenInfo785,17829
UpdateFogRenderStates(void)UpdateFogRenderStates821,18773
QueryFogTypes(void)QueryFogTypes846,19378
Render(void)Render874,19856
Idle(void)Idle939,21106
AppEventHandler(RsEvent event, void *param)AppEventHandler983,21879

examples/fog/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown42,1132
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1260
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown60,1477
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp67,1606
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove77,1823
MouseHandler(RsEvent event, void *param)MouseHandler87,2035
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown139,3165
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp149,3372
KeyboardHandler(RsEvent event, void *param)KeyboardHandler159,3577
AttachInputDevices(void)AttachInputDevices196,4310

examples/fog/makefile,101
DEMO = fogDEMO29,1009
RWGDIR = $(CURDIR)/../..RWGDIR34,1075
CSRC =	$(SRC)/main.c		\CSRC39,1155

examples/plugin/src/main.c,2451
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1436
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1472
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1531
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1580
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1631
#define NUM_ACTIVE_CLUMPS NUM_ACTIVE_CLUMPS64,1668
#define START_HEIGHT START_HEIGHT66,1702
#define COLLISION_HEIGHT COLLISION_HEIGHT67,1732
#define CAMERA_OFFSET CAMERA_OFFSET68,1767
#define BUCKY_HEIGHT BUCKY_HEIGHT69,1798
#define COMPAREPOS(COMPAREPOS74,1896
#define TESTSTREAMxTESTSTREAMx79,2098
static RpWorld *World = NULL;World81,2121
static RwCamera *Camera = NULL;Camera82,2152
static RtCharset *Charset = NULL;Charset83,2185
static RpClump *Floor = NULL;Floor85,2222
static RpClump *Bucky = NULL;Bucky86,2253
static RpClump *ActiveClumps[NUM_ACTIVE_CLUMPS];ActiveClumps87,2284
static RwBool FPSOn = FALSE;FPSOn89,2336
static RwInt32 FrameCounter = 0;FrameCounter91,2368
static RwInt32 FramesPerSecond = 0;FramesPerSecond92,2402
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor94,2441
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor95,2496
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis97,2553
CreateWorld(void)CreateWorld107,2736
CreateCamera(RpWorld *world)CreateCamera125,3060
CreateLights(RpWorld *world)CreateLights158,3817
GetRandomReal(RwReal lower, RwReal upper)GetRandomReal210,4908
GetRandomVector(RwV3d *vec)GetRandomVector226,5295
CreateNewRandomPosition(RwV3d * result,CreateNewRandomPosition244,5793
InitClumps(void)InitClumps299,6990
CreateActiveClumps(RpWorld *world)CreateActiveClumps345,8117
CreateScene(RpWorld *world)CreateScene391,9117
TestPluginStream(void)TestPluginStream459,10700
Initialize(void)Initialize519,12223
ResetClumpsCallback(RwBool testEnable)ResetClumpsCallback546,12774
InitializeMenu(void)InitializeMenu560,12939
Initialize3D(void *param)Initialize3D583,13427
DestroyClump(RpClump *clump,DestroyClump652,14750
DestroyLight(RpLight *light,DestroyLight673,15121
Terminate3D(void)Terminate3D697,15569
AttachPlugins(void)AttachPlugins737,16197
DisplayOnScreenInfo(void)DisplayOnScreenInfo785,17037
Render(void)Render808,17512
UpdateClumpDynamics(RpClump *clump, void *data)UpdateClumpDynamics848,18247
Idle(void)Idle938,20654
AppEventHandler(RsEvent event, void *param)AppEventHandler992,21685

examples/plugin/src/physics.c,2273
#define rwID_EXAMPLE rwID_EXAMPLE36,1134
#define PHYSICSGLOBAL(PHYSICSGLOBAL38,1165
#define PHYSICSLOCAL(PHYSICSLOCAL41,1272
#define PHYSICSLOCALCONST(PHYSICSLOCALCONST44,1372
#define CAPTION CAPTION47,1482
typedef struct physicsGlobals PhysicsGlobals;PhysicsGlobals49,1563
struct physicsGlobalsphysicsGlobals50,1610
        RwChar *caption;caption52,1636
        RwReal gravity;gravity53,1662
        RwReal minSpeed;minSpeed54,1687
typedef struct physicsLocals PhysicsLocals;PhysicsLocals57,1719
struct physicsLocalsphysicsLocals58,1764
        RwReal speed;speed60,1789
        RwReal bounciness;bounciness61,1812
        RwBool active;active62,1840
static RwInt32 GlobalOffset = -1;GlobalOffset65,1870
static RwInt32 LocalOffset = -1;LocalOffset66,1905
PhysicsGlobalDataConstructor(void *clump,PhysicsGlobalDataConstructor74,2049
PhysicsGlobalDataDestructor(void *clump,PhysicsGlobalDataDestructor102,2776
PhysicsDataConstructor(void *clump,PhysicsDataConstructor124,3275
PhysicsDataDestructor(void *clump,PhysicsDataDestructor140,3641
PhysicsDataCopier(void *dstClump, const void *srcClump,PhysicsDataCopier149,3823
PhysicsDataReadStream(RwStream *stream,PhysicsDataReadStream167,4351
PhysicsDataWriteStream(RwStream *stream,PhysicsDataWriteStream206,5510
PhysicsDataGetStreamSize(const void *stream __RWUNUSED__,PhysicsDataGetStreamSize245,6661
RpClumpPhysicsPluginAttach(void)RpClumpPhysicsPluginAttach257,6970
RpClumpPhysicsGetGravity(void)RpClumpPhysicsGetGravity311,8563
RpClumpPhysicsGetMinSpeed(void)RpClumpPhysicsGetMinSpeed318,8649
RpClumpPhysicsGetCaption(void)RpClumpPhysicsGetCaption325,8739
RpClumpPhysicsSetSpeed(RpClump *clump, const RwReal speed)RpClumpPhysicsSetSpeed335,8914
RpClumpPhysicsIncSpeed(RpClump *clump, const RwReal speed)RpClumpPhysicsIncSpeed355,9287
RpClumpPhysicsGetSpeed(RpClump *clump)RpClumpPhysicsGetSpeed375,9661
RpClumpPhysicsGetBounciness(RpClump *clump)RpClumpPhysicsGetBounciness393,9988
RpClumpPhysicsSetBounciness(RpClump *clump, const RwReal bounce)RpClumpPhysicsSetBounciness411,10325
RpClumpPhysicsGetActive(RpClump *clump)RpClumpPhysicsGetActive431,10710
RpClumpPhysicsSetActive(RpClump *clump, const RwBool active)RpClumpPhysicsSetActive449,11040

examples/plugin/src/physics.h,36
#define PHYSICS_HPHYSICS_H33,1086

examples/plugin/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown40,1242
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1431
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown63,1709
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp72,1900
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove85,2179
MouseHandler(RsEvent event, void *param)MouseHandler98,2443
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown150,3573
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp157,3691
KeyboardHandler(RsEvent event, void *param)KeyboardHandler170,3945
AttachInputDevices(void)AttachInputDevices207,4678

examples/plugin/makefile,104
DEMO = pluginDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1084
CSRC =	$(SRC)/main.c		\CSRC39,1164

examples/gcond/src/main.c,2140
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1247
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1283
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1342
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1391
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1442
static RwBool FPSOn = FALSE;FPSOn63,1479
static RwBool WireFrame = TRUE;WireFrame64,1509
static RwBool GeometryConditioning = FALSE;GeometryConditioning66,1544
static RwBool LastGeometryConditioning = FALSE;LastGeometryConditioning67,1589
static RwBool Wrapping = FALSE;Wrapping68,1638
static RwBool LastWrapping = FALSE;LastWrapping69,1671
static RwInt32 UVLimit = 16;UVLimit70,1708
static RwInt32 LastUVLimit = 16;LastUVLimit71,1738
static RwInt32 FrameCounter = 0;FrameCounter73,1774
static RwInt32 FramesPerSecond = 0;FramesPerSecond74,1808
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor76,1847
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor77,1902
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis79,1959
static RwCamera *Camera = NULL;Camera81,2003
static RtCharset *Charset = NULL;Charset82,2036
static RpLight *MainLight = NULL;MainLight84,2073
static RpWorld *World = NULL;World85,2108
static RwIm3DVertex *Im3DVertices = (RwIm3DVertex *)NULL;Im3DVertices90,2241
CreateMainLight(RpWorld *world)CreateMainLight97,2411
CreateCamera(RpWorld *world)CreateCamera129,3012
Initialize(void)Initialize154,3530
InitializeMenu(void)InitializeMenu181,4084
Initialize3D(void *param)Initialize3D210,5028
Terminate3D(void)Terminate3D270,6258
AttachPlugins(void)AttachPlugins323,7093
DisplayOnScreenInfo(void)DisplayOnScreenInfo359,7639
RenderWorldSectorWireMesh(RpWorldSector *worldSector)RenderWorldSectorWireMesh374,7901
WFWorldSectorRenderCallback(RpWorldSector *worldSector)WFWorldSectorRenderCallback442,10139
Render(void)Render453,10442
Idle(void)Idle508,11884
CameraSetPosition(RwCamera *camera, RpWorld *world)CameraSetPosition561,12911
ReloadWorld(void)ReloadWorld595,13799
AppEventHandler(RsEvent event, void *param)AppEventHandler637,14725

examples/gcond/src/gcond.h,66
#define GCOND_HGCOND_H32,993
#define NumEdges NumEdges40,1121

examples/gcond/src/gcond.c,698
#define NumTri NumTri49,1207
#define NumVert NumVert54,1296
{__anon60fe3de0010857,1342
    RwV3d vertex;vertex58,1345
    RwTexCoords uvs;uvs59,1364
}vInfo;vInfo60,1386
{__anon60fe3de0020863,1413
    RwUInt16 index;index64,1416
    RwInt32 uOffset;uOffset65,1437
    RwInt32 vOffset;vOffset66,1459
}iInfo;iInfo67,1481
static vInfo VertexList[NumEdges*NumEdges];VertexList69,1492
static iInfo IndexList[NumVert];IndexList70,1537
CreateWorldImport(void)CreateWorldImport73,1597
GeometryConditioningPipeline(RtGCondGeometryList *geometryList)GeometryConditioningPipeline239,8062
CreateWorld(RwBool geometryConditioning, RwBool wrap, RwInt32 uvLimit)CreateWorld252,8439

examples/gcond/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown40,1130
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1319
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown63,1597
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp72,1788
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove85,2067
MouseHandler(RsEvent event, void *param)MouseHandler98,2331
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown150,3461
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp157,3579
KeyboardHandler(RsEvent event, void *param)KeyboardHandler170,3833
AttachInputDevices(void)AttachInputDevices207,4566

examples/gcond/makefile,103
DEMO = gcondDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1083
CSRC =	$(SRC)/main.c		\CSRC39,1163

examples/normmap/src/main.c,5635
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH70,1501
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT71,1537
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO74,1596
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO76,1645
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW79,1696
struct ClumpInfoTypeClumpInfoType82,1735
    const RwChar *fileName;fileName84,1760
    const RwChar *fileNameNormalMapTextureSpace;fileNameNormalMapTextureSpace85,1789
    const RwChar *fileNameAnimation;fileNameAnimation86,1839
    RwReal pos;pos87,1877
    RwReal angleX, angleY;angleX88,1894
    RwReal angleX, angleY;angleY88,1894
typedef struct ClumpInfoType ClumpInfoType;ClumpInfoType90,1926
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor93,1975
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor94,2030
static const RwV3d Xaxis = { 1.0f, 0.0f, 0.0f };Xaxis96,2087
static const RwV3d Yaxis = { 0.0f, 1.0f, 0.0f };Yaxis97,2137
static RwBool FPSOn = FALSE;FPSOn99,2189
static RwInt32 FrameCounter = 0;FrameCounter101,2221
static RwInt32 FramesPerSecond = 0;FramesPerSecond102,2255
static RtCharset *Charset = NULL;Charset104,2294
static RpWorld *World = NULL;World106,2331
static RwBool WorldRender = FALSE;WorldRender107,2362
static RwReal FarPlane = 1000.f;FarPlane108,2398
static RwCamera *Camera = NULL;Camera110,2434
static RpClump *Clump= NULL;Clump112,2469
static RpLight *AmbientLight = (RpLight *)NULL;AmbientLight114,2501
static RwReal AmbientIntensity = 0.30f;AmbientIntensity115,2550
static RwBool AmbientLightOn = TRUE;AmbientLightOn116,2591
static RpLight *MainLight = (RpLight *)NULL;MainLight118,2631
static RwRGBAReal MainLightColor;MainLightColor119,2677
static RwBool NormalMapOn = TRUE;NormalMapOn121,2714
static RwBool NormalMapEnvMapOn = FALSE;NormalMapEnvMapOn122,2749
static RwBool NormalMapModulateEnvMap = FALSE;NormalMapModulateEnvMap123,2791
static const RwChar *WorldFileName = RWSTRING("models/example.bsp");WorldFileName125,2841
static const ClumpInfoType ClumpsInfo[] =ClumpsInfo127,2913
static RwUInt32 ActiveClump = 0;ActiveClump166,3682
#define ENVMAP_WITHFRAME ENVMAP_WITHFRAME168,3718
static const RwChar *EnvMapFileName[] =EnvMapFileName170,3751
static RwUInt32 ActiveEnvMap = 0;ActiveEnvMap176,3874
static RwReal EnvMapShininess = 0.75f;EnvMapShininess178,3911
static RwFrame *HighliteFrame = NULL;HighliteFrame180,3953
CreateCamera(RpWorld *world)CreateCamera204,4501
CreateMainLight(RpWorld *world)CreateMainLight249,5583
CreateAmbientLight(RpWorld *world)CreateAmbientLight296,6653
TexDictionaryGetName(RwChar *texDictionaryName, const RwChar *bspPath)TexDictionaryGetName323,7165
LoadTextureDictionary(const RwChar *filename)LoadTextureDictionary371,8455
SaveTextureDictionary(const RwChar *filename)SaveTextureDictionary403,9268
SaveWorld(void)SaveWorld434,9972
LoadWorld(const RwChar *bspPath)LoadWorld469,10738
AmbientLightOnCB(RwBool justCheck)AmbientLightOnCB622,14874
AtomicApplyNormalMapTexture(RpAtomic *atomic, void *data)AtomicApplyNormalMapTexture645,15264
AtomicApplyEnvMapTexture(RpAtomic *atomic, void *data)AtomicApplyEnvMapTexture660,15673
MaterialApplyEnvMapShininess(RpMaterial *material, RwReal *shininess)MaterialApplyEnvMapShininess675,16080
AtomicApplyEnvMapShininess(RpAtomic *atomic, void *data)AtomicApplyEnvMapShininess686,16355
AtomicApplyEnvMapFrame(RpAtomic *atomic, void *data)AtomicApplyEnvMapFrame701,16755
MaterialApplyModulateEnvMap(RpMaterial *material, RwBool *modulate)MaterialApplyModulateEnvMap716,17150
AtomicApplyModulateEnvMap(RpAtomic *atomic, void *data)AtomicApplyModulateEnvMap727,17416
MaterialGenerateNormalMapTextureSpace(RpMaterial *material, void *data)MaterialGenerateNormalMapTextureSpace742,17814
AtomicNormalMapTextureSpaceEnable(RpAtomic *atomic, void *data)AtomicNormalMapTextureSpaceEnable843,20516
AtomicSetPipeline(RpAtomic *atomic, void *data)AtomicSetPipeline854,20790
WorldSectorSetPipeline(RpWorldSector *worldsector, void *data)WorldSectorSetPipeline865,21036
WorldSectorInitialize(RpWorldSector *worldsector, void *data)WorldSectorInitialize876,21312
NormalMapOnCB(RwBool justCheck)NormalMapOnCB887,21566
NewEnvMapCB(RwBool justCheck)NewEnvMapCB947,23321
NormalMapEnvMapOnCB(RwBool justCheck)NormalMapEnvMapOnCB1028,25681
EnvMapShininessCB(RwBool justCheck)EnvMapShininessCB1053,26166
UpdateHighlightFrame(RwFrame *lightFrame, RwFrame *cameraFrame)UpdateHighlightFrame1071,26588
NormalMapModulateEnvMapCB(RwBool justCheck)NormalMapModulateEnvMapCB1114,27783
MainLightRotate(RwReal x, RwReal y)MainLightRotate1137,28364
ClumpsRotate(RwReal x, RwReal y)ClumpsRotate1185,29539
ClumpsTranslate(RwReal x, RwReal y)ClumpsTranslate1244,31077
ClumpsZoom(RwReal y)ClumpsZoom1283,31902
LightsUpdateCB(RwBool justCheck)LightsUpdateCB1311,32461
ClumpLoadCB(RwBool justCheck)ClumpLoadCB1334,32896
WorldRenderCB(RwBool justCheck)WorldRenderCB1361,33420
Initialize(void)Initialize1400,34249
InitializeMenu(void)InitializeMenu1427,34791
AtomicNormalizeGeometry(RpAtomic *atomic, void *data)AtomicNormalizeGeometry1500,37613
SaveDFF(void)SaveDFF1579,39945
LoadClump(void)LoadClump1614,40707
DestroyClump(void)DestroyClump1764,45678
Initialize3D(void *param)Initialize3D1780,45947
Terminate3D(void)Terminate3D1875,47875
AttachPlugins(void)AttachPlugins1951,49159
DisplayOnScreenInfo(void)DisplayOnScreenInfo2010,50070
Render(void)Render2028,50422
Idle(void)Idle2077,51380
AppEventHandler(RsEvent event, void *param)AppEventHandler2166,53120

examples/normmap/src/main.h,29
#define MAIN_HMAIN_H33,988

examples/normmap/src/hanim.h,33
#define HANIM1_HHANIM1_H31,953

examples/normmap/src/normalmapgen.c,302
#define FAST_MODE FAST_MODE36,1002
NormalMapTextureSpaceCreateFromTexture(RwTexture *texture, RwReal bumpness)NormalMapTextureSpaceCreateFromTexture40,1125
NormalMapTextureSpaceCreateFromImage(RwImage *image, RwUInt32 rasterFlags, RwBool clamp, RwReal NormalMapTextureSpaceCreateFromImage88,2688

examples/normmap/src/hanim.c,785
static RpHAnimHierarchy *OutHierarchy = NULL;OutHierarchy38,1069
static RpHAnimHierarchy *InHierarchy2 = NULL;InHierarchy239,1116
static RtAnimAnimation *Anim = NULL;Anim41,1165
LoadAnimationFile(const RwChar *file)LoadAnimationFile47,1320
GetChildFrameHierarchy(RwFrame *frame, void *data)GetChildFrameHierarchy63,1662
GetHierarchy(RpClump *clump)GetHierarchy87,2186
SetHierarchyForSkinAtomic(RpAtomic *atomic, void *data)SetHierarchyForSkinAtomic106,2577
LoadClumpAnimation(RpClump *clump, const RwChar *filename)LoadClumpAnimation118,2840
DestroyClumpAnimation(RpClump *clump)DestroyClumpAnimation151,3618
GetSkinHierarchy(RpAtomic *atomic, void *data)GetSkinHierarchy172,3973
UpdateClumpAnimation(RpClump *clump, RwReal deltaTime)UpdateClumpAnimation184,4219

examples/normmap/src/win/events.c,1319
static RwBool MainLightRotateActive = FALSE;MainLightRotateActive40,1055
static RwBool ClumpsRotateActive = FALSE;ClumpsRotateActive41,1101
static RwBool ClumpsMoveKeyActive = FALSE;ClumpsMoveKeyActive43,1146
static RwBool ClumpsTranslateActive = FALSE;ClumpsTranslateActive45,1192
static RwBool ClumpsZoomActive = FALSE;ClumpsZoomActive46,1238
RwBool CameraZooming = FALSE;CameraZooming48,1281
RwReal CameraZoomDelta = 0.0f;CameraZoomDelta49,1312
RwBool CameraTranslating = FALSE;CameraTranslating51,1346
RwReal CameraTranslateDelta = 0.0f;CameraTranslateDelta52,1381
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown58,1531
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp70,1787
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown87,2134
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp99,2394
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove115,2744
MouseHandler(RsEvent event, void *param)MouseHandler153,3555
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown205,4685
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp293,6346
KeyboardHandler(RsEvent event, void *param)KeyboardHandler351,7397
AttachInputDevices(void)AttachInputDevices388,8130

examples/normmap/src/normalmapgen.h,45
#define NORMALMAPGEN_HNORMALMAPGEN_H32,925

examples/normmap/makefile,143
DEMO = normmapDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1091
unsupported:unsupported39,1171
CSRC =	$(SRC)/main.c       \CSRC54,1555

examples/collis1/src/main.c,1636
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH51,1257
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT52,1293
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1352
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1401
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW60,1452
static RwBool FPSOn = FALSE;FPSOn62,1489
static RwInt32 FrameCounter = 0;FrameCounter64,1521
static RwInt32 FramesPerSecond = 0;FramesPerSecond65,1555
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor67,1594
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor68,1649
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis70,1706
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis71,1748
static RtCharset *Charset = NULL;Charset73,1792
static RpWorld *World = NULL;World74,1827
static RpLight *AmbientLight = NULL;AmbientLight75,1858
static RpLight *MainLight = NULL;MainLight76,1896
RwCamera *Camera = NULL;Camera78,1933
CreateWorld(void)CreateWorld85,2070
CreateAmbientLight(RpWorld *world)CreateAmbientLight119,2798
CreateMainLight(RpWorld *world)CreateMainLight141,3216
CreateCamera(RpWorld *world)CreateCamera174,3887
CameraPoint(RwCamera *camera, RwReal turn, RwReal tilt)CameraPoint214,4867
Initialize(void)Initialize270,6191
InitializeMenu(void)InitializeMenu297,6734
Initialize3D(void *param)Initialize3D332,7616
Terminate3D(void)Terminate3D400,8992
AttachPlugins(void)AttachPlugins458,9898
DisplayOnScreenInfo(void)DisplayOnScreenInfo498,10515
Render(void)Render517,10869
Idle(void)Idle554,11527
AppEventHandler(RsEvent event, void *param)AppEventHandler608,12547

examples/collis1/src/movement.h,37
#define MOVEMENT_HMOVEMENT_H32,984

examples/collis1/src/main.h,29
#define MAIN_HMAIN_H31,974

examples/collis1/src/collis1.c,1443
#define FARAWAY FARAWAY39,1080
#define SPEED SPEED40,1112
enum _Dimension_Dimension42,1137
    XDIM = 0,XDIM44,1157
    YDIM,YDIM45,1172
    ZDIM,ZDIM46,1183
    _DIMENSIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINT_DIMENSIONFORCEENUMSIZEINT48,1196
typedef enum _Dimension Dimension;Dimension50,1253
{__anon3e4b8a38010853,1307
    RwV3d closestPoint;closestPoint54,1310
    RwReal distance;distance55,1335
CollisionParams;CollisionParams57,1360
enum CollisionModes CurrentCollisionMode = SPHERE;CurrentCollisionMode59,1380
enum MovementModes CurrentMovementMode = STOPPED;CurrentMovementMode60,1432
RwReal CameraRadius = 15.0f;CameraRadius62,1485
CameraCollisionLineCallback(RpIntersection *intersection __RWUNUSED__,CameraCollisionLineCallback70,1640
CameraCollisionLine(RwV3d *camPos, RwV3d *camDelta, RpWorld *world)CameraCollisionLine94,2243
PointWithinTriangle(RwV3d *pt, RwV3d *tri[3], RwV3d *normal)PointWithinTriangle158,3809
FindNearestPointOnLine(RwV3d *result, RwV3d *point, RwV3d *start, RwV3d *end)FindNearestPointOnLine250,6451
CameraCollisionSphereCallback(RpIntersection *intersection,CameraCollisionSphereCallback305,7752
CameraCollisionSphere(RwV3d *camPos, RwV3d *camDelta, RpWorld *world)CameraCollisionSphere392,10265
CameraConfine(RwV3d *pos, RwV3d *delta, RpWorld *world)CameraConfine467,12256
CameraUpdate(RwCamera *camera, RpWorld *world, RwReal deltaTime)CameraUpdate504,13210

examples/collis1/src/collis1.h,460
#define COLLIS1_HCOLLIS1_H31,980
enum CollisionModes CollisionModes36,1046
    LINE = 0, LINE38,1071
    SPHERE,SPHERE39,1087
    COLLISIONMODESFORCEENUMSIZEINT = RWFORCEENUMSIZEINTCOLLISIONMODESFORCEENUMSIZEINT41,1102
enum MovementModesMovementModes44,1165
    FORWARDS = 0,FORWARDS46,1188
    BACKWARDS,BACKWARDS47,1207
    STOPPED,STOPPED48,1223
    MOVEMENTMODESFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMOVEMENTMODESFORCEENUMSIZEINT50,1239

examples/collis1/src/movement.c,665
#define FARAWAY FARAWAY38,1080
#define DESCENTRATE DESCENTRATE47,1522
#define SPEED SPEED48,1550
RwReal CameraFloatHeight = 15.0f;CameraFloatHeight50,1574
static RwReal CameraSpeed = 0.0f;CameraSpeed51,1609
CameraFloatCB(RpIntersection *intersection,CameraFloatCB57,1765
CameraFloat(RwCamera *cam, RwReal height, RpWorld *world)CameraFloat76,2201
CameraRestrict(RwCamera *cam, RpWorld *world)CameraRestrict127,3580
CameraRail(RwCamera *cam, RwReal speed)CameraRail145,4138
MoveCameraStart(RwBool forward)MoveCameraStart159,4490
MoveCameraStop(void)MoveCameraStop175,4743
MoveCameraUpdate(RwCamera *cam, RpWorld *wor)MoveCameraUpdate184,4893

examples/collis1/src/win/events.c,799
static RwBool Orientate = FALSE;Orientate37,1051
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown45,1202
HandleLeftButtonUp(RsMouseStatus *mouseStatus  __RWUNUSED__)HandleLeftButtonUp54,1352
HandleRightButtonDown(RsMouseStatus *mouseStatus)HandleRightButtonDown66,1596
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp108,2395
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove118,2612
MouseHandler(RsEvent event, void *param)MouseHandler134,2952
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown186,4082
HandleKeyUp(RsKeyStatus *keyStatus  __RWUNUSED__)HandleKeyUp193,4200
KeyboardHandler(RsEvent event, void *param)KeyboardHandler203,4406
AttachInputDevices(void)AttachInputDevices240,5139

examples/collis1/makefile,105
DEMO = collis1DEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/pickup/src/main.c,2018
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1326
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1362
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1421
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1470
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1521
static RwBool FPSOn = FALSE;FPSOn67,1558
static RwInt32 FrameCounter = 0;FrameCounter69,1590
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1624
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1663
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor73,1718
static RtCharset *Charset = NULL;Charset75,1775
RwCamera *Camera = NULL;Camera77,1812
RpWorld *World = NULL;World79,1840
RpLight *LightDirectional = NULL;LightDirectional80,1864
RpLight *LightAmbient = NULL;LightAmbient81,1899
RpClump *Clump;Clump82,1930
RwFrame *pickupObjectFrame;pickupObjectFrame83,1947
const RwV3d YAxis  = {0.0f, 1.0f, 0.0f};YAxis85,1978
#define PICKUP_EFFECTS_NUM_PRT PICKUP_EFFECTS_NUM_PRT90,2111
#define PICKUP_EFFECTS_RADIUS PICKUP_EFFECTS_RADIUS91,2154
RwRGBA      PickUpColor1 =  { 255,0,0,255};PickUpColor193,2201
RwRGBA      PickUpColor2 =  { 255,255,255,128};PickUpColor294,2246
PickUpObj *PickUp = NULL;PickUp97,2299
getFirstChildCB(RwFrame *frame, void *data)getFirstChildCB103,2435
ClumpLoad(void)ClumpLoad122,2822
CreateDirectionalLight(RpWorld *world, RwCamera *camera)CreateDirectionalLight159,3610
CreateAmbientLight(RpWorld *world)CreateAmbientLight196,4330
CreateWorld(void)CreateWorld221,4770
CreateCamera(RpWorld *world)CreateCamera239,5095
Initialize(void)Initialize270,5805
InitializeMenu(void)InitializeMenu299,6347
Initialize3D(void *param)Initialize3D321,6765
Terminate3D(void)Terminate3D437,9256
AttachPlugins(void)AttachPlugins499,10218
DisplayOnScreenInfo(void)DisplayOnScreenInfo548,11011
Render(void)Render567,11364
Idle(void)Idle606,12057
AppEventHandler(RsEvent event, void *param)AppEventHandler672,13342

examples/pickup/src/pickup.c,579
#define ANIMATION_NUM_FRAME ANIMATION_NUM_FRAME39,1053
#define ANIMATION_FRAME_RATE ANIMATION_FRAME_RATE40,1095
PickUpPtankInit(RpAtomic *ptank, RwReal radius, RwInt32 numPrt)PickUpPtankInit47,1251
PickUpCreate(RwFrame *frame, RwTexture *prtTexture, RwReal radius, RwInt32 numPrt, RwRGBA *colorPickUpCreate111,2922
PickUpRender(PickUpObj *pickup)PickUpRender219,5805
PickUpUpdate(PickUpObj *pickup, RwReal deltaT)PickUpUpdate235,6127
PickUpDestroy(PickUpObj *pickup)PickUpDestroy284,7229
PickUpCameraRotate(RwReal xAngle, RwReal yAngle)PickUpCameraRotate301,7486

examples/pickup/src/pickup.h,466
#define PICKUP_HPICKUP_H33,978
#define COLORANIMCOLORANIM38,1043
#define SIZEANIMSIZEANIM39,1062
#define BATCHSIZE BATCHSIZE40,1080
typedef struct PickUpObj PickUpObj;PickUpObj44,1135
struct PickUpObjPickUpObj46,1174
    RpAtomic    *pTank;pTank48,1195
    RwRGBAReal  deltaColor;deltaColor50,1222
    RwRGBAReal  color;color51,1251
    RwBool      direction;direction53,1277
    RwReal      time;time54,1305
    RwInt32     step;step55,1328

examples/pickup/src/win/events.c,838
static RwBool LButton = FALSE;LButton42,1084
static RwBool RButton = FALSE;RButton43,1116
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1261
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp59,1471
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown74,1771
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp84,1983
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove98,2281
MouseHandler(RsEvent event, void *param)MouseHandler116,2640
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown168,3769
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp241,5126
KeyboardHandler(RsEvent event, void *param)KeyboardHandler254,5379
AttachInputDevices(void)AttachInputDevices291,6112

examples/pickup/makefile,104
DEMO = pickupDEMO29,1018
RWGDIR = $(CURDIR)/../..RWGDIR34,1087
CSRC =	$(SRC)/main.c		\CSRC39,1167

examples/dmorph/src/main.c,2512
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1239
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1275
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1334
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1383
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1434
static RwBool FPSOn = FALSE;FPSOn64,1471
static RwInt32 FrameCounter = 0;FrameCounter66,1503
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1537
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1576
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1631
static RpWorld *World = NULL;World72,1688
static RwCamera *Camera = NULL;Camera73,1719
static RtCharset *Charset = NULL;Charset74,1752
static RpLight *AmbientLight = NULL;AmbientLight75,1787
static RpLight *MainLight = NULL;MainLight76,1825
static RpLight *SecondLight = NULL;SecondLight77,1860
static RpLight *ThirdLight = NULL;ThirdLight78,1897
RpClump *SurfaceBaseClump = NULL; SurfaceBaseClump80,1935
RpClump *FaceBaseClump = NULL;FaceBaseClump81,1971
RpGeometry *DeltaGeom[2] = {NULL,NULL};/* the two geometry deltas to augment the surface geometrDeltaGeom82,2003
RpGeometry *SurfaceBaseGeom = NULL;SurfaceBaseGeom83,2105
RwV3d zAxis = {0.0f, 0.0f, 1.0f};zAxis85,2144
RwV3d yAxis = {0.0f, 1.0f, 0.0f};yAxis86,2179
RwV3d xAxis = {1.0f, 0.0f, 0.0f};xAxis87,2214
RwReal duration[2] = {1.0f, 1.0f};     /* face geometry durations */duration89,2251
RwReal contribution[2]={0.0f, 0.0f};   /* surface geometry contributions */ contribution90,2321
CreateWorld(void)CreateWorld96,2508
CreateAmbientLight(RpWorld *world)CreateAmbientLight114,2832
CreateMainLight(RpWorld *world)CreateMainLight135,3248
CreateSecondLight(RpWorld *world)CreateSecondLight166,3857
CreateThirdLight(RpWorld *world)CreateThirdLight197,4469
CreateCamera(RpWorld *world)CreateCamera232,5172
CreateFaceClump(RpWorld *world, const RwChar *file)CreateFaceClump262,5824
Initialize(void)Initialize307,7059
InitializeMenu(void)InitializeMenu334,7604
Initialize3D(void *param)Initialize3D353,7969
DestroyClumps(RpClump *clump, void *data)DestroyClumps472,10690
Terminate3D(void)Terminate3D486,10946
AttachPlugins(void)AttachPlugins584,12702
DisplayOnScreenInfo(void)DisplayOnScreenInfo620,13253
Render(void)Render652,14054
RotateSurfaceClump(RwReal timeStep)RotateSurfaceClump693,14985
Idle(void)Idle716,15525
AppEventHandler(RsEvent event, void *param)AppEventHandler770,16621

examples/dmorph/src/dmorph.c,629
static RpAtomic    *FaceBaseAtomic = NULL;FaceBaseAtomic39,1060
static RpAtomic    *SurfaceBaseAtomic = NULL;SurfaceBaseAtomic40,1104
static RpDMorphAnimation *FaceBaseAnimation = NULL;FaceBaseAnimation42,1153
AttachSurfaceMorphTargets(void)AttachSurfaceMorphTargets48,1310
GetFirstAtomic(RpAtomic * atomic, void *data)GetFirstAtomic101,3032
CreateMorph(void)CreateMorph116,3291
ChangeSurfaceContributions(void)ChangeSurfaceContributions157,4319
ChangeAnimationDurations(void)ChangeAnimationDurations180,4890
AdvanceAnimation(RwReal deltaTime)AdvanceAnimation203,5489
DestroyDMorph(void)DestroyDMorph217,5764

examples/dmorph/src/geom.c,321
#define edges edges38,1051
#define NumTri NumTri43,1133
#define NumVert NumVert48,1216
static RwV3d CubeVertexList[edges*edges];CubeVertexList51,1248
static RwUInt16 TriangleList[NumVert];TriangleList52,1291
CreateSurface(int function)CreateSurface58,1437
PutInClump(RpGeometry* geometry)PutInClump223,6823

examples/dmorph/src/dmorph.h,33
#define DMORPH_HDMORPH_H31,920

examples/dmorph/src/geom.h,29
#define GEOM_HGEOM_H31,916

examples/dmorph/src/win/events.c,856
RwBool Malliable = FALSE;Malliable37,1011
RwBool Speaking = FALSE;Speaking38,1038
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown44,1177
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp53,1327
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown66,1567
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp75,1717
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove87,1956
MouseHandler(RsEvent event, void *param)MouseHandler118,2904
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown169,4032
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp176,4150
KeyboardHandler(RsEvent event, void *param)KeyboardHandler186,4355
AttachInputDevices(void)AttachInputDevices223,5088

examples/dmorph/makefile,104
DEMO = dmorphDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =	$(SRC)/main.c		\CSRC39,1170

examples/morph/src/main.c,1567
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1282
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1318
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1377
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1426
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1477
static RwBool FPSOn = FALSE;FPSOn64,1516
static RwInt32 FrameCounter = 0;FrameCounter66,1548
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1582
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1621
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1676
static RpWorld *World = NULL;World72,1733
static RtCharset *Charset = NULL;Charset73,1764
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis75,1801
RpClump *Clump = NULL;Clump78,1847
RwCamera *Camera = NULL;Camera79,1871
CreateWorld(void)CreateWorld86,2008
CreateLights(RpWorld *world)CreateLights104,2329
CreateCamera(RpWorld *world)CreateCamera158,3300
Initialize(void)Initialize181,3772
MorphSpeedCallback(RwBool testEnable)MorphSpeedCallback208,4310
InitializeMenu(void)InitializeMenu220,4460
Initialize3D(void *param)Initialize3D247,5181
LightDestroy(RpLight *light, void *data)LightDestroy314,6482
Terminate3D(void)Terminate3D338,6903
AttachPlugins(void)AttachPlugins382,7567
AtomicGetMorphInfo(RpAtomic *atomic, void *data)AtomicGetMorphInfo418,8114
DisplayOnScreenInfo(void)DisplayOnScreenInfo442,8805
Render(void)Render498,10526
Idle(void)Idle535,11184
AppEventHandler(RsEvent event, void *param)AppEventHandler592,12238

examples/morph/src/morph.h,389
#define MORPH_HMORPH_H32,1004
{__anonec7cfa5b010838,1084
    RwInt32 numTargets;numTargets39,1087
    RwInt32 numInterpolators;numInterpolators40,1112
    RwInt32 interpolator;interpolator41,1143
    RwInt32 startTarget;startTarget42,1170
    RwInt32 endTarget;endTarget43,1196
    RwReal value;value44,1220
    RwReal scale;scale45,1239
MorphParams;MorphParams47,1261

examples/morph/src/clump.c,145
CreateClump(RpWorld *world)CreateClump44,1183
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate100,2593

examples/morph/src/morph.c,520
RwInt32 NumInterpolators;NumInterpolators40,1120
RwReal MorphSpeed = 1.0f;MorphSpeed42,1149
RwBool MorphOn = TRUE;MorphOn43,1176
InterpolatorCallback(RpAtomic *atomic, RwReal position)InterpolatorCallback50,1308
AtomicSetupInterpolators(RpAtomic *atomic, AtomicSetupInterpolators79,2151
ClumpSetupInterpolators(RpClump *clump)ClumpSetupInterpolators134,3660
AtomicMorphUpdate(RpAtomic *atomic, void *data)AtomicMorphUpdate146,3900
ClumpAdvanceMorph(RpClump *clump, RwReal delta)ClumpAdvanceMorph163,4194

examples/morph/src/win/events.c,849
RwBool RotateClump = FALSE;RotateClump39,1095
RwBool UserMorph = FALSE;UserMorph40,1124
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown47,1266
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp56,1422
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown69,1668
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp81,1857
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove96,2135
MouseHandler(RsEvent event, void *param)MouseHandler123,2713
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown175,3829
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp182,3947
KeyboardHandler(RsEvent event, void *param)KeyboardHandler192,4152
AttachInputDevices(void)AttachInputDevices229,4871

examples/morph/makefile,104
DEMO = morphDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1083
CSRC =	$(SRC)/main.c			\CSRC39,1163

examples/hanimsub/src/main.c,1721
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1333
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1369
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1428
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1477
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW63,1526
static RwBool FPSOn = FALSE;FPSOn65,1563
static RwInt32 FrameCounter = 0;FrameCounter66,1593
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1627
static RwRGBA ForegroundColor = { 200, 200, 200, 255 };ForegroundColor69,1666
static RwRGBA BackgroundColor = { 64,  64,  64,   0 };BackgroundColor70,1723
static RpWorld *World = NULL;World72,1781
static RwCamera *Camera = NULL;Camera73,1812
static RtCharset *Charset = NULL;Charset74,1845
static RpClump *Clump = NULL;Clump75,1880
static RpLight *MainLight = NULL;MainLight76,1911
static RpLight *AmbientLight = NULL;AmbientLight77,1946
RtAnimAnimation *Anim[MAX_ANIMATIONS];Anim79,1986
RpHAnimHierarchy *Hierarchies[MAX_ANIMATIONS];Hierarchies80,2026
RwBool PlayAnim[MAX_ANIMATIONS];PlayAnim81,2074
CreateWorld(void)CreateWorld88,2219
CreateAmbientLight(RpWorld *world)CreateAmbientLight106,2544
CreateMainLight(RpWorld *world)CreateMainLight128,2962
CreateCamera(RpWorld *world)CreateCamera160,3602
CreateClump(RpWorld *world)CreateClump183,4081
Initialize(void)Initialize227,5221
InitializeMenu(void)InitializeMenu254,5773
Initialize3D(void *param)Initialize3D282,6552
Terminate3D(void)Terminate3D370,8323
AttachPlugins(void)AttachPlugins458,9857
DisplayOnScreenInfo(void)DisplayOnScreenInfo505,10617
Render(void)Render524,10971
Idle(void)Idle561,11636
AppEventHandler(RsEvent event, void *param)AppEventHandler614,12662

examples/hanimsub/src/hanimsub.c,609
GetChildFrameHierarchy(RwFrame *frame, void *data)GetChildFrameHierarchy55,1373
GetHierarchy(RpClump *clump)GetHierarchy78,1895
SetHierarchyForSkinAtomic(RpAtomic *atomic, void *data)SetHierarchyForSkinAtomic97,2290
LoadAnimations(void)LoadAnimations109,2546
FindFrameFromBoneID(RpHAnimHierarchy *hierarchy, RwInt32 boneID)FindFrameFromBoneID141,3194
CreateSubHierarchy(RpHAnimHierarchy *parentHierarchy, RwInt32 boneID)CreateSubHierarchy177,4011
SetupHierarchies(RpClump* clump)SetupHierarchies200,4634
UpdateAnimations(RpHAnimHierarchy** hierarchy, RwReal deltaTime)UpdateAnimations270,6379

examples/hanimsub/src/main.h,131
#define MAIN_HMAIN_H31,943
#define MAX_ANIMATIONS MAX_ANIMATIONS36,1006
#define MAX_SUBHIERARCHIES MAX_SUBHIERARCHIES37,1034

examples/hanimsub/src/hanimsub.h,37
#define HANIMSUB_HHANIMSUB_H31,951

examples/hanimsub/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1130
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp47,1256
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown58,1473
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp64,1600
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove74,1817
MouseHandler(RsEvent event, void *param)MouseHandler84,2030
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown136,3160
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp146,3366
KeyboardHandler(RsEvent event, void *param)KeyboardHandler156,3571
AttachInputDevices(void)AttachInputDevices193,4304

examples/hanimsub/makefile,96
DEMO = hanimsubDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =						\CSRC39,1172

examples/ptank3/src/ptank.c,1371
static RwMatrix *PTankMatrix = NULL;PTankMatrix42,1155
static RwV3d *NormalsList = NULL;NormalsList43,1193
static RwV3d *PositionsList = NULL;PositionsList44,1228
RwInt32 PTankNumVertices = 0;PTankNumVertices45,1265
RwTexture *PTankTexture = NULL;PTankTexture46,1296
RwBool VtxAlphaOn = FALSE;VtxAlphaOn48,1331
RwInt32 SrcBlendID;SrcBlendID50,1361
RwInt32 DestBlendID;DestBlendID51,1382
#define DONUTNUMSIDES DONUTNUMSIDES54,1430
#define DONUTNUMRINGS DONUTNUMRINGS55,1461
#define DONUTRADIUSRING DONUTRADIUSRING56,1492
#define DONUTRADIUSSIDES DONUTRADIUSSIDES57,1525
static RwRGBA SpecularColor = { 255, 0,   0, 255};SpecularColor59,1561
static RwRGBA DiffuseColor  = { 0,   0,   0, 255};DiffuseColor60,1613
static RwRGBA AmbientColor  = { 0,   0, 255, 255};AmbientColor61,1665
static RwMatrix *PTankLightMatrix = NULL;PTankLightMatrix63,1719
static RpAtomic *pTank = NULL;pTank65,1764
static RwFrame *frame = NULL;frame66,1796
PTankRotate(RwReal xAngle, RwReal yAngle)PTankRotate72,1931
PTankTranslateZ(RwReal zDelta)PTankTranslateZ110,2858
PTankLightRotate(RwReal xAngle, RwReal yAngle)PTankLightRotate129,3258
PTankLighting(void)PTankLighting153,3834
PTankRender(void)PTankRender236,6557
PTankTerminate(void)PTankTerminate282,7569
PTankCreate(void)PTankCreate329,8323
PTankInitialize(void)PTankInitialize467,11843

examples/ptank3/src/main.c,1404
#define WIDE_SCREENxWIDE_SCREENx54,1317
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1341
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1377
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1436
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1485
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1536
static RwBool FPSOn = FALSE;FPSOn67,1573
static RwInt32 FrameCounter = 0;FrameCounter69,1605
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1639
static RwRGBA ForegroundColor = { 200, 200, 200, 255};ForegroundColor72,1678
static RwRGBA BackgroundColor = { 100,  80, 100, 255};BackgroundColor73,1734
static RtCharset *Charset = NULL;Charset75,1792
static RwFrame *CamBaseFrame = NULL;CamBaseFrame77,1829
RwCamera *Camera = NULL;Camera79,1869
RpLight *Light = NULL;Light80,1895
RpWorld *World = NULL;World81,1919
CreateWorld(void)CreateWorld88,2054
CreateMainLight(RpWorld *world)CreateMainLight105,2376
CreateCamera(RpWorld *world)CreateCamera146,3290
Initialize(void)Initialize182,4128
InitializeMenu(void)InitializeMenu210,4667
Initialize3D(void *param)Initialize3D234,5150
Terminate3D(void)Terminate3D306,6526
AttachPlugins(void)AttachPlugins358,7332
DisplayOnScreenInfo(void)DisplayOnScreenInfo392,7866
Render(void)Render412,8221
Idle(void)Idle457,9019
AppEventHandler(RsEvent event, void *param)AppEventHandler501,9774

examples/ptank3/src/ptank.h,32
#define ptank_Hptank_H33,1037

examples/ptank3/src/win/events.c,852
static RwBool LButton = FALSE;LButton41,1153
static RwBool RButton = FALSE;RButton42,1185
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown48,1330
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp58,1540
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown73,1840
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp83,2052
HandleMouseMove(RsMouseStatus * mouseStatus __RWUNUSED__)HandleMouseMove97,2351
MouseHandler(RsEvent event, void *param)MouseHandler108,2567
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown160,3697
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp233,5055
KeyboardHandler(RsEvent event, void *param)KeyboardHandler246,5309
AttachInputDevices(void)AttachInputDevices283,6042

examples/ptank3/makefile,104
DEMO = ptank3DEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1084
CSRC =	$(SRC)/main.c		\CSRC39,1164

examples/prtstd2/src/prtstd2.c,1748
PrtStdData PrtData;PrtData40,1078
RwBool renderEmitter = TRUE;renderEmitter42,1101
static RwIm3DVertex             EmitterVertex[20];EmitterVertex44,1133
static RwImVertexIndex          EmitterVertexIndex[48] =EmitterVertexIndex45,1185
static const RwRGBA              EmitterColor = {64, 64, 64, 64};    /* WHITE */EmitterColor63,1999
static const RwRGBA              EmitterDirColor = {128, 0, 0, 128};    /* WHITE */EmitterDirColor65,2083
static RwBlendFunction BlendFunctions[11] =BlendFunctions67,2170
RwInt32 SrcBlendID = 4;SrcBlendID82,2475
RwInt32 DestBlendID = 1;DestBlendID83,2500
RwBool VtxAlphaOn = TRUE;VtxAlphaOn85,2528
ParticleGlowCreatePTank( void )ParticleGlowCreatePTank104,3359
ParticleGlowEmitterCreateCB(RpAtomic * atomic __RWUNUSED__,ParticleGlowEmitterCreateCB191,6300
ParticleGlowEmitterEmitCB(RpAtomic * atomic __RWUNUSED__,ParticleGlowEmitterEmitCB246,8211
ParticleGlowPrtUpdateCB(RpPrtStdEmitter *emt,ParticleGlowPrtUpdateCB428,14579
EmitterClassCreate( void )EmitterClassCreate630,21187
ParticleClassCreate( void )ParticleClassCreate757,25271
PrtStdSetPtankAlphaBlending( RwBool justCheck )PrtStdSetPtankAlphaBlending845,27667
PrtEmitterIm3DCreate( RpPrtStdEmitterStandard *emtStd )PrtEmitterIm3DCreate866,28154
PrtStdRender(void)PrtStdRender1117,37668
PrtStdSetDefault(RwBool justcheck)PrtStdSetDefault1169,38992
PrtStdInitialize(void)PrtStdInitialize1247,41194
PrtStdTerminate(void)PrtStdTerminate1382,45321
PrtStdCameraRotate(RwReal xAngle, RwReal yAngle)PrtStdCameraRotate1421,46096
PrtStdEmitterRotate(RwReal xAngle, RwReal yAngle)PrtStdEmitterRotate1465,47159
PrtStdEmitterWorldRotate(RwReal xAngle, RwReal yAngle, RwReal zAngle)PrtStdEmitterWorldRotate1506,48174

examples/prtstd2/src/main.c,1453
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH64,1482
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT65,1518
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO68,1577
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO70,1626
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW73,1677
static RwBool FPSOn = FALSE;FPSOn75,1714
static RwInt32 FrameCounter = 0;FrameCounter77,1746
static RwInt32 FramesPerSecond = 0;FramesPerSecond78,1780
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor80,1819
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor81,1874
static RtCharset *Charset = NULL;Charset83,1931
static RwBool PrtStdAutoRotate = FALSE;PrtStdAutoRotate85,1968
static RwV3d AutoRotate = {0.0f,0.0f,0.0f};AutoRotate86,2009
RwCamera *Camera = NULL;Camera88,2056
RpWorld *World = NULL;World90,2084
CreateWorld(void)CreateWorld96,2217
CreateCamera(RpWorld *world)CreateCamera114,2542
Initialize(void)Initialize148,3364
emtSizeMenuCB(RwBool justCheck)emtSizeMenuCB175,3913
emtEmitBiasCB(RwBool justCheck)emtEmitBiasCB190,4095
InitializeMenu(void)InitializeMenu208,4405
Initialize3D(void *param)Initialize3D616,15507
Terminate3D(void)Terminate3D676,16653
AttachPlugins(void)AttachPlugins713,17168
DisplayOnScreenInfo(void)DisplayOnScreenInfo760,17837
Render(void)Render782,18351
Idle(void)Idle819,19001
AppEventHandler(RsEvent event, void *param)AppEventHandler889,20349

examples/prtstd2/src/prtstd2.h,2199
#define PRTSTD_HPRTSTD_H33,983
#define BATCHSIZE BATCHSIZE38,1049
#define PARTICLEGLOWCOUNT PARTICLEGLOWCOUNT41,1078
#define PRIVATEPROPERTYCODE(PRIVATEPROPERTYCODE43,1139
#define PARTICLEPROPCODEGLOW PARTICLEPROPCODEGLOW45,1223
#define EMITTERPRTPROPCODEGLOW EMITTERPRTPROPCODEGLOW47,1305
#define PARTICLEPROP(PARTICLEPROP49,1387
typedef struct EmitterPrtGlow EmitterPrtGlow;EmitterPrtGlow55,1522
typedef struct ParticleGlow ParticleGlow;ParticleGlow57,1571
typedef struct ParticleGlowTable ParticleGlowTable;ParticleGlowTable59,1616
typedef struct PrtStdData PrtStdData;PrtStdData61,1671
struct EmitterPrtGlowEmitterPrtGlow73,2047
    RwInt32             numGlow;numGlow75,2073
    ParticleGlowTable   *glowTable;glowTable76,2107
struct ParticleGlowParticleGlow97,2936
    RwInt32     index;index99,2960
    RwReal      t;t100,2984
    RwReal      glow0;glow0101,3004
    RwReal      glow1;glow1102,3028
    RwReal      iDeltaT;iDeltaT103,3052
struct ParticleGlowTableParticleGlowTable108,3144
    RwReal                      t;t110,3173
    RwReal                      glow;glow111,3209
    RwReal                      iDeltaT;iDeltaT112,3248
struct PrtStdDataPrtStdData117,3360
    RpPrtStdEmitterClass        *eClass;eClass119,3382
    RpPrtStdParticleClass       *pClass;pClass120,3424
    RpAtomic                    *atmEmitter;atmEmitter122,3468
    RpPrtStdEmitter             *emitter;emitter124,3516
    RpPrtStdEmitterStandard     *EmtStd;EmtStd127,3592
    EmitterPrtGlow              *emtPrtGlow;emtPrtGlow130,3667
    RpPrtStdEmitterPTank        *EmtPtank;EmtPtank132,3715
    RwTexture                   *PrtTexture;PrtTexture134,3761
    RwInt32                     numGlow;numGlow136,3809
    ParticleGlowTable           *prtGlowTable;prtGlowTable137,3851
    RwInt32                     offsetEmtStd;offsetEmtStd139,3901
    RwInt32                     offsetEmtPrtGlow;offsetEmtPrtGlow140,3948
    RwInt32                     offsetEmtPTank;offsetEmtPTank141,3999
    RwInt32                     offsetPrtStd;offsetPrtStd143,4050
    RwInt32                     offsetPrtGlow;offsetPrtGlow144,4097

examples/prtstd2/src/win/events.c,838
static RwBool LButton = FALSE;LButton42,1067
static RwBool RButton = FALSE;RButton43,1099
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1244
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp59,1454
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown74,1754
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp84,1966
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove98,2264
MouseHandler(RsEvent event, void *param)MouseHandler121,2733
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown173,3862
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp246,5219
KeyboardHandler(RsEvent event, void *param)KeyboardHandler259,5472
AttachInputDevices(void)AttachInputDevices296,6205

examples/prtstd2/makefile,105
DEMO = prtstd2DEMO29,1018
RWGDIR = $(CURDIR)/../..RWGDIR34,1088
CSRC =	$(SRC)/main.c		\CSRC39,1168

examples/hanim2/src/main.c,1747
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1383
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1419
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1478
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1527
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1578
static RwBool FPSOn = FALSE;FPSOn67,1615
static RwInt32 FrameCounter = 0;FrameCounter69,1647
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1681
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1720
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor73,1775
static RpWorld *World = NULL;World75,1832
static RwCamera *Camera = NULL;Camera76,1863
static RtCharset *Charset = NULL;Charset77,1896
static RpLight *AmbientLight = NULL;AmbientLight78,1931
static RpLight *MainLight = NULL;MainLight79,1969
static RpClump *BaseClump = NULL;BaseClump81,2006
static RpClump *DeltaClump = NULL;DeltaClump82,2041
static RpClump *OutClump = NULL;OutClump83,2077
CreateWorld(void)CreateWorld91,2224
CreateAmbientLight(RpWorld *world)CreateAmbientLight109,2548
CreateMainLight(RpWorld *world)CreateMainLight131,2966
CreateCamera(RpWorld *world)CreateCamera169,3830
CreateClump(RpWorld *world, const RwChar *file)CreateClump199,4482
Initialize(void)Initialize236,5296
InitializeMenu(void)InitializeMenu263,5841
Initialize3D(void *param)Initialize3D296,6586
DestroyClumps(RpClump *clump, void *data)DestroyClumps407,9285
Terminate3D(void)Terminate3D421,9541
AttachPlugins(void)AttachPlugins484,10593
DisplayOnScreenInfo(void)DisplayOnScreenInfo540,11523
Render(void)Render559,11877
Idle(void)Idle618,13029
AppEventHandler(RsEvent event, void *param)AppEventHandler672,14037

examples/hanim2/src/hanim.h,167
#define HANIM2_HHANIM2_H32,1016
#define BASE_ANIM BASE_ANIM38,1102
#define DELTA_ANIM DELTA_ANIM39,1125
#define BASE_AND_DELTA_ANIM BASE_AND_DELTA_ANIM40,1149

examples/hanim2/src/hanim.c,1093
#define DELTA_SPEED DELTA_SPEED38,1129
static RpHAnimHierarchy *BaseHierarchy = NULL;BaseHierarchy40,1159
static RpHAnimHierarchy *DeltaHierarchy = NULL;DeltaHierarchy41,1207
static RtAnimAnimation *BaseAnim = NULL;BaseAnim43,1258
static RtAnimAnimation *DeltaAnim = NULL;DeltaAnim44,1300
static RpHAnimHierarchy *OutHierarchy = NULL;OutHierarchy51,1550
static RtAnimAnimation *OutAnim = NULL;OutAnim56,1665
RwInt32 CurrentAnimation = BASE_AND_DELTA_ANIM;CurrentAnimation58,1708
GetChildFrameHierarchy(RwFrame *frame, void *data)GetChildFrameHierarchy65,1868
GetHierarchy(RpClump *clump)GetHierarchy89,2392
SetHierarchyForSkinAtomic(RpAtomic *atomic, void *data)SetHierarchyForSkinAtomic108,2783
CreateHierarchies(RpClump *baseClump, RpClump *deltaClump, RpClump *outClump)CreateHierarchies120,3041
LoadAnimFile(const RwChar *file)LoadAnimFile160,4313
CreateAnims(void)CreateAnims177,4642
DestroyAnims(void)DestroyAnims228,6009
ChangeAnimationCallBack(RwBool testEnable)ChangeAnimationCallBack253,6386
UpdateAnimation(RwReal deltaTime)UpdateAnimation297,7356

examples/hanim2/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown42,1200
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1328
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown60,1545
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp67,1674
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove77,1891
MouseHandler(RsEvent event, void *param)MouseHandler87,2104
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown139,3234
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp146,3352
KeyboardHandler(RsEvent event, void *param)KeyboardHandler156,3557
AttachInputDevices(void)AttachInputDevices193,4290

examples/hanim2/makefile,94
DEMO = hanim2DEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =						\CSRC39,1170

examples/texadrss/src/main.c,1981
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH51,1196
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT52,1232
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1291
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1340
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW60,1391
static RwBool FPSOn = FALSE;FPSOn62,1428
static RwInt32 FrameCounter = 0;FrameCounter64,1460
static RwInt32 FramesPerSecond = 0;FramesPerSecond65,1494
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor67,1533
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor68,1588
static RpWorld *World = NULL;World70,1645
static RtCharset *Charset = NULL;Charset71,1676
static RwInt32 ModeIndex  = 0;ModeIndex73,1713
static RwInt32 ModeIndexU = 0;ModeIndexU74,1745
static RwInt32 ModeIndexV = 0;ModeIndexV75,1777
RpClump *Clump = NULL;Clump77,1811
RwCamera *Camera = NULL;Camera78,1835
RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis80,1863
RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis81,1898
RwV3d Zaxis = {0.0f, 0.0f, 1.0f};Zaxis82,1933
CreateWorld(void)CreateWorld90,2081
CreateLights(RpWorld *world)CreateLights108,2402
CreateCamera(RpWorld *world)CreateCamera163,3441
UpdateTextureAddressMode(TextureAddressType addressMode)UpdateTextureAddressMode186,3909
Initialize(void)Initialize258,5674
TextureAddressCallback(RwBool testEnable)TextureAddressCallback285,6225
TextureAddressUCallback(RwBool testEnable)TextureAddressUCallback299,6425
TextureAddressVCallback(RwBool testEnable)TextureAddressVCallback313,6623
InitializeMenu(void)InitializeMenu330,6910
Initialize3D(void *param)Initialize3D366,7974
LightDestroy(RpLight *light, void *data)LightDestroy426,9156
Terminate3D(void)Terminate3D450,9577
AttachPlugins(void)AttachPlugins494,10233
DisplayOnScreenInfo(void)DisplayOnScreenInfo522,10652
Render(void)Render541,11006
Idle(void)Idle598,12304
AppEventHandler(RsEvent event, void *param)AppEventHandler642,13077

examples/texadrss/src/clump.c,234
ClumpCreate(RpWorld *world)ClumpCreate42,1115
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate92,2196
ClumpTranslateZ(RpClump *clump, RwCamera *camera, RwReal zDelta)ClumpTranslateZ135,3303

examples/texadrss/src/texadrss.h,935
#define TEXADRSS_HTEXADRSS_H31,941
#define NUMMODES NUMMODES36,1008
typedef struct _TextureAddressInfo_TextureAddressInfo38,1032
    RwTextureAddressMode mode[NUMMODES];mode40,1071
    const RwChar *strings[NUMMODES];strings41,1113
    RwUInt8 number;number42,1151
TextureAddressInfo;TextureAddressInfo44,1175
typedef struct _TextureAddressAllInfo_TextureAddressAllInfo46,1198
    TextureAddressInfo both;both48,1240
    TextureAddressInfo u;u49,1270
    TextureAddressInfo v;v50,1297
TextureAddressAllInfo;TextureAddressAllInfo52,1327
{__anon5e4e1dab010355,1368
    TextureAddressNone = 0,TextureAddressNone56,1371
    TextureAddressBoth,TextureAddressBoth57,1400
    TextureAddressU,TextureAddressU58,1425
    TextureAddressV,TextureAddressV59,1447
    TEXTUREADDRESSTYPEFORCEENUMSIZEINT = RWFORCEENUMSIZEINTTEXTUREADDRESSTYPEFORCEENUMSIZEINT61,1471
TextureAddressType;TextureAddressType63,1535

examples/texadrss/src/texadrss.c,1389
typedef struct _TextureAddressChangeInfo_TextureAddressChangeInfo39,1021
    RwTextureAddressMode textureAddressMode;textureAddressMode41,1066
    TextureAddressType textureAddressType;textureAddressType42,1112
TextureAddressChangeInfo;TextureAddressChangeInfo44,1160
static RwTextureAddressMode TextureAddressModes[] =TextureAddressModes46,1189
static const RwChar *TextureAddressModeStrings[] = TextureAddressModeStrings55,1402
TextureAddressAllInfo AllModeInfo;AllModeInfo65,1661
TextureAddressGetInfo(RwRenderState renderState, TextureAddressInfo *info)TextureAddressGetInfo72,1804
QueryTextureAddressAllInfo(void)QueryTextureAddressAllInfo105,2700
MaterialSetTextureAddressMode(RpMaterial *material, void *data)MaterialSetTextureAddressMode145,4047
AtomicSetTextureAddressMode(RpAtomic *atomic, void *data)AtomicSetTextureAddressMode193,5145
ClumpSetTextureAddressMode(RpClump *clump, TextureAddressType texAdrssType,ClumpSetTextureAddressMode203,5350
MaterialGetTextureAddressMode(RpMaterial *material, void *data)MaterialGetTextureAddressMode245,6694
AtomicGetTextureAddressMode(RpAtomic *atomic, void *data)AtomicGetTextureAddressMode288,7658
QueryTextureAddressMode(RpClump *clump, TextureAddressType texAdrssType)QueryTextureAddressMode298,7879
SetModeIndex(TextureAddressInfo *texAdrssInfo, RwTextureAddressMode texAdrssMode)SetModeIndex328,8806

examples/texadrss/src/win/events.c,873
static RwBool RotateClump = FALSE;RotateClump38,1032
static RwBool TranslateClump = FALSE;TranslateClump39,1068
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown46,1222
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp54,1376
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown67,1622
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp75,1776
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove87,2021
MouseHandler(RsEvent event, void *param)MouseHandler114,2637
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown166,3767
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp176,3974
KeyboardHandler(RsEvent event, void *param)KeyboardHandler186,4179
AttachInputDevices(void)AttachInputDevices223,4912

examples/texadrss/makefile,106
DEMO = texadrssDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/anim/src/main.c,1584
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1335
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1371
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1430
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1479
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1530
static RwBool FPSOn = FALSE;FPSOn63,1567
static RwInt32 FrameCounter = 0;FrameCounter65,1599
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1633
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1672
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1727
RpWorld *World = NULL;World71,1784
RwCamera *Camera = NULL;Camera72,1808
RtCharset *Charset = NULL;Charset73,1834
#define NEARCLIP NEARCLIP75,1864
#define FARCLIP FARCLIP76,1889
RpLight *Light[3] = {NULL, NULL, NULL};Light79,1918
RwFrame *LightFrame[3] = {NULL, NULL, NULL};LightFrame80,1959
CreateWorld(void)CreateWorld87,2116
CreateCamera(RpWorld *world)CreateCamera121,2851
Initialize(void)Initialize145,3330
InitializeMenu(void)InitializeMenu171,3865
Initialize3D(void *param)Initialize3D193,4320
Terminate3D(void)Terminate3D322,7445
AttachPlugins(void)AttachPlugins377,8361
DisplayOnScreenInfo(RwCamera * camera __RWUNUSED__)DisplayOnScreenInfo410,8851
Render(void)Render428,9229
static RwReal deltaTime = 0.0f;deltaTime475,10030
Idle(void)Idle478,10079
CameraTranslateZ(RwReal zDelta)CameraTranslateZ539,11190
CameraLook(RwReal turn, RwReal tilt)CameraLook558,11579
AppEventHandler(RsEvent event, void *param)AppEventHandler615,12934

examples/anim/src/anim.c,988
typedef struct NodesKeyframes NodesKeyframes;NodesKeyframes40,1138
struct NodesKeyframesNodesKeyframes42,1187
    void *Keyframes;Keyframes44,1213
    RwInt32 numKeyFrames;numKeyFrames45,1235
static RtAnimAnimation *LightAnimation;LightAnimation49,1270
RtAnimInterpolator *AnimInterpolator;AnimInterpolator51,1313
LightKeyFrameApply(void *light, void *IFrame)LightKeyFrameApply54,1367
LightKeyFrameInterpolate(void * Out, void * In1, void * In2,LightKeyFrameInterpolate66,1634
LightKeyFrameBlend(void * Out, void * In1, void * In2, RwReal fAlpha)LightKeyFrameBlend84,2454
LightKeyFrameAdd(void * Out, void * In1, void * In2)LightKeyFrameAdd101,3159
AnimOrderAndSetKeyframes(RtAnimAnimation *dst, NodesKeyframes *nodes, RwInt32 numNodes)AnimOrderAndSetKeyframes114,3520
#define SetColor(SetColor228,6848
AnimCreate(void)AnimCreate235,6990
AnimDestroy(void)AnimDestroy420,12525
LightAnimApply(RpLight **lights,RtAnimInterpolator *animI)LightAnimApply435,12748

examples/anim/src/lights.h,34
#define LIGHTS_HLIGHTS_H33,1023

examples/anim/src/lights.c,1033
#define POINT_LIGHT_RADIUS_FACTOR POINT_LIGHT_RADIUS_FACTOR47,1338
#define POINT_LIGHT_NUM_VERTICES POINT_LIGHT_NUM_VERTICES48,1380
#define DIRECT_LIGHT_CYLINDER_LENGTH DIRECT_LIGHT_CYLINDER_LENGTH53,1472
#define DIRECT_LIGHT_CYLINDER_DIAMETER DIRECT_LIGHT_CYLINDER_DIAMETER54,1518
#define DIRECT_LIGHT_NUM_VERTICES DIRECT_LIGHT_NUM_VERTICES55,1571
#define DIRECT_LIGHT_CONE_SIZE DIRECT_LIGHT_CONE_SIZE60,1660
#define DIRECT_LIGHT_CONE_ANGLE DIRECT_LIGHT_CONE_ANGLE61,1700
#define SPOT_LIGHTS_RADIUS_FACTOR SPOT_LIGHTS_RADIUS_FACTOR66,1786
#define CONE_NUM_VERTICES CONE_NUM_VERTICES71,1891
static RpLight *CurrentLight;CurrentLight73,1925
static RwRGBA LightSolidColor;LightSolidColor74,1956
static RwReal LightConeAngle;LightConeAngle75,1988
static RwReal LightRadius;LightRadius76,2019
DrawCone(RwReal coneAngle, RwReal coneSize, RwReal coneRatio)DrawCone81,2150
DrawDirectLight(void)DrawDirectLight251,7035
DrawPointLight(void)DrawPointLight428,12420
DrawLight(RpLight *light)DrawLight474,13657

examples/anim/src/anim.h,558
#define ANIM_HANIM_H31,1017
typedef struct LightKeyFrame LightKeyFrame;LightKeyFrame37,1101
struct LightKeyFrameLightKeyFrame38,1146
	void	*prevFrame;		prevFrame41,1199
	RwReal	time;time42,1220
	RwRGBAReal	color;color44,1237
	RwReal		radius;radius45,1257
typedef struct LightInterpFrame LightInterpFrame;LightInterpFrame48,1281
struct LightInterpFrameLightInterpFrame49,1332
    LightKeyFrame   *keyframe1;keyframe152,1391
    LightKeyFrame   *keyframe2;keyframe253,1424
	RwRGBAReal	color;color55,1459
	RwReal		radius;radius56,1479

examples/anim/src/main.h,30
#define MAIN_HMAIN_H31,1017

examples/anim/src/win/events.c,849
static RwBool spin = FALSE, zoom = FALSE;spin42,1199
static RwBool spin = FALSE, zoom = FALSE;zoom42,1199
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown45,1266
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp57,1477
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown73,1776
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp84,1987
HandleMouseMove(RsMouseStatus *param)HandleMouseMove100,2289
MouseHandler(RsEvent event, void *param)MouseHandler123,2700
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown175,3830
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp248,5209
KeyboardHandler(RsEvent event, void *param)KeyboardHandler277,5783
AttachInputDevices(void)AttachInputDevices314,6516

examples/anim/makefile,102
DEMO = animDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1088
CSRC =	$(SRC)/main.c		\CSRC39,1168

examples/im3d/src/main.c,1190
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1188
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1224
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1283
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1332
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1383
static RwBool FPSOn = FALSE;FPSOn61,1420
static RwInt32 FrameCounter = 0;FrameCounter63,1452
static RwInt32 FramesPerSecond = 0;FramesPerSecond64,1486
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor66,1525
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor67,1580
static RtCharset *Charset = NULL;Charset69,1637
RwCamera *Camera = NULL;Camera71,1674
CreateCamera(void)CreateCamera78,1812
Initialize(void)Initialize100,2231
Im3DColoredCallback(RwBool testEnable)Im3DColoredCallback127,2781
InitializeMenu(void)InitializeMenu158,3481
Initialize3D(void *param)Initialize3D200,4754
Terminate3D(void)Terminate3D251,5747
AttachPlugins(void)AttachPlugins281,6149
DisplayOnScreenInfo(void)DisplayOnScreenInfo306,6523
Render(void)Render380,8017
Idle(void)Idle417,8679
AppEventHandler(RsEvent event, void *param)AppEventHandler461,9452

examples/im3d/src/im3d.h,29
#define IM3D_HIM3D_H31,933

examples/im3d/src/trifan.c,705
static RwReal TriFanData[34][5] = TriFanData39,1048
static RwReal IndexedTriFanData[17][5] = IndexedTriFanData85,2973
static RwImVertexIndex IndexedTriFanIndices[34] = IndexedTriFanIndices109,3943
static RwIm3DVertex TriFan[34];TriFan116,4133
static RwIm3DVertex IndexedTriFan[17];IndexedTriFan117,4166
TriFanCreate(void)TriFanCreate125,4307
TriFanSetColor(RwBool white)TriFanSetColor149,4821
IndexedTriFanCreate(void)IndexedTriFanCreate184,5615
IndexedTriFanSetColor(RwBool white)IndexedTriFanSetColor208,6200
TriFanRender(RwMatrix *transform, RwUInt32 transformFlags)TriFanRender245,7038
IndexedTriFanRender(RwMatrix *transform, RwUInt32 transformFlags)IndexedTriFanRender262,7410

examples/im3d/src/polyline.c,742
static RwReal PolyLineData[21][5] = PolyLineData39,1049
static RwReal IndexedPolyLineData[8][5] = IndexedPolyLineData71,2294
static RwImVertexIndex IndexedPolyLineIndices[25] =IndexedPolyLineIndices85,2783
static RwIm3DVertex PolyLine[21];PolyLine91,2926
static RwIm3DVertex IndexedPolyLine[8];IndexedPolyLine92,2961
PolyLineCreate(void)PolyLineCreate99,3101
PolyLineSetColor(RwBool white)PolyLineSetColor123,3635
IndexedPolyLineCreate(void)IndexedPolyLineCreate170,4718
IndexedPolyLineSetColor(RwBool white)IndexedPolyLineSetColor194,5322
PolyLineRender(RwMatrix *transform, RwUInt32 transformFlags)PolyLineRender252,7246
IndexedPolyLineRender(RwMatrix *transform, RwUInt32 transformFlags)IndexedPolyLineRender269,7621

examples/im3d/src/trilist.c,725
static RwReal TriListData[36][5] = TriListData39,1040
static RwReal IndexedTriListData[8][5] = IndexedTriListData90,3179
static RwImVertexIndex IndexedTriListIndices[36] = IndexedTriListIndices104,3674
static RwIm3DVertex TriList[36];TriList121,3983
static RwIm3DVertex IndexedTriList[8];IndexedTriList122,4017
TriListCreate(void)TriListCreate130,4158
TriListSetColor(RwBool white)TriListSetColor154,4682
IndexedTriListCreate(void)IndexedTriListCreate221,6492
IndexedTriListSetColor(RwBool white)IndexedTriListSetColor245,7086
TriListRender(RwMatrix *transform, RwUInt32 transformFlags)TriListRender302,8985
IndexedTriListRender(RwMatrix *transform, RwUInt32 transformFlags)IndexedTriListRender319,9361

examples/im3d/src/linelist.c,749
static RwReal LineListData[28][5] = LineListData39,1046
static RwReal IndexedLineListData[18][5] = IndexedLineListData90,2789
static RwImVertexIndex IndexedLineListIndices[96] = IndexedLineListIndices117,3805
static RwIm3DVertex LineList[28];LineList129,4241
static RwIm3DVertex IndexedLineList[18];IndexedLineList130,4276
LineListCreate(void)LineListCreate137,4417
LineListSetColor(RwBool white)LineListSetColor161,4951
IndexedLineListCreate(void)IndexedLineListCreate194,5692
IndexedLineListSetColor(RwBool white)IndexedLineListSetColor218,6289
LineListRender(RwMatrix *transform, RwUInt32 transformFlags)LineListRender273,7710
IndexedLineListRender(RwMatrix *transform, RwUInt32 transformFlags)IndexedLineListRender290,8091

examples/im3d/src/im3d.c,989
RwRGBA SolidWhite  = {255, 255, 255, 255};SolidWhite36,984
RwRGBA SolidBlack  = {  0,   0,   0, 255};SolidBlack37,1028
RwRGBA SolidRed    = {200,  64,  64, 255};SolidRed38,1072
RwRGBA SolidGreen  = { 64, 200,  64, 255};SolidGreen39,1116
RwRGBA SolidBlue   = { 64,  64, 200, 255};SolidBlue40,1160
RwRGBA SolidYellow = {200, 200,  64, 255};SolidYellow41,1204
RwRGBA SolidPurple = {200,  64, 200, 255};SolidPurple42,1248
RwRGBA SolidCyan   = { 64, 200, 200, 255};SolidCyan43,1292
RwInt32 Im3DPrimType = 0;Im3DPrimType45,1338
RwBool Im3DTextured = FALSE;Im3DTextured46,1365
RwBool Im3DColored = TRUE;Im3DColored47,1395
static RwMatrix *Im3DMatrix = NULL;Im3DMatrix49,1425
static RwTexture *Im3DTexture = NULL;Im3DTexture50,1462
Im3DRender(void)Im3DRender58,1602
Im3DRotate(RwReal xAngle, RwReal yAngle)Im3DRotate171,4177
Im3DTranslateZ(RwReal zDelta)Im3DTranslateZ208,5089
Im3DInitialize(void)Im3DInitialize227,5484
Im3DTerminate(void)Im3DTerminate314,7523

examples/im3d/src/win/events.c,853
static RwBool Rotate = FALSE;Rotate38,1028
static RwBool Translate = FALSE;Translate39,1059
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown46,1208
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp54,1355
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown66,1590
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp74,1739
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove86,1979
MouseHandler(RsEvent event, void *param)MouseHandler115,2521
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown167,3638
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp174,3760
KeyboardHandler(RsEvent event, void *param)KeyboardHandler184,3965
AttachInputDevices(void)AttachInputDevices221,4684

examples/im3d/src/tristrip.c,750
static RwReal TriStripData[36][5] = TriStripData39,1054
static RwReal IndexedTriStripData[16][5] = IndexedTriStripData101,3246
static RwImVertexIndex IndexedTriStripIndices[36] = IndexedTriStripIndices123,4140
static RwIm3DVertex TriStrip[36];TriStrip137,4415
static RwIm3DVertex IndexedTriStrip[16];IndexedTriStrip138,4450
TriStripCreate(void)TriStripCreate146,4593
TriStripSetColor(RwBool white)TriStripSetColor170,5127
IndexedTriStripCreate(void)IndexedTriStripCreate203,5878
IndexedTriStripSetColor(RwBool white)IndexedTriStripSetColor227,6475
TriStripRender(RwMatrix *transform, RwUInt32 transformFlags)TriStripRender264,7325
IndexedTriStripRender(RwMatrix *transform, RwUInt32 transformFlags)IndexedTriStripRender281,7706

examples/im3d/makefile,102
DEMO = im3dDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1082
CSRC =	$(SRC)/main.c		\CSRC39,1162

examples/lightmap/src/main.c,4080
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH64,1523
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT65,1559
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO68,1618
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO70,1667
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW73,1718
#define CAMERAMAXSPEED CAMERAMAXSPEED75,1755
#define CAMERAMINSPEED CAMERAMINSPEED76,1792
#define LIGHTMAPMINDENSITY LIGHTMAPMINDENSITY78,1831
#define LIGHTMAPMAXDENSITY LIGHTMAPMAXDENSITY79,1882
#define LIGHTMAPMINSIZE LIGHTMAPMINSIZE81,1931
#define LIGHTMAPMAXSIZE LIGHTMAPMAXSIZE82,1961
#define NOWIREFRAME NOWIREFRAME84,1995
#define WIREBOXES WIREBOXES85,2020
#define WIRETRIANGLES WIRETRIANGLES86,2045
#define JITTER JITTER89,2136
#define POSJITTER POSJITTER91,2218
#define JITTERANGLE JITTERANGLE93,2291
RwInt32 gFakeEnums[MENUSTRINGARRAYENTRIES] = {FAKEENUMDEFAULTVAL,gFakeEnums96,2380
RwChar CurrentWorldPath[256] = RWSTRING("");CurrentWorldPath100,2584
RwReal CameraPitchRate = 0.0f;CameraPitchRate103,2650
RwReal CameraTurnRate = 0.0f;CameraTurnRate104,2682
RwReal CameraMaxSpeed = 0.0f;CameraMaxSpeed105,2713
RwReal CameraSpeed = 0.0f;CameraSpeed106,2744
RwReal CameraStrafeSpeed = 0.0f;CameraStrafeSpeed107,2772
RwReal   LightMapDensity = 1.0f;LightMapDensity110,2843
RwUInt32 LightMapSize = DEFAULTLIGHTMAPSIZE;LightMapSize111,2877
RwInt32  LightMapScale = 1;LightMapScale112,2923
static RwBool     gDisplayFPS     = FALSE;gDisplayFPS114,2954
static RwBool     gDrawLights     = FALSE;gDrawLights115,2998
static RwUInt32   gDrawWireframe  = NOWIREFRAME;gDrawWireframe116,3042
static RwInt32    FrameCounter    = 0;FrameCounter117,3092
static RwInt32    FramesPerSecond = 0;FramesPerSecond118,3132
static RwRGBA     ForegroundColor = {200, 200, 200, 255};ForegroundColor120,3174
static RwRGBA     BackgroundColor = { 64,  64,  64,   0};BackgroundColor121,3233
static RtCharset *Charset         = NULL;Charset122,3292
static RpWorld   *World  = (RpWorld  *)NULL;World124,3337
static RwCamera  *Camera = (RwCamera *)NULL;Camera125,3383
static RwChar Blank[10] = RWSTRING("");Blank128,3463
static RwChar *gMenuStrings[MENUSTRINGARRAYENTRIES][3] =gMenuStrings129,3504
Initialize(void)Initialize139,3812
ChangeCameraSpeed(RwBool justCheck)ChangeCameraSpeed166,4345
ChangeLightMapDensity(RwBool justCheck)ChangeLightMapDensity201,5238
ChangeLightMapSize(RwBool justCheck)ChangeLightMapSize242,6226
ChangeLightMapScale(RwBool justCheck)ChangeLightMapScale284,7216
MenuCreateLightMaps(RwBool justCheck)MenuCreateLightMaps296,7434
MenuClearLightMaps(RwBool justCheck)MenuClearLightMaps310,7685
MenuDestroyLightMaps(RwBool justCheck)MenuDestroyLightMaps326,8009
MenuMakeDarkMaps(RwBool justCheck)MenuMakeDarkMaps340,8254
MenuProcBaseTex(RwBool justCheck)MenuProcBaseTex353,8489
TexDictCallback(RwBool justCheck)TexDictCallback366,8729
LumCalcCallback(RwBool justCheck)LumCalcCallback380,8953
MenuRenderStyleCB(RwBool justCheck)MenuRenderStyleCB418,9628
MenuPointSampleCB(RwBool justCheck)MenuPointSampleCB435,10068
MenuDynamicCB(RwBool justCheck)MenuDynamicCB452,10467
MenuSaveLightMap(RwBool justCheck)MenuSaveLightMap466,10713
MenuSaveLightMapDict(RwBool justCheck)MenuSaveLightMapDict492,11362
MenuSaveObjects(RwBool justCheck)MenuSaveObjects538,12770
MenuCancelLighting(RwBool justCheck)MenuCancelLighting552,13003
LightJitterCB(RpLight *light, void *data)LightJitterCB566,13252
MenuJitterLights(RwBool justCheck)MenuJitterLights673,17626
InitializeMenu(void)InitializeMenu688,17981
Initialize3D(void *param)Initialize3D807,23423
Terminate3D(void)Terminate3D886,25373
AttachPlugins(void)AttachPlugins920,25930
FileLoad(RwChar *filename)FileLoad984,27397
DisplayOnScreenInfo(void)DisplayOnScreenInfo1049,29002
wireframeSectorCB(RpWorldSector *sector)wireframeSectorCB1080,29801
Render(void)Render1226,34987
CameraUpdate(RwReal deltaTime)CameraUpdate1303,37539
Idle(void)Idle1341,38824
AppEventHandler(RsEvent event, void *param)AppEventHandler1396,39973

examples/lightmap/src/lightmap.h,38
#define LIGHTMAP_HLIGHTMAP_H33,1004

examples/lightmap/src/main.h,542
#define MAIN_HMAIN_H32,994
#define DEFAULTLIGHTMAPSIZE DEFAULTLIGHTMAPSIZE38,1168
#define MAXCAMERAROTSPEED MAXCAMERAROTSPEED40,1203
#define MENUSTRINGARRAYCAMSPEED MENUSTRINGARRAYCAMSPEED43,1342
#define MENUSTRINGARRAYDENSITY MENUSTRINGARRAYDENSITY44,1379
#define MENUSTRINGARRAYMAPSIZE MENUSTRINGARRAYMAPSIZE45,1416
#define MENUSTRINGARRAYENTRIES MENUSTRINGARRAYENTRIES46,1453
#define FAKEENUMMINVAL FAKEENUMMINVAL48,1492
#define FAKEENUMMAXVAL FAKEENUMMAXVAL49,1524
#define FAKEENUMDEFAULTVAL FAKEENUMDEFAULTVAL50,1556

examples/lightmap/src/lightmap.c,6633
RwBool   gCreatingLightMaps = FALSE;gCreatingLightMaps50,1431
RwBool   gClearingLightMaps = FALSE;gClearingLightMaps51,1469
RwBool   gLightingWorld     = FALSE;gLightingWorld52,1507
RwBool   gUseAreaLights     = FALSE;gUseAreaLights53,1545
RwBool   gUseRpLights       = TRUE;gUseRpLights54,1583
RwBool   gUseDynamicLights  = TRUE;gUseDynamicLights55,1620
RwReal   gLightProgress     = 0; /* Percentage progress on lighting */gLightProgress56,1657
RwBool   gResetLighting     = FALSE;gResetLighting57,1729
RwReal   gLightingProgress  = 0.0f;gLightingProgress58,1767
RtLtMapAreaLightGroup  *gAreaLights      = (RtLtMapAreaLightGroup *)NULL;gAreaLights59,1804
RtLtMapLightingSession  gLightingSession;gLightingSession60,1879
RwUInt32 gRenderStyle       = rpLTMAPSTYLERENDERBASE|rpLTMAPSTYLERENDERLIGHTMAP;gRenderStyle62,1924
RwBool   gPointSampling     = TRUE;gPointSampling63,2006
RwUInt32 gLumCalcIndex      = 0;gLumCalcIndex64,2043
RwBool  gMakeDarkMap        = FALSE;gMakeDarkMap66,2079
RwUInt32 gTexDictIndex       = 0;gTexDictIndex67,2117
#define CONE_NUM_VERTICES CONE_NUM_VERTICES73,2397
#define POINT_LIGHT_NUM_VERTICES POINT_LIGHT_NUM_VERTICES74,2440
#define DIRECT_LIGHT_NUM_VERTICES DIRECT_LIGHT_NUM_VERTICES75,2483
#define DIRECT_LIGHT_CYLINDER_DIAMETER DIRECT_LIGHT_CYLINDER_DIAMETER76,2526
#define DIRECT_LIGHT_CYLINDER_LENGTH DIRECT_LIGHT_CYLINDER_LENGTH77,2573
#define DIRECT_LIGHT_CONE_SIZE DIRECT_LIGHT_CONE_SIZE78,2620
#define DIRECT_LIGHT_CONE_ANGLE DIRECT_LIGHT_CONE_ANGLE79,2667
#define SAMPLESPERSLICE SAMPLESPERSLICE83,2836
#define CREATETXDxCREATETXDx88,3055
#define FULLSCENELIGHTINGxFULLSCENELIGHTINGx92,3209
static RwChar gAtomicPath[] = RWSTRING("models/");gAtomicPath98,3482
static RwChar gAtomicName[] = RWSTRING("vase");gAtomicName99,3534
static RwUInt32 gNumDynamicLights = 0;gNumDynamicLights102,3607
static RpLight *gDynamicLights[2] = {(RpLight *)NULL, (RpLight *)NULL};gDynamicLights103,3647
static RwV3d    gDynamicVectors[3] = {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}};gDynamicVectors104,3720
static RwV3d    gExampleVectors[3] = {{   0.0f,  650.0f, -8000.0f},gExampleVectors105,3793
RpClump *gAtomicClumps[4] = {NULL, NULL, NULL, NULL};gAtomicClumps110,4058
RwUInt32 gNumAtomics = 0;gNumAtomics111,4113
static RwReal gAtomicScales[4] = {1.0f, 0.7f, 1.5f, 0.8f};gAtomicScales113,4188
static RwV3d  gAtomicAngles[4] = {{-90, 0, 0}, {-90, 0, 0}, {-90, 0, 0}, {-15, 0, 0}};gAtomicAngles114,4248
static RwV3d  gAtomicPositions[4] = {{    0.0f,  390.0f,     0.0f},gAtomicPositions115,4336
static RwChar gLightMapPrefix[] = RWSTRING("xmp_");gLightMapPrefix120,4615
RwChar gPlatformString[] = RWSTRING("ps2");gPlatformString123,4733
RwChar gPlatformString[] = RWSTRING("d3d8");gPlatformString125,4812
RwChar gPlatformString[] = RWSTRING("d3d9");gPlatformString127,4892
RwChar gPlatformString[] = RWSTRING("gcn");gPlatformString129,5002
RwChar gPlatformString[] = RWSTRING("ogl");gPlatformString131,5083
RwChar gPlatformString[] = RWSTRING("sfrs");gPlatformString133,5165
RwChar gPlatformString[] = RWSTRING("xbox");gPlatformString135,5277
RwChar gPlatformString[] = RWSTRING("null");gPlatformString137,5357
static RwTexDictionary *gBaseTexDict = (RwTexDictionary *)NULL;gBaseTexDict143,5512
static RwChar          *gBaseTexDictPath = (RwChar *)NULL;gBaseTexDictPath144,5577
CameraInitPosition(RwCamera *camera, RpWorld *world)CameraInitPosition154,5977
ClumpDestroyCB(RpClump *clump, void *data)ClumpDestroyCB204,7616
LightDestroyCB(RpLight *light, void *data)LightDestroyCB216,7874
TexDictDestroyCB(RwTexDictionary *texDict, void *data __RWUNUSED__)TexDictDestroyCB249,8679
ResetScene(RpWorld *world, RwCamera *camera)ResetScene260,8913
TextureCalcEmitterColor(RwRGBA *result, RwTexture *texture)TextureCalcEmitterColor342,11322
ScaleMaterialsDensityCB (RpMaterial *mat, void *data)ScaleMaterialsDensityCB425,14401
ScaleAtomicsMaterialDensityCB (RpAtomic *atomic, void *data)ScaleAtomicsMaterialDensityCB441,14837
ScaleClumpMaterialsDensityCB (RpClump *clump, void *data)ScaleClumpMaterialsDensityCB451,15128
SetupMaterialsCB(RpMaterial *mat, void *data __RWUNUSED__)SetupMaterialsCB461,15396
SetupExampleAtomicCB(RpAtomic *atomic, void *data)SetupExampleAtomicCB542,18352
LoadAtomics(RpWorld *world)LoadAtomics568,19161
MakeSkyLights(RpWorld *world, RwRGBAReal *color, RwUInt32 numRings)MakeSkyLights640,21564
LightsUpdate(RwReal deltaTime)LightsUpdate736,24667
LightToggleCB(RpLight *light, void *data __RWUNUSED__)LightToggleCB766,25493
EnumerateLightsCB(RpLight *light, void *data)EnumerateLightsCB777,25790
SetupLights(RpWorld *world)SetupLights789,26040
DrawCone(RwReal coneAngle, RwReal coneSize, RwRGBA *color, RwMatrix *matrix)DrawCone914,30698
DrawSpotLight(RpLight *light)DrawSpotLight998,33326
DrawDirectionalLight(RpLight *light)DrawDirectionalLight1015,33719
DrawPointLight(RpLight *light, RwCamera *camera)DrawPointLight1119,37406
DrawAmbientLight(RpLight *light)DrawAmbientLight1187,39690
DisplayLightCB(RpLight *light, void *data)DisplayLightCB1241,41542
DisplayLights(RwCamera *camera)DisplayLights1288,42796
ToggleDynamicLights(RpWorld *world)ToggleDynamicLights1301,43078
saveImageCB(RwTexture *texture, void *data)saveImageCB1328,43602
SaveLightMapImages(RwChar *path)SaveLightMapImages1376,45144
SaveLightMapTexDict(RwChar *path)SaveLightMapTexDict1393,45478
MakeDarkMaps(void)MakeDarkMaps1443,46877
ProcessBaseTexture(void)ProcessBaseTexture1460,47248
SaveScene(void)SaveScene1476,47719
SectorPreLightClearCB(RpWorldSector *sector, void *data)SectorPreLightClearCB1535,49433
AtomicPreLightClearAll128CB(RpAtomic *atomic, void *data)AtomicPreLightClearAll128CB1571,50541
AtomicPreLightClearLMappedBlackCB(RpAtomic *atomic, void *data)AtomicPreLightClearLMappedBlackCB1600,51391
ClumpPreLightClearAll128CB(RpClump *clump, void *data)ClumpPreLightClearAll128CB1634,52413
ClumpPreLightClearLMappedBlackCB(RpClump *clump, void *data)ClumpPreLightClearLMappedBlackCB1644,52673
SectorSetupCB(RpWorldSector *sector, void * data __RWUNUSED__)SectorSetupCB1655,52953
_loadWorld(RwChar *file)_loadWorld1668,53315
LoadWorld(RwChar *file, RpWorld *oldWorld, RwCamera *camera)LoadWorld1885,60865
AtomicSetupCB(RpAtomic *atomic, void *data __RWUNUSED__)AtomicSetupCB1990,64454
LoadClump(const RwChar *file)LoadClump2017,65221
LightScene(RwCamera *camera)LightScene2060,66331
CreateLightMaps(void)CreateLightMaps2223,72231
ClearLightMaps(void)ClearLightMaps2250,72904
DestroyLightMaps(void)DestroyLightMaps2290,74152

examples/lightmap/src/win/events.c,1122
static RwBool       LeftButtonDown = FALSE;LeftButtonDown42,1134
static RwBool       Forwards = FALSE;Forwards43,1179
static RwBool       Backwards = FALSE;Backwards44,1218
static RwBool       StrafeLeft = FALSE;StrafeLeft45,1258
static RwBool       StrafeRight = FALSE;StrafeRight46,1299
#define CAMERASPEED CAMERASPEED51,1455
#define CAMERAROTSCL CAMERAROTSCL52,1484
HandleLeftButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonDown58,1657
HandleLeftButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonUp69,1890
HandleRightButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonDown85,2266
HandleRightButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonUp94,2471
HandleMouseMove(RsMouseStatus * mouseStatus)HandleMouseMove106,2761
MouseHandler(RsEvent event, void *param)MouseHandler121,3136
HandleKeyDown(RsKeyStatus * keyStatus)HandleKeyDown172,4351
HandleKeyUp(RsKeyStatus * keyStatus)HandleKeyUp254,6295
KeyboardHandler(RsEvent event, void *param)KeyboardHandler324,8223
AttachInputDevices(void)AttachInputDevices361,9018

examples/lightmap/makefile,106
DEMO = lightmapDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/options.mak,456
RWGSDK=../../rwsdkRWGSDK1,0
RWTARGET=d3d8RWTARGET2,19
RWOS=winRWOS3,33
RWCOMPILER=visualcRWCOMPILER4,42
RWDEBUG=0RWDEBUG5,61
RWMETRICS=0RWMETRICS6,71
RWLOGO=1RWLOGO7,83
RWSPLASH=0RWSPLASH8,92
RWMOUSE=0RWMOUSE9,103
CDEBUG=0CDEBUG10,113
DXSDK=c:/mssdkDXSDK11,122
OGLLIBPATH=c:/ogllibOGLLIBPATH12,137
IOPPATH=/usr/local/sce/iopIOPPATH13,158
XBOXSDK=c:/Progra~1/Micros~3XBOXSDK14,185
APPLEGLSDKPATH=c:/aoglsdkAPPLEGLSDKPATH15,214

examples/uvanim/src/main.c,5476
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH58,1321
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT59,1357
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1416
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO64,1465
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW67,1516
static RwBool FPSOn = FALSE;FPSOn69,1553
static RwInt32 FrameCounter = 0;FrameCounter71,1585
static RwInt32 FramesPerSecond = 0;FramesPerSecond72,1619
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor74,1658
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor75,1713
RtCharset *Charset = NULL;Charset77,1770
RwV3d XAxis = {1.0f, 0.0f, 0.0f};XAxis79,1800
RwV3d YAxis = {0.0f, 1.0f, 0.0f};YAxis80,1835
RwV3d ZAxis = {0.0f, 0.0f, 1.0f};ZAxis81,1870
typedef struct Scene Scene;Scene83,1907
struct Scene {Scene85,1938
    const RwChar *name;name86,1954
    const RwChar *worldFile;worldFile87,1979
    const RwChar *alphaClumpFile;alphaClumpFile88,2009
    const RwChar *backClumpFile;backClumpFile89,2044
    const RwChar *uvanimFile;uvanimFile90,2078
    RtDict *uvanimDict;uvanimDict91,2109
    RpWorld *world;world92,2134
    RpClump *alphaClump;alphaClump93,2155
    RpClump *backClump;backClump94,2181
    RwCamera *camera;camera95,2206
    RwSList *animatedMaterials;animatedMaterials96,2229
    RwBool mayAutoLight;mayAutoLight97,2262
    RwBool autoLit;autoLit98,2288
    RwBool autoCam;autoCam99,2309
    RpUVAnim *autoAnim;autoAnim100,2330
static Scene Scenes[]={Scenes103,2361
#define NUMSCENES NUMSCENES107,2950
#define DEFAULTSCENEINDEX DEFAULTSCENEINDEX109,3002
static RwInt32 CurrentSceneIndex = DEFAULTSCENEINDEX;CurrentSceneIndex110,3031
static Scene *CurrentScene = &Scenes[DEFAULTSCENEINDEX];CurrentScene111,3086
static RwReal AnimScale=1.0f;AnimScale112,3144
RwCamera *Camera;Camera114,3177
RwCamera *FirstCamera;FirstCamera115,3196
typedef struct MaterialCBAndData MaterialCBAndData;MaterialCBAndData122,3437
struct MaterialCBAndDataMaterialCBAndData124,3492
    RpMaterialCallBack cb;cb126,3521
    void *data;data127,3549
AtomicForAllMaterials(RpAtomic *atomic, void *data)AtomicForAllMaterials131,3590
ClumpForAllMaterials(RpClump *clump, void *data)ClumpForAllMaterials142,3858
WorldForAllMaterials(RpWorld *world, void *data)WorldForAllMaterials150,4017
typedef struct AtomicCBAndData AtomicCBAndData;AtomicCBAndData160,4290
struct AtomicCBAndDataAtomicCBAndData162,4341
    RpAtomicCallBack cb;cb164,4368
    void *data;data165,4394
WorldForAllClumps(RpClump *clump, void *data)WorldForAllClumps169,4434
WorldForAllAtomics(RpWorld *world, void *data)WorldForAllAtomics179,4630
WorldHasLightCallBack(RpLight *light __RWUNUSED__, void *data)WorldHasLightCallBack187,4783
WorldHasLights(RpWorld *world)WorldHasLights197,4973
GetFirstCamera(RwCamera *camera, void *data)GetFirstCamera205,5136
ClumpGetFirstCamera(RpClump *clump, void *data)ClumpGetFirstCamera212,5262
WorldGetFirstCamera(RpWorld *world)WorldGetFirstCamera229,5562
DestroyLight(RpLight *light, void *data)DestroyLight237,5736
WorldGetExtent(RpWorld *world)WorldGetExtent257,6060
WorldGetCentre(RpWorld *world, RwV3d *out)WorldGetCentre270,6317
AddAnimatedMaterialToList(RpMaterial *material, void *data)AddAnimatedMaterialToList285,6790
CreateAnimatedMaterialsList(RpWorld *world, RpClump *alphaClump)CreateAnimatedMaterialsList311,7435
MaterialsInterpolatorsAddAnimTime(RwSList *animatedMaterials, RwReal deltaTime)MaterialsInterpolatorsAddAnimTime333,8058
MaterialsAnimApply(RwSList *animatedMaterials)MaterialsAnimApply346,8405
typedef struct NodesKeyframes NodesKeyframes;NodesKeyframes363,8887
struct NodesKeyframesNodesKeyframes365,8936
    void *Keyframes;Keyframes367,8962
    RwInt32 numKeyFrames;numKeyFrames368,8984
AnimOrderAndSetKeyframes(RtAnimAnimation *anim, NodesKeyframes *nodes, RwInt32 numNodes)AnimOrderAndSetKeyframes372,9032
AnimCreate(const RwChar *name, RwUInt32 nodes, RwUInt32 frames, RwReal duration, RwUInt32 *map)AnimCreate493,12590
AnimateMaterial(RpMaterial *material, void *data)AnimateMaterial560,14668
AnimateAtomic(RpAtomic *atomic, void __RWUNUSED__ *data )AnimateAtomic573,14989
CreateAutoAnim()CreateAutoAnim581,15138
AnimateAllMaterials(RpWorld *world, RpUVAnim *anim)AnimateAllMaterials591,15287
CreateWorld(void)CreateWorld613,15929
CreateLights(RpWorld *world)CreateLights630,16248
CreateCamera(RpWorld *world)CreateCamera685,17282
DestroyCamera(RwCamera *camera, RpWorld *world)DestroyCamera713,17884
LoadUVAnimDict(const RwChar *filename)LoadUVAnimDict731,18298
LoadWorld(const RwChar *filename)LoadWorld755,18844
LoadClump(const RwChar *filename)LoadClump779,19350
LoadScene(Scene *scene)LoadScene803,19853
InitScene(Scene *scene)InitScene948,23412
DestructScene(Scene *scene)DestructScene954,23488
SceneFunctionCallback(RwBool testEnable)SceneFunctionCallback997,24346
AnimScaleFunctionCallback(RwBool testEnable)AnimScaleFunctionCallback1011,24580
Initialize(void)Initialize1025,24818
InitializeMenu(void)InitializeMenu1052,25362
Initialize3D(void *param)Initialize3D1099,26465
Terminate3D(void)Terminate3D1164,27897
AttachPlugins(void)AttachPlugins1204,28532
DisplayOnScreenInfo(void)DisplayOnScreenInfo1248,29232
Render(void)Render1267,29585
Idle(void)Idle1315,30607
AppEventHandler(RsEvent event, void *param)AppEventHandler1373,31755

examples/uvanim/src/main.h,29
#define MAIN_HMAIN_H31,985

examples/uvanim/src/win/events.c,951
static RwBool RotateCamera = FALSE;RotateCamera39,1082
static RwBool TranslateCamera = FALSE;TranslateCamera40,1119
static RwBool Ctrl;Ctrl42,1161
static RwBool Alt;Alt43,1182
static RwBool Shift;Shift44,1202
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown52,1341
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp64,1583
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown76,1824
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp88,2070
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove100,2316
MouseHandler(RsEvent event, void *param)MouseHandler140,3201
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown192,4330
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp232,5031
KeyboardHandler(RsEvent event, void *param)KeyboardHandler272,5730
AttachInputDevices(void)AttachInputDevices309,6463

examples/uvanim/makefile,104
DEMO = uvanimDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =	$(SRC)/main.c		\CSRC39,1170

examples/hanim3/src/main.c,1453
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1383
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1419
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1478
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1527
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1578
static RwBool FPSOn = FALSE;FPSOn67,1615
static RwInt32 FrameCounter = 0;FrameCounter69,1647
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1681
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1720
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor73,1775
static RpWorld *World = NULL;World75,1832
static RwCamera *Camera = NULL;Camera76,1863
static RtCharset *Charset = NULL;Charset77,1896
static RpLight *AmbientLight = NULL;AmbientLight78,1931
static RpLight *MainLight = NULL;MainLight79,1969
CreateWorld(void)CreateWorld85,2113
CreateAmbientLight(RpWorld *world)CreateAmbientLight103,2437
CreateMainLight(RpWorld *world)CreateMainLight125,2855
CreateCamera(RpWorld *world)CreateCamera163,3719
Initialize(void)Initialize192,4365
InitializeMenu(void)InitializeMenu220,4942
Initialize3D(void *param)Initialize3D241,5335
Terminate3D(void)Terminate3D315,6854
AttachPlugins(void)AttachPlugins376,7839
DisplayOnScreenInfo(void)DisplayOnScreenInfo432,8769
Render(void)Render451,9123
Idle(void)Idle488,9774
AppEventHandler(RsEvent event, void *param)AppEventHandler542,10778

examples/hanim3/src/hanim.h,34
#define HANIM3_HHANIM3_H32,1016

examples/hanim3/src/hanim.c,2240
#define MAXNUMBONES MAXNUMBONES40,1150
typedef struct _BoneMod_BoneMod42,1184
    RwReal  length;length44,1212
    RwReal  width;width45,1233
    RwV3d   angles;angles46,1253
} BoneMod;BoneMod48,1276
static RpClump             *Clump = NULL;Clump50,1290
static RpHAnimHierarchy    *Hierarchy = NULL;Hierarchy51,1333
static RtAnimAnimation    *Anim = NULL;Anim52,1380
static RwUInt32             TotalNumBones = 0;TotalNumBones53,1421
static BoneMod              BoneMods[MAXNUMBONES];BoneMods58,1525
static BoneMod              NullBoneMod = { 1.0f, 1.0f, {0.0f, 0.0f, 0.0f} };NullBoneMod59,1577
static RwReal               AnimSpeed = 1.0f;AnimSpeed64,1687
static RwReal               BaseScale = 1.0f;BaseScale65,1734
static RwInt32              CurrentBone = 3;CurrentBone66,1781
static BoneMod              CurrentBoneMod = { 1.0f, 0.6f, {0.0f, 0.0f, 0.0f} };CurrentBoneMod67,1827
static RwUInt32             NumIm3DVerts = 0;NumIm3DVerts72,1973
static RwIm3DVertex         Im3DVerts[MAXNUMBONES];Im3DVerts73,2020
static RwImVertexIndex      Im3DIndices[MAXNUMBONES << 1];Im3DIndices74,2073
static const RwV3d          Xaxis = {1.0f, 0.0f, 0.0f};Xaxis76,2135
static const RwV3d          Yaxis = {0.0f, 1.0f, 0.0f};Yaxis77,2192
static const RwV3d          Zaxis = {0.0f, 0.0f, 1.0f};Zaxis78,2249
LoadClump(RwChar *filename)LoadClump84,2415
GetChildFrameHierarchy(RwFrame *frame, void *data)GetChildFrameHierarchy114,3082
GetHierarchy(RpClump *clump)GetHierarchy137,3604
SetHierarchyForSkinAtomic(RpAtomic *atomic, void *data)SetHierarchyForSkinAtomic155,3993
LoadAnimFile(const RwChar *file)LoadAnimFile166,4265
RenderCurrentBoneInit(void)RenderCurrentBoneInit185,4642
RenderCurrentBone(void)RenderCurrentBone206,5118
CurrentBoneChangeCB(RwBool justCheck)CurrentBoneChangeCB303,7916
BoneModChangeCB(RwBool justCheck)BoneModChangeCB314,8082
BaseScaleChangeCB(RwBool justCheck)BaseScaleChangeCB325,8244
BoneAllResetCB(RwBool justCheck)BoneAllResetCB346,8674
HAnimMenuOpen(void)HAnimMenuOpen370,9116
HAnimOpen(RpWorld *world)HAnimOpen422,10794
HAnimClose(void)HAnimClose484,12167
HAnimUpdate(RwReal deltaTime)HAnimUpdate505,12552
HAnimRender()HAnimRender626,16632

examples/hanim3/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown42,1200
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1328
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown60,1545
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp67,1674
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove77,1891
MouseHandler(RsEvent event, void *param)MouseHandler87,2104
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown139,3234
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp146,3352
KeyboardHandler(RsEvent event, void *param)KeyboardHandler156,3557
AttachInputDevices(void)AttachInputDevices193,4290

examples/hanim3/makefile,94
DEMO = hanim3DEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =						\CSRC39,1170

examples/picking/src/main.c,1881
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1322
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1358
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1417
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1466
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1517
static RwBool FPSOn = FALSE;FPSOn64,1554
static RwInt32 FrameCounter = 0;FrameCounter66,1586
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1620
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1659
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1714
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis72,1771
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis73,1813
static RwV3d Zaxis = {0.0f, 0.0f, 1.0f};Zaxis74,1855
static RpLight *AmbientLight = NULL;AmbientLight76,1899
static RpLight *MainLight = NULL;MainLight77,1937
static RtCharset *Charset = NULL;Charset78,1972
RpClump *Clump = NULL;Clump80,2009
RpWorld *World = NULL;World81,2033
RwCamera *Camera = NULL;Camera82,2057
CreateWorld(void)CreateWorld90,2196
CreateAmbientLight(RpWorld *world)CreateAmbientLight108,2520
CreateMainLight(RpWorld *world)CreateMainLight128,2856
CreateCamera(RpWorld *world)CreateCamera161,3527
CreateClump(RpWorld *world)CreateClump184,4000
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate238,5222
ClumpTranslateZ(RpClump *clump, RwCamera *camera, RwReal zDelta)ClumpTranslateZ277,6256
Initialize(void)Initialize297,6747
InitializeMenu(void)InitializeMenu324,7294
Initialize3D(void *param)Initialize3D355,7995
Terminate3D(void)Terminate3D439,9728
AttachPlugins(void)AttachPlugins501,10731
DisplayOnScreenInfo(void)DisplayOnScreenInfo534,11227
Render(void)Render553,11581
Idle(void)Idle590,12239
AppEventHandler(RsEvent event, void *param)AppEventHandler642,13207

examples/picking/src/pick.c,1219
{__anonbda728f6010842,1177
        RpIntersection intersection;intersection43,1180
        RpAtomic *pickedAtomic;pickedAtomic44,1218
        RwReal minDistance;minDistance45,1251
AtomicIntersectParams;AtomicIntersectParams47,1283
#define NUMPOINTS NUMPOINTS52,1368
static RpAtomic *PickedAtomic = NULL;PickedAtomic54,1395
static RpAtomicCallBackRender DefaultAtomicRender = NULL;DefaultAtomicRender55,1434
enum PickModes CurrentPickMode = TRIANGLES;CurrentPickMode57,1495
AtomicRenderBoundingBox(RpAtomic *atomic)AtomicRenderBoundingBox64,1646
AtomicRenderBoundingCircle(RpAtomic *atomic)AtomicRenderBoundingCircle137,4012
AtomicRenderCallBack(RpAtomic *atomic)AtomicRenderCallBack189,5335
AtomicSetRenderCallBack(RpAtomic *atomic,AtomicSetRenderCallBack222,6221
ClumpSetRenderCallBack(RpClump *clump)ClumpSetRenderCallBack241,6688
TriangleIntersectionCallback(RpIntersection *intersection __RWUNUSED__,TriangleIntersectionCallback253,6938
AtomicIntersectLine1(RpIntersection *intersection __RWUNUSED__,AtomicIntersectLine1276,7620
AtomicIntersectLine2(RpIntersection *intersection __RWUNUSED__,AtomicIntersectLine2314,8896
PickNearestAtomic(RwV2d *pixel)PickNearestAtomic357,10249

examples/picking/src/pick.h,230
#define PICK_HPICK_H32,1022
enum PickModes PickModes37,1085
    TRIANGLES = 0, TRIANGLES39,1105
    BOUNDINGSPHERE,BOUNDINGSPHERE40,1126
    PICKMODESFORCEENUMSIZEINT = RWFORCEENUMSIZEINTPICKMODESFORCEENUMSIZEINT42,1149

examples/picking/src/main.h,30
#define MAIN_HMAIN_H32,1023

examples/picking/src/win/events.c,876
static RwBool RotateClump = FALSE;RotateClump39,1135
static RwBool TranslateClump = FALSE;TranslateClump40,1171
static RwBool Ctrl = FALSE;Ctrl42,1212
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown49,1356
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp67,1632
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown79,1872
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp91,2063
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove103,2308
MouseHandler(RsEvent event, void *param)MouseHandler132,2890
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown184,4020
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp208,4450
KeyboardHandler(RsEvent event, void *param)KeyboardHandler232,4879
AttachInputDevices(void)AttachInputDevices269,5612

examples/picking/makefile,105
DEMO = pickingDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/lodatom/src/main.c,1801
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1242
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1278
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1337
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1386
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1437
static RwBool FPSOn = FALSE;FPSOn64,1474
static RwInt32 FrameCounter = 0;FrameCounter66,1506
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1540
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1579
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1634
static RtCharset *Charset = NULL;Charset72,1691
static RpWorld *World = NULL;World73,1726
static RpLight *AmbientLight = NULL;AmbientLight74,1757
static RpLight *MainLight = NULL;MainLight75,1795
RpClump *Clump = NULL;Clump77,1832
RwCamera *Camera = NULL;Camera78,1856
RwReal ClumpDistance = 3.0f;ClumpDistance79,1882
CreateWorld(void)CreateWorld87,2025
CreateAmbientLight(RpWorld *world)CreateAmbientLight105,2349
CreateMainLight(RpWorld *world)CreateMainLight125,2685
CreateCamera(RpWorld *world)CreateCamera156,3315
UpdateLocalSpaceCameraPosition(void)UpdateLocalSpaceCameraPosition179,3788
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate206,4389
ClumpTranslateZ(RpClump *clump, RwCamera *camera, RwReal zDelta)ClumpTranslateZ247,5459
Initialize(void)Initialize271,6023
InitializeMenu(void)InitializeMenu298,6559
Initialize3D(void *param)Initialize3D322,7081
Terminate3D(void)Terminate3D402,8697
AttachPlugins(void)AttachPlugins469,9776
DisplayOnScreenInfo(void)DisplayOnScreenInfo505,10331
Render(void)Render537,11284
Idle(void)Idle587,12310
AppEventHandler(RsEvent event, void *param)AppEventHandler631,13083

examples/lodatom/src/lodatom.c,1008
#define LODNUM LODNUM42,1112
static RpAtomicCallBackRender DefaultAtomicRenderCallback;DefaultAtomicRenderCallback44,1134
static RwReal LODRanges[LODNUM] = LODRanges53,1532
RpAtomic *LODAtomic = NULL;LODAtomic58,1629
RwIm3DVertex *Im3DVertexBuffer = NULL;Im3DVertexBuffer63,1728
#define DISPATCHSIZE DISPATCHSIZE69,1865
RwBool WireFrameOn = FALSE;WireFrameOn71,1896
RwV3d LocalSpaceCameraPosition;LocalSpaceCameraPosition77,2058
AllocateIm3DVertexBuffer(RpAtomic *atomic)AllocateIm3DVertexBuffer85,2209
FreeIm3DVertexBuffer(void)FreeIm3DVertexBuffer109,2787
BackfaceCulledTriangle(RpAtomic *atomic __RWUNUSED__,BackfaceCulledTriangle124,3022
RenderWireFrame(RpAtomic *atomic)RenderWireFrame153,3618
AtomicRenderCallBack(RpAtomic *atomic)AtomicRenderCallBack251,6680
LoadDFF(RwChar *file)LoadDFF281,7326
GetAtomic(RpAtomic *atomic, void *data)GetAtomic311,7916
LODAtomicCallback(RpAtomic *atomic)LODAtomicCallback323,8130
CreateLODClump(RpWorld *world)CreateLODClump366,9198

examples/lodatom/src/main.h,29
#define MAIN_HMAIN_H32,940

examples/lodatom/src/lodatom.h,35
#define LODATOM_HLODATOM_H32,946

examples/lodatom/src/win/events.c,873
static RwBool RotateClump = FALSE;RotateClump39,1036
static RwBool TranslateClump = FALSE;TranslateClump40,1072
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown47,1226
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp56,1378
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown68,1618
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp77,1774
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove89,2019
MouseHandler(RsEvent event, void *param)MouseHandler110,2479
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown162,3595
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp169,3713
KeyboardHandler(RsEvent event, void *param)KeyboardHandler179,3918
AttachInputDevices(void)AttachInputDevices216,4637

examples/lodatom/makefile,107
DEMO = lodatomDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/lodatom.c	\CSRC39,1165

examples/world/src/main.c,1523
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1247
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1283
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1342
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1391
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1442
static RwBool FPSOn = FALSE;FPSOn63,1479
static RwInt32 FrameCounter = 0;FrameCounter65,1511
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1545
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1584
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1639
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis71,1696
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis72,1738
static RwCamera *Camera = NULL;Camera74,1782
static RtCharset *Charset = NULL;Charset75,1815
static RpLight *AmbientLight = NULL;AmbientLight77,1852
static RpLight *MainLight = NULL;MainLight78,1890
static RpWorld *World = NULL;World79,1925
CreateAmbientLight(RpWorld *world)CreateAmbientLight87,2069
CreateMainLight(RpWorld *world)CreateMainLight107,2406
CreateCamera(RpWorld *world)CreateCamera140,3078
Initialize(void)Initialize172,3810
InitializeMenu(void)InitializeMenu199,4371
Initialize3D(void *param)Initialize3D218,4737
Terminate3D(void)Terminate3D286,6116
AttachPlugins(void)AttachPlugins341,7012
DisplayOnScreenInfo(void)DisplayOnScreenInfo369,7431
Render(void)Render388,7785
Idle(void)Idle425,8443
AppEventHandler(RsEvent event, void *param)AppEventHandler469,9216

examples/world/src/world.c,366
#define NOV NOV44,1143
#define NOT NOT49,1219
#define NOH NOH54,1274
#define NOP NOP59,1329
static RwV3d VertexList[60]  = VertexList61,1349
static RwUInt16 PentagonList[5 * NOP] = PentagonList130,3680
static RwUInt16 HexagonList[6 * NOH] = HexagonList146,4030
CreateWorldImport(void)CreateWorldImport176,4777
CreateWorld(void)CreateWorld471,14524

examples/world/src/world.h,31
#define WORLD_HWORLD_H32,968

examples/world/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown40,1130
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1319
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown63,1597
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp72,1788
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove85,2067
MouseHandler(RsEvent event, void *param)MouseHandler98,2331
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown150,3461
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp157,3579
KeyboardHandler(RsEvent event, void *param)KeyboardHandler170,3833
AttachInputDevices(void)AttachInputDevices207,4566

examples/world/makefile,103
DEMO = worldDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1083
CSRC =	$(SRC)/main.c		\CSRC39,1163

examples/vshader/src/rainbowD3D8.h,68
DWORD dwRainbowD3D8VertexShader[] = {dwRainbowD3D8VertexShader1,0

examples/vshader/src/main.c,1266
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1189
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1225
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1284
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1333
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1384
static RwBool FPSOn = FALSE;FPSOn63,1421
static RwInt32 FrameCounter = 0;FrameCounter65,1453
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1487
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1526
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1581
RwBool VertexShaderOn = TRUE;VertexShaderOn71,1638
RpWorld *World = NULL;World73,1671
RwCamera *Camera = NULL;Camera74,1695
RtCharset *Charset = NULL;Charset75,1721
CreateWorld(void)CreateWorld83,1862
CreateCamera(RpWorld *world)CreateCamera101,2187
Initialize(void)Initialize127,2846
InitializeMenu(void)InitializeMenu153,3390
Initialize3D(void *param)Initialize3D178,3981
Terminate3D(void)Terminate3D243,5270
AttachPlugins(void)AttachPlugins288,6001
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo316,6420
Render(void)Render335,6786
Idle(void)Idle376,7525
AppEventHandler(RsEvent event, void *param)AppEventHandler435,8614

examples/vshader/src/rainbowD3D9.H,74
const DWORD dwRainbowD3D9VertexShader[] =dwRainbowD3D9VertexShader9,112

examples/vshader/src/rainbowdefs.h,2081
#define VERT_DEFS_HVERT_DEFS_H2,21
#define VSD_REG_POS VSD_REG_POS6,93
#define VSD_REG_NORMAL VSD_REG_NORMAL7,136
#define VSD_REG_TEXCOORDS VSD_REG_TEXCOORDS8,179
#define VSIN_REG_POS VSIN_REG_POS11,282
#define VSIN_REG_NORMAL VSIN_REG_NORMAL12,326
#define VSIN_REG_TEXCOORDS VSIN_REG_TEXCOORDS13,370
#define VSTMP_REG_NORMAL VSTMP_REG_NORMAL17,480
#define VSTMP_REG_HIGHLIGHT VSTMP_REG_HIGHLIGHT18,524
#define VSTMP_REG_EYE VSTMP_REG_EYE19,568
#define VSTMP_REG_POS VSTMP_REG_POS20,612
#define VSCONST_REG_BASE VSCONST_REG_BASE23,687
#define VSCONST_REG_TRANSFORM_OFFSET VSCONST_REG_TRANSFORM_OFFSET25,732
#define VSCONST_REG_TRANSFORM_SIZE VSCONST_REG_TRANSFORM_SIZE26,790
#define VSCONST_REG_WORLD_TRANSFORM_OFFSET VSCONST_REG_WORLD_TRANSFORM_OFFSET28,835
#define VSCONST_REG_WORLD_TRANSFORM_SIZE VSCONST_REG_WORLD_TRANSFORM_SIZE29,940
#define VSCONST_REG_WORLD_INVERSE_OFFSET VSCONST_REG_WORLD_INVERSE_OFFSET31,991
#define VSCONST_REG_WORLD_INVERSE_SIZE VSCONST_REG_WORLD_INVERSE_SIZE32,1106
#define VSCONST_REG_EYEPOS_OFFSET VSCONST_REG_EYEPOS_OFFSET34,1155
#define VSCONST_REG_EYEPOS_SIZE VSCONST_REG_EYEPOS_SIZE35,1282
#define VSCONST_REG_TRANSFORM_X VSCONST_REG_TRANSFORM_X38,1392
#define VSCONST_REG_TRANSFORM_Y VSCONST_REG_TRANSFORM_Y39,1469
#define VSCONST_REG_TRANSFORM_Z VSCONST_REG_TRANSFORM_Z40,1546
#define VSCONST_REG_TRANSFORM_W VSCONST_REG_TRANSFORM_W41,1623
#define VSCONST_REG_WORLD_TRANSFORM_X VSCONST_REG_WORLD_TRANSFORM_X42,1700
#define VSCONST_REG_WORLD_TRANSFORM_Y VSCONST_REG_WORLD_TRANSFORM_Y43,1783
#define VSCONST_REG_WORLD_TRANSFORM_Z VSCONST_REG_WORLD_TRANSFORM_Z44,1866
#define VSCONST_REG_WORLD_TRANSFORM_W VSCONST_REG_WORLD_TRANSFORM_W45,1949
#define VSCONST_REG_WORLD_INVERSE_X VSCONST_REG_WORLD_INVERSE_X46,2032
#define VSCONST_REG_WORLD_INVERSE_Y VSCONST_REG_WORLD_INVERSE_Y47,2113
#define VSCONST_REG_WORLD_INVERSE_Z VSCONST_REG_WORLD_INVERSE_Z48,2194
#define VSCONST_REG_WORLD_INVERSE_W VSCONST_REG_WORLD_INVERSE_W49,2275
#define VSCONST_REG_EYEPOS VSCONST_REG_EYEPOS50,2356

examples/vshader/src/vshader.h,35
#define VSHADER_HVSHADER_H32,915

examples/vshader/src/vshader.c,1403
static RxPipeline   *AtomicVShaderPipe;AtomicVShaderPipe49,1177
static RxXboxAllInOneRenderCallBack DefaultRenderCallback = NULL;DefaultRenderCallback50,1218
RainbowVertexShaderDeclaration[] =RainbowVertexShaderDeclaration53,1301
static DWORD    RainbowVertexShader;RainbowVertexShader61,1561
static RpClump  *Clump = NULL;Clump62,1599
static RpLight  *Light = NULL;Light63,1631
static RwFrame  *LightFrame = NULL;LightFrame64,1663
static RwTexture *texture = NULL;texture70,1772
VertexShaderSetConstantRegisters(RwMatrix *ltm)VertexShaderSetConstantRegisters76,1902
VShaderRenderCallBack(RxXboxResEntryHeader *resEntryHeader, void *object, RwUInt8 type, RwUInt32VShaderRenderCallBack210,6053
AtomicSetVShaderPipeline(RpAtomic *atomic, void *data)AtomicSetVShaderPipeline340,11975
ClumpSetVShaderPipeline(RpClump *clump)ClumpSetVShaderPipeline351,12216
SetUpDFF(void)SetUpDFF360,12435
CreateAtomicPipeline(void)CreateAtomicPipeline418,13782
VShaderOpen(void)VShaderOpen460,14687
VShaderClose(void)VShaderClose516,16042
VShaderUpdate(RwReal delta)VShaderUpdate541,16554
CameraTranslate(RwReal xDelta, RwReal zDelta)CameraTranslate562,17090
static RwReal RotateX = 0.0f;RotateX589,17713
static RwReal RotateY = 0.0f;RotateY590,17744
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump593,17795
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation620,18438

examples/vshader/src/vshaderD3D9.c,1325
static RxPipeline   *AtomicVShaderPipe;AtomicVShaderPipe49,1164
static RxD3D9AllInOneRenderCallBack DefaultRenderCallback = NULL;DefaultRenderCallback50,1205
static void     *RainbowVertexShader = NULL;RainbowVertexShader52,1274
static RpClump  *Clump = NULL;Clump53,1320
static RpLight  *Light = NULL;Light54,1352
static RwFrame  *LightFrame = NULL;LightFrame55,1384
static RwTexture *Texture = NULL;Texture61,1485
VertexShaderSetConstantRegisters(RwMatrix *ltm)VertexShaderSetConstantRegisters67,1622
VShaderRenderCallBack(RwResEntry *repEntry, void *object, RwUInt8 type, RwUInt32 flags)VShaderRenderCallBack142,4150
AtomicSetVShaderPipeline(RpAtomic *atomic, void *data)AtomicSetVShaderPipeline258,8469
ClumpSetVShaderPipeline(RpClump *clump)ClumpSetVShaderPipeline269,8710
SetUpDFF(void)SetUpDFF278,8929
CreateAtomicPipeline(void)CreateAtomicPipeline345,10585
VShaderOpen(void)VShaderOpen387,11490
VShaderClose(void)VShaderClose453,12968
VShaderUpdate(RwReal delta)VShaderUpdate482,13569
CameraTranslate(RwReal xDelta, RwReal zDelta)CameraTranslate503,14105
static RwReal RotateX = 0.0f;RotateX530,14728
static RwReal RotateY = 0.0f;RotateY531,14759
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump534,14810
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation561,15453

examples/vshader/src/vshaderD3D8.c,1397
static RxPipeline   *AtomicVShaderPipe;AtomicVShaderPipe49,1164
static RxD3D8AllInOneRenderCallBack DefaultRenderCallback = NULL;DefaultRenderCallback50,1205
RainbowVertexShaderDeclaration[] =RainbowVertexShaderDeclaration53,1288
static DWORD    RainbowVertexShader = 0;RainbowVertexShader61,1540
static RpClump  *Clump = NULL;Clump62,1582
static RpLight  *Light = NULL;Light63,1614
static RwFrame  *LightFrame = NULL;LightFrame64,1646
static RwTexture *Texture = NULL;Texture70,1747
VertexShaderSetConstantRegisters(RwMatrix *ltm)VertexShaderSetConstantRegisters76,1884
VShaderRenderCallBack(RwResEntry *repEntry, void *object, RwUInt8 type, RwUInt32 flags)VShaderRenderCallBack215,6240
AtomicSetVShaderPipeline(RpAtomic *atomic, void *data)AtomicSetVShaderPipeline318,9988
ClumpSetVShaderPipeline(RpClump *clump)ClumpSetVShaderPipeline329,10229
SetUpDFF(void)SetUpDFF338,10448
CreateAtomicPipeline(void)CreateAtomicPipeline405,12104
VShaderOpen(void)VShaderOpen447,13009
VShaderClose(void)VShaderClose515,14624
VShaderUpdate(RwReal delta)VShaderUpdate543,15180
CameraTranslate(RwReal xDelta, RwReal zDelta)CameraTranslate564,15716
static RwReal RotateX = 0.0f;RotateX591,16339
static RwReal RotateY = 0.0f;RotateY592,16370
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump595,16421
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation622,17064

examples/vshader/src/win/events.c,855
static RwBool Rotate = FALSE;Rotate41,1162
static RwBool TranslateZ = FALSE;TranslateZ42,1193
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1343
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp57,1492
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown70,1733
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp78,1887
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove90,2137
MouseHandler(RsEvent event, void *param)MouseHandler120,2802
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown172,3918
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp179,4036
KeyboardHandler(RsEvent event, void *param)KeyboardHandler189,4241
AttachInputDevices(void)AttachInputDevices226,4974

examples/vshader/makefile,324
DEMO = vshaderDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1091
unsupported:unsupported39,1171
src/rainbow.h : src/rainbow.vshsrc/rainbow.h60,1696
$(SRC)/vshader.c: src/rainbow.h$(SRC)/vshader.c68,1839
CSRC =	$(SRC)/main.c		\CSRC70,1874
CSRC =	$(SRC)/main.c		\CSRC81,2066
CSRC =	$(SRC)/main.c		\CSRC107,2484

examples/imlight/src/imlight.h,610
#define IMLIGHT_HIMLIGHT_H32,943
{__anonacfc612b010339,1029
    LIGHTDIRECTIONAL,LIGHTDIRECTIONAL40,1032
    LIGHTPOINT,LIGHTPOINT41,1055
    LIGHTAMBIENT,LIGHTAMBIENT42,1072
    NUMLIGHTMODES,NUMLIGHTMODES43,1091
    LIGHTENUMFORCEENUMSIZEINT = RWFORCEENUMSIZEINTLIGHTENUMFORCEENUMSIZEINT45,1113
LightEnum;LightEnum47,1168
{__anonacfc612b020352,1225
    SHADEGOURAUD,SHADEGOURAUD53,1228
    SHADEFLAT,SHADEFLAT54,1247
    NUMSHADEMODE,NUMSHADEMODE55,1263
    SHADEMODEENUMFORCEENUMSIZEINT = RWFORCEENUMSIZEINTSHADEMODEENUMFORCEENUMSIZEINT57,1284
ShadeModeEnum;ShadeModeEnum59,1343

examples/imlight/src/main.c,1186
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1197
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1233
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1292
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1341
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1392
static RwBool FPSOn = FALSE;FPSOn61,1429
static RwInt32 FrameCounter = 0;FrameCounter63,1461
static RwInt32 FramesPerSecond = 0;FramesPerSecond64,1495
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor66,1534
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor67,1589
static RtCharset *Charset = NULL;Charset69,1646
RwCamera *Camera = NULL;Camera71,1683
CreateCamera(void)CreateCamera79,1823
Initialize(void)Initialize100,2240
LightModeCallback(RwBool testEnable)LightModeCallback127,2798
InitializeMenu(void)InitializeMenu143,3051
Initialize3D(void *param)Initialize3D186,4121
Terminate3D(void)Terminate3D240,5171
AttachPlugins(void)AttachPlugins273,5664
DisplayOnScreenInfo(void)DisplayOnScreenInfo298,6036
Render(void)Render317,6389
Idle(void)Idle354,7038
AppEventHandler(RsEvent event, void *param)AppEventHandler398,7811

examples/imlight/src/imlight.c,1546
#define SCALELIGHT SCALELIGHT38,1015
#define LIGHTRADIUS LIGHTRADIUS39,1042
#define LIGHTRADIUS2 LIGHTRADIUS240,1071
static RwIm3DVertex *Im3DMeshVertices;Im3DMeshVertices42,1104
static RwMatrix *Im3DMeshMatrix = NULL;Im3DMeshMatrix43,1144
static RwInt32 Im3DMeshNumVertices = 0;Im3DMeshNumVertices44,1185
static RwRGBA SpecularColor = {255, 255, 255, 255};SpecularColor46,1228
static RwRGBA DiffuseColor  = {200,   0,   0, 255};DiffuseColor47,1281
static RwRGBA AmbientColor  = { 70,   0,   0, 255};AmbientColor48,1334
static RwIm3DVertex *Im3DPointLightVertices = NULL;Im3DPointLightVertices50,1389
static RwMatrix *Im3DLightMatrix = NULL;Im3DLightMatrix51,1442
static RwInt32 Im3DPointLightNumVertices = 0;Im3DPointLightNumVertices52,1484
RwInt32 LightMode = LIGHTDIRECTIONAL;LightMode54,1533
RwInt32 ShadeMode = SHADEGOURAUD;ShadeMode55,1572
Im3DMeshRotate(RwReal xAngle, RwReal yAngle)Im3DMeshRotate63,1708
Im3DMeshTranslateZ(RwReal zDelta)Im3DMeshTranslateZ100,2644
Im3DLightRotate(RwReal xAngle, RwReal yAngle)Im3DLightRotate119,3043
Im3DLightTranslateZ(RwReal zDelta)Im3DLightTranslateZ142,3605
Im3DLightTranslateXY(RwReal xDelta, RwReal yDelta)Im3DLightTranslateXY160,4002
Im3DMeshLighting(void)Im3DMeshLighting181,4578
Im3DRender(void)Im3DRender301,8131
Im3DTerminate(void)Im3DTerminate383,10036
Im3DLightReset(void)Im3DLightReset428,10777
Im3DMeshCreate(void)Im3DMeshCreate468,11488
Im3DPointLightCreate(void)Im3DPointLightCreate547,13473
Im3DInitialize(void)Im3DInitialize638,15589

examples/imlight/src/win/events.c,888
static RwBool TransformLight = FALSE;TransformLight39,1035
static RwBool Rotate = FALSE;Rotate41,1076
static RwBool Translate = FALSE;Translate42,1107
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown50,1258
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp59,1405
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown71,1640
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp80,1791
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove92,2030
MouseHandler(RsEvent event, void *param)MouseHandler165,3653
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown217,4782
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp244,5297
KeyboardHandler(RsEvent event, void *param)KeyboardHandler268,5764
AttachInputDevices(void)AttachInputDevices305,6497

examples/imlight/makefile,105
DEMO = imlightDEMO29,1018
RWGDIR = $(CURDIR)/../..RWGDIR34,1088
CSRC =	$(SRC)/main.c		\CSRC39,1168

examples/mipmap/src/main.c,3000
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1182
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1218
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1277
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1326
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1377
static RwBool FPSOn = FALSE;FPSOn61,1414
static RwInt32 FrameCounter = 0;FrameCounter63,1446
static RwInt32 FramesPerSecond = 0;FramesPerSecond64,1480
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor66,1519
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor67,1574
static RpWorld *World = NULL;World69,1631
static RpLight *MainLight = NULL;MainLight70,1662
static RpLight *AmbientLight = NULL;AmbientLight71,1697
static RtCharset *Charset = NULL;Charset72,1735
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis74,1772
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis75,1814
static RwChar MipBlending[64] = RWSTRING("Linear");MipBlending77,1858
static RwChar TexelBlending[64] = RWSTRING("Linear");TexelBlending78,1911
static RwInt32 TextureFilterModeIndex = 5;TextureFilterModeIndex80,1968
static RwInt32 NumMipLevels;NumMipLevels81,2012
static RwReal MipmapKValue = -1.0f;MipmapKValue84,2056
RwCamera *Camera = NULL;Camera87,2103
RpClump *Clump = NULL;Clump88,2129
CreateWorld(void)CreateWorld96,2266
CreateAmbientLight(RpWorld *world)CreateAmbientLight114,2590
CreateMainLight(RpWorld *world)CreateMainLight134,2926
CreateCamera(RpWorld *world)CreateCamera167,3597
MaterialGetNumMipLevels(RpMaterial *material, void *data)MaterialGetNumMipLevels190,4074
AtomicGetNumMipLevels(RpAtomic *atomic, void *data)AtomicGetNumMipLevels203,4333
TextureGetNumMipLevels(RpClump *clump)TextureGetNumMipLevels213,4534
CreateClump(RpWorld *world)CreateClump227,4815
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate276,5862
ClumpTranslateZ(RpClump *clump, RwCamera *camera, RwReal zDelta)ClumpTranslateZ315,6891
Initialize(void)Initialize335,7382
MaterialSetTextureFilterMode(RpMaterial *material, void *data)MaterialSetTextureFilterMode362,7926
AtomicSetTextureFilterMode(RpAtomic *atomic, void *data)AtomicSetTextureFilterMode375,8283
ClumpSetTextureFilterMode(RpClump *clump, RwInt32 modeIndex)ClumpSetTextureFilterMode385,8493
TextureFilterCallback(RwBool testEnable)TextureFilterCallback468,10272
MaterialSetMipmapK(RpMaterial *material, void *data)MaterialSetMipmapK487,10591
AtomicSetMipmapK(RpAtomic *atomic, void *data)AtomicSetMipmapK497,10786
MipmapKValueCallback(RwBool testEnable)MipmapKValueCallback507,10979
InitializeMenu(void)InitializeMenu526,11310
Initialize3D(void *param)Initialize3D569,12467
Terminate3D(void)Terminate3D645,14001
AttachPlugins(void)AttachPlugins707,15003
DisplayOnScreenInfo(void)DisplayOnScreenInfo735,15422
Render(void)Render763,16210
Idle(void)Idle800,16868
AppEventHandler(RsEvent event, void *param)AppEventHandler844,17641

examples/mipmap/src/mipmap.h,33
#define MIPMAP_HMIPMAP_H31,927

examples/mipmap/src/win/events.c,873
static RwBool RotateClump = FALSE;RotateClump39,1022
static RwBool TranslateClump = FALSE;TranslateClump40,1058
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown48,1214
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp57,1366
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown69,1606
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp78,1762
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove90,2007
MouseHandler(RsEvent event, void *param)MouseHandler119,2585
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown171,3715
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp178,3833
KeyboardHandler(RsEvent event, void *param)KeyboardHandler188,4038
AttachInputDevices(void)AttachInputDevices225,4771

examples/mipmap/makefile,104
DEMO = mipmapDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1084
CSRC =	$(SRC)/main.c		\CSRC39,1164

examples/imgformt/src/main.c,1935
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1247
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1283
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1342
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1391
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1442
static RwBool FPSOn = FALSE;FPSOn63,1479
static RwInt32 FrameCounter = 0;FrameCounter65,1511
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1545
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1584
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1639
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis71,1696
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis72,1738
static RpWorld *World = NULL;World74,1782
static RpClump *Clump = NULL;Clump75,1813
static RwCamera *Camera = NULL;Camera76,1844
static RpLight *AmbientLight = NULL;AmbientLight77,1877
static RpLight *MainLight = NULL;MainLight78,1915
static RtCharset *Charset = NULL;Charset79,1950
static RwChar TestedTGAReadWrite = FALSE;TestedTGAReadWrite81,1987
static RwChar TestedTGAMessage[4][256];TestedTGAMessage82,2030
CreateWorld(void)CreateWorld89,2182
CreateCamera(RpWorld *world)CreateCamera107,2507
CreateAmbientLight(RpWorld *world)CreateAmbientLight130,2982
CreateMainLight(RpWorld *world)CreateMainLight149,3316
CreateClump(RpWorld *world)CreateClump182,3987
Initialize(void)Initialize233,5208
TestTGAImageReadWriteCallback(RwBool testEnable)TestTGAImageReadWriteCallback260,5752
InitializeMenu(void)InitializeMenu359,8261
Initialize3D(void *param)Initialize3D383,8794
Terminate3D(void)Terminate3D469,10576
AttachPlugins(void)AttachPlugins533,11601
DisplayOnScreenInfo(void)DisplayOnScreenInfo561,12020
Render(void)Render592,12656
UpdateClump(RwReal deltaTime)UpdateClump629,13313
Idle(void)Idle653,13840
AppEventHandler(RsEvent event, void *param)AppEventHandler707,14844

examples/imgformt/src/tga.c,1886
#define MAX_ID_LENGTH MAX_ID_LENGTH38,1040
#define GETBYTE(GETBYTE40,1071
#define GETLITTLERWINT16(GETLITTLERWINT1646,1191
#define GETLITTLERWINT16(GETLITTLERWINT1652,1325
#define GETBIGRWINT16(GETBIGRWINT1655,1464
#define GETPIXELDATA(GETPIXELDATA59,1632
typedef struct TGAHeader TGAHeader;TGAHeader67,1819
struct TGAHeaderTGAHeader68,1856
    RwUInt8             idLength;idLength70,1877
    RwUInt8             colorMapType;colorMapType71,1912
    RwUInt8             imageType;imageType72,1951
    RwUInt16            firstEntryIndex;firstEntryIndex73,1987
    RwUInt16            colorMapLength;colorMapLength74,2029
    RwUInt8             colorMapEntrySize;colorMapEntrySize75,2070
    RwUInt16            xOriginImage;xOriginImage76,2114
    RwUInt16            yOriginImage;yOriginImage77,2153
    RwUInt16            imageWidth;imageWidth78,2192
    RwUInt16            imageHeight;imageHeight79,2229
    RwUInt8             pixelDepth;pixelDepth80,2267
    RwUInt8             imageDescriptor;imageDescriptor81,2304
typedef struct RLE24bitPacket RLE24bitPacket;RLE24bitPacket84,2352
struct RLE24bitPacketRLE24bitPacket85,2399
    RwUInt8             pixelCount;pixelCount87,2425
    RwUInt8             pixelData[3];pixelData88,2462
tgaImageReadRLECompressed24bitRGB(TGAHeader header, RwStream * stream)tgaImageReadRLECompressed24bitRGB95,2614
tgaImageReadUncompressed24bitRGB(TGAHeader header, RwStream * stream)tgaImageReadUncompressed24bitRGB178,4728
ImageReadTGA(const RwChar * imageName)ImageReadTGA229,6058
tgaImageWriteUncompressed24bitRGB(RwImage * image, TGAHeader header,tgaImageWriteUncompressed24bitRGB327,9065
tgaImageWriteRLECompressed24bitRGB(RwImage * image, TGAHeader header,tgaImageWriteRLECompressed24bitRGB373,10213
ImageWriteTGA(RwImage * image, const RwChar * imageName)ImageWriteTGA495,13772

examples/imgformt/src/tga.h,27
#define TGA_HTGA_H32,987

examples/imgformt/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1155
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp50,1347
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown64,1628
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp73,1822
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove86,2104
MouseHandler(RsEvent event, void *param)MouseHandler99,2371
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown151,3501
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp161,3708
KeyboardHandler(RsEvent event, void *param)KeyboardHandler171,3913
AttachInputDevices(void)AttachInputDevices205,4573

examples/imgformt/makefile,106
DEMO = imgformtDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/impick/src/main.c,1493
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH51,1208
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT52,1244
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1303
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1352
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW60,1403
{__anon4d214dcc010363,1454
    MESHCUBE,MESHCUBE64,1457
    MESHGRID,MESHGRID65,1472
    NUMMESHMODES,NUMMESHMODES66,1487
    MESHMODEENUMFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMESHMODEENUMFORCEENUMSIZEINT68,1508
MeshModeEnum;MeshModeEnum70,1566
static RwBool FPSOn = FALSE;FPSOn72,1583
static RwInt32 FrameCounter = 0;FrameCounter74,1615
static RwInt32 FramesPerSecond = 0;FramesPerSecond75,1649
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor77,1688
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor78,1743
static RtCharset *Charset = NULL;Charset80,1800
static RwInt32 MeshMode = MESHCUBE;MeshMode82,1837
RwCamera *Camera = NULL;Camera84,1876
CreateCamera(void)CreateCamera92,2016
Initialize(void)Initialize113,2434
MeshModeCallback(RwBool testEnable)MeshModeCallback140,2991
InitializeMenu(void)InitializeMenu172,3485
Initialize3D(void *param)Initialize3D202,4198
Terminate3D(void)Terminate3D264,5452
AttachPlugins(void)AttachPlugins297,5946
DisplayOnScreenInfo(void)DisplayOnScreenInfo322,6320
Render(void)Render341,6674
Idle(void)Idle378,7324
AppEventHandler(RsEvent event, void *param)AppEventHandler430,8292

examples/impick/src/impick.c,1166
#define GRIDSIZE GRIDSIZE38,1025
static RwRGBA PickedColor = {255, 0, 0, 255};PickedColor40,1049
static RwRGBA NonPickedColor = {255, 255, 0, 255};NonPickedColor41,1096
static RwInt32 NumVertices = 0;NumVertices43,1150
static RwInt32 NumIndices = 0;NumIndices44,1183
static RwIm3DVertex *Im3DVertices = NULL;Im3DVertices46,1217
static RwImVertexIndex *Im3DLineIndices = NULL;Im3DLineIndices47,1260
static RwMatrix *Im3DMatrix = NULL;Im3DMatrix49,1311
static RwIm3DVertex *PickedIm3DVertex = NULL;PickedIm3DVertex51,1350
static RwReal PickedCameraVertexZ;PickedCameraVertexZ52,1397
Im3DClearData(void)Im3DClearData60,1541
Im3DCreateCube(void)Im3DCreateCube89,1997
Im3DCreateGrid(void)Im3DCreateGrid173,3793
Im3DResetPickedVertexColor(void)Im3DResetPickedVertexColor256,5809
Im3DPickVertices(RwV2d *screenPos)Im3DPickVertices273,6168
Im3DSetVertexXY(RwV2d *screenPos)Im3DSetVertexXY367,8887
Im3DRotate(RwReal xAngle, RwReal yAngle)Im3DRotate418,10386
Im3DTranslateZ(RwReal zDelta)Im3DTranslateZ455,11298
Im3DRender(void)Im3DRender474,11691
Im3DInitialize(void)Im3DInitialize512,12688
Im3DTerminate(void)Im3DTerminate557,13655

examples/impick/src/impick.h,33
#define IMPICK_HIMPICK_H32,951

examples/impick/src/win/events.c,923
static RwBool Ctrl = FALSE;Ctrl38,1044
static RwBool Rotate = FALSE;Rotate40,1075
static RwBool Translate = FALSE;Translate41,1106
static RwBool VertexTranslateXY = FALSE;VertexTranslateXY43,1142
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown51,1301
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp67,1559
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown86,1916
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp98,2102
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove110,2342
MouseHandler(RsEvent event, void *param)MouseHandler144,2968
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown196,4098
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp223,4604
KeyboardHandler(RsEvent event, void *param)KeyboardHandler247,5060
AttachInputDevices(void)AttachInputDevices284,5793

examples/impick/makefile,104
DEMO = impickDEMO29,1018
RWGDIR = $(CURDIR)/../..RWGDIR34,1087
CSRC =	$(SRC)/main.c		\CSRC39,1167

examples/subrast/src/subrast.c,496
RwCamera *Camera = NULL;Camera43,1114
RwCamera *SubCameras[NUMOFSUBCAMERAS] = {NULL, NULL, NULL, NULL}; SubCameras44,1140
CameraSetViewWindow(RwCamera *camera, RwReal width, RwReal height, RwReal vw)CameraSetViewWindow52,1316
UpdateSubRasters(RwCamera *mainCamera, RwInt32 mainWidth, RwInt32 mainHeight)UpdateSubRasters88,2115
PositionSubCameras(void)PositionSubCameras170,4350
CreateCameras(RpWorld *world)CreateCameras222,5605
DestroyCameras(RpWorld *world)DestroyCameras275,6869

examples/subrast/src/main.c,1597
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH51,1226
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT52,1262
static RwBool FPSOn = FALSE;FPSOn54,1301
static RwInt32 FrameCounter = 0;FrameCounter56,1333
static RwInt32 FramesPerSecond = 0;FramesPerSecond57,1367
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor59,1406
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor60,1461
static RwRGBA BorderColor     = {128, 128, 128,   0};BorderColor61,1516
static RpClump *Clump = NULL;Clump63,1573
static RpLight *MainLight = NULL;MainLight64,1604
static RpLight *AmbientLight = NULL;AmbientLight65,1639
static RpWorld *World = NULL;World67,1679
static RtCharset *Charset = NULL;Charset68,1710
static const RwChar *SubCameraCaption[NUMOFSUBCAMERAS] = SubCameraCaption70,1747
RwV3d XAxis = {1.0f, 0.0f, 0.0f};XAxis78,1969
RwV3d YAxis = {0.0f, 1.0f, 0.0f};YAxis79,2004
CreateWorld(void)CreateWorld87,2152
CreateAmbientLight(RpWorld *world)CreateAmbientLight105,2476
CreateMainLight(RpWorld *world)CreateMainLight125,2812
CreateClump(RpWorld *world)CreateClump158,3482
RotateClump(RwReal xAngle, RwReal yAngle)RotateClump203,4476
Initialize(void)Initialize242,5448
InitializeMenu(void)InitializeMenu269,5991
Initialize3D(void *param)Initialize3D290,6392
Terminate3D(void)Terminate3D365,7899
AttachPlugins(void)AttachPlugins423,8821
DisplayOnScreenInfo(void)DisplayOnScreenInfo451,9240
Render(void)Render509,10770
Idle(void)Idle565,11910
AppEventHandler(RsEvent event, void *param)AppEventHandler609,12683

examples/subrast/src/subrast.h,253
#define SUBRAST_HSUBRAST_H32,972
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW37,1038
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO40,1095
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO42,1144
#define NUMOFSUBCAMERAS NUMOFSUBCAMERAS45,1195

examples/subrast/src/win/events.c,817
static RwBool LeftButtonDown = FALSE;LeftButtonDown39,1064
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown46,1218
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp54,1371
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown67,1616
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp73,1743
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove83,1960
MouseHandler(RsEvent event, void *param)MouseHandler98,2266
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown150,3396
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp160,3603
KeyboardHandler(RsEvent event, void *param)KeyboardHandler170,3808
AttachInputDevices(void)AttachInputDevices207,4541

examples/subrast/makefile,105
DEMO = subrastDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/ptank2/src/ptank.c,1313
static RwMatrix *PTankMatrix = NULL;PTankMatrix42,1230
static RwV3d *NormalsList = NULL;NormalsList43,1268
static RwV3d *PositionsList = NULL;PositionsList44,1303
RwInt32 PTankNumVertices = 0;PTankNumVertices45,1340
RwBool VtxAlphaOn = FALSE;VtxAlphaOn47,1373
RwInt32 SrcBlendID;SrcBlendID49,1403
RwInt32 DestBlendID;DestBlendID50,1424
#define DONUTNUMSIDES DONUTNUMSIDES53,1472
#define DONUTNUMRINGS DONUTNUMRINGS54,1503
#define DONUTRADIUSRING DONUTRADIUSRING55,1534
#define DONUTRADIUSSIDES DONUTRADIUSSIDES56,1567
static RwRGBA SpecularColor = { 80, 48, 0, 255};SpecularColor58,1603
static RwRGBA DiffuseColor  = { 8,  4, 000, 255};DiffuseColor59,1653
static RwRGBA AmbientColor  = { 0,   0, 0, 255};AmbientColor60,1704
static RwMatrix *PTankLightMatrix = NULL;PTankLightMatrix62,1756
static RpAtomic *pTank = NULL;pTank64,1801
static RwFrame *frame = NULL;frame65,1833
PTankRotate(RwReal xAngle, RwReal yAngle)PTankRotate71,1968
PTankTranslateZ(RwReal zDelta)PTankTranslateZ109,2895
PTankLightRotate(RwReal xAngle, RwReal yAngle)PTankLightRotate128,3295
PTankLighting(void)PTankLighting152,3871
PTankRender(void)PTankRender247,7066
PTankTerminate(void)PTankTerminate289,7985
PTankCreate(void)PTankCreate336,8739
PTankInitialize(void)PTankInitialize435,11227

examples/ptank2/src/main.c,1407
#define WIDE_SCREENxWIDE_SCREENx54,1392
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1416
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1452
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1511
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1560
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1611
static RwBool FPSOn = FALSE;FPSOn67,1648
static RwInt32 FrameCounter = 0;FrameCounter69,1680
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1714
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1753
static RwRGBA BackgroundColor = { 040,  020,  040,   128};BackgroundColor73,1808
static RtCharset *Charset = NULL;Charset75,1870
static RwFrame *CamBaseFrame = NULL;CamBaseFrame77,1907
RwCamera *Camera = NULL;Camera79,1947
RpLight *Light = NULL;Light80,1973
RpWorld *World = NULL;World81,1997
CreateWorld(void)CreateWorld88,2132
CreateMainLight(RpWorld *world)CreateMainLight105,2454
CreateCamera(RpWorld *world)CreateCamera146,3368
Initialize(void)Initialize182,4206
InitializeMenu(void)InitializeMenu210,4745
Initialize3D(void *param)Initialize3D234,5228
Terminate3D(void)Terminate3D306,6604
AttachPlugins(void)AttachPlugins358,7410
DisplayOnScreenInfo(void)DisplayOnScreenInfo392,7944
Render(void)Render412,8299
Idle(void)Idle457,9097
AppEventHandler(RsEvent event, void *param)AppEventHandler501,9852

examples/ptank2/src/ptank.h,32
#define ptank_Hptank_H34,1114

examples/ptank2/src/win/events.c,852
static RwBool LButton = FALSE;LButton42,1230
static RwBool RButton = FALSE;RButton43,1262
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1407
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp59,1617
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown74,1917
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp84,2129
HandleMouseMove(RsMouseStatus * mouseStatus __RWUNUSED__)HandleMouseMove98,2428
MouseHandler(RsEvent event, void *param)MouseHandler109,2644
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown161,3774
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp234,5132
KeyboardHandler(RsEvent event, void *param)KeyboardHandler247,5386
AttachInputDevices(void)AttachInputDevices284,6119

examples/ptank2/makefile,104
DEMO = ptank2DEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1084
CSRC =	$(SRC)/main.c		\CSRC39,1164

examples/imagetex/src/main.c,2443
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1386
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1422
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1481
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1530
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1581
static RwBool FPSOn = FALSE;FPSOn64,1618
static RwInt32 FrameCounter = 0;FrameCounter66,1650
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1684
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1723
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1778
static RwCamera *Camera = NULL;Camera72,1835
static RtCharset *Charset = NULL;Charset73,1868
static RwTexture *Texture = NULL;Texture75,1905
static RwImage *Image = NULL;Image76,1940
static RwInt32 CurrentImage = 0;CurrentImage77,1971
static RwReal Scale = 1.0f;Scale78,2005
typedef struct RasterPixelFormat RasterPixelFormat;RasterPixelFormat83,2090
struct RasterPixelFormatRasterPixelFormat84,2143
    RwRasterFormat pixelFormat;pixelFormat86,2172
    RwChar description[16];description87,2205
static  RasterPixelFormat RasterPixelFormats[] =RasterPixelFormats90,2240
#define NUM_RASTER_PIXEL_FORMATS NUM_RASTER_PIXEL_FORMATS144,3656
typedef struct RasterFormatMask RasterFormatMask;RasterFormatMask150,3805
struct RasterFormatMaskRasterFormatMask151,3856
    RwRasterFormat mask;mask153,3884
    RwChar description[16];description154,3910
static RasterFormatMask RasterFormatMasks[] =RasterFormatMasks158,3947
#define NUM_RASTER_MASKS NUM_RASTER_MASKS184,4667
#define NUM_IMAGES NUM_IMAGES190,4810
static const RwChar *ImageFileNames[NUM_IMAGES * 2] = ImageFileNames192,4836
CreateCamera(void)CreateCamera212,5443
Initialize(void)Initialize222,5656
UpdateTextureDisplayScale(void)UpdateTextureDisplayScale249,6194
ImageLoad(RwInt32 imageNum)ImageLoad306,7560
CurrentImageCallback(RwBool testEnable)CurrentImageCallback374,8918
InitializeMenu(void)InitializeMenu388,9094
Initialize3D(void *param)Initialize3D413,9659
Terminate3D(void)Terminate3D462,10593
AttachPlugins(void)AttachPlugins500,11106
RegisterImageFormats(void)RegisterImageFormats525,11481
TextureRender(void)TextureRender545,11867
DisplayOnScreenInfo(void)DisplayOnScreenInfo625,14691
Render(void)Render818,20926
Idle(void)Idle859,21652
AppEventHandler(RsEvent event, void *param)AppEventHandler903,22425

examples/imagetex/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown42,1274
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp48,1400
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown59,1617
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp65,1744
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove75,1961
MouseHandler(RsEvent event, void *param)MouseHandler85,2174
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown137,3290
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp144,3408
KeyboardHandler(RsEvent event, void *param)KeyboardHandler154,3613
AttachInputDevices(void)AttachInputDevices191,4332

examples/imagetex/makefile,106
DEMO = imagetexDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/patch/src/main.c,1631
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH54,1374
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT55,1410
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1469
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1518
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW63,1569
static RwBool       FPSOn = FALSE;FPSOn65,1606
static RwInt32      FrameCounter = 0;FrameCounter67,1644
static RwInt32      FramesPerSecond = 0;FramesPerSecond68,1683
static RwRGBA       ForegroundColor = { 200, 200, 200, 255 };ForegroundColor70,1727
static RwRGBA       BackgroundColor = { 64, 64, 64, 0 };BackgroundColor71,1790
static RpWorld     *World = NULL;World73,1850
static RpLight     *MainLight = NULL;MainLight74,1885
static RwCamera    *Camera = NULL;Camera75,1924
static RtCharset   *Charset = NULL;Charset76,1960
static PatchState   patchState =patchState78,1999
CreateWorld(void)CreateWorld86,2196
CreateMainLight(RpWorld * world)CreateMainLight103,2546
CreateCamera(RpWorld * world)CreateCamera136,3233
Initialize(void)Initialize160,3755
InitializeMenu(void)InitializeMenu186,4300
static RpLight     *AmbientLight = NULL;AmbientLight202,4591
CreateAmbientLight(RpWorld * world)CreateAmbientLight208,4746
Initialize3D(void *param)Initialize3D229,5141
Terminate3D(void)Terminate3D322,7160
AttachPlugins(void)AttachPlugins404,8501
DisplayOnScreenInfo(RwCamera * camera __RWUNUSED__)DisplayOnScreenInfo443,9168
Render(void)Render461,9557
UpdateClump(RwReal timeStep)UpdateClump498,10237
Idle(void)Idle521,10793
AppEventHandler(RsEvent event, void *param)AppEventHandler574,11811

examples/patch/src/patch.c,1804
#define ZERO ZERO40,1186
#define HALF HALF41,1231
#define RECIPSQRT3 RECIPSQRT342,1276
#define HALFSQRT3 HALFSQRT343,1321
#define ONE ONE44,1366
#define MARGIN MARGIN45,1411
#define UNUSED UNUSED46,1456
typedef struct MaterialBundle MaterialBundle;MaterialBundle48,1491
struct MaterialBundleMaterialBundle49,1538
    RwSurfaceProperties surfProp;surfProp51,1564
    RwTexture          *quadTexture;quadTexture52,1599
    RwTexture          *triangleTexture;triangleTexture53,1637
    RwTexture          *normalTexture;normalTexture54,1679
    RpMaterial         *quadMaterial;quadMaterial55,1719
    RpMaterial         *triangleMaterial;triangleMaterial56,1758
    RpMaterial         *normalMaterial;normalMaterial57,1801
MaterialBundleDestructor(MaterialBundle * bundle)MaterialBundleDestructor62,1863
MaterialBundleConstructor(MaterialBundle * bundle)MaterialBundleConstructor117,3267
static const RpQuadPatch QuadpotPatch[] = {QuadpotPatch186,5630
#define QuadpotPatchCount QuadpotPatchCount244,8505
#define TEASCALE TEASCALE247,8597
static const RwV3d  QuadpotVertex[] = {QuadpotVertex249,8623
#define QuadpotVertexCount QuadpotVertexCount558,27440
static RtBezierMatrix triSample = {triSample561,27535
PrimePatchMesh(MaterialBundle * bundle, RpPatchMesh * patchMesh)PrimePatchMesh582,28436
DestroyPatchMesh(PatchState * patchState)DestroyPatchMesh778,34843
#define RwV3dAddScaled(RwV3dAddScaled798,35250
#define RwV3dSubScaled(RwV3dSubScaled807,35621
#define  AXIAL AXIAL816,35992
#define  RADIAL RADIAL817,36028
V3dAtRightAngles(RwV3d * right, RwV3d * at)V3dAtRightAngles820,36074
PatchControlPointGeometry(PatchState * patchState,PatchControlPointGeometry871,37257
CreatePatchMesh(PatchState * patchState)CreatePatchMesh1024,43270

examples/patch/src/patch.h,203
#define _PATCH_H_PATCH_H2,26
typedef struct PatchState PatchState;PatchState4,46
struct PatchStatePatchState5,85
    RpClump            *Clump;Clump7,107
    RpPatchMesh        *Mesh;Mesh8,139

examples/patch/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1212
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp48,1340
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown58,1555
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp65,1684
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove75,1901
MouseHandler(RsEvent event, void *param)MouseHandler85,2114
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown137,3244
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp147,3451
KeyboardHandler(RsEvent event, void *param)KeyboardHandler157,3656
AttachInputDevices(void)AttachInputDevices194,4389

examples/patch/makefile,93
DEMO = patchDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1083
CSRC =						\CSRC39,1163

examples/hanimkey/src/main.c,1453
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1354
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1390
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1449
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1498
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1549
static RwBool FPSOn = FALSE;FPSOn67,1586
static RwInt32 FrameCounter = 0;FrameCounter69,1618
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1652
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1691
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor73,1746
static RpWorld *World = NULL;World75,1803
static RwCamera *Camera = NULL;Camera76,1834
static RtCharset *Charset = NULL;Charset77,1867
static RpLight *AmbientLight = NULL;AmbientLight78,1902
static RpLight *MainLight = NULL;MainLight79,1940
CreateWorld(void)CreateWorld85,2084
CreateAmbientLight(RpWorld *world)CreateAmbientLight103,2408
CreateMainLight(RpWorld *world)CreateMainLight125,2826
CreateCamera(RpWorld *world)CreateCamera163,3690
Initialize(void)Initialize192,4336
InitializeMenu(void)InitializeMenu220,4919
Initialize3D(void *param)Initialize3D241,5312
Terminate3D(void)Terminate3D315,6831
AttachPlugins(void)AttachPlugins376,7816
DisplayOnScreenInfo(void)DisplayOnScreenInfo432,8750
Render(void)Render455,9273
Idle(void)Idle492,9924
AppEventHandler(RsEvent event, void *param)AppEventHandler546,10928

examples/hanimkey/src/keyframe.c,1029
#define EPSILON EPSILON38,1084
HAnimRotKeyFrameToMatrix(void *mtx, void *voidIFrame)HAnimRotKeyFrameToMatrix44,1215
HAnimRotKeyFrameBlend(void *voidOut, void *voidIn1, void *voidIn2, RwReal alpha)HAnimRotKeyFrameBlend62,1677
HAnimRotKeyFrameInterpolate(void *voidOut, void *voidIn1, void *voidIn2, HAnimRotKeyFrameInterpolate126,3727
HAnimRotKeyFrameStreamWrite(const RtAnimAnimation *animation, RwStream *stream)HAnimRotKeyFrameStreamWrite147,4515
HAnimRotKeyFrameStreamRead(RwStream *stream, RtAnimAnimation *animation)HAnimRotKeyFrameStreamRead183,5512
HAnimRotKeyFrameStreamGetSize(const RtAnimAnimation *animation)HAnimRotKeyFrameStreamGetSize222,6565
HAnimRotKeyFrameMulRecip(void *voidAnimFrame, void *voidStartFrame)HAnimRotKeyFrameMulRecip234,6894
HAnimRotKeyFrameAdd(void *voidOut, void *voidIn1, void *voidIn2)HAnimRotKeyFrameAdd255,7570
HAnimRotKeyFrameRegister(void)HAnimRotKeyFrameRegister275,8193
HAnimExtractRotAnimFromStdAnim(RtAnimAnimation *stdAnim)HAnimExtractRotAnimFromStdAnim307,9279

examples/hanimkey/src/hanim.h,33
#define HANIM4_HHANIM4_H32,987

examples/hanimkey/src/keyframe.h,633
#define KEYFRAME_HKEYFRAME_H32,992
#define HANIMROTKEYFRAMEID HANIMROTKEYFRAMEID39,1102
typedef struct HAnimRotKeyFrame  HAnimRotKeyFrame;HAnimRotKeyFrame44,1228
struct HAnimRotKeyFrameHAnimRotKeyFrame45,1280
    HAnimRotKeyFrame   *prevFrame;prevFrame47,1308
    RwReal              time;time48,1344
    RtQuat              q;q49,1375
typedef struct HAnimRotInterpFrame  HAnimRotInterpFrame;HAnimRotInterpFrame52,1409
struct HAnimRotInterpFrameHAnimRotInterpFrame53,1467
    HAnimRotKeyFrame   *keyFrame1;keyFrame155,1498
    HAnimRotKeyFrame   *keyFrame2;keyFrame256,1534
    RtQuat              q;q57,1570

examples/hanimkey/src/hanim.c,1759
#define SkinGetSkinToBoneMatrix(SkinGetSkinToBoneMatrix36,1057
#define SkinGetBoneToSkinMatrix(SkinGetBoneToSkinMatrix45,1484
#define MAXNUMBONES MAXNUMBONES60,2000
typedef struct BoneTranslation BoneTranslation;BoneTranslation62,2034
struct BoneTranslationBoneTranslation63,2083
    RwUInt32            parent;parent65,2110
    RwV3d               offset;offset66,2143
static RpClump     *Clump = NULL;Clump69,2182
static RpSkin      *Skin = NULL;Skin70,2217
static RpHAnimHierarchy *Hierarchy = NULL;Hierarchy71,2251
static RtAnimAnimation *Anim = NULL;Anim72,2295
static RtAnimAnimation *Anim2 = NULL;Anim273,2333
static RwUInt32     TotalNumBones = 0;TotalNumBones75,2374
static BoneTranslation BoneTranslations[MAXNUMBONES];BoneTranslations76,2414
static RwBool       TranslateBones = FALSE;TranslateBones77,2469
static RwBool       Anim2Saved = FALSE;Anim2Saved79,2516
static const RwV3d  Yaxis = { 0.0f, 1.0f, 0.0f };Yaxis81,2559
SkinAtomicSetHierarchy(RpAtomic * atomic, void *data)SkinAtomicSetHierarchy87,2720
LoadClump(RwChar * filename)LoadClump103,3125
LoadAnimFile(const RwChar * file)LoadAnimFile133,3820
SaveAnimFile(RtAnimAnimation * anim, const RwChar * file)SaveAnimFile152,4199
GetChildFrameHierarchy(RwFrame * frame, void *data)GetChildFrameHierarchy171,4620
GetHierarchy(RpClump * clump)GetHierarchy193,5142
SkinGetBonePositions(RpSkin * skin)SkinGetBonePositions210,5542
LoadAnimCB(RwBool justCheck)LoadAnimCB285,7652
SaveAnimCB(RwBool justCheck)SaveAnimCB310,8125
HAnimMenuOpen(void)HAnimMenuOpen325,8405
HAnimOpen(RpWorld * world)HAnimOpen343,8939
HAnimClose(void)HAnimClose408,10522
HAnimUpdate(RwReal deltaTime)HAnimUpdate435,11002
HAnimRender(void)HAnimRender472,12075

examples/hanimkey/src/win/events.c,774
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown42,1171
HandleLeftButtonUp(RsMouseStatus *mouseStatus  __RWUNUSED__)HandleLeftButtonUp49,1299
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown60,1517
HandleRightButtonUp(RsMouseStatus *mouseStatus  __RWUNUSED__)HandleRightButtonUp67,1646
HandleMouseMove(RsMouseStatus *mouseStatus  __RWUNUSED__)HandleMouseMove77,1864
MouseHandler(RsEvent event, void *param)MouseHandler87,2078
HandleKeyDown(RsKeyStatus *keyStatus  __RWUNUSED__)HandleKeyDown139,3208
HandleKeyUp(RsKeyStatus *keyStatus  __RWUNUSED__)HandleKeyUp146,3327
KeyboardHandler(RsEvent event, void *param)KeyboardHandler156,3533
AttachInputDevices(void)AttachInputDevices193,4266

examples/hanimkey/makefile,106
DEMO = hanimkeyDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC40,1174

examples/memhints/src/main.c,2240
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1207
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1243
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1302
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1351
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1402
static RwBool FPSOn = FALSE;FPSOn63,1439
static RwInt32 FrameCounter = 0;FrameCounter65,1471
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1505
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1544
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1599
static RwUInt32 RwMatrixHeapId;RwMatrixHeapId71,1656
static RwUInt32 ResizableHeapId;ResizableHeapId72,1689
static RwUInt32 FunctionHeapId;FunctionHeapId73,1723
static RwUInt32 FrameHeapId;FrameHeapId74,1756
static RwUInt32 EventHeapId;EventHeapId75,1786
static RwUInt32 GlobalHeapId;GlobalHeapId76,1816
RwMemoryFunctions OrgMemFuncs;OrgMemFuncs78,1849
RpWorld *World = NULL;World80,1883
RwCamera *Camera = NULL;Camera81,1907
RtCharset *Charset = NULL;Charset82,1933
RwReal CameraPitchRate      = 0.0f;CameraPitchRate85,1981
RwReal CameraTurnRate       = 0.0f;CameraTurnRate86,2018
RwReal CameraMaxSpeed       = 15.0f;CameraMaxSpeed87,2055
RwReal CameraSpeed          = 0.0f;CameraSpeed88,2093
RwReal CameraStrafeSpeed    = 0.0f;CameraStrafeSpeed89,2130
CreateWorld(void)CreateWorld95,2276
CreateCamera(RpWorld *world)CreateCamera132,3079
Initialize(void)Initialize155,3551
InitializeMenu(void)InitializeMenu182,4092
Initialize3D(void *param)Initialize3D201,4458
Terminate3D(void)Terminate3D259,5609
AttachPlugins(void)AttachPlugins310,6599
DisplayOnScreenInfo(void)DisplayOnScreenInfo338,7018
CameraUpdate(RwReal deltaTime)CameraUpdate357,7374
Render(void)Render395,8660
Idle(void)Idle436,9432
GetHeap(RwUInt32 hint)GetHeap493,10478
MemHintMalloc(size_t size, RwUInt32 hint)MemHintMalloc553,11844
MemHintFree(void *mem)MemHintFree569,12136
MemHintRealloc(void *orgMem, size_t newSize, RwUInt32 hint)MemHintRealloc579,12297
MemHintCalloc(size_t numObj, size_t sizeObj, RwUInt32 hint)MemHintCalloc595,12622
AppEventHandler(RsEvent event, void *param)AppEventHandler611,12946

examples/memhints/src/memheap.h,1131
#define MEMHEAP_HMEMHEAP_H32,931
enum MemHeapBlockFlagsMemHeapBlockFlags36,993
    MEMHEAP_BLOCKUSED = 1MEMHEAP_BLOCKUSED38,1020
typedef enum MemHeapBlockFlags MemHeapBlockFlags;MemHeapBlockFlags40,1051
typedef struct MemHeapHeader MemHeapHeader;MemHeapHeader42,1104
typedef struct MemHeapBlockHeader MemHeapBlockHeader;MemHeapBlockHeader43,1149
struct MemHeapHeaderMemHeapHeader45,1206
    MemHeapBlockHeader *firstBlock;       /* First block in heap list */firstBlock47,1231
    MemHeapBlockHeader *firstFreeBlock;   /* First free block */firstFreeBlock48,1305
struct MemHeapBlockHeaderMemHeapBlockHeader51,1377
    MemHeapHeader           *heap;  /* Pointer to heap header */heap53,1407
    MemHeapBlockHeader      *next;  /* Pointer to next block in heap list */next54,1473
    MemHeapBlockHeader      *prev;  /* Pointer to prev block in heap list */prev55,1551
    RwUInt32                size;   /* Size of this heap block */size56,1629
    MemHeapBlockFlags       flags;  /* Heap block flags */flags57,1696
    RwUInt32                pad[3]; /* Align this structure to 32 bytes */pad58,1756

examples/memhints/src/memheap.c,462
SplitBlock(MemHeapBlockHeader * block, RwUInt32 size)SplitBlock38,995
MemHeapCreate(size_t initialSize)MemHeapCreate85,2221
MemHeapDestroy(RwUInt32 heapId)MemHeapDestroy135,3609
MemHeapAlloc(RwUInt32 heapId, size_t size)MemHeapAlloc141,3699
MemHeapRealloc(RwUInt32 heapId, void *mem, size_t newSize)MemHeapRealloc204,5411
MemHeapCalloc(RwUInt32 heapId,size_t numObj, size_t sizeObj)MemHeapCalloc366,10254
MemHeapFree(void *mem)MemHeapFree383,10544

examples/memhints/src/main.h,81
#define MAIN_HMAIN_H32,928
#define MAXCAMERAROTSPEED MAXCAMERAROTSPEED34,946

examples/memhints/src/win/events.c,1115
static RwBool       LeftButtonDown = FALSE;LeftButtonDown38,1021
static RwBool       Forwards = FALSE;Forwards39,1066
static RwBool       Backwards = FALSE;Backwards40,1105
static RwBool       StrafeLeft = FALSE;StrafeLeft41,1145
static RwBool       StrafeRight = FALSE;StrafeRight42,1186
#define CAMERASPEED CAMERASPEED44,1230
#define CAMERAROTSCL CAMERAROTSCL45,1259
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown51,1419
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp62,1638
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown80,2004
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp89,2195
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove102,2474
MouseHandler(RsEvent event, void *param)MouseHandler118,2838
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown170,3968
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp253,5690
KeyboardHandler(RsEvent event, void *param)KeyboardHandler305,7040
AttachInputDevices(void)AttachInputDevices343,7800

examples/memhints/makefile,106
DEMO = memhintsDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC39,1172

examples/collis2/src/collis2.c,1184
{__anone192fc3a010841,1146
    RwV3d currentPos;currentPos42,1149
    RwV3d currentVel;currentVel43,1172
    RwV3d previousPos;previousPos45,1197
    RwV3d previousVel;previousVel46,1221
    RwV3d force;force48,1247
    RwV3d collisionNormal;collisionNormal49,1265
    RpAtomic *atomic;atomic51,1295
Object;Object53,1322
static Object Ball;Ball55,1333
static RwReal ClosestTriangleDistance;ClosestTriangleDistance57,1356
static RwBool Penetrating;Penetrating59,1398
static RwBool Contacting;Contacting60,1426
GetRandomVector(RwV3d *vec, RwReal length)GetRandomVector68,1562
GetFirstAtomic(RpAtomic *atomic, void *data)GetFirstAtomic97,2228
ResetGravity(void)ResetGravity109,2433
ResetBall(void)ResetBall132,2815
CreateBallAtomic(RpWorld *world)CreateBallAtomic164,3444
DestroyBallAtomic(void)DestroyBallAtomic220,4630
RespondToCollision(void)RespondToCollision247,5151
WorldIntersectionCallBack(RpIntersection *intersection __RWUNUSED__, WorldIntersectionCallBack278,5898
FindWorldContact(void)FindWorldContact325,7357
Integrate(RwReal deltaTime)Integrate360,8185
Advance(RwReal delta)Advance384,8671
Run(RwReal deltaTime)Run441,9991

examples/collis2/src/main.c,1953
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1309
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1345
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1404
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1453
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1504
static RwBool FPSOn = FALSE;FPSOn64,1541
static RwInt32 FrameCounter = 0;FrameCounter66,1573
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1607
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1646
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1701
static RtCharset *Charset = NULL;Charset72,1758
static RpWorld *World = NULL;World73,1793
static RwCamera *Camera = NULL;Camera74,1824
static RpLight *MainLight = NULL;MainLight76,1859
static RpLight *AmbientLight = NULL;AmbientLight77,1894
static RwReal TotalTilt = 0.0f;TotalTilt79,1934
RwBool GravityOn = TRUE;GravityOn81,1969
RwBool DampingOn = FALSE;DampingOn82,1995
CreateWorld(void)CreateWorld90,2135
CreateAmbientLight(RpWorld *world)CreateAmbientLight124,2868
CreateMainLight(RpWorld *world)CreateMainLight148,3303
ResetCamera(RwCamera *camera)ResetCamera184,3983
CreateCamera(RpWorld *world)CreateCamera206,4459
CameraPoint(RwReal turn, RwReal tilt)CameraPoint231,4954
TranslateCameraZ(RwReal dist)TranslateCameraZ286,6251
Initialize(void)Initialize307,6636
ResetBallCallBack(RwBool testEnable)ResetBallCallBack334,7178
GravityCallback(RwBool testEnable)GravityCallback348,7339
ResetCameraCallback(RwBool testEnable)ResetCameraCallback362,7501
InitializeMenu(void)InitializeMenu379,7762
Initialize3D(void *param)Initialize3D412,8711
Terminate3D(void)Terminate3D487,10229
AttachPlugins(void)AttachPlugins544,11149
DisplayOnScreenInfo(void)DisplayOnScreenInfo585,11772
Render(void)Render604,12126
Idle(void)Idle650,12988
AppEventHandler(RsEvent event, void *param)AppEventHandler704,13984

examples/collis2/src/collis2.h,36
#define COLLIS2_HCOLLIS2_H32,1009

examples/collis2/src/win/events.c,860
static RwBool Orientate = FALSE;Orientate39,1101
static RwBool Translate = FALSE;Translate40,1135
HandleLeftButtonDown(RsMouseStatus *mouseStatus  __RWUNUSED__)HandleLeftButtonDown47,1284
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp55,1433
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown68,1673
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp76,1822
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove88,2062
MouseHandler(RsEvent event, void *param)MouseHandler108,2470
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown160,3600
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp170,3807
KeyboardHandler(RsEvent event, void *param)KeyboardHandler180,4012
AttachInputDevices(void)AttachInputDevices217,4745

examples/collis2/makefile,105
DEMO = collis2DEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/im2d/src/main.c,1196
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1190
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1226
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1285
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1334
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1385
static RwBool FPSOn = FALSE;FPSOn61,1422
static RwInt32 FrameCounter = 0;FrameCounter63,1454
static RwInt32 FramesPerSecond = 0;FramesPerSecond64,1488
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor66,1527
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor67,1582
static RwCamera *Camera = NULL;Camera69,1639
static RtCharset *Charset = NULL;Charset70,1672
CreateCamera(void)CreateCamera77,1819
Initialize(void)Initialize99,2238
Im2DColoredCallback(RwBool testEnable)Im2DColoredCallback126,2788
InitializeMenu(void)InitializeMenu160,3577
Initialize3D(void *param)Initialize3D203,4831
Terminate3D(void)Terminate3D254,5849
AttachPlugins(void)AttachPlugins284,6251
DisplayOnScreenInfo(void)DisplayOnScreenInfo308,6619
Render(void)Render382,8113
Idle(void)Idle419,8775
AppEventHandler(RsEvent event, void *param)AppEventHandler463,9548

examples/im2d/src/trifan.c,644
static RwReal TriFanData[17][4] =TriFanData41,1066
static RwReal IndexedTriFanData[16][4] =IndexedTriFanData67,2004
static RwImVertexIndex IndexedTriFanIndices[17] = IndexedTriFanIndices88,2822
static RwIm2DVertex TriFan[17];TriFan94,2946
static RwIm2DVertex IndexedTriFan[16];IndexedTriFan95,2979
TriFanCreate(RwCamera *camera)TriFanCreate103,3120
TriFanSetColor(RwBool white)TriFanSetColor138,4128
TriFanRender(void)TriFanRender163,4602
IndexedTriFanCreate(RwCamera *camera)IndexedTriFanCreate175,4800
IndexedTriFanSetColor(RwBool white)IndexedTriFanSetColor213,5931
IndexedTriFanRender(void)IndexedTriFanRender238,6418

examples/im2d/src/im2d.c,973
RwBool Im2DTextured = FALSE;Im2DTextured36,986
RwBool Im2DColored = TRUE;Im2DColored37,1016
RwInt32 Im2DPrimType = 0;Im2DPrimType39,1046
RwV2d  ScreenSize;ScreenSize41,1075
RwReal Scale;Scale42,1095
RwRGBA SolidWhite  = {255, 255, 255, 255};SolidWhite44,1112
RwRGBA SolidBlack  = {  0,   0,   0, 255};SolidBlack45,1156
RwRGBA SolidRed    = {200,  64,  64, 255};SolidRed46,1200
RwRGBA SolidGreen  = { 64, 200,  64, 255};SolidGreen47,1244
RwRGBA SolidBlue   = { 64,  64, 200, 255};SolidBlue48,1288
RwRGBA SolidYellow = {200, 200,  64, 255};SolidYellow49,1332
RwRGBA SolidPurple = {200,  64, 200, 255};SolidPurple50,1376
RwRGBA SolidCyan   = { 64, 200, 200, 255};SolidCyan51,1420
static RwTexture *Im2DTexture = NULL;Im2DTexture53,1466
Im2DInitialize(RwCamera *camera)Im2DInitialize60,1607
Im2DRender(void)Im2DRender123,3127
Im2DSize(RwCamera *camera, RwInt32 width, RwInt32 height)Im2DSize230,5287
Im2DTerminate(void)Im2DTerminate273,6133

examples/im2d/src/polyline.c,690
static RwReal PolyLineData[16][4] =PolyLineData41,1066
static RwReal IndexedPolyLineData[21][4] =IndexedPolyLineData66,1912
static RwImVertexIndex IndexedPolyLineIndices[46] = IndexedPolyLineIndices97,2946
static RwIm2DVertex PolyLine[16];PolyLine107,3214
static RwIm2DVertex IndexedPolyLine[21];IndexedPolyLine108,3249
PolyLineCreate(RwCamera *camera)PolyLineCreate115,3390
PolyLineSetColor(RwBool white)PolyLineSetColor150,4422
PolyLineRender(void)PolyLineRender175,4901
IndexedPolyLineCreate(RwCamera *camera)IndexedPolyLineCreate187,5105
IndexedPolyLineSetColor(RwBool white)IndexedPolyLineSetColor225,6252
IndexedPolyLineRender(void)IndexedPolyLineRender250,6742

examples/im2d/src/trilist.c,669
static RwReal TriListData[18][4] =TriListData41,1080
static RwReal IndexedTriListData[21][4] =IndexedTriListData73,2122
static RwImVertexIndex IndexedTriListIndices[45] = IndexedTriListIndices104,3159
static RwIm2DVertex TriList[18];TriList114,3407
static RwIm2DVertex IndexedTriList[21];IndexedTriList115,3441
TriListCreate(RwCamera *camera)TriListCreate123,3583
TriListSetColor(RwBool white)TriListSetColor158,4603
TriListRender(void)TriListRender226,6421
IndexedTriListCreate(RwCamera *camera)IndexedTriListCreate238,6622
IndexedTriListSetColor(RwBool white)IndexedTriListSetColor276,7763
IndexedTriListRender(void)IndexedTriListRender301,8251

examples/im2d/src/linelist.c,693
static RwReal LineListData[32][4] = LineListData41,1070
static RwReal IndexedLineListData[16][4] = IndexedLineListData97,2634
static RwImVertexIndex IndexedLineListIndices[20] = IndexedLineListIndices121,3515
static RwIm2DVertex LineList[32];LineList128,3658
static RwIm2DVertex IndexedLineList[16];IndexedLineList129,3693
LineListCreate(RwCamera *camera)LineListCreate137,3836
LineListSetColor(RwBool white)LineListSetColor172,4868
LineListRender(void)LineListRender206,5649
IndexedLineListCreate(RwCamera *camera)IndexedLineListCreate218,5856
IndexedLineListSetColor(RwBool white)IndexedLineListSetColor256,7004
IndexedLineListRender(void)IndexedLineListRender281,7493

examples/im2d/src/im2d.h,29
#define IM2D_HIM2D_H31,933

examples/im2d/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown40,1099
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp46,1225
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown56,1440
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp62,1567
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove72,1784
MouseHandler(RsEvent event, void *param)MouseHandler82,1997
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown134,3114
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp141,3232
KeyboardHandler(RsEvent event, void *param)KeyboardHandler151,3437
AttachInputDevices(void)AttachInputDevices188,4156

examples/im2d/src/tristrip.c,690
static RwReal TriStripData[18][4] =TriStripData40,1068
static RwReal IndexedTriStripData[16][4] =IndexedTriStripData75,2026
static RwImVertexIndex IndexedTriStripIndices[18] = IndexedTriStripIndices97,2827
static RwIm2DVertex TriStrip[18];TriStrip104,2963
static RwIm2DVertex IndexedTriStrip[16];IndexedTriStrip105,2998
TriStripCreate(RwCamera *camera)TriStripCreate112,3139
TriStripSetColor(RwBool white)TriStripSetColor147,4170
TriStripRender(void)TriStripRender172,4648
IndexedTriStripCreate(RwCamera *camera)IndexedTriStripCreate184,4863
IndexedTriStripSetColor(RwBool white)IndexedTriStripSetColor222,6017
IndexedTriStripRender(void)IndexedTriStripRender247,6507

examples/im2d/makefile,102
DEMO = im2dDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1082
CSRC =	$(SRC)/main.c		\CSRC39,1162

examples/camera/src/main.c,2007
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1304
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1340
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1399
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1448
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1499
static RwBool FPSOn = FALSE;FPSOn63,1536
static RwInt32 FrameCounter = 0;FrameCounter65,1568
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1602
static RwRGBA ForegroundColor =    {200, 200, 200, 255};ForegroundColor68,1641
static RwRGBA BackgroundColor =    { 64,  64,  64,   0};BackgroundColor69,1699
static RwRGBA BackgroundColorSub = { 74,  74,  74,   0};BackgroundColorSub70,1757
static RtCharset *Charset = NULL;Charset72,1817
static RpWorld *World = NULL;World73,1852
RwV3d XAxis = {1.0f, 0.0f, 0.0f};XAxis75,1885
RwV3d YAxis = {0.0f, 1.0f, 0.0f};YAxis76,1920
RwV3d ZAxis = {0.0f, 0.0f, 1.0f};ZAxis77,1955
RpClump *Clump = NULL;Clump79,1992
RwBool Rendering = FALSE;Rendering81,2018
WorldCreate(void)WorldCreate89,2158
LightsCreate(RpWorld *world)LightsCreate107,2479
ClumpCreate(RpWorld *world)ClumpCreate162,3520
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate203,4441
ClumpTranslate(RpClump *clump, RwCamera *camera, RwReal xDelta, RwReal zDelta)ClumpTranslate252,5701
ClumpSetPosition(RpClump *clump, RwV3d *position)ClumpSetPosition275,6349
Initialize(void)Initialize287,6611
InitializeMenu(void)InitializeMenu314,7149
Initialize3D(void *param)Initialize3D375,9223
DestroyLight(RpLight *light, void *data)DestroyLight441,10518
Terminate3D(void)Terminate3D462,10849
AttachPlugins(void)AttachPlugins501,11429
DisplayOnScreenInfo(void)DisplayOnScreenInfo529,11845
MainCameraRender(RwCamera *camera)MainCameraRender555,12589
SubCameraRender(RwCamera *camera)SubCameraRender608,13830
Render(void)Render640,14446
Idle(void)Idle699,15426
AppEventHandler(RsEvent event, void *param)AppEventHandler743,16199

examples/camera/src/camexamp.c,2486
#define __RWUNUSEDUNLESSSKY__ __RWUNUSEDUNLESSSKY__46,1232
#define __RWUNUSEDUNLESSSKY__ __RWUNUSEDUNLESSSKY__50,1345
#define TEXSIZE TEXSIZE53,1439
static RwCamera *MainCamera = NULL;MainCamera55,1464
static RwCamera *SubCamera = NULL;SubCamera56,1501
static RwRaster *SubCameraRaster = NULL;SubCameraRaster58,1539
static RwRaster *SubCameraZRaster = NULL;SubCameraZRaster59,1581
static RwRaster *SubCameraMainCameraSubRaster = NULL;SubCameraMainCameraSubRaster60,1624
static RwRaster *SubCameraMainCameraSubZRaster = NULL;SubCameraMainCameraSubZRaster61,1679
static TextureCamera CameraTexture;CameraTexture63,1737
RwUInt32 CameraSelected = 0;CameraSelected65,1776
RwUInt32 ProjectionIndex = 0;ProjectionIndex66,1806
RwBool SubCameraMiniView = TRUE;SubCameraMiniView67,1837
CameraData SubCameraData;SubCameraData69,1873
CameraSelectCallback(RwBool testEnable)CameraSelectCallback76,2001
CameraQueryData(CameraData *data, CameraQueryData118,2621
CameraSetData(CameraData *data, CameraDataType dataType)CameraSetData189,4208
FarClipPlaneCallback(RwBool testEnable)FarClipPlaneCallback223,4967
NearClipPlaneCallback(RwBool testEnable)NearClipPlaneCallback245,5429
ProjectionCallback(RwBool testEnable)ProjectionCallback266,5888
ChangeViewOffset(RwReal deltaX, RwReal deltaY)ChangeViewOffset298,6440
ChangeViewWindow(RwReal deltaX, RwReal deltaY)ChangeViewWindow333,7151
CamerasCreate(RpWorld *world)CamerasCreate368,7906
CamerasDestroy(RpWorld *world)CamerasDestroy403,8847
GetSubCamera(void)GetSubCamera437,9475
GetMainCamera(void)GetMainCamera444,9540
UpdateSubRasters(RwCamera *camera, RwRect *rect)UpdateSubRasters456,9707
CameraSizeUpdate(RwRect *rect, RwReal viewWindow, RwReal aspectRatio)CameraSizeUpdate480,10276
RenderSubCamera(RwRGBA *backgroundColor, RwInt32 clearMode, RpWorld *world)RenderSubCamera533,11656
RenderTextureCamera(RwRGBA *foregroundColor, RwInt32 clearMode, RpWorld *world)RenderTextureCamera552,12042
SubCameraMiniViewSelect(RwBool select)SubCameraMiniViewSelect589,13085
LockRaster(RwBool lock __RWUNUSEDUNLESSSKY__)LockRaster615,13746
CameraTextureInit(TextureCamera *ct) CameraTextureInit629,14005
CameraTextureTerm(TextureCamera *ct) CameraTextureTerm670,15061
DrawCameraFrustum(CameraData *c)DrawCameraFrustum699,15586
DrawCameraViewplaneTexture(CameraData *c)DrawCameraViewplaneTexture859,19649
ResetCameraAndClumpCallback(RwBool testEnable)ResetCameraAndClumpCallback943,21469

examples/camera/src/camexamp.h,1312
#define CAMEXAMP_HCAMEXAMP_H32,1032
typedef struct TextureCamera TextureCamera;TextureCamera37,1099
struct TextureCameraTextureCamera38,1144
    RwRaster *raster;raster40,1169
    RwRaster *zRaster;zRaster41,1192
    RwCamera *camera;camera42,1216
    RwTexture *texture;texture43,1239
typedef struct CameraData  CameraData;CameraData46,1270
struct CameraDataCameraData47,1310
    RwReal farClipPlane;farClipPlane49,1332
    RwReal nearClipPlane;nearClipPlane50,1358
    RwCameraProjection projection;projection51,1385
    RwV2d offset;offset52,1421
    RwV2d viewWindow;viewWindow53,1440
    RwCamera *camera;camera54,1463
    TextureCamera *cameraTexture;cameraTexture55,1486
    RwMatrix *matrix;matrix56,1521
enum CameraDataTypeCameraDataType60,1552
    NONE            = 0x00,NONE62,1576
    FARCLIPPLANE    = 0x01,FARCLIPPLANE63,1605
    NEARCLIPPLANE   = 0x02,NEARCLIPPLANE64,1634
    PROJECTION      = 0x04,PROJECTION65,1663
    OFFSET          = 0x08,OFFSET66,1692
    VIEWWINDOW      = 0x10,VIEWWINDOW67,1721
    MATRIX          = 0x20,MATRIX68,1750
    ALL             = 0xFF,ALL69,1779
    CAMERADATATYPEFORCEENUMSIZEINT = RWFORCEENUMSIZEINTCAMERADATATYPEFORCEENUMSIZEINT71,1810
typedef enum CameraDataType CameraDataType;CameraDataType74,1873

examples/camera/src/main.h,30
#define MAIN_HMAIN_H32,1024

examples/camera/src/viewer.c,536
ViewerCreate(RpWorld *world)ViewerCreate44,1227
ViewerDestroy(RwCamera *camera, RpWorld *world)ViewerDestroy68,1696
ViewerSize(RwCamera *camera, RwRect *rect, RwReal viewWindow, RwReal aspectRatio)ViewerSize85,1998
ViewerMove(RwCamera *camera, RwV3d *offset)ViewerMove97,2270
ViewerRotate(RwCamera *camera, RwReal deltaX, RwReal deltaY)ViewerRotate109,2481
ViewerTranslate(RwCamera *camera, RwReal deltaX, RwReal deltaY)ViewerTranslate122,2757
ViewerSetPosition(RwCamera *camera, RwV3d *position)ViewerSetPosition140,3086

examples/camera/src/viewer.h,410
#define VIEWER_HVIEWER_H32,1028
#define VIEWERFARCLIPPLANEMAX VIEWERFARCLIPPLANEMAX37,1093
#define VIEWERNEARCLIPPLANEMIN VIEWERNEARCLIPPLANEMIN38,1134
#define VIEWERNEARCLIPPLANESTEP VIEWERNEARCLIPPLANESTEP39,1174
#define VIEWERFARCLIPPLANESTEP VIEWERFARCLIPPLANESTEP40,1214
#define VIEWERFARCLIPPLANEMIN VIEWERFARCLIPPLANEMIN42,1256
#define VIEWERNEARCLIPPLANEMAX VIEWERNEARCLIPPLANEMAX43,1336

examples/camera/src/axis.h,30
#define AXIS_HAXIS_H32,1024

examples/camera/src/win/events.c,1289
static RwBool RotateClump = FALSE;RotateClump41,1144
static RwBool TranslateClump = FALSE;TranslateClump42,1180
static RwBool RotateCamera = FALSE;RotateCamera44,1221
static RwBool TranslateCamera = FALSE;TranslateCamera45,1258
static RwBool ViewXWindow = FALSE;ViewXWindow47,1300
static RwBool ViewYWindow = FALSE;ViewYWindow48,1336
static RwBool ViewXOffset = FALSE;ViewXOffset50,1374
static RwBool ViewYOffset = FALSE;ViewYOffset51,1410
static RwBool Ctrl;Ctrl53,1448
static RwBool Alt;Alt54,1469
static RwBool Shift;Shift55,1489
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown63,1628
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp90,2084
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown105,2403
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp132,2867
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove147,3194
MouseHandler(RsEvent event, void *param)MouseHandler262,5641
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown314,6770
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp354,7471
KeyboardHandler(RsEvent event, void *param)KeyboardHandler394,8170
AttachInputDevices(void)AttachInputDevices431,8903

examples/camera/makefile,104
DEMO = cameraDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1084
CSRC =	$(SRC)/main.c		\CSRC39,1164

examples/decal/src/decal.h,29
#define DECAL_HDECAL_H2,17

examples/decal/src/main.c,1478
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1282
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1318
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1377
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1426
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1477
static RwBool FPSOn = FALSE;FPSOn66,1514
static RwInt32 FrameCounter = 0;FrameCounter68,1546
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1580
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor71,1619
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor72,1674
RwCamera *Camera = NULL;Camera74,1731
RtCharset *Charset = NULL;Charset75,1757
RwReal              CameraPitchRate = 0.0f;CameraPitchRate77,1787
RwReal              CameraTurnRate = 0.0f;CameraTurnRate78,1832
RwReal              CameraSpeed = 0.0f;CameraSpeed79,1876
RwReal              CameraStrafeSpeed = 0.0f;CameraStrafeSpeed80,1917
AddDecal( void )AddDecal83,1972
CreateCamera(RpWorld *world)CreateCamera94,2147
Initialize(void)Initialize117,2618
InitializeMenu(void)InitializeMenu144,3156
Initialize3D(void *param)Initialize3D165,3557
Terminate3D(void)Terminate3D222,4697
AttachPlugins(void)AttachPlugins262,5374
DisplayOnScreenInfo(void)DisplayOnScreenInfo306,6039
CameraUpdate(RwReal deltaTime)CameraUpdate321,6316
Render(void)Render362,7756
Idle(void)Idle404,8510
AppEventHandler(RsEvent event, void *param)AppEventHandler462,9565

examples/decal/src/main.h,121
#define MAIN_HMAIN_H2,16
#define MAXCAMERASPEED MAXCAMERASPEED4,34
#define MAXCAMERAROTSPEED MAXCAMERAROTSPEED5,65

examples/decal/src/decal.c,1149
typedef struct {__anonaf12937c010813,177
    RwReal smallestDist;smallestDist14,195
    RwV3d  normal;normal15,221
} CollisionInfo;CollisionInfo16,241
static RpWorld* DecalWorld = NULL;DecalWorld19,284
static RpAtomic* DecalAtomic = NULL;DecalAtomic20,320
static RwMatrix* decalList = NULL;decalList21,358
static RwUInt32 nbDecals;nbDecals22,394
static RwUInt32 currentDecal;currentDecal23,421
static RwTexture* decalTex = NULL;decalTex24,452
#define CAMERA_SEARCH_DOWN CAMERA_SEARCH_DOWN26,490
#define NOT_FOUND NOT_FOUND27,524
#define CAMERA_HEIGHT CAMERA_HEIGHT28,552
#define MAX_DECAL MAX_DECAL29,580
#define EPSILON EPSILON30,603
LoadWorld(void)LoadWorld33,649
DecalInit(void)DecalInit73,1489
DecalClose(void)DecalClose152,3533
GetCurrentWorld(void)GetCurrentWorld184,4100
IntersectionDecalCallBack(RpIntersection *intersection __RWUNUSED__,IntersectionDecalCallBack190,4185
FindDecalCollisionPoint(RwLine *line, RwV3d *collPoint, RwV3d *normal)FindDecalCollisionPoint208,4723
FindDecal(RwCamera *camera)FindDecal238,5701
RenderDecal(void)RenderDecal308,7896
WorldRender(void)WorldRender361,9580

examples/decal/src/win/events.c,1122
static RwBool       LeftButtonDown = FALSE;LeftButtonDown43,1075
static RwBool       Forwards = FALSE;Forwards44,1120
static RwBool       Backwards = FALSE;Backwards45,1159
static RwBool       StrafeLeft = FALSE;StrafeLeft46,1199
static RwBool       StrafeRight = FALSE;StrafeRight47,1240
#define CAMERASPEED CAMERASPEED49,1284
#define CAMERAROTSCL CAMERAROTSCL50,1327
HandleLeftButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonDown56,1501
HandleLeftButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonUp67,1734
HandleRightButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonDown82,2070
HandleRightButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonUp91,2275
HandleMouseMove(RsMouseStatus * mouseStatus)HandleMouseMove103,2565
MouseHandler(RsEvent event, void *param)MouseHandler122,3092
HandleKeyDown(RsKeyStatus * keyStatus)HandleKeyDown173,4307
HandleKeyUp(RsKeyStatus * keyStatus)HandleKeyUp255,6191
KeyboardHandler(RsEvent event, void *param)KeyboardHandler315,7646
AttachInputDevices(void)AttachInputDevices351,8413

examples/decal/makefile,103
DEMO = decalDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1089
CSRC =	$(SRC)/main.c		\CSRC39,1169

examples/texdict/src/main.c,1187
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1239
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1275
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1334
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1383
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1434
static RwBool FPSOn = FALSE;FPSOn63,1471
static RwInt32 FrameCounter = 0;FrameCounter65,1503
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1537
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1576
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1631
RtCharset *Charset = NULL;Charset71,1688
CreateWorld(void)CreateWorld79,1829
CreateAmbientLight(RpWorld *world)CreateAmbientLight100,2216
CreateCamera(RpWorld *world)CreateCamera127,2737
Initialize(void)Initialize164,3593
InitializeMenu(void)InitializeMenu191,4143
Initialize3D(void *param)Initialize3D214,4653
Terminate3D(void)Terminate3D274,5841
AttachPlugins(void)AttachPlugins316,6461
DisplayOnScreenInfo(void)DisplayOnScreenInfo344,6877
Render(void)Render379,7895
Idle(void)Idle416,8552
AppEventHandler(RsEvent event, void *param)AppEventHandler467,9422

examples/texdict/src/texdict.c,439
RwReal TimeWithoutTexDict = 0;TimeWithoutTexDict40,1250
RwReal TimeWithTexDict = 0;TimeWithTexDict41,1282
RpLight *AmbientLight = NULL;AmbientLight43,1313
RpWorld *World = NULL;World44,1344
RwCamera *Camera = NULL;Camera45,1368
RwBool LoadingWorld = FALSE;LoadingWorld47,1396
CameraSetPosition(RwCamera *camera, RpWorld *world)CameraSetPosition55,1527
LoadWorld(void)LoadWorld93,2511
ReloadWorld(void)ReloadWorld230,5712

examples/texdict/src/texdict.h,36
#define TEXDICT_HTEXDICT_H33,1131

examples/texdict/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1150
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp47,1276
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown57,1491
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp63,1618
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove73,1835
MouseHandler(RsEvent event, void *param)MouseHandler83,2048
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown135,3178
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp142,3296
KeyboardHandler(RsEvent event, void *param)KeyboardHandler152,3501
AttachInputDevices(void)AttachInputDevices189,4234

examples/texdict/makefile,105
DEMO = texdictDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/imshadow/src/scene.h,31
#define SCENE_HSCENE_H32,973

examples/imshadow/src/d3d9/pipeline.c,512
static RwTexture    *ShadowRenderTexture = NULL;ShadowRenderTexture38,1048
static RwReal       ShadowStrength = 0.0f;ShadowStrength39,1098
ProjectionPipelineBegin(RwTexture *shadowTexture,ProjectionPipelineBegin45,1263
ShadowMultitexturePipeRenderCallback(RwResEntry *repEntry,ShadowMultitexturePipeRenderCallback95,2970
ProjectionPipelineCreate(void)ProjectionPipelineCreate299,9804
ProjectionPipelineEnd(void)ProjectionPipelineEnd359,11389
ShadowPipelineCreate(void)ShadowPipelineCreate368,11552

examples/imshadow/src/main.c,1864
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH62,1485
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT63,1521
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO66,1580
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO68,1629
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW71,1680
static const RwV3d  InitCameraPos = { 250.0f, 170.0f, -250.0f };InitCameraPos74,1748
#define CAM_NEAR CAM_NEAR76,1816
#define CAM_FAR CAM_FAR77,1839
#define CAM_ELEVATION CAM_ELEVATION78,1864
#define CAM_AZIMUTH CAM_AZIMUTH79,1893
static RwBool       FPSOn = FALSE;FPSOn84,2020
static RwInt32      FrameCounter = 0;FrameCounter86,2058
static RwInt32      FramesPerSecond = 0;FramesPerSecond87,2097
static RwRGBA       ForegroundColor = { 200, 200, 200, 255 };ForegroundColor89,2141
static RwRGBA       BackgroundColor = { 64, 64, 64, 0 };BackgroundColor90,2204
RwCamera           *Camera = NULL;Camera92,2264
RtCharset          *Charset = NULL;Charset93,2300
RwReal              CameraPitchRate = 0.0f;CameraPitchRate96,2357
RwReal              CameraTurnRate = 0.0f;CameraTurnRate97,2402
RwReal              CameraSpeed = 0.0f;CameraSpeed98,2446
RwReal              CameraStrafeSpeed = 0.0f;CameraStrafeSpeed99,2487
static RwV3d        Xaxis = { 1.0f, 0.0f, 0.0f };Xaxis101,2536
static RwV3d        Yaxis = { 0.0f, 1.0f, 0.0f };Yaxis102,2587
CreateCamera(RpWorld * world)CreateCamera108,2748
Initialize(void)Initialize142,3627
InitializeMenu(void)InitializeMenu168,4162
Initialize3D(void *param)Initialize3D189,4582
Terminate3D(void)Terminate3D248,5727
AttachPlugins(void)AttachPlugins279,6187
DisplayOnScreenInfo(void)DisplayOnScreenInfo342,7224
Render(void)Render365,7750
CameraUpdate(RwReal deltaTime)CameraUpdate405,8493
Idle(void)Idle448,9849
AppEventHandler(RsEvent event, void *param)AppEventHandler509,10978

examples/imshadow/src/shadow.h,33
#define SHADOW_HSHADOW_H32,975

examples/imshadow/src/scene.c,4518
static RpWorld     *World = NULL;World50,1235
static RwChar       WorldTexturePath[] = RWSTRING("models/textures/");WorldTexturePath51,1270
static RwChar       WorldPath[] = RWSTRING("models/world.bsp");WorldPath52,1342
static RpClump     *Clump = NULL;Clump54,1409
static RwChar       ClumpPath[] = RWSTRING("models/clump.dff");ClumpPath55,1444
static const RwV3d  ClumpStartPos = { 30.0f, 46.0f, 0.0f };ClumpStartPos56,1509
static RwSphere     ClumpBoundingSphere;ClumpBoundingSphere57,1570
static RwSphere     ClumpWorldBoundingSphere;ClumpWorldBoundingSphere58,1612
static RtAnimAnimation *Anim = NULL;Anim60,1661
static RwChar       AnimPath[] = RWSTRING("models/clump.anm");AnimPath61,1699
static RpHAnimHierarchy *Hierarchy = NULL;Hierarchy62,1763
static RwBool       AnimEnabled = TRUE;AnimEnabled63,1807
static RwReal       AnimSpeedFactor = 0.3f; /* 1.0f is normal speed */AnimSpeedFactor64,1848
#define ANIM_CLUMP_SPEED ANIM_CLUMP_SPEED66,1922
static RpLight     *DirectionalLight = NULL;DirectionalLight71,1979
static RpLight     *AmbientLight = NULL;AmbientLight72,2025
#define ALIGHT_VALUE ALIGHT_VALUE74,2069
#define DLIGHT_VALUE DLIGHT_VALUE75,2129
#define DLIGHT_ELEVATION DLIGHT_ELEVATION76,2197
#define DLIGHT_AZIMUTH DLIGHT_AZIMUTH77,2232
static RwCamera    *ShadowCamera = NULL;ShadowCamera82,2290
static RwRaster    *ShadowCameraRaster = NULL;ShadowCameraRaster83,2332
static RwCamera    *ShadowIPCamera = NULL;ShadowIPCamera85,2382
static RwRaster    *ShadowRasterAA = NULL;ShadowRasterAA86,2426
static RwRaster    *ShadowRasterTemp = NULL;ShadowRasterTemp87,2470
static RwRaster    *ShadowRenderRaster = NULL;ShadowRenderRaster89,2518
static RwV2d        ShadowPreviewVerts[2] =ShadowPreviewVerts91,2568
static RwBool       ShadowEnabled = TRUE;ShadowEnabled94,2656
static RwInt32      ShadowResolutionIndex = 7;ShadowResolutionIndex95,2699
static RwInt32      ShadowBlur = 1;ShadowBlur96,2747
static RwBool       ShadowAA = TRUE;ShadowAA97,2784
static RwReal       ShadowZoneRadius = 130.0f;ShadowZoneRadius98,2822
static RwReal       ShadowStrength = 0.8f;ShadowStrength99,2870
static RwBool       ShadowFade = TRUE;ShadowFade100,2914
static RpIntersection ShadowZone;ShadowZone102,2956
static RpClump      *ShadowClump = NULL;ShadowClump107,3027
static RwBool       ShadowOptimized = FALSE;ShadowOptimized108,3069
static RxPipeline   *ShadowPipeline = NULL;ShadowPipeline109,3115
static const RwV3d  Xaxis = { 1.0f, 0.0f, 0.0f };Xaxis114,3181
static const RwV3d  Yaxis = { 0.0f, 1.0f, 0.0f };Yaxis115,3232
static const RwV3d  Zaxis = { 0.0f, 0.0f, 1.0f };Zaxis116,3283
static RwTexture    *ShadowRenderTexture = NULL;ShadowRenderTexture121,3369
static RwBool ShadowProjectionOptimized = FALSE;ShadowProjectionOptimized123,3421
static RxPipeline   *ShadowProjectionPipeline = NULL;ShadowProjectionPipeline125,3473
WorldLoad(RwChar * filename)WorldLoad131,3637
ClumpLoad(RwChar * filename)ClumpLoad170,4508
ClumpGetHierarchyRecurse(RwFrame * frame, void *ptr)ClumpGetHierarchyRecurse209,5376
ClumpGetHierarchy(RpClump * clump)ClumpGetHierarchy232,5925
GetFirstAtomic(RpAtomic * atomic, void *data)GetFirstAtomic255,6500
SetupClump(void)SetupClump267,6767
DestroyClump(void)DestroyClump337,8735
UpdateClump(RwReal deltaTime)UpdateClump365,9216
SetupLights(void)SetupLights444,11592
DestroyLights(void)DestroyLights491,12701
SetupShadow(void)SetupShadow519,13336
DestroyShadow(void)DestroyShadow602,15211
RemoveAtomicFlags(RpAtomic *atomic, void *data __RWUNUSED__)RemoveAtomicFlags639,15930
RestoreAtomicFlags(RpAtomic *atomic, void *data __RWUNUSED__)RestoreAtomicFlags660,16390
UpdateShadow(RwReal deltaTime __RWUNUSED__)UpdateShadow684,16933
CalculateShadowZone(RpIntersection *shadowZone)CalculateShadowZone786,19922
ShadowRenderCB(RwBool testEnable __RWUNUSED__)ShadowRenderCB856,21751
ShadowProjection(RwBool justCheck)ShadowProjection865,21948
ResetShadow(RwBool justCheck)ResetShadow889,22389
SceneMenuInit(void)SceneMenuInit907,22728
ShadowProjectionCreate(void)ShadowProjectionCreate963,24835
SceneOpen(void)SceneOpen988,25504
SceneClose(void)SceneClose1018,26092
SceneUpdate(RwReal deltaTime)SceneUpdate1062,26959
ShadowMultitextureFindSector(RpWorldSector *sector,ShadowMultitextureFindSector1084,27354
ShadowProjectionPipeSectorRender(RpWorldSector *sector,ShadowProjectionPipeSectorRender1103,27788
SceneRender(void)SceneRender1169,30160

examples/imshadow/src/main.h,128
#define MAIN_HMAIN_H32,971
#define MAXCAMERASPEED MAXCAMERASPEED34,989
#define MAXCAMERAROTSPEED MAXCAMERAROTSPEED35,1026

examples/imshadow/src/d3d8/pipeline.c,512
static RwTexture    *ShadowRenderTexture = NULL;ShadowRenderTexture38,1048
static RwReal       ShadowStrength = 0.0f;ShadowStrength39,1098
ProjectionPipelineBegin(RwTexture *shadowTexture,ProjectionPipelineBegin45,1263
ShadowMultitexturePipeRenderCallback(RwResEntry *repEntry,ShadowMultitexturePipeRenderCallback95,2970
ProjectionPipelineCreate(void)ProjectionPipelineCreate281,8997
ProjectionPipelineEnd(void)ProjectionPipelineEnd341,10582
ShadowPipelineCreate(void)ShadowPipelineCreate350,10745

examples/imshadow/src/pipeline.h,37
#define PIPELINE_HPIPELINE_H32,977

examples/imshadow/src/shadow.c,2073
RwUInt32            ShadowNumTriangles = 0;ShadowNumTriangles43,1158
#define IM3DBUFFERSIZE IM3DBUFFERSIZE48,1245
static RwIm3DVertex Im3DBuffer[IM3DBUFFERSIZE];Im3DBuffer49,1278
static RwUInt32     Im3DBufferCnt = 0;Im3DBufferCnt50,1327
#define TEXELOFFSET TEXELOFFSET57,1570
#define TEXELOFFSET TEXELOFFSET59,1603
Im2DRenderQuad(RwReal x1, RwReal y1, RwReal x2, RwReal y2,Im2DRenderQuad66,1744
InvertRaster(RwCamera * camera)InvertRaster117,3588
ShadowCameraDestroy(RwCamera * shadowCamera)ShadowCameraDestroy187,6351
ShadowCameraCreate(RwInt32 size)ShadowCameraCreate225,7240
ShadowCameraSetFrustum(RwCamera * shadowCamera, RwReal objectRadius)ShadowCameraSetFrustum279,8668
ShadowCameraSetLight(RwCamera * camera, RpLight * light)ShadowCameraSetLight303,9339
ShadowCameraSetCenter(RwCamera * camera, RwV3d * center)ShadowCameraSetCenter322,9877
ShadowCameraUpdate(RwCamera * shadowCamera,ShadowCameraUpdate346,10571
ShadowRasterCreate(RwUInt32 size)ShadowRasterCreate407,12516
ShadowRasterDestroy(RwRaster * raster)ShadowRasterDestroy447,13451
ShadowRasterResample(RwRaster * destRaster,ShadowRasterResample463,13709
ShadowRasterBlur(RwRaster * shadowRaster,ShadowRasterBlur524,15925
ShadowRasterRender(RwRaster * shadowRaster, RwV2d * vx)ShadowRasterRender625,19635
typedef struct _ProjectionParam_ProjectionParam670,21144
    RwV3d               at;     /* Camera at vector */at672,21180
    RwMatrix            invMatrix; /* Transforms to shadow camera space */invMatrix673,21236
    RwUInt8             shadowValue; /* Shadow opacity value */shadowValue674,21312
    RwBool              fade;   /* Shadow fades with distance */fade675,21377
    RwUInt32            numIm3DBatch; /* Number of buffer flushes */numIm3DBatch676,21443
ProjectionParam;ProjectionParam679,21518
ShadowRenderTriangleCB(RpIntersection * intersection __RWUNUSED__,ShadowRenderTriangleCB682,21568
ShadowRasterFade(RwCamera *camera, RwRaster *raster,ShadowRasterFade816,26027
ShadowRender(RwCamera * shadowCamera,ShadowRender943,30206

examples/imshadow/src/win/events.c,1122
static RwBool       LeftButtonDown = FALSE;LeftButtonDown42,1111
static RwBool       Forwards = FALSE;Forwards43,1156
static RwBool       Backwards = FALSE;Backwards44,1195
static RwBool       StrafeLeft = FALSE;StrafeLeft45,1235
static RwBool       StrafeRight = FALSE;StrafeRight46,1276
#define CAMERASPEED CAMERASPEED49,1322
#define CAMERAROTSCL CAMERAROTSCL50,1365
HandleLeftButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonDown56,1541
HandleLeftButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonUp67,1774
HandleRightButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonDown83,2150
HandleRightButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonUp92,2355
HandleMouseMove(RsMouseStatus * mouseStatus)HandleMouseMove104,2645
MouseHandler(RsEvent event, void *param)MouseHandler119,3024
HandleKeyDown(RsKeyStatus * keyStatus)HandleKeyDown170,4239
HandleKeyUp(RsKeyStatus * keyStatus)HandleKeyUp252,6123
KeyboardHandler(RsEvent event, void *param)KeyboardHandler312,7578
AttachInputDevices(void)AttachInputDevices349,8373

examples/imshadow/makefile,172
DEMO = imshadowDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC39,1172
$(OBJDIR)/%.$(O): $(SRC)/$(RWTARGET)/%.c$(OBJDIR)/%.$(O)90,2298

examples/hanim1/src/main.c,1571
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1320
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1356
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1415
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1464
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1515
static RwBool FPSOn = FALSE;FPSOn66,1552
static RwInt32 FrameCounter = 0;FrameCounter68,1584
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1618
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor71,1657
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor72,1712
static RpWorld *World = NULL;World74,1769
static RwCamera *Camera = NULL;Camera75,1800
static RtCharset *Charset = NULL;Charset76,1833
static RpClump *Clump = NULL;Clump77,1868
static RpLight *AmbientLight = NULL;AmbientLight78,1899
static RpLight *MainLight = NULL;MainLight79,1937
CreateWorld(void)CreateWorld87,2085
CreateAmbientLight(RpWorld *world)CreateAmbientLight105,2409
CreateMainLight(RpWorld *world)CreateMainLight127,2827
CreateCamera(RpWorld *world)CreateCamera161,3584
Initialize(void)Initialize184,4060
BlendDurationCallBack(RwBool testEnable)BlendDurationCallBack211,4607
InitializeMenu(void)InitializeMenu230,4989
Initialize3D(void *param)Initialize3D256,5574
Terminate3D(void)Terminate3D332,7124
AttachPlugins(void)AttachPlugins389,8058
DisplayOnScreenInfo(void)DisplayOnScreenInfo445,8991
Render(void)Render503,10166
Idle(void)Idle540,10824
AppEventHandler(RsEvent event, void *param)AppEventHandler594,11839

examples/hanim1/src/hanim.h,248
#define HANIM1_HHANIM1_H31,953
enum AnimationStateAnimationState37,1039
    FIRST,FIRST39,1063
    SECOND,SECOND40,1075
    BLEND,BLEND41,1088
    ANIMATIONSTATEFORCEENUMSIZEINT = RWFORCEENUMSIZEINTANIMATIONSTATEFORCEENUMSIZEINT43,1102

examples/hanim1/src/hanim.c,935
#define NUMANIMS NUMANIMS41,1138
static RtAnimAnimation *Anim[NUMANIMS];Anim43,1162
static RpHAnimHierarchy *OutHierarchy = NULL;OutHierarchy45,1205
static RpHAnimHierarchy *InHierarchy2 = NULL;InHierarchy246,1252
enum AnimationState CurrentAnimation = FIRST;CurrentAnimation48,1301
RwReal BlendDuration = 1.0f;BlendDuration53,1435
LoadAnimationFile(RwChar *file)LoadAnimationFile61,1586
LoadClump(RpWorld *world)LoadClump78,1924
GetChildFrameHierarchy(RwFrame *frame, void *data)GetChildFrameHierarchy120,2891
GetHierarchy(RpClump *clump)GetHierarchy144,3415
SetHierarchyForSkinAtomic(RpAtomic *atomic, void *data)SetHierarchyForSkinAtomic163,3806
CreateClump(RpWorld *world)CreateClump175,4069
DestroyClump(RpClump *clump, RpWorld *world)DestroyClump258,6374
GetSkinHierarchy(RpAtomic *atomic, void *data)GetSkinHierarchy301,7128
UpdateAnimation(RpClump *clump, RwReal deltaTime)UpdateAnimation313,7374

examples/hanim1/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1137
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp48,1265
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown58,1480
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp65,1609
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove75,1826
MouseHandler(RsEvent event, void *param)MouseHandler85,2039
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown137,3169
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp144,3287
KeyboardHandler(RsEvent event, void *param)KeyboardHandler154,3492
AttachInputDevices(void)AttachInputDevices191,4225

examples/hanim1/makefile,104
DEMO = hanim1DEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =	$(SRC)/main.c		\CSRC39,1170

examples/burningm/src/scene.h,32
#define SCENE_HSCENE_H32,1005

examples/burningm/src/main.c,1869
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH63,1520
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT64,1556
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO67,1615
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO69,1664
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW72,1715
static const RwV3d  InitCameraPos = { 250.0f, 170.0f, -250.0f };InitCameraPos75,1783
#define CAM_NEAR CAM_NEAR77,1851
#define CAM_FAR CAM_FAR78,1874
#define CAM_ELEVATION CAM_ELEVATION79,1899
#define CAM_AZIMUTH CAM_AZIMUTH80,1928
/*static */RwBool       FPSOn = FALSE;FPSOn85,2055
static RwInt32      FrameCounter = 0;FrameCounter87,2097
static RwInt32      FramesPerSecond = 0;FramesPerSecond88,2136
static RwRGBA       ForegroundColor = { 200, 200, 200, 255 };ForegroundColor90,2180
static RwRGBA       BackgroundColor = { 64, 64, 64, 0 };BackgroundColor91,2243
RwCamera           *Camera = NULL;Camera93,2303
RtCharset          *Charset = NULL;Charset94,2339
RwReal              CameraPitchRate = 0.0f;CameraPitchRate97,2396
RwReal              CameraTurnRate = 0.0f;CameraTurnRate98,2441
RwReal              CameraSpeed = 0.0f;CameraSpeed99,2485
RwReal              CameraStrafeSpeed = 0.0f;CameraStrafeSpeed100,2526
static RwV3d        Xaxis = { 1.0f, 0.0f, 0.0f };Xaxis102,2575
static RwV3d        Yaxis = { 0.0f, 1.0f, 0.0f };Yaxis103,2626
CreateCamera(RpWorld * world)CreateCamera109,2787
Initialize(void)Initialize143,3666
InitializeMenu(void)InitializeMenu169,4201
Initialize3D(void *param)Initialize3D190,4621
Terminate3D(void)Terminate3D249,5766
AttachPlugins(void)AttachPlugins280,6226
DisplayOnScreenInfo(void)DisplayOnScreenInfo352,7387
Render(void)Render372,7785
CameraUpdate(RwReal deltaTime)CameraUpdate412,8528
Idle(void)Idle455,9884
AppEventHandler(RsEvent event, void *param)AppEventHandler523,11119

examples/burningm/src/scene.c,2387
static RpWorld     *World = NULL;World51,1287
static RwChar       WorldTexturePath[] = RWSTRING("models/textures/");WorldTexturePath52,1322
static RwChar       WorldPath[] = RWSTRING("models/world.bsp");WorldPath53,1394
static RpClump     *Clump = NULL;Clump55,1461
static RwChar       ClumpPath[] = RWSTRING("models/clump.dff");ClumpPath56,1496
static const RwV3d  ClumpStartPos = { 30.0f, 46.0f, 0.0f };ClumpStartPos57,1561
static RwSphere     ClumpBoundingSphere;ClumpBoundingSphere58,1622
static RwSphere     ClumpWorldBoundingSphere;ClumpWorldBoundingSphere59,1664
static RtAnimAnimation *Anim = NULL;Anim61,1713
static RwChar       AnimPath[] = RWSTRING("models/clump.anm");AnimPath62,1751
static RpHAnimHierarchy *Hierarchy = NULL;Hierarchy63,1815
static RwBool       AnimEnabled = TRUE;AnimEnabled64,1859
static RwReal       AnimSpeedFactor = 0.3f; /* 1.0f is normal speed */AnimSpeedFactor65,1900
#define ANIM_CLUMP_SPEED ANIM_CLUMP_SPEED67,1974
static prtSystObj  *PrtSystem;PrtSystem70,2016
static RpLight     *DirectionalLight = NULL;DirectionalLight75,2071
static RpLight     *AmbientLight = NULL;AmbientLight76,2117
#define ALIGHT_VALUE ALIGHT_VALUE78,2161
#define DLIGHT_VALUE DLIGHT_VALUE79,2221
#define DLIGHT_ELEVATION DLIGHT_ELEVATION80,2289
#define DLIGHT_AZIMUTH DLIGHT_AZIMUTH81,2324
static const RwV3d  Xaxis = { 1.0f, 0.0f, 0.0f };Xaxis86,2380
static const RwV3d  Yaxis = { 0.0f, 1.0f, 0.0f };Yaxis87,2431
static const RwV3d  Zaxis = { 0.0f, 0.0f, 1.0f };Zaxis88,2482
WorldLoad(RwChar * filename)WorldLoad94,2642
ClumpLoad(RwChar * filename)ClumpLoad134,3515
ClumpGetHierarchyRecurse(RwFrame * frame, void *ptr)ClumpGetHierarchyRecurse174,4385
ClumpGetHierarchy(RpClump * clump)ClumpGetHierarchy197,4934
GetFirstAtomic(RpAtomic * atomic, void *data)GetFirstAtomic221,5511
SetupClump(void)SetupClump234,5780
DestroyClump(void)DestroyClump298,7562
UpdateClump(RwReal deltaTime)UpdateClump320,7887
SetupLights(void)SetupLights404,10288
DestroyLights(void)DestroyLights452,11399
SetupParticle(void)SetupParticle481,12036
SceneMenuInit(void)SceneMenuInit551,13844
SceneOpen(void)SceneOpen574,14474
SceneClose(void)SceneClose603,15001
SceneUpdate(RwReal deltaTime)SceneUpdate632,15481
SceneRender(void)SceneRender652,15822
SceneDisplayOnScreenInfo(void)SceneDisplayOnScreenInfo677,16203

examples/burningm/src/prtsyst.c,523
#define DONT_SKINxDONT_SKINx43,1174
PrtSystemCreate(RwInt32 numPrt, PrtSystemCreate50,1301
PrtSystemDestroy(prtSystObj *syst)PrtSystemDestroy271,7414
PrtSystemSetParticleFadeRange(prtSystObj *syst, RwReal initf, RwReal finalf)PrtSystemSetParticleFadeRange286,7665
#define GetBoneLTM(GetBoneLTM302,8149
EmitNew(prtObjInit *dest, prtSystObj *syst, RwInt32 newPrt)EmitNew307,8358
PrtSystemUpdate(prtSystObj *syst,RwReal deltaT)PrtSystemUpdate554,16069
PrtSystemRender(prtSystObj *syst)PrtSystemRender783,23499

examples/burningm/src/main.h,130
#define MAIN_HMAIN_H32,1003
#define MAXCAMERASPEED MAXCAMERASPEED34,1021
#define MAXCAMERAROTSPEED MAXCAMERAROTSPEED35,1058

examples/burningm/src/prtsyst.h,2572
#define PRTSYST_HPRTSYST_H31,1007
typedef struct prtObj prtObj;prtObj39,1142
struct prtObjprtObj40,1173
    RwReal age;       /* age      */		age42,1191
    RwV3d  spd;       /* speed    */	spd43,1231
    RwBool state;     /* active   */  state44,1270
typedef struct prtObjInit prtObjInit;prtObjInit51,1407
struct prtObjInitprtObjInit52,1446
	RwV3d  pos;       /* position */pos54,1468
    RwReal age;       /* age      */		age55,1503
    RwV3d  spd;       /* speed    */	spd56,1543
    RwBool state;     /* active   */  state57,1582
typedef struct prtSystObj prtSystObj;prtSystObj64,1719
struct prtSystObjprtSystObj65,1758
    RwReal		friction;		/* media friction coefficient           */	friction67,1781
    RwV3d 		gravity;		/* gravitic force			            */ 	gravity68,1849
    RwV3d		wind;			/* wind speed 				            */	  wind69,1909
    RwRGBAReal  color;		    /* particules main color	            */						color71,1967
    RwReal      colorInitial;	/* Luminance Linear Interptrs           */  	        colorInitial73,2044
    RwReal      colorDelta;	    /* Luminance Linear Interptrs           */  	        colorDelta74,2129
	prtObj      *prtList;  		/* particle buffer 		                */prtList76,2218
	prtObjInit  *prtListNext;   /* New particle buffer 		            */prtListNext77,2285
    RwInt32		maxPrtNum;	    /* maximum particles number             */maxPrtNum78,2355
    RwInt32		actPrtNum;      /* number of active particles           */           actPrtNum79,2427
	RpAtomic    *atomic;        /* emiter Geometry                      */ atomic81,2513
    RwReal		speed;      	/* emission speed 		                */speed82,2587
    RwReal		rndSpeed;      	/* random speed componant               */rndSpeed83,2652
    RwReal 		disp;      	 	/* displacement of particles position   */disp85,2726
    RwReal 		prtLife;      	/* particle life duration 	            */        prtLife87,2799
    RwInt32  	emitionRate;    /* emission timer 			            */emitionRate88,2878
    RwReal 		systemTime;     /* internal timer 			            */systemTime89,2945
    RwReal      frameRate;      /* particle frame rate                  */frameRate90,3011
    RwReal      frameLocker;    /* internal frame rate counter          */frameLocker91,3087
    RwUInt32    seed;seed93,3165
    RwUInt32    currentVtx;currentVtx94,3188
    RwBool		active;			/* Status flag			                */ active96,3219
    RpAtomic    *ptank;         /* Ptank pointer                        */ptank98,3285

examples/burningm/src/win/events.c,1122
static RwBool       LeftButtonDown = FALSE;LeftButtonDown42,1143
static RwBool       Forwards = FALSE;Forwards43,1188
static RwBool       Backwards = FALSE;Backwards44,1227
static RwBool       StrafeLeft = FALSE;StrafeLeft45,1267
static RwBool       StrafeRight = FALSE;StrafeRight46,1308
#define CAMERASPEED CAMERASPEED49,1354
#define CAMERAROTSCL CAMERAROTSCL50,1397
HandleLeftButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonDown56,1573
HandleLeftButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonUp67,1806
HandleRightButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonDown83,2182
HandleRightButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonUp92,2387
HandleMouseMove(RsMouseStatus * mouseStatus)HandleMouseMove104,2677
MouseHandler(RsEvent event, void *param)MouseHandler119,3056
HandleKeyDown(RsKeyStatus * keyStatus)HandleKeyDown170,4271
HandleKeyUp(RsKeyStatus * keyStatus)HandleKeyUp252,6155
KeyboardHandler(RsEvent event, void *param)KeyboardHandler312,7610
AttachInputDevices(void)AttachInputDevices349,8405

examples/burningm/src/win/prtwin.c,440
#define DONT_SKINxDONT_SKINx43,1174
#define GetBoneLTM(GetBoneLTM45,1196
static RwV3d positionCache[2500];positionCache48,1299
static RwV3d normalCache[2500];normalCache49,1334
static RwInt32 indexCache[2500];indexCache50,1367
static RwV3d positionCacheOut[2500];positionCacheOut52,1403
static RwV3d normalCacheOut[2500];normalCacheOut53,1441
EmitNewWin(prtObjInit *dest, prtSystObj *syst, RwInt32 newPrt)EmitNewWin106,3214

examples/burningm/makefile,172
DEMO = burningmDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC39,1172
$(OBJDIR)/%.$(O): $(SRC)/$(RWTARGET)/%.c$(OBJDIR)/%.$(O)93,2377

examples/blending/src/blend.h,85
#define BLEND_HBLEND_H33,1141
#define NUMBLENDFUNCTIONS NUMBLENDFUNCTIONS37,1183

examples/blending/src/main.c,1255
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1366
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1402
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1461
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1510
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1561
static RwBool FPSOn = FALSE;FPSOn61,1598
static RwInt32 FrameCounter = 0;FrameCounter63,1630
static RwInt32 FramesPerSecond = 0;FramesPerSecond64,1664
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor66,1703
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor67,1758
static RwCamera *Camera = NULL;Camera69,1815
static RtCharset *Charset = NULL;Charset70,1848
CreateCamera(void)CreateCamera78,1997
Initialize(void)Initialize88,2211
SrcColorCallback(RwBool testEnable)SrcColorCallback115,2757
DestColorCallback(RwBool testEnable)DestColorCallback129,2939
InitializeMenu(void)InitializeMenu146,3214
Initialize3D(void *param)Initialize3D238,6118
Terminate3D(void)Terminate3D288,7203
AttachPlugins(void)AttachPlugins316,7581
DisplayOnScreenInfo(void)DisplayOnScreenInfo341,7951
Render(void)Render367,8524
Idle(void)Idle424,9658
AppEventHandler(RsEvent event, void *param)AppEventHandler468,10431

examples/blending/src/blend.c,1250
#define NUMSRCVERTS NUMSRCVERTS34,1138
#define NUMDESTVERTS NUMDESTVERTS35,1163
#define SCALE SCALE37,1191
#define BLENDSRCALPHA BLENDSRCALPHA39,1215
#define BLENDINVSRCALPHA BLENDINVSRCALPHA40,1242
static RwIm2DVertex SrcGeometry[NUMSRCVERTS];SrcGeometry42,1274
static RwIm2DVertex DestGeometry[NUMDESTVERTS];DestGeometry43,1321
static RwV2d ScreenSize;ScreenSize45,1372
static RwReal Scale;Scale46,1398
static RwBlendFunction BlendFunctions[NUMBLENDFUNCTIONS] =BlendFunctions48,1422
RwBool BlendMode[NUMBLENDFUNCTIONS][NUMBLENDFUNCTIONS];BlendMode63,1742
RwInt32 SrcBlendID;SrcBlendID65,1801
RwInt32 DestBlendID;DestBlendID66,1822
RwRGBAReal SrcColor  = {0.00f, 0.75f, 0.75f, 0.5f};SrcColor68,1846
RwRGBAReal DestColor = {0.75f, 0.75f, 0.00f, 1.0f};DestColor69,1899
QueryBlendFunctionInfo(void)QueryBlendFunctionInfo77,2053
Im2DGeometryCreate(RwCamera *camera)Im2DGeometryCreate142,3628
UpdateSrcGeometryColor(RwRGBAReal *scrColor)UpdateSrcGeometryColor234,6180
UpdateDestGeometryColor(RwRGBAReal *destColor)UpdateDestGeometryColor258,6768
Im2DInitialize(RwCamera *camera)Im2DInitialize282,7366
Im2DRender(void)Im2DRender302,7795
Im2DSize(RwCamera *camera, RwInt32 width, RwInt32 height)Im2DSize340,8839

examples/blending/src/win/events.c,770
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown40,1274
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp46,1400
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown57,1617
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp63,1743
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove73,1960
MouseHandler(RsEvent event, void *param)MouseHandler83,2173
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown135,3303
HandleKeyUp(RsKeyStatus *keyStatus  __RWUNUSED__)HandleKeyUp142,3421
KeyboardHandler(RsEvent event, void *param)KeyboardHandler152,3627
AttachInputDevices(void)AttachInputDevices189,4360

examples/blending/makefile,106
DEMO = blendingDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC39,1172

examples/makefile,1319
RWOPTIONS = $(CURDIR)/options.makRWOPTIONS31,1050
RWLOGO=0RWLOGO39,1171
DEMODIR = $(CURDIR)DEMODIR44,1257
EXCLUDED =						\EXCLUDED51,1488
DEMOS = $(filter-out $(EXCLUDED), $(wildcard $(DEMODIR)/*))DEMOS56,1593
all: all-recursiveall59,1663
message:message61,1685
clean: clean-recursiveclean64,1724
distclean: distclean-recursive cleandistclean65,1748
doscheck: doscheck-recursivedoscheck66,1786
all-recursive clean-recursive doc-recursive header-recursive distclean-recursive doscheck-recursall-recursive68,1818
all-recursive clean-recursive doc-recursive header-recursive distclean-recursive doscheck-recursclean-recursive68,1818
all-recursive clean-recursive doc-recursive header-recursive distclean-recursive doscheck-recursdoc-recursive68,1818
all-recursive clean-recursive doc-recursive header-recursive distclean-recursive doscheck-recursheader-recursive68,1818
all-recursive clean-recursive doc-recursive header-recursive distclean-recursive doscheck-recursdistclean-recursive68,1818
all-recursive clean-recursive doc-recursive header-recursive distclean-recursive doscheck-recursdoscheck-recursive68,1818
msg_9600:msg_960078,2180
long_dir:long_dir94,2974
long_suf:long_suf99,3144
long_pre:long_pre104,3312
iso_9600: msg_9600 long_dir long_suf long_pre iso_9600109,3475

examples/bounding/src/main.c,1945
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1330
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1366
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1425
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1474
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW61,1525
static RwBool FPSOn = FALSE;FPSOn63,1562
static RwInt32 FrameCounter = 0;FrameCounter65,1594
static RwInt32 FramesPerSecond = 0;FramesPerSecond66,1628
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor68,1667
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor69,1722
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis71,1779
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis72,1821
static RwV3d Zaxis = {0.0f, 0.0f, 1.0f};Zaxis73,1863
static RpLight *AmbientLight = NULL;AmbientLight75,1907
static RpLight *MainLight = NULL;MainLight76,1945
static RtCharset *Charset = NULL;Charset77,1980
static RpWorld *World = NULL;World79,2017
RpClump *Clump = NULL;Clump81,2050
RwCamera *Camera = NULL;Camera82,2074
CreateWorld(void)CreateWorld91,2215
CreateCamera(RpWorld *world)CreateCamera109,2540
CreateAmbientLight(RpWorld *world)CreateAmbientLight133,3016
CreateMainLight(RpWorld *world)CreateMainLight154,3354
CreateClump(RpWorld *world)CreateClump189,4040
ClumpRotate(RpClump *clump, RwCamera *camera, RwReal xAngle, RwReal yAngle)ClumpRotate246,5514
ClumpTranslateZ(RpClump *clump, RwCamera *camera, RwReal zDelta)ClumpTranslateZ287,6599
Initialize(void)Initialize309,7137
SpaceCallback(RwBool testEnable)SpaceCallback336,7690
InitializeMenu(void)InitializeMenu353,7919
Initialize3D(void *param)Initialize3D394,8860
Terminate3D(void)Terminate3D470,10394
AttachPlugins(void)AttachPlugins532,11397
DisplayOnScreenInfo(void)DisplayOnScreenInfo560,11816
Render(void)Render582,12234
Idle(void)Idle621,12953
AppEventHandler(RsEvent event, void *param)AppEventHandler665,13726

examples/bounding/src/bounding.c,1307
#define NUMPOINTS NUMPOINTS39,1167
#define FASTWORLDBOXxFASTWORLDBOXx41,1194
#define FASTWORLDSPHERExFASTWORLDSPHEREx42,1217
static RwBBox ClumpLocalBoundingBox;ClumpLocalBoundingBox44,1245
static RwBBox ClumpWorldBoundingBox;ClumpWorldBoundingBox45,1283
static RwSphere ClumpLocalBoundingSphere;ClumpLocalBoundingSphere47,1323
static RwSphere ClumpWorldBoundingSphere;ClumpWorldBoundingSphere48,1366
RwInt32 WorldSpace = 0;WorldSpace50,1411
RwInt32 BoundingBox = 1;BoundingBox51,1436
static RwBool NewSphere = TRUE;NewSphere53,1464
AtomicAddVertices(RpAtomic *atomic, void *data)AtomicAddVertices61,1611
ClumpCalculateWorldBoundingBox(RpClump *clump)ClumpCalculateWorldBoundingBox130,3416
AtomicAddBoundingSphere(RpAtomic *atomic, void *data)AtomicAddBoundingSphere184,4891
ClumpCalculateWorldBoundingSphere(RpClump *clump)ClumpCalculateWorldBoundingSphere281,7799
UpdateWorldSpaceBoundingVolumes(RpClump *clump)UpdateWorldSpaceBoundingVolumes320,8712
InitializeLocalSpaceBoundingVolumes(RpClump *clump)InitializeLocalSpaceBoundingVolumes334,8975
ClumpRenderBoundingBox(RpClump *clump)ClumpRenderBoundingBox361,9714
ClumpRenderBoundingCircle(RpClump *clump)ClumpRenderBoundingCircle417,11041
ClumpRenderBoundingVolume(RpClump *clump)ClumpRenderBoundingVolume481,12640

examples/bounding/src/main.h,30
#define MAIN_HMAIN_H32,1050

examples/bounding/src/bounding.h,38
#define BOUNDING_HBOUNDING_H32,1058

examples/bounding/src/win/events.c,873
static RwBool RotateClump = FALSE;RotateClump39,1145
static RwBool TranslateClump = FALSE;TranslateClump40,1181
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown48,1337
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp57,1489
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown69,1729
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp78,1885
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove90,2130
MouseHandler(RsEvent event, void *param)MouseHandler119,2712
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown171,3842
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp181,4049
KeyboardHandler(RsEvent event, void *param)KeyboardHandler191,4254
AttachInputDevices(void)AttachInputDevices228,4987

examples/bounding/makefile,106
DEMO = boundingDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/template/src/main.c,1200
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH50,1195
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT51,1231
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO54,1290
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1339
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW59,1390
static RwBool FPSOn = FALSE;FPSOn61,1427
static RwInt32 FrameCounter = 0;FrameCounter63,1459
static RwInt32 FramesPerSecond = 0;FramesPerSecond64,1493
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor66,1532
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor67,1587
RpWorld *World = NULL;World69,1644
RwCamera *Camera = NULL;Camera70,1668
RtCharset *Charset = NULL;Charset71,1694
CreateWorld(void)CreateWorld79,1835
CreateCamera(RpWorld *world)CreateCamera97,2160
Initialize(void)Initialize120,2631
InitializeMenu(void)InitializeMenu147,3172
Initialize3D(void *param)Initialize3D166,3538
Terminate3D(void)Terminate3D224,4689
AttachPlugins(void)AttachPlugins267,5397
DisplayOnScreenInfo(void)DisplayOnScreenInfo295,5816
Render(void)Render314,6170
Idle(void)Idle353,6866
AppEventHandler(RsEvent event, void *param)AppEventHandler409,7896

examples/template/src/win/events.c,757
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown43,1147
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp52,1336
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown66,1614
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp75,1805
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove88,2084
MouseHandler(RsEvent event, void *param)MouseHandler101,2348
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown153,3478
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp226,4836
KeyboardHandler(RsEvent event, void *param)KeyboardHandler239,5090
AttachInputDevices(void)AttachInputDevices276,5823

examples/template/makefile,106
DEMO = templateDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC39,1172

examples/hanim4/src/main.c,1759
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1321
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1357
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1416
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1465
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1516
static RwBool FPSOn = FALSE;FPSOn67,1553
static RwInt32 FrameCounter = 0;FrameCounter69,1585
static RwInt32 FramesPerSecond = 0;FramesPerSecond70,1619
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor72,1658
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor73,1713
static RpWorld *World = NULL;World75,1770
static RwCamera *Camera = NULL;Camera76,1801
static RtCharset *Charset = NULL;Charset77,1834
static RpClump *Clump = NULL;Clump78,1869
static RpLight *AmbientLight = NULL;AmbientLight79,1900
static RpLight *MainLight = NULL;MainLight80,1938
static RwInt32 AnimCompressionTypeIndex;AnimCompressionTypeIndex81,1973
static RwInt32 AnimReductionTypeIndex;AnimReductionTypeIndex82,2015
static RwInt32 AnimUpdateTime;AnimUpdateTime83,2055
CreateWorld(void)CreateWorld89,2196
CreateAmbientLight(RpWorld *world)CreateAmbientLight107,2520
CreateMainLight(RpWorld *world)CreateMainLight129,2938
CreateCamera(RpWorld *world)CreateCamera163,3695
Initialize(void)Initialize186,4170
AnimTypeCallback(RwBool justCheck)AnimTypeCallback214,4732
InitializeMenu(void)InitializeMenu240,5309
Initialize3D(void *param)Initialize3D286,6610
Terminate3D(void)Terminate3D364,8199
AttachPlugins(void)AttachPlugins421,9133
DisplayOnScreenInfo(void)DisplayOnScreenInfo477,10066
Render(void)Render503,10676
Idle(void)Idle540,11334
AppEventHandler(RsEvent event, void *param)AppEventHandler598,12516

examples/hanim4/src/hanim.h,159
#define HANIM1_HHANIM1_H31,937
#define NUM_REDUCTION_METHODS NUM_REDUCTION_METHODS37,1023
#define NUM_COMPRESSION_METHODS NUM_COMPRESSION_METHODS38,1056

examples/hanim4/src/hanim.c,914
RtAnimAnimation *Anims[NUM_REDUCTION_METHODS][NUM_COMPRESSION_METHODS];Anims40,1099
RwInt32          Sizes[NUM_REDUCTION_METHODS][NUM_COMPRESSION_METHODS];Sizes41,1172
RtAnimAnimation *CurrentAnim;CurrentAnim42,1245
static const RwChar *filenames[NUM_REDUCTION_METHODS][NUM_COMPRESSION_METHODS] =filenames44,1278
LoadAnimationFile(RwChar *file)LoadAnimationFile77,2205
LoadClump(RpWorld *world)LoadClump94,2543
GetChildFrameHierarchy(RwFrame *frame, void *data)GetChildFrameHierarchy136,3510
GetHierarchy(RpClump *clump)GetHierarchy160,4027
SetHierarchyForSkinAtomic(RpAtomic *atomic, void *data)SetHierarchyForSkinAtomic179,4418
CreateClump(RpWorld *world)CreateClump191,4681
DestroyClump(RpClump *clump, RpWorld *world)DestroyClump349,9616
GetSkinHierarchy(RpAtomic *atomic, void *data)GetSkinHierarchy379,10198
UpdateAnimation(RpClump *clump, RwReal deltaTime)UpdateAnimation391,10444

examples/hanim4/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1137
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp48,1265
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown58,1480
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp65,1609
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove75,1826
MouseHandler(RsEvent event, void *param)MouseHandler85,2039
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown137,3169
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp144,3287
KeyboardHandler(RsEvent event, void *param)KeyboardHandler154,3492
AttachInputDevices(void)AttachInputDevices191,4225

examples/hanim4/makefile,104
DEMO = hanim4DEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =	$(SRC)/main.c		\CSRC39,1170

examples/font/src/font.h,76
#define FONTEXAMPLE_HFONTEXAMPLE_H32,958
#define NUMFONT NUMFONT39,1049

examples/font/src/main.c,1581
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH59,1342
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT60,1378
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO63,1437
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO65,1486
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW68,1537
static RwBool FPSOn = FALSE;FPSOn70,1574
static RwInt32 FrameCounter = 0;FrameCounter72,1606
static RwInt32 FramesPerSecond = 0;FramesPerSecond73,1640
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor75,1679
static RwRGBA BackgroundColor = { 100,  80,  100,   0};BackgroundColor76,1734
static RtCharset *Charset = NULL;Charset78,1793
RwCamera    *Camera = NULL;Camera80,1830
RpWorld     *World = NULL;World82,1861
RwInt32     WinWidth = DEFAULT_SCREEN_WIDTH;WinWidth84,1891
RwInt32     WinHeight = DEFAULT_SCREEN_HEIGHT;WinHeight85,1937
RwBBox      WinBBox;WinBBox86,1985
static RwBool   filtered = FALSE;filtered88,2009
CreateWorld(void)CreateWorld94,2153
CreateCamera(RpWorld *world)CreateCamera112,2478
Initialize(void)Initialize146,3300
TextureSetFilterModeCB( RwTexture *tex, void * data)TextureSetFilterModeCB172,3839
textureFilterCB( RwBool testEnable )textureFilterCB186,4133
InitializeMenu(void)InitializeMenu217,4800
Initialize3D(void *param)Initialize3D245,5470
Terminate3D(void)Terminate3D301,6584
AttachPlugins(void)AttachPlugins339,7097
DisplayOnScreenInfo(void)DisplayOnScreenInfo374,7619
Render(void)Render442,9811
Idle(void)Idle480,10459
AppEventHandler(RsEvent event, void *param)AppEventHandler532,11414

examples/font/src/main.h,29
#define MAIN_HMAIN_H32,951

examples/font/src/font.c,994
Rt2dBrush   *Brush;Brush59,1370
Rt2dFont    *Term;Term61,1393
RwInt32     FontIndex;FontIndex63,1415
Rt2dFont    *Font[NUMFONT];Font64,1439
RwInt32     *FontCharSet[NUMFONT];FontCharSet65,1468
RwInt32     FontCharSetCount[NUMFONT];FontCharSetCount66,1504
RwChar      FontName[NUMFONT][20] =FontName68,1546
static RwV2d TranslateXStep;TranslateXStep77,1778
static RwV2d TranslateYStep;TranslateYStep78,1808
static RwV2d RotateOrigin;RotateOrigin79,1838
static RwV2d Position;Position80,1866
TextureFilterMode( RwTexture *tex, void * data)TextureFilterMode86,2001
Render2D(RwReal dTime __RWUNUSED__)Render2D99,2274
Initialize2D(void)Initialize2D294,8569
Terminate2D(void)Terminate2D371,10733
PagePositionSet(RwReal x, RwReal y)PagePositionSet404,11268
PageTranslateInit(void)PageTranslateInit416,11465
PageTranslate(RwReal x, RwReal y)PageTranslate429,11692
PageRotateInit(RwReal x, RwReal y)PageRotateInit441,11983
PageRotate(RwReal x)PageRotate458,12393

examples/font/src/win/events.c,1129
static RwBool Ctrl;Ctrl41,1048
static RwBool Alt;Alt42,1069
static RwBool Shift;Shift43,1089
enum _MMMode_MMMode45,1113
    MMNoAction,MMNoAction47,1130
    MMTranslate,MMTranslate48,1147
    MMRotate,MMRotate49,1165
    _MMMODEFORCEENUMSIZEINT = RWFORCEENUMSIZEINT_MMMODEFORCEENUMSIZEINT51,1182
typedef enum _MMMode MMMode;MMMode53,1236
static MMMode MouseMoveMode = MMNoAction;MouseMoveMode55,1268
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown62,1426
HandleLeftButtonUp(RsMouseStatus *mouseStatus )HandleLeftButtonUp76,1704
HandleRightButtonDown(RsMouseStatus *mouseStatus )HandleRightButtonDown88,1939
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp102,2250
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove114,2498
MouseHandler(RsEvent event, void *param)MouseHandler146,3127
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown198,4256
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp238,4957
KeyboardHandler(RsEvent event, void *param)KeyboardHandler278,5656
AttachInputDevices(void)AttachInputDevices315,6389

examples/font/makefile,102
DEMO = fontDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1088
CSRC =	$(SRC)/main.c		\CSRC39,1168

examples/pshader/src/pshaderD3D9.c,2349
static void *BlurVertexShader = NULL;BlurVertexShader50,1199
static void *BlurPixelShader = NULL;BlurPixelShader51,1238
typedef struct RenderedVertexFormat RenderedVertexFormat;RenderedVertexFormat56,1318
struct RenderedVertexFormatRenderedVertexFormat57,1377
    RwReal x;x59,1409
    RwReal y;y60,1424
    RwReal z;z61,1439
    RwReal u;u62,1454
    RwReal v;v63,1469
static RenderedVertexFormat RenderedVertex[4];RenderedVertex66,1490
static RpClump  *Clump = NULL;Clump68,1540
static RpLight  *Light = NULL;Light69,1572
static RwFrame  *LightFrame = NULL;LightFrame70,1604
#define NUM_CAMERA_TEXTURES NUM_CAMERA_TEXTURES76,1726
static RwCamera *TexCamera[NUM_CAMERA_TEXTURES];TexCamera77,1815
static RwTexture *CameraTexture[NUM_CAMERA_TEXTURES];CameraTexture78,1865
#define TEXSIZE TEXSIZE79,1920
RwInt32 BlurPasses = 0, BlurType = 0;BlurPasses81,1945
RwInt32 BlurPasses = 0, BlurType = 0;BlurType81,1945
static RwRGBA clearColor = {0, 0, 0, 255};clearColor83,1986
static const D3DXVECTOR3 vEyePt    = { 0.0f, 0.0f, -5.0f };vEyePt86,2034
static const D3DXVECTOR3 vLookatPt = { 0.0f, 0.0f, 0.0f };vLookatPt87,2095
static const D3DXVECTOR3 vUp       = { 0.0f, 1.0f, 0.0f };vUp88,2155
static const D3DXVECTOR4 pixelshaderLerp = {0.5f, 0.5f, 0.5f, 0.5f};pixelshaderLerp90,2217
CreateTextureCamera(RpWorld *world, RwBool wantZRaster)CreateTextureCamera96,2397
SetUpDFF(void)SetUpDFF168,4149
PShaderOpen(void)PShaderOpen214,5187
void BoxFilterSetup()BoxFilterSetup292,6999
void BoxFilterSetup()BoxFilterSetup339,8750
void VBoxFilterSetup()VBoxFilterSetup373,9945
void VBoxFilterSetup()VBoxFilterSetup422,11669
void HBoxFilterSetup()HBoxFilterSetup458,12854
void HBoxFilterSetup()HBoxFilterSetup506,14571
static int blurDir = 0;blurDir539,15717
static void Blur(int srcTexture)Blur541,15744
static int mostBlurred;mostBlurred640,18843
PShaderUpdate(RwReal delta)PShaderUpdate643,18876
void PShaderRender()PShaderRender692,19912
PShaderClose(void)PShaderClose699,20060
static RwReal RotateX = 0.0f;RotateX762,21522
static RwReal RotateY = 0.0f;RotateY763,21553
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump766,21604
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation793,22247
void CameraTranslate(RwReal xDelta, RwReal zDelta)CameraTranslate821,22859

examples/pshader/src/blurvshaderD3D9.h,82
const DWORD dwBlurvshaderD3D9VertexShader[] =dwBlurvshaderD3D9VertexShader9,116

examples/pshader/src/main.c,1212
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH51,1169
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT52,1205
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1264
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1313
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW60,1364
static RwBool FPSOn = FALSE;FPSOn62,1401
static RwInt32 FrameCounter = 0;FrameCounter64,1433
static RwInt32 FramesPerSecond = 0;FramesPerSecond65,1467
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor67,1506
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor68,1561
RpWorld *World = NULL;World70,1618
RwCamera *Camera = NULL;Camera71,1642
RtCharset *Charset = NULL;Charset72,1668
CreateWorld(void)CreateWorld80,1809
CreateCamera(RpWorld *world)CreateCamera98,2134
Initialize(void)Initialize125,2795
InitializeMenu(void)InitializeMenu152,3340
Initialize3D(void *param)Initialize3D185,4163
Terminate3D(void)Terminate3D250,5451
AttachPlugins(void)AttachPlugins295,6182
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo323,6601
Render(void)Render342,6967
Idle(void)Idle382,7699
AppEventHandler(RsEvent event, void *param)AppEventHandler441,8788

examples/pshader/src/blurvshaderD3D8.h,76
DWORD dwBlurvshaderD3D8VertexShader[] = {dwBlurvshaderD3D8VertexShader1,0

examples/pshader/src/pshader.h,35
#define PSHADER_HPSHADER_H32,915

examples/pshader/src/blurvshaderdefs.h,1345
#define BLUR_VSHADER_DEFS_HBLUR_VSHADER_DEFS_H2,29
#define VSD_REG_POS VSD_REG_POS5,107
#define VSD_REG_TEXCOORDS VSD_REG_TEXCOORDS6,150
#define VSIN_REG_POS VSIN_REG_POS9,253
#define VSIN_REG_TEXCOORDS VSIN_REG_TEXCOORDS10,297
#define VSCONST_REG_BASE VSCONST_REG_BASE13,372
#define VSCONST_REG_TRANSFORM_OFFSET VSCONST_REG_TRANSFORM_OFFSET15,417
#define VSCONST_REG_TRANSFORM_SIZE VSCONST_REG_TRANSFORM_SIZE16,475
#define VSCONST_REG_T0_OFFSET VSCONST_REG_T0_OFFSET18,520
#define VSCONST_REG_T0_SIZE VSCONST_REG_T0_SIZE19,619
#define VSCONST_REG_T1_OFFSET VSCONST_REG_T1_OFFSET20,662
#define VSCONST_REG_T1_SIZE VSCONST_REG_T1_SIZE21,747
#define VSCONST_REG_T2_OFFSET VSCONST_REG_T2_OFFSET22,790
#define VSCONST_REG_T2_SIZE VSCONST_REG_T2_SIZE23,875
#define VSCONST_REG_T3_OFFSET VSCONST_REG_T3_OFFSET24,918
#define VSCONST_REG_T3_SIZE VSCONST_REG_T3_SIZE25,1003
#define VSCONST_REG_TRANSFORM_X VSCONST_REG_TRANSFORM_X28,1109
#define VSCONST_REG_TRANSFORM_Y VSCONST_REG_TRANSFORM_Y29,1186
#define VSCONST_REG_TRANSFORM_Z VSCONST_REG_TRANSFORM_Z30,1263
#define VSCONST_REG_TRANSFORM_W VSCONST_REG_TRANSFORM_W31,1340
#define VSCONST_REG_T0 VSCONST_REG_T033,1419
#define VSCONST_REG_T1 VSCONST_REG_T134,1485
#define VSCONST_REG_T2 VSCONST_REG_T235,1551
#define VSCONST_REG_T3 VSCONST_REG_T336,1617

examples/pshader/src/pshaderD3D8.c,2125
BlurVertexShaderDeclaration[] =BlurVertexShaderDeclaration51,1213
static DWORD BlurVertexShader, BlurPixelShader;BlurVertexShader59,1462
static DWORD BlurVertexShader, BlurPixelShader;BlurPixelShader59,1462
typedef struct RenderedVertexFormat RenderedVertexFormat;RenderedVertexFormat64,1553
struct RenderedVertexFormatRenderedVertexFormat65,1612
    RwReal x;x67,1644
    RwReal y;y68,1659
    RwReal z;z69,1674
    RwReal u;u70,1689
    RwReal v;v71,1704
static RenderedVertexFormat RenderedVertex[4];RenderedVertex74,1725
static RpClump  *Clump = NULL;Clump76,1775
static RpLight  *Light = NULL;Light77,1807
static RwFrame  *LightFrame = NULL;LightFrame78,1839
#define NUM_CAMERA_TEXTURES NUM_CAMERA_TEXTURES84,1961
static RwCamera *TexCamera[NUM_CAMERA_TEXTURES];TexCamera85,2050
static RwTexture *CameraTexture[NUM_CAMERA_TEXTURES];CameraTexture86,2100
#define TEXSIZE TEXSIZE87,2155
RwInt32 BlurPasses = 0, BlurType = 0;BlurPasses89,2180
RwInt32 BlurPasses = 0, BlurType = 0;BlurType89,2180
static RwRGBA clearColor = {0, 0, 0, 255};clearColor91,2221
CreateTextureCamera(RpWorld *world, RwBool wantZRaster)CreateTextureCamera97,2375
SetUpDFF(void)SetUpDFF169,4127
PShaderOpen(void)PShaderOpen215,5165
void BoxFilterSetup()BoxFilterSetup295,7115
void BoxFilterSetup()BoxFilterSetup342,8866
void VBoxFilterSetup()VBoxFilterSetup376,10061
void VBoxFilterSetup()VBoxFilterSetup425,11785
void HBoxFilterSetup()HBoxFilterSetup461,12970
void HBoxFilterSetup()HBoxFilterSetup509,14687
static int blurDir = 0;blurDir542,15833
static void Blur( int srcTexture )Blur544,15860
static int mostBlurred;mostBlurred646,19336
PShaderUpdate(RwReal delta)PShaderUpdate649,19369
void PShaderRender()PShaderRender698,20405
PShaderClose(void)PShaderClose705,20553
static RwReal RotateX = 0.0f;RotateX760,21843
static RwReal RotateY = 0.0f;RotateY761,21874
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump764,21925
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation791,22568
void CameraTranslate(RwReal xDelta, RwReal zDelta)CameraTranslate819,23180

examples/pshader/src/blurpshaderD3D9.h,80
const DWORD dwBlurpshaderD3D9PixelShader[] =dwBlurpshaderD3D9PixelShader9,116

examples/pshader/src/blurpshaderD3D8.h,74
DWORD dwBlurpshaderD3D8PixelShader[] = {dwBlurpshaderD3D8PixelShader1,0

examples/pshader/src/win/events.c,855
static RwBool Rotate = FALSE;Rotate41,1162
static RwBool TranslateZ = FALSE;TranslateZ42,1193
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1340
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp57,1489
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown70,1727
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp78,1881
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove90,2128
MouseHandler(RsEvent event, void *param)MouseHandler120,2790
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown172,3903
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp179,4021
KeyboardHandler(RsEvent event, void *param)KeyboardHandler189,4223
AttachInputDevices(void)AttachInputDevices226,4953

examples/pshader/src/pshader.c,2221
BlurVertexShaderDeclaration[] =BlurVertexShaderDeclaration48,1194
static DWORD BlurVertexShader, BlurPixelShader;BlurVertexShader56,1443
static DWORD BlurVertexShader, BlurPixelShader;BlurPixelShader56,1443
typedef struct RenderedVertexRenderedVertex61,1541
    RwReal      x, y, z;        /* The un-transformed position for the vertex */x63,1575
    RwReal      x, y, z;        /* The un-transformed position for the vertex */y63,1575
    RwReal      x, y, z;        /* The un-transformed position for the vertex */z63,1575
    RwReal      u;              /* Texture coordinate */u64,1657
    RwReal      v;              /* Texture coordinate */v65,1715
} RenderedVertex;RenderedVertex66,1773
LPDIRECT3DVERTEXBUFFER8 RenderedVertexBuffer = NULL;RenderedVertexBuffer68,1794
static RpClump  *Clump = NULL;Clump70,1850
static RpLight  *Light = NULL;Light71,1882
static RwFrame  *LightFrame = NULL;LightFrame72,1914
#define NUM_CAMERA_TEXTURES NUM_CAMERA_TEXTURES78,2036
static RwCamera *TexCamera[NUM_CAMERA_TEXTURES];TexCamera79,2125
static RwTexture *CameraTexture[NUM_CAMERA_TEXTURES];CameraTexture80,2175
#define TEXSIZE TEXSIZE81,2230
RwInt32 BlurPasses = 0, BlurType = 0;BlurPasses83,2255
RwInt32 BlurPasses = 0, BlurType = 0;BlurType83,2255
static RwRGBA clearColor = {0, 0, 0, 255};clearColor85,2296
CreateTextureCamera(RpWorld *world, RwBool wantZRaster)CreateTextureCamera91,2450
SetUpDFF(void)SetUpDFF163,4202
PShaderOpen(void)PShaderOpen209,5240
void BoxFilterSetup()BoxFilterSetup289,7370
void VBoxFilterSetup()VBoxFilterSetup320,8508
void HBoxFilterSetup()HBoxFilterSetup354,9638
static int blurDir = 0;blurDir386,10754
void Blur( int srcTexture )Blur388,10781
static int mostBlurred;mostBlurred486,14144
PShaderUpdate(RwReal delta)PShaderUpdate489,14177
void PShaderRender()PShaderRender538,15213
PShaderClose(void)PShaderClose545,15361
static RwReal RotateX = 0.0f;RotateX606,16807
static RwReal RotateY = 0.0f;RotateY607,16838
RotateClump(RpClump *clump, RwReal deltaTime)RotateClump610,16889
SetRotation(RwReal deltaX, RwReal deltaY)SetRotation637,17532
void CameraTranslate(RwReal xDelta, RwReal zDelta)CameraTranslate665,18144

examples/pshader/makefile,508
DEMO = pshaderDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1091
unsupported:unsupported39,1171
OPTDISTCLEAN = localdistcleanOPTDISTCLEAN59,1694
$(SRC)/%.h : $(SRC)/%.psh$(SRC)/%.h64,1808
$(SRC)/%.h : $(SRC)/%.vsh$(SRC)/%.h67,1858
$(OBJDIR)/pshader.$(O): $(SRC)/pshader.c $(SRC)/blurpshader.h $(SRC)/blurvshader.h$(OBJDIR)/pshader.$(O)75,1982
CSRC =	$(SRC)/main.c		\CSRC77,2068
CSRC =	$(SRC)/main.c		\CSRC88,2269
CSRC =	$(SRC)/main.c		\CSRC117,2726
localdistclean:localdistclean151,3466

examples/pblaster/src/burst.c,900
RpAtomic *BurstPTank;BurstPTank49,1391
RwInt32 PrtPerBurst;PrtPerBurst51,1416
RwInt32 BurstInRenderList;BurstInRenderList52,1438
RwBool            InRenderList;InRenderList54,1468
RpPTankLockStruct BurstPosLock;BurstPosLock55,1501
static RwTexture *BurstPTankTexture;BurstPTankTexture57,1536
RwInt32 MaxBurst;MaxBurst58,1574
static burstObj *BurstObjList;BurstObjList60,1595
static RwInt32 ActiveBurst;ActiveBurst61,1627
sincos(float angle,sincos68,1771
BurstsInitialize(RwInt32 numMaxBurst, RwInt32 numPrtPerBurst)BurstsInitialize97,2413
BurstsDestroy(void)BurstsDestroy241,5777
BurstGetNewBurst(void)BurstGetNewBurst265,6208
BurstBeginRenderList(void)BurstBeginRenderList290,6711
BurstAddToRenderList(burstObj **BurstObjList, RwInt32 numBurst)BurstAddToRenderList311,7180
BurstEndRenderList(void)BurstEndRenderList422,10872
BurstsRender(void)BurstsRender442,11385

examples/pblaster/src/main.c,1333
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1356
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1392
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1451
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1500
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1551
static RwBool FPSOn = FALSE;FPSOn66,1588
static RwInt32 FrameCounter = 0;FrameCounter68,1620
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1654
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor71,1693
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor72,1748
RpWorld *World = NULL;World74,1805
RwCamera *Camera = NULL;Camera75,1829
RtCharset *Charset = NULL;Charset76,1855
RpLight *LightDirectional = NULL;LightDirectional77,1883
CreateDirectionalLight(RpWorld *world)CreateDirectionalLight84,2029
CreateWorld(void)CreateWorld126,2951
CreateCamera(RpWorld *world)CreateCamera144,3276
Initialize(void)Initialize176,4002
InitializeMenu(void)InitializeMenu203,4542
Initialize3D(void *param)Initialize3D222,4908
Terminate3D(void)Terminate3D298,6403
AttachPlugins(void)AttachPlugins356,7454
DisplayOnScreenInfo(void)DisplayOnScreenInfo392,7996
Render(void)Render440,9484
Idle(void)Idle481,10224
AppEventHandler(RsEvent event, void *param)AppEventHandler538,11285

examples/pblaster/src/shot.c,580
static RpAtomic *shotPTank;shotPTank10,132
static RwTexture *ShotPTankTexture;ShotPTankTexture11,161
static shotObject *shotObjList;shotObjList13,200
static RwInt32 ActiveShot;ActiveShot15,235
static RwInt32 MaxActiveShot;MaxActiveShot16,263
ShotsCreate(RwInt32 maxNumShot)ShotsCreate23,395
ShotsDestroy(void)ShotsDestroy127,2973
ShotSetup(shotObject *shot, RwMatrix *orientation)ShotSetup161,3625
ShotShot(RwMatrix *orientation, RwReal width,RwReal length)ShotShot232,5276
ShotsUpdate(RwReal deltaT)ShotsUpdate259,5850
ShotsRender(void)ShotsRender399,10260

examples/pblaster/src/shot.h,840
#define DECAL_HDECAL_H34,1067
typedef struct shotResult shotResult;shotResult36,1086
struct shotResultshotResult38,1127
    RwV3d posP1;posP140,1149
    RwV3d rightP1;rightP141,1167
    RwV3d upP1;upP142,1187
    RwV3d posP2;posP244,1206
    RwV3d rightP2;rightP245,1224
    RwV3d upP2;upP246,1244
#define SO_STATE_DEAD SO_STATE_DEAD50,1274
#define SO_STATE_SHOT SO_STATE_SHOT51,1307
typedef struct shotObject shotObject;shotObject53,1342
struct shotObjectshotObject55,1383
    RwReal time;time57,1405
    RwUInt32 state;state58,1423
    RwMatrix orientation;orientation60,1450
    RwReal width;width62,1483
    RwReal length;length63,1502
    RwReal speed;speed64,1522
    RwRGBA initialColor;initialColor66,1543
    RwRGBAReal deltaColor;deltaColor67,1569
    RwReal decayTime;decayTime69,1599

examples/pblaster/src/blaster.h,922
#define BLASTER_HBLASTER_H34,1069
#define BS_STATE_IDLE BS_STATE_IDLE36,1090
#define BS_STATE_PRECHARGING BS_STATE_PRECHARGING37,1135
#define BS_STATE_CHARGING BS_STATE_CHARGING38,1180
#define BS_STATE_SUPERCHARGING BS_STATE_SUPERCHARGING39,1225
#define BS_STATE_DISCHARGING BS_STATE_DISCHARGING40,1270
#define BS_STATE_CHARGED BS_STATE_CHARGED41,1315
#define BS_STATE_FIRED BS_STATE_FIRED42,1360
#define BS_STATE_NUM_STATES BS_STATE_NUM_STATES43,1405
typedef struct blasterShot blasterShot;blasterShot45,1452
#define SKY_PERF_COUNTERxSKY_PERF_COUNTERx47,1495
#define SHOTUPDATE SHOTUPDATE51,1551
#define BURSTUPDATE BURSTUPDATE52,1573
#define BLASTERSTATE BLASTERSTATE53,1596
#define TOTALFRAME TOTALFRAME54,1620
struct blasterShotblasterShot62,1720
    RwInt32 state;state64,1743
    RwReal time;time65,1763
    RwV3d radius;radius67,1783
    RwV3d deltaRadius;deltaRadius68,1802

examples/pblaster/src/burst.h,273
#define BURST_HBURST_H33,1072
typedef struct burstObj burstObj;burstObj37,1114
struct burstObj burstObj39,1151
    RwMatrix orientation;   /* 4 */orientation41,1172
    RwV3d   radius;         /* 3 */radius43,1211
    RwReal  time;           /* 1 */time44,1248

examples/pblaster/src/blaster.c,2404
typedef struct BlasterStateParam BlasterStateParam;BlasterStateParam51,1313
struct  BlasterStateParamBlasterStateParam53,1368
    RwReal timeLaps;timeLaps55,1398
    RwReal ooTimeLaps;ooTimeLaps57,1422
    RwBool burstStatus;burstStatus59,1448
    RwBool burstMorph;burstMorph60,1473
    RwReal burstTimeFactor;burstTimeFactor62,1503
    RwV3d  burstRadius;burstRadius63,1532
#define MAX_SHOT MAX_SHOT69,1590
#define PRT_PER_BLASTER_BURST PRT_PER_BLASTER_BURST70,1636
blasterShot Shot;Shot76,1717
static burstObj *Burst;Burst81,1767
static RwMatrix *BlasterMtx;BlasterMtx82,1792
static RpClump  *BlasterClump;BlasterClump83,1822
static RwBool BlasterLocked = FALSE;BlasterLocked85,1856
static RwBool TriggerReleased;TriggerReleased86,1894
BlasterStateParam BlasterParams[BS_STATE_NUM_STATES];BlasterParams88,1928
const RwRGBA    BlasterBigShotInitialColor = { 128, 128, 255, 255 };BlasterBigShotInitialColor90,1985
const RwRGBA    BlasterBigShotDeadColor = { 0, 0,0, 0 };BlasterBigShotDeadColor91,2055
RwRGBAReal      BlasterBigShotDeltaColor;BlasterBigShotDeltaColor92,2113
const RwReal    BlasterBigShotDeathTime = 1.00f;BlasterBigShotDeathTime93,2156
const RwReal    BlasterBigShotSpeed = 3.0f;BlasterBigShotSpeed94,2206
const RwReal    BlasterBigShotLength = 100.0f;BlasterBigShotLength95,2251
const RwRGBA    BlasterShotInitialColor = { 32, 32, 255, 255 };BlasterShotInitialColor98,2303
const RwRGBA    BlasterShotDeadColor = { 32, 32, 255, 0 };BlasterShotDeadColor99,2368
RwRGBAReal      BlasterShotDeltaColor;BlasterShotDeltaColor100,2428
const RwReal    BlasterShotDeathTime = 1.00f;BlasterShotDeathTime101,2468
const RwReal    BlasterShotSpeed = 10.0f;BlasterShotSpeed102,2515
const RwReal    BlasterShotWidth = 5.0f;BlasterShotWidth103,2558
const RwReal    BlasterShotLength = 50.0f;BlasterShotLength104,2600
ClumpLoad(void)ClumpLoad110,2753
BasterFillBlasterParamTable(void)BasterFillBlasterParamTable150,3781
getFirstChildCB(RwFrame *frame, void *data)getFirstChildCB247,7222
BlasterCreate(void)BlasterCreate266,7611
BlasterShotStart(void)BlasterShotStart352,10325
BlasterShotEnd(void)BlasterShotEnd392,11148
BlasterUpdate(RwReal deltaT)BlasterUpdate410,11426
BlasterRender(void)BlasterRender631,17539
BlasterDestroy(void)BlasterDestroy662,18074
BlasterRotate(RwReal xAngle, RwReal yAngle)BlasterRotate678,18331

examples/pblaster/src/win/events.c,680
static RwBool LeftButtonState = FALSE;LeftButtonState42,1235
static RwBool Ctrl = FALSE;Ctrl44,1277
HandleLeftButtonDown(void)HandleLeftButtonDown51,1421
HandleLeftButtonUp(void)HandleLeftButtonUp63,1631
HandleRightButtonDown(void)HandleRightButtonDown75,1840
HandleRightButtonUp(void)HandleRightButtonUp85,2020
HandleMouseMove(void *param)HandleMouseMove95,2198
MouseHandler(RsEvent event, void *param)MouseHandler119,2659
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown165,3542
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp194,4086
KeyboardHandler(RsEvent event, void *param)KeyboardHandler223,4625
AttachInputDevices(void)AttachInputDevices260,5358

examples/pblaster/makefile,106
DEMO = pblasterDEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1092
CSRC =	$(SRC)/main.c		\CSRC39,1172

examples/Tutorials/Tutorial2/src/main.c,1435
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH49,1175
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT50,1211
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO53,1270
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1319
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW58,1370
static RwBool FPSOn = FALSE;FPSOn60,1407
static RwInt32 FrameCounter = 0;FrameCounter62,1439
static RwInt32 FramesPerSecond = 0;FramesPerSecond63,1473
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor65,1512
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor66,1567
RpWorld *World = NULL;World68,1624
RwCamera *Camera = NULL;Camera69,1648
RtCharset *Charset = NULL;Charset70,1674
RpLight *Ambient = NULL;Ambient71,1702
RpLight *Direct = NULL;Direct72,1728
CreateLights(void)CreateLights80,1889
DestroyLights()DestroyLights105,2374
CreateWorld(void)CreateWorld131,2906
CreateCamera(RpWorld *world)CreateCamera149,3231
Initialize(void)Initialize172,3702
InitializeMenu(void)InitializeMenu199,4239
Initialize3D(void *param)Initialize3D218,4605
_destroyClumpCB(RpClump *c, void *d)_destroyClumpCB278,5819
Terminate3D(void)Terminate3D290,6064
AttachPlugins(void)AttachPlugins335,6843
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo363,7262
Render(void)Render390,7876
Idle(void)Idle430,8613
AppEventHandler(RsEvent event, void *param)AppEventHandler486,9643

examples/Tutorials/Tutorial2/src/utils.c,40
DffLoad(RwChar *filename)DffLoad8,101

examples/Tutorials/Tutorial2/src/utils.h,25
#define UTILSUTILS2,15

examples/Tutorials/Tutorial2/src/win/events.c,756
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown44,1181
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp52,1358
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown65,1624
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp73,1803
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove85,2069
MouseHandler(RsEvent event, void *param)MouseHandler97,2321
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown150,3472
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp235,5204
KeyboardHandler(RsEvent event, void *param)KeyboardHandler248,5458
AttachInputDevices(void)AttachInputDevices285,6191

examples/Tutorials/Tutorial2/makefile,110
DEMO = tutorial2DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/Tutorials/Tutorial5/src/main.c,2354
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1266
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1302
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1361
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1410
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1461
static RwBool FPSOn = FALSE;FPSOn66,1498
static RwInt32 FrameCounter = 0;FrameCounter68,1530
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1564
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor71,1603
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor72,1658
static RpAtomic *PickedAtomic = NULL;PickedAtomic74,1715
static RwBBox PickBox;PickBox75,1754
static RwV2d OldPos;OldPos76,1778
static RwReal NearClip = 0.1f;NearClip78,1802
static RwReal FarClip = 50.0f;FarClip79,1834
static RwBool ShowPos = FALSE;ShowPos80,1866
RpWorld *World = NULL;World82,1900
RwCamera *Camera = NULL;Camera83,1924
RtCharset *Charset = NULL;Charset84,1950
RpLight *Ambient = NULL;Ambient85,1978
RpLight *Direct = NULL;Direct86,2004
RwV2d MousePos = {0,0};MousePos87,2029
MouseMoveOperation MouseMoveAction = MMNoOperation;MouseMoveAction89,2056
#define NUMNAMES NUMNAMES91,2111
static const RwChar *AtomicNames[NUMNAMES] = {AtomicNames92,2131
static RwInt32 SelectedName = 0;SelectedName100,2264
CreateLights(void)CreateLights106,2402
DestroyLights()DestroyLights130,2857
CreateWorld(void)CreateWorld156,3389
CreateCamera(RpWorld *world)CreateCamera174,3714
Initialize(void)Initialize197,4191
assignNameTrigger(RwBool check)assignNameTrigger220,4637
saveAtomicTrigger(RwBool check)saveAtomicTrigger231,4863
InitializeMenu(void)InitializeMenu258,5423
Initialize3D(void *param)Initialize3D290,6552
_destroyClumpCB(RpClump *c, void *d)_destroyClumpCB349,7735
Terminate3D(void)Terminate3D361,7960
AttachPlugins(void)AttachPlugins406,8739
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo443,9306
HighlightRender(void)HighlightRender484,10367
Render(void)Render518,11502
ZTranslateAtomic(void)ZTranslateAtomic565,12433
TranslateAtomic(void)TranslateAtomic588,12894
RotateAtomic(void)RotateAtomic615,13540
PickAtomic(MouseMoveOperation nextOp)PickAtomic652,14565
Idle(void)Idle672,14997
AppEventHandler(RsEvent event, void *param)AppEventHandler758,16637

examples/Tutorials/Tutorial5/src/utils.c,162
DffLoad(RwChar *filename)DffLoad8,101
AtomicGetBBox(RpAtomic *atom, RwBBox *box)AtomicGetBBox35,731
DffSave(RpAtomic *atomic, char *filename)DffSave62,1645

examples/Tutorials/Tutorial5/src/RpAName.h,35
#define RPANAME_HRPANAME_H26,836

examples/Tutorials/Tutorial5/src/RpAName.c,682
#define RPEXTFROMATOMIC(RPEXTFROMATOMIC40,1294
#define rwID_EXAMPLE rwID_EXAMPLE44,1449
static RwInt32 rpExtensionOffset = -1;rpExtensionOffset49,1583
rpConstructor(void *atom,rpConstructor56,1774
rpDestructor(void *atom,rpDestructor72,2109
rpStreamWrite(RwStream *stream, RwInt32 len,rpStreamWrite92,2478
rpStreamRead(RwStream *stream, RwInt32 len,rpStreamRead105,2757
rpStreamGetSize(const void *data, RwInt32 offset, RwInt32 size)rpStreamGetSize128,3235
RpAtomicNameInitialize(void)RpAtomicNameInitialize148,3716
RpAtomicNameSetName(RpAtomic *atom, const char *name)RpAtomicNameSetName169,4330
RpAtomicNameGetName(RpAtomic *atom)RpAtomicNameGetName197,4898

examples/Tutorials/Tutorial5/src/utils.h,568
#define UTILSUTILS2,15
typedef enum {__anonde81791f01034,32
    MMNoOperation,MMNoOperation5,48
    MMPickAndTranslateObject,MMPickAndTranslateObject6,68
    MMPickAndRotateObject,MMPickAndRotateObject7,99
    MMPickAndZTranslateObject,MMPickAndZTranslateObject8,127
    MMTranslateObject,MMTranslateObject9,159
    MMRotateObject,MMRotateObject10,183
    MMZTranslateObject,MMZTranslateObject11,204
    MOUSEMOVEOPERATIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMOUSEMOVEOPERATIONFORCEENUMSIZEINT13,231
} MouseMoveOperation;MouseMoveOperation14,292

examples/Tutorials/Tutorial5/src/win/events.c,732
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown44,1176
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp65,1616
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown80,1922
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp88,2101
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove100,2368
MouseHandler(RsEvent event, void *param)MouseHandler114,2643
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown166,3773
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp251,5505
KeyboardHandler(RsEvent event, void *param)KeyboardHandler264,5759
AttachInputDevices(void)AttachInputDevices301,6492

examples/Tutorials/Tutorial5/makefile,110
DEMO = tutorial5DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/Tutorials/Tutorial4/src/main.c,2077
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1242
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1278
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1337
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1386
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1437
static RwBool FPSOn = FALSE;FPSOn64,1474
static RwInt32 FrameCounter = 0;FrameCounter66,1506
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1540
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1579
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1634
static RpAtomic *PickedAtomic = NULL;PickedAtomic72,1691
static RwBBox PickBox;PickBox73,1730
static RwV2d OldPos;OldPos74,1754
static RwReal NearClip = 0.1f;NearClip76,1778
static RwReal FarClip = 30.0f;FarClip77,1810
static RwBool ShowPos = FALSE;ShowPos78,1842
RpWorld *World = NULL;World80,1876
RwCamera *Camera = NULL;Camera81,1900
RtCharset *Charset = NULL;Charset82,1926
RpLight *Ambient = NULL;Ambient83,1954
RpLight *Direct = NULL;Direct84,1980
RwV2d MousePos = {0,0};MousePos85,2005
MouseMoveOperation MouseMoveAction = MMNoOperation;MouseMoveAction87,2032
CreateLights(void)CreateLights93,2189
DestroyLights()DestroyLights117,2644
CreateWorld(void)CreateWorld143,3176
CreateCamera(RpWorld *world)CreateCamera161,3501
Initialize(void)Initialize184,3978
InitializeMenu(void)InitializeMenu211,4545
Initialize3D(void *param)Initialize3D237,5293
_destroyClumpCB(RpClump *c, void *d)_destroyClumpCB296,6476
Terminate3D(void)Terminate3D308,6701
AttachPlugins(void)AttachPlugins353,7480
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo386,8010
HighlightRender(void)HighlightRender424,8968
Render(void)Render458,10119
ZTranslateAtomic(void)ZTranslateAtomic506,11083
TranslateAtomic(void)TranslateAtomic529,11544
RotateAtomic(void)RotateAtomic556,12190
PickAtomic(MouseMoveOperation nextOp)PickAtomic594,13242
Idle(void)Idle614,13674
AppEventHandler(RsEvent event, void *param)AppEventHandler700,15312

examples/Tutorials/Tutorial4/src/utils.c,104
DffLoad(RwChar *filename)DffLoad8,101
AtomicGetBBox(RpAtomic *atom, RwBBox *box)AtomicGetBBox35,725

examples/Tutorials/Tutorial4/src/utils.h,568
#define UTILSUTILS2,15
typedef enum {__anon8f226f9e01034,32
    MMNoOperation,MMNoOperation5,48
    MMPickAndTranslateObject,MMPickAndTranslateObject6,68
    MMPickAndRotateObject,MMPickAndRotateObject7,99
    MMPickAndZTranslateObject,MMPickAndZTranslateObject8,127
    MMTranslateObject,MMTranslateObject9,159
    MMRotateObject,MMRotateObject10,183
    MMZTranslateObject,MMZTranslateObject11,204
    MOUSEMOVEOPERATIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMOUSEMOVEOPERATIONFORCEENUMSIZEINT13,231
} MouseMoveOperation;MouseMoveOperation14,292

examples/Tutorials/Tutorial4/src/win/events.c,732
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown45,1213
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp66,1653
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown81,1959
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp89,2138
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove101,2405
MouseHandler(RsEvent event, void *param)MouseHandler115,2680
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown167,3810
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp252,5542
KeyboardHandler(RsEvent event, void *param)KeyboardHandler265,5796
AttachInputDevices(void)AttachInputDevices302,6529

examples/Tutorials/Tutorial4/makefile,110
DEMO = tutorial4DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/Tutorials/Tutorial6/src/main.c,2496
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1246
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1282
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1341
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1390
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1441
static RwBool FPSOn = FALSE;FPSOn66,1478
static RwInt32 FrameCounter = 0;FrameCounter68,1510
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1544
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor71,1583
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor72,1638
static RpAtomic *PickedAtomic = NULL;PickedAtomic74,1695
static RwBBox PickBox;PickBox75,1734
static RwV2d OldPos;OldPos76,1758
static RwReal NearClip = 0.1f;NearClip78,1782
static RwReal FarClip = 50.0f;FarClip79,1814
static RwBool ShowPos = FALSE;ShowPos80,1846
RpWorld *World = NULL;World82,1880
RwCamera *Camera = NULL;Camera83,1904
RtCharset *Charset = NULL;Charset84,1930
RpLight *Ambient = NULL;Ambient85,1958
RpLight *Direct = NULL;Direct86,1984
RwV2d MousePos = {0,0};MousePos87,2009
MouseMoveOperation MouseMoveAction = MMNoOperation;MouseMoveAction89,2036
#define NUMNAMES NUMNAMES91,2091
static const RwChar *AtomicNames[NUMNAMES] = {AtomicNames92,2111
static RwInt32 SelectedName = 0;SelectedName100,2244
CreateLights(void)CreateLights107,2411
DestroyLights()DestroyLights133,2977
CreateWorld(void)CreateWorld159,3509
CreateCamera(RpWorld *world)CreateCamera177,3834
Initialize(void)Initialize200,4311
assignNameTrigger(RwBool check)assignNameTrigger223,4756
saveAtomicTrigger(RwBool check)saveAtomicTrigger233,4948
InitializeMenu(void)InitializeMenu259,5491
Initialize3D(void *param)Initialize3D291,6620
_destroyClumpCB(RpClump *c, void *d)_destroyClumpCB350,7832
Terminate3D(void)Terminate3D362,8057
AttachPlugins(void)AttachPlugins407,8836
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo442,9365
HighlightRender(void)HighlightRender483,10426
Render(void)Render516,11559
ZTranslateAtomic(void)ZTranslateAtomic563,12490
TranslateAtomic(void)TranslateAtomic586,12951
RotateAtomic(void)RotateAtomic613,13597
RotateCamera(RwBool first)RotateCamera652,14653
DollyCamera(RwBool first)DollyCamera687,15609
PanCamera(RwBool first)PanCamera710,16078
PickAtomic(MouseMoveOperation nextOp)PickAtomic738,16757
Idle(void)Idle758,17189
AppEventHandler(RsEvent event, void *param)AppEventHandler871,19400

examples/Tutorials/Tutorial6/src/utils.c,257
DffLoad(RwChar *filename)DffLoad8,101
AtomicGetBBox(RpAtomic *atom, RwBBox *box)AtomicGetBBox37,735
DffSave(RpAtomic *atomic, char *filename)DffSave63,1625
RwsLoadWorld(RwChar *filename)RwsLoadWorld91,2248
BspLoad(RwChar *filename)BspLoad123,2948

examples/Tutorials/Tutorial6/src/RpAName.h,35
#define RPANAME_HRPANAME_H28,915

examples/Tutorials/Tutorial6/src/RpAName.c,682
#define RPEXTFROMATOMIC(RPEXTFROMATOMIC40,1294
#define rwID_EXAMPLE rwID_EXAMPLE44,1449
static RwInt32 rpExtensionOffset = -1;rpExtensionOffset49,1583
rpConstructor(void *atom,rpConstructor56,1793
rpDestructor(void *atom,rpDestructor72,2128
rpStreamWrite(RwStream *stream, RwInt32 len,rpStreamWrite90,2465
rpStreamRead(RwStream *stream, RwInt32 len,rpStreamRead101,2713
rpStreamGetSize(const void *data, RwInt32 offset, RwInt32 size)rpStreamGetSize122,3157
RpAtomicNameInitialize(void)RpAtomicNameInitialize142,3651
RpAtomicNameSetName(RpAtomic *atom, const char *name)RpAtomicNameSetName161,4227
RpAtomicNameGetName(RpAtomic *atom)RpAtomicNameGetName186,4754

examples/Tutorials/Tutorial6/src/utils.h,834
#define UTILSUTILS2,15
typedef enum {__anon2de082a001034,32
    MMNoOperation,MMNoOperation5,48
    MMPickAndTranslateObject,MMPickAndTranslateObject6,68
    MMPickAndRotateObject,MMPickAndRotateObject7,99
    MMPickAndZTranslateObject,MMPickAndZTranslateObject8,127
    MMTranslateObject,MMTranslateObject9,159
    MMRotateObject,MMRotateObject10,183
    MMZTranslateObject,MMZTranslateObject11,204
    MMRotateCameraStart,MMRotateCameraStart12,229
    MMRotateCamera,MMRotateCamera13,255
    MMPanCameraStart,MMPanCameraStart14,276
    MMPanCamera,MMPanCamera15,299
    MMDollyCameraStart,MMDollyCameraStart16,317
    MMDollyCamera,MMDollyCamera17,342
    MOUSEMOVEOPERATIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMOUSEMOVEOPERATIONFORCEENUMSIZEINT19,364
} MouseMoveOperation;MouseMoveOperation20,425

examples/Tutorials/Tutorial6/src/win/events.c,720
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown44,1156
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp65,1596
HandleRightButtonDown(RsMouseStatus *mouseStatus)HandleRightButtonDown82,1942
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp105,2405
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove120,2714
MouseHandler(RsEvent event, void *param)MouseHandler134,2989
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown186,4119
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp271,5851
KeyboardHandler(RsEvent event, void *param)KeyboardHandler284,6105
AttachInputDevices(void)AttachInputDevices321,6838

examples/Tutorials/Tutorial6/makefile,110
DEMO = tutorial6DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/Tutorials/makefile,508
all:all2,2
BASEDIR = $(CURDIR)/../../rwsdkBASEDIR8,129
RWHLPDIR	= ../../rwsdk/autodocs/hlp/tutorialsRWHLPDIR14,269
TUTORIALS	=		\TUTORIALS19,404
DOXYSRC		=		\DOXYSRC28,524
DOXYEXAMPLE	=			\DOXYEXAMPLE36,707
IMAGEPATH	=		\IMAGEPATH52,1153
SRCIMAGE	=		\SRCIMAGE55,1203
$(RWHLPDIR):$(RWHLPDIR)65,1504
doxygen:doxygen68,1532
tutorialdoc:tutorialdoc81,1796
doxy: $(RWHLPDIR) doxygen tutorialdocdoxy88,2050
doc:doc90,2091
clean distclean:clean93,2153
clean distclean:distclean93,2153

examples/Tutorials/Tutorial1/src/main.c,1212
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH49,1257
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT50,1293
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO53,1352
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1401
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW58,1452
static RwBool FPSOn = FALSE;FPSOn60,1489
static RwInt32 FrameCounter = 0;FrameCounter62,1521
static RwInt32 FramesPerSecond = 0;FramesPerSecond63,1555
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor65,1594
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor66,1649
RpWorld *World = NULL;World68,1706
RwCamera *Camera = NULL;Camera69,1730
RtCharset *Charset = NULL;Charset70,1756
CreateWorld(void)CreateWorld78,1897
CreateCamera(RpWorld *world)CreateCamera96,2222
Initialize(void)Initialize119,2693
InitializeMenu(void)InitializeMenu146,3230
Initialize3D(void *param)Initialize3D165,3596
Terminate3D(void)Terminate3D221,4723
AttachPlugins(void)AttachPlugins262,5420
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo290,5839
Render(void)Render316,6425
Idle(void)Idle355,7127
AppEventHandler(RsEvent event, void *param)AppEventHandler411,8157

examples/Tutorials/Tutorial1/src/win/events.c,756
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1137
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp49,1314
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown62,1580
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp70,1759
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove81,2024
MouseHandler(RsEvent event, void *param)MouseHandler93,2276
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown146,3436
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp206,4601
KeyboardHandler(RsEvent event, void *param)KeyboardHandler221,4889
AttachInputDevices(void)AttachInputDevices257,5671

examples/Tutorials/Tutorial1/makefile,110
DEMO = tutorial1DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/Tutorials/Tutorial3/src/main.c,1824
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH53,1245
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT54,1281
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1340
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1389
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW62,1440
static RwBool FPSOn = FALSE;FPSOn64,1477
static RwInt32 FrameCounter = 0;FrameCounter66,1509
static RwInt32 FramesPerSecond = 0;FramesPerSecond67,1543
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor69,1582
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor70,1637
static RpAtomic *PickedAtomic = NULL;PickedAtomic72,1694
static RwBBox PickBox;PickBox73,1733
static RwV2d OldPos;OldPos74,1757
RpWorld *World = NULL;World76,1781
RwCamera *Camera = NULL;Camera77,1805
RtCharset *Charset = NULL;Charset78,1831
RpLight *Ambient = NULL;Ambient79,1859
RpLight *Direct = NULL;Direct80,1885
RwV2d MousePos = {0,0};MousePos81,1910
MouseMoveOperation MouseMoveAction = MMNoOperation;MouseMoveAction83,1937
CreateLights(void)CreateLights89,2094
DestroyLights()DestroyLights113,2549
CreateWorld(void)CreateWorld139,3081
CreateCamera(RpWorld *world)CreateCamera157,3406
Initialize(void)Initialize180,3877
InitializeMenu(void)InitializeMenu207,4416
Initialize3D(void *param)Initialize3D226,4782
_destroyClumpCB(RpClump *c, void *d)_destroyClumpCB284,5963
Terminate3D(void)Terminate3D296,6188
AttachPlugins(void)AttachPlugins341,6967
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo373,7450
HighlightRender(void)HighlightRender400,8067
Render(void)Render433,9184
TranslateAtomic(void)TranslateAtomic475,9951
RotateAtomic(void)RotateAtomic500,10528
Idle(void)Idle538,11566
AppEventHandler(RsEvent event, void *param)AppEventHandler636,13609

examples/Tutorials/Tutorial3/src/utils.c,104
DffLoad(RwChar *filename)DffLoad8,101
AtomicGetBBox(RpAtomic *atom, RwBBox *box)AtomicGetBBox36,755

examples/Tutorials/Tutorial3/src/utils.h,454
#define UTILSUTILS2,15
typedef enum {__anon3fc3661d01034,32
    MMNoOperation,MMNoOperation5,48
    MMPickAndTranslateObject,MMPickAndTranslateObject6,68
    MMPickAndRotateObject,MMPickAndRotateObject7,99
    MMTranslateObject,MMTranslateObject8,127
    MMRotateObject,MMRotateObject9,151
    MOUSEMOVEOPERATIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMOUSEMOVEOPERATIONFORCEENUMSIZEINT11,174
} MouseMoveOperation;MouseMoveOperation12,235

examples/Tutorials/Tutorial3/src/win/events.c,732
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown46,1218
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp66,1594
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown81,1900
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp89,2079
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove102,2378
MouseHandler(RsEvent event, void *param)MouseHandler116,2653
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown168,3783
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp253,5515
KeyboardHandler(RsEvent event, void *param)KeyboardHandler266,5769
AttachInputDevices(void)AttachInputDevices303,6502

examples/Tutorials/Tutorial3/makefile,110
DEMO = tutorial3DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/Tutorials/Tutorial7/src/main.c,2563
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH55,1246
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT56,1282
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO59,1341
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO61,1390
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW64,1441
static RwBool FPSOn = FALSE;FPSOn66,1478
static RwInt32 FrameCounter = 0;FrameCounter68,1510
static RwInt32 FramesPerSecond = 0;FramesPerSecond69,1544
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor71,1583
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor72,1638
static RpAtomic *PickedAtomic = NULL;PickedAtomic74,1695
static RwBBox PickBox;PickBox75,1734
static RwV2d OldPos;OldPos76,1758
static RwReal NearClip = 0.1f;NearClip78,1782
static RwReal FarClip = 50.0f;FarClip79,1814
static RwBool ShowPos = FALSE;ShowPos80,1846
RpWorld *World = NULL;World82,1880
RwCamera *Camera = NULL;Camera83,1904
RtCharset *Charset = NULL;Charset84,1930
RpLight *Ambient = NULL;Ambient85,1958
RpLight *Direct = NULL;Direct86,1984
RwV2d MousePos = {0,0};MousePos87,2009
MouseMoveOperation MouseMoveAction = MMNoOperation;MouseMoveAction89,2036
#define NUMNAMES NUMNAMES91,2091
static const RwChar *AtomicNames[NUMNAMES] = {AtomicNames92,2111
static RwInt32 SelectedName = 0;SelectedName100,2244
CreateLights(void)CreateLights107,2411
DestroyLights()DestroyLights133,2977
CreateWorld(void)CreateWorld159,3509
CreateCamera(RpWorld *world)CreateCamera177,3834
Initialize(void)Initialize200,4311
assignNameTrigger(RwBool check)assignNameTrigger223,4758
saveAtomicTrigger(RwBool check)saveAtomicTrigger233,4950
InitializeMenu(void)InitializeMenu259,5493
acceptFirstWorld( RtTOCEntry *tocEntry )acceptFirstWorld292,6643
Initialize3D(void *param)Initialize3D302,6818
_destroyClumpCB(RpClump *c, void *d)_destroyClumpCB377,8404
Terminate3D(void)Terminate3D389,8629
AttachPlugins(void)AttachPlugins434,9408
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo469,9937
HighlightRender(void)HighlightRender510,10998
Render(void)Render544,12133
ZTranslateAtomic(void)ZTranslateAtomic591,13064
TranslateAtomic(void)TranslateAtomic614,13525
RotateAtomic(void)RotateAtomic641,14171
RotateCamera(RwBool first)RotateCamera680,15227
DollyCamera(RwBool first)DollyCamera715,16183
PanCamera(RwBool first)PanCamera738,16652
PickAtomic(MouseMoveOperation nextOp)PickAtomic766,17331
Idle(void)Idle786,17763
AppEventHandler(RsEvent event, void *param)AppEventHandler899,19974

examples/Tutorials/Tutorial7/src/utils.c,376
DffLoad(RwChar *filename)DffLoad8,101
AtomicGetBBox(RpAtomic *atom, RwBBox *box)AtomicGetBBox37,735
DffSave(RpAtomic *atomic, char *filename)DffSave63,1625
RwsLoadTOC( RwChar *filename )RwsLoadTOC92,2246
RwsLoadWorldFromTOC( RwChar *filename,RwsLoadWorldFromTOC136,3191
RwsLoadWorld(RwChar *filename)RwsLoadWorld205,4884
BspLoad(RwChar *filename)BspLoad237,5584

examples/Tutorials/Tutorial7/src/RpAName.h,35
#define RPANAME_HRPANAME_H28,915

examples/Tutorials/Tutorial7/src/RpAName.c,682
#define RPEXTFROMATOMIC(RPEXTFROMATOMIC40,1294
#define rwID_EXAMPLE rwID_EXAMPLE44,1449
static RwInt32 rpExtensionOffset = -1;rpExtensionOffset49,1583
rpConstructor(void *atom,rpConstructor56,1793
rpDestructor(void *atom,rpDestructor72,2128
rpStreamWrite(RwStream *stream, RwInt32 len,rpStreamWrite90,2465
rpStreamRead(RwStream *stream, RwInt32 len,rpStreamRead101,2713
rpStreamGetSize(const void *data, RwInt32 offset, RwInt32 size)rpStreamGetSize122,3157
RpAtomicNameInitialize(void)RpAtomicNameInitialize142,3651
RpAtomicNameSetName(RpAtomic *atom, const char *name)RpAtomicNameSetName161,4227
RpAtomicNameGetName(RpAtomic *atom)RpAtomicNameGetName186,4754

examples/Tutorials/Tutorial7/src/utils.h,922
#define UTILSUTILS2,15
typedef enum {__anon7d3f8c2101036,54
    MMNoOperation,MMNoOperation7,70
    MMPickAndTranslateObject,MMPickAndTranslateObject8,90
    MMPickAndRotateObject,MMPickAndRotateObject9,121
    MMPickAndZTranslateObject,MMPickAndZTranslateObject10,149
    MMTranslateObject,MMTranslateObject11,181
    MMRotateObject,MMRotateObject12,205
    MMZTranslateObject,MMZTranslateObject13,226
    MMRotateCameraStart,MMRotateCameraStart14,251
    MMRotateCamera,MMRotateCamera15,277
    MMPanCameraStart,MMPanCameraStart16,298
    MMPanCamera,MMPanCamera17,321
    MMDollyCameraStart,MMDollyCameraStart18,339
    MMDollyCamera,MMDollyCamera19,364
    MOUSEMOVEOPERATIONFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMOUSEMOVEOPERATIONFORCEENUMSIZEINT21,386
} MouseMoveOperation;MouseMoveOperation22,447
typedef RwBool (* AcceptTOCEntryCB)( RtTOCEntry *tocEntry );AcceptTOCEntryCB30,612

examples/Tutorials/Tutorial7/src/win/events.c,720
HandleLeftButtonDown(RsMouseStatus *mouseStatus)HandleLeftButtonDown44,1156
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp65,1596
HandleRightButtonDown(RsMouseStatus *mouseStatus)HandleRightButtonDown82,1942
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp105,2405
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove120,2714
MouseHandler(RsEvent event, void *param)MouseHandler134,2989
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown186,4119
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp271,5851
KeyboardHandler(RsEvent event, void *param)KeyboardHandler284,6105
AttachInputDevices(void)AttachInputDevices321,6838

examples/Tutorials/Tutorial7/makefile,110
DEMO = tutorial7DEMO29,1021
RWGDIR = $(CURDIR)/../../..RWGDIR34,1093
CSRC =	$(SRC)/main.c		\CSRC39,1176

examples/pakfile/src/main.c,2091
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH52,1340
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT53,1376
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO56,1435
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO58,1484
#define READ_BUFFER_SIZE READ_BUFFER_SIZE63,1558
static RwChar hBuffer[PAKMAXOPENFILES * READ_BUFFER_SIZE]  __attribute__ ((aligned(64)));hBuffer64,1596
#define READ_BUFFER_SIZE READ_BUFFER_SIZE66,1714
static RwChar hBuffer[PAKMAXOPENFILES * READ_BUFFER_SIZE] __attribute__ ((aligned(32)));hBuffer67,1759
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW71,1861
static RwBool FPSOn = FALSE;FPSOn73,1898
static RwInt32 FrameCounter = 0;FrameCounter75,1930
static RwInt32 FramesPerSecond = 0;FramesPerSecond76,1964
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor78,2003
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor79,2058
static RtCharset *Charset = NULL;Charset81,2115
static RpWorld *World = NULL;World82,2150
static RwCamera *Camera = NULL;Camera83,2181
static RpLight *AmbientLight = NULL;AmbientLight84,2214
static RpLight *MainLight = NULL;MainLight85,2252
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis87,2289
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis88,2331
CreateWorld(void)CreateWorld94,2482
CreateAmbientLight(RpWorld *world)CreateAmbientLight112,2805
CreateMainLight(RpWorld *world)CreateMainLight130,3124
CreateCamera(RpWorld *world)CreateCamera166,3863
GetValidPakPath(RwChar *path)GetValidPakPath199,4790
CreateScene(RpWorld *world)CreateScene227,5414
Initialize(void)Initialize373,9135
InitializeMenu(void)InitializeMenu400,9686
OpenPakFile(void)OpenPakFile419,10052
Initialize3D(void *param)Initialize3D459,11148
DestroyClump(RpClump * clump, void *data)DestroyClump570,13597
Terminate3D(void)Terminate3D584,13853
AttachPlugins(void)AttachPlugins646,14869
DisplayOnScreenInfo(void)DisplayOnScreenInfo674,15288
Render(void)Render693,15642
Idle(void)Idle730,16300
AppEventHandler(RsEvent event, void *param)AppEventHandler774,17073

examples/pakfile/src/pakfile.c,2329
#define FILE_TYPE FILE_TYPE39,1180
#define FILE_TYPE FILE_TYPE41,1255
#define FILE_TYPE FILE_TYPE43,1309
#define FILE_TYPE FILE_TYPE45,1370
typedef struct PakTOCEntry PakTOCEntry;PakTOCEntry51,1466
struct PakTOCEntryPakTOCEntry52,1507
    RwChar name[56];name54,1530
    RwInt32 offset;offset55,1552
    RwInt32 fileSize;fileSize56,1573
typedef struct PakFile PakFile;PakFile63,1682
struct PakFilePakFile64,1715
    RwChar dirName[260];dirName69,1771
    RtFile *file;file70,1797
    RtInt64 pakFileSize;pakFileSize71,1816
    RtInt64 pakFilePosition;pakFilePosition72,1842
    RwInt32 numOpenFiles;numOpenFiles73,1872
    PakTOCEntry *tocEntry;tocEntry78,1952
    RwInt32 tocSize;tocSize79,1980
typedef struct PakOpenFile PakOpenFile;PakOpenFile87,2110
struct PakOpenFilePakOpenFile88,2151
    FILE_TYPE file;file90,2174
    RwUInt32 id;id92,2201
    PakFile  *pakFile;pakFile93,2219
    PakTOCEntry *tocEntry;tocEntry94,2243
    RwInt32 bytesRead;bytesRead95,2271
    RwBool eof;eof96,2295
typedef struct PakFileSystem PakFileSystem;PakFileSystem99,2318
struct PakFileSystemPakFileSystem100,2363
    RtFileSystem  dfs;dfs102,2388
    PakOpenFile  *files;files104,2418
#define PAKHEADERID PAKHEADERID107,2450
static PakFile *PAKFile = (PakFile *)NULL;PAKFile115,2744
SetInt64Value(RtInt64 *value, RwInt32 set)SetInt64Value129,3108
GetInt64Value(RtInt64 value)GetInt64Value146,3466
_PakFileSkipSet(PakFile *pakFile, RwUInt32 offset)_PakFileSkipSet163,3808
_PakSortTOC(PakFile *pakFile)_PakSortTOC215,4879
_PakFindFirstMatch(PakFile *pakFile, const RwChar *pathname)_PakFindFirstMatch263,5944
_PakFExist(RtFileSystem *fs __RWUNUSED__, const RwChar *fileName)_PakFExist346,7774
_PakFOpen( RtFileSystem  *fs __RWUNUSED__,_PakFOpen411,9379
_PakFClose(RtFile *file)_PakFClose496,11716
_PakFRead( RtFile     *file,_PakFRead533,12570
_PakFEof(RtFile *file)_PakFEof760,18351
_PakFSeek( RtFile           *file,_PakFSeek798,19143
PakFileClose(void)PakFileClose889,21918
PakFileOpenExt(RwChar *filename, RwChar *directory)PakFileOpenExt943,22856
PakFileOpen(RwChar *filename)PakFileOpen1116,27319
PakFSGetFileObject( RtFileSystem *fs, RwUInt32 index )PakFSGetFileObject1132,27713
PakFSystemInit( RwInt32 maxNbOpenFiles,PakFSystemInit1149,28127

examples/pakfile/src/pakfile.h,133
#define PAKFILE_HPAKFILE_H32,989
#define PAKMAXOPENFILES PAKMAXOPENFILES37,1055
#define PAKFSDEVICENAME PAKFSDEVICENAME38,1085

examples/pakfile/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown40,1222
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp46,1348
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown57,1565
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp63,1692
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove73,1909
MouseHandler(RsEvent event, void *param)MouseHandler83,2122
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown135,3238
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp142,3356
KeyboardHandler(RsEvent event, void *param)KeyboardHandler152,3561
AttachInputDevices(void)AttachInputDevices189,4280

examples/pakfile/makefile,105
DEMO = pakfileDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1085
CSRC =	$(SRC)/main.c		\CSRC39,1165

examples/matfx1/src/main.c,6897
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH56,1281
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT57,1317
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO60,1376
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO62,1425
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW65,1476
#define ANGSPEED ANGSPEED67,1513
#define NUM_ENV_MAPS NUM_ENV_MAPS69,1541
#define NUM_BUMP_MAPS NUM_BUMP_MAPS70,1567
#define NUM_ENV_BUMP_MAPS NUM_ENV_BUMP_MAPS71,1594
{__anon4d10b900010374,1641
    ENV_MAPPING = 0,ENV_MAPPING75,1644
    BUMP_MAPPING,BUMP_MAPPING76,1666
    ENV_BUMP_MAPPING,ENV_BUMP_MAPPING77,1685
    DUAL_PASS_MAPPING,DUAL_PASS_MAPPING78,1708
    UV_TRANSFORM,UV_TRANSFORM79,1732
    DUAL_UV_TRANSFORM,DUAL_UV_TRANSFORM80,1751
    NUM_MAT_EFFECTS,NUM_MAT_EFFECTS81,1775
    MATERIALEFFECTFORCEENUMSIZEINT = RWFORCEENUMSIZEINTMATERIALEFFECTFORCEENUMSIZEINT83,1799
MaterialEffect;MaterialEffect85,1859
static RwBool FPSOn = FALSE;FPSOn87,1878
static RwInt32 FrameCounter = 0;FrameCounter89,1910
static RwInt32 FramesPerSecond = 0;FramesPerSecond90,1944
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor92,1983
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor93,2038
static RwBool MaterialEffectsOn = TRUE;MaterialEffectsOn95,2095
static RwInt32 MaterialEffectType = ENV_MAPPING;MaterialEffectType96,2136
static RpClump *EnvClump = NULL;EnvClump101,2235
static RwTexture *EnvMap[NUM_ENV_MAPS];EnvMap102,2269
static RwInt32 CurrentEnvMap = 0;CurrentEnvMap103,2310
static RwInt32 EnvMapActiveMaterials = 2;EnvMapActiveMaterials104,2345
static const RwChar *EnvMapName[NUM_ENV_MAPS] =EnvMapName105,2388
static RwReal EnvMapShininess = 0.5f;EnvMapShininess111,2519
static RpClump *BumpClump = NULL;BumpClump116,2599
static RwTexture *BumpMap[NUM_BUMP_MAPS];BumpMap117,2634
static RwInt32 CurrentBumpMap = 0;CurrentBumpMap118,2677
static RwInt32 BumpMapActiveMaterials = 2;BumpMapActiveMaterials119,2713
static const RwChar *BumpMapName[NUM_BUMP_MAPS] =BumpMapName120,2757
static RwReal BumpMapBumpiness = 2.0f;BumpMapBumpiness125,2861
static RpClump *EnvBumpClump = NULL;EnvBumpClump130,2946
static RwTexture *EnvBumpMap[NUM_ENV_BUMP_MAPS];EnvBumpMap131,2984
static const RwChar *EnvBumpMapName[NUM_ENV_BUMP_MAPS] =EnvBumpMapName132,3034
static RpClump *DualPassClump = NULL;DualPassClump141,3197
static RwTexture *DualPassMap = NULL;DualPassMap142,3236
static const RwChar *DualPassMapName = RWSTRING("rw");DualPassMapName143,3275
static RwBlendFunction DualPassSrcBlendMode = rwBLENDSRCALPHA;DualPassSrcBlendMode145,3333
static RwBlendFunction DualPassDestBlendMode = rwBLENDINVSRCALPHA;DualPassDestBlendMode146,3397
static const RwChar *DualPassBlendModeNames[] =DualPassBlendModeNames148,3467
static RwMatrix *UVAnimBaseTransform = NULL;UVAnimBaseTransform166,3944
static RwMatrix *UVAnimDualTransform = NULL;UVAnimDualTransform167,3990
#define UVANIMPERIOD UVANIMPERIOD168,4036
static RpWorld *World = NULL;World171,4069
static RwCamera *Camera = NULL;Camera172,4100
static RtCharset *Charset = NULL;Charset173,4133
static RpLight *MainLight = NULL;MainLight174,4168
static RpClump *CurrentClump = NULL;CurrentClump175,4203
static RwBool LightSpinOn = FALSE;LightSpinOn177,4243
CreateWorld(void)CreateWorld185,4392
CreateCamera(RpWorld *world)CreateCamera203,4717
LightResetFrame(RpLight *light)LightResetFrame227,5187
CreateLights(RpWorld *world)CreateLights246,5612
LightRotate(RwReal deltaTime)LightRotate292,6413
ClumpRotate(RwReal angleX, RwReal angleY)ClumpRotate313,6855
ClumpTranslateZ(RwReal deltaZ)ClumpTranslateZ352,7825
LoadClump(const RwChar *filename)LoadClump375,8301
MaterialSetShininess(RpMaterial *material,MaterialSetShininess403,8905
AtomicSetShininess(RpAtomic *atomic, void *data)AtomicSetShininess420,9299
ClumpSetEnvMapShininess(RpClump *clump)ClumpSetEnvMapShininess436,9579
MaterialSetEnvMap(RpMaterial *material, void *data)MaterialSetEnvMap448,9815
AtomicSetEnvMap(RpAtomic *atomic, void *data)AtomicSetEnvMap509,11404
ClumpSetEnvMap(RpClump *clump, RwTexture *texture)ClumpSetEnvMap526,11719
CreateEnvClump(void)CreateEnvClump538,11975
MaterialSetBumpiness(RpMaterial *material,MaterialSetBumpiness596,13333
AtomicSetBumpiness(RpAtomic *atomic, void *data)AtomicSetBumpiness613,13730
ClumpSetBumpMapBumpiness(RpClump *clump)ClumpSetBumpMapBumpiness629,14010
MaterialSetBumpMap(RpMaterial *material, void *data)MaterialSetBumpMap641,14247
AtomicSetBumpMap(RpAtomic *atomic, void *data)AtomicSetBumpMap693,15547
ClumpSetBumpMap(RpClump *clump, RwTexture *texture)ClumpSetBumpMap710,15863
CreateBumpClump(void)CreateBumpClump722,16117
MaterialSetEnvBumpMap(RpMaterial *material, void *data)MaterialSetEnvBumpMap775,17228
AtomicSetEnvBumpMap(RpAtomic *atomic, void *data)AtomicSetEnvBumpMap797,17823
ClumpSetEnvBumpMap(RpClump *clump)ClumpSetEnvBumpMap814,18145
CreateEnvBumpClump(void)CreateEnvBumpClump832,18525
MaterialSetEffect(RpMaterial *material, void *data)MaterialSetEffect890,19880
AtomicSetEffect(RpAtomic *atomic, void *data)AtomicSetEffect931,20987
ClumpSetEffect(RpClump *clump, MaterialEffect effect)ClumpSetEffect948,21301
CreateDualPassClump(void)CreateDualPassClump960,21555
CreateUVAnimTransforms()CreateUVAnimTransforms1012,22812
DestroyUVAnimTransforms()DestroyUVAnimTransforms1030,23114
UpdateUVAnimTransforms(RwReal deltaTime)UpdateUVAnimTransforms1044,23346
MaterialResetEffects(RpMaterial *material,MaterialResetEffects1102,25045
AtomicResetMaterialEffects(RpAtomic *atomic, void *data)AtomicResetMaterialEffects1112,25250
ResetMaterialEffects(RpClump *clump)ResetMaterialEffects1128,25537
ToggleMaterialEffectsCallback(RwBool testEnable)ToggleMaterialEffectsCallback1140,25772
SelectMaterialEffectCallback(RwBool testEnable)SelectMaterialEffectCallback1195,26943
EnvMapSetTextureCallback(RwBool testEnable)EnvMapSetTextureCallback1270,28655
EnvMapSetShininessCallback(RwBool testEnable)EnvMapSetShininessCallback1287,29008
BumpMapSetTextureCallback(RwBool testEnable)BumpMapSetTextureCallback1311,29597
BumpMapSetBumpinessCallback(RwBool testEnable)BumpMapSetBumpinessCallback1328,29948
DualPassSetBlendModeCallback(RwBool testEnable)DualPassSetBlendModeCallback1351,30533
ToggleLightSpinCallback(RwBool testEnable)ToggleLightSpinCallback1373,31012
InitializeMenu(void)InitializeMenu1393,31326
Initialize(void)Initialize1509,35278
Initialize3D(void *param)Initialize3D1536,35827
DestroyLight(RpLight *light,DestroyLight1649,38173
Terminate3D(void)Terminate3D1674,38618
AttachPlugins(void)AttachPlugins1784,40514
DisplayOnScreenInfo(void)DisplayOnScreenInfo1825,41200
Render(void)Render1844,41554
Idle(void)Idle1881,42212
AppEventHandler(RsEvent event, void *param)AppEventHandler1950,43554

examples/matfx1/src/main.h,29
#define MAIN_HMAIN_H32,931

examples/matfx1/src/win/events.c,853
static RwBool Rotate = FALSE;Rotate39,1026
static RwBool Translate = FALSE;Translate40,1057
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown48,1208
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp56,1353
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown69,1590
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp77,1739
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove89,1979
MouseHandler(RsEvent event, void *param)MouseHandler118,2509
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown170,3639
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp177,3757
KeyboardHandler(RsEvent event, void *param)KeyboardHandler187,3962
AttachInputDevices(void)AttachInputDevices224,4695

examples/matfx1/makefile,104
DEMO = matfx1DEMO29,1021
RWGDIR = $(CURDIR)/../..RWGDIR34,1090
CSRC =	$(SRC)/main.c		\CSRC39,1170

examples/frame/src/main.c,1994
{__anon7020e91a010853,1252
    RpClump *clump;clump57,1324
    RwInt32 numClones;numClones62,1414
CloneParameters;CloneParameters64,1441
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH66,1461
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT67,1497
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO70,1556
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO72,1605
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW75,1656
static RwBool FPSOn = FALSE;FPSOn77,1693
static RwInt32 FrameCounter = 0;FrameCounter79,1725
static RwInt32 FramesPerSecond = 0;FramesPerSecond80,1759
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor82,1798
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor83,1853
static RtCharset *Charset = NULL;Charset85,1910
static RpLight *AmbientLight = NULL;AmbientLight86,1945
static RpLight *MainLight = NULL;MainLight87,1983
static RwInt32 AtomicIndex = 0;AtomicIndex88,2018
static RwBool AtomicsOn = TRUE;AtomicsOn89,2051
RpClump *Clump = NULL;Clump91,2086
RpWorld *World = NULL;World92,2110
RwCamera *Camera = NULL;Camera93,2134
RpAtomic *Atomics[ATOMICNUM];Atomics94,2160
CreateWorld(void)CreateWorld103,2306
CreateAmbientLight(RpWorld *world)CreateAmbientLight121,2646
CreateMainLight(RpWorld *world)CreateMainLight141,2983
CreateCamera(RpWorld *world)CreateCamera177,3751
LoadClump(const RwChar *file)LoadClump210,4478
SetRootAtomic(RpAtomic *atomic, SetRootAtomic238,5061
CloneAtomics(RpAtomic *atomic, void *data)CloneAtomics253,5322
CreateClump(RpWorld *world)CreateClump286,6029
Initialize(void)Initialize374,8064
InitializeMenu(void)InitializeMenu401,8602
Initialize3D(void *param)Initialize3D429,9244
Terminate3D(void)Terminate3D505,10778
AttachPlugins(void)AttachPlugins576,11967
DisplayOnScreenInfo(void)DisplayOnScreenInfo604,12386
Render(void)Render623,12740
Idle(void)Idle676,13906
AppEventHandler(RsEvent event, void *param)AppEventHandler720,14679

examples/frame/src/frame.c,812
static RwInt32 LevelTable[ATOMICNUM];LevelTable41,1118
RpAtomic *SelectedAtomic = NULL;SelectedAtomic43,1159
NextAndPrevious NextAndPreviousAtomic[ATOMICNUM];NextAndPreviousAtomic48,1275
HighlightAtomic(void)HighlightAtomic58,1470
RenderFrameHierarchy(void) RenderFrameHierarchy143,4121
FrameRotate(RwReal xAngle, RwReal yAngle)FrameRotate195,5545
PositionFrames(void)PositionFrames234,6497
GetAtomicIndex(RpAtomic *atomic)GetAtomicIndex332,9740
BuildTable(void)BuildTable352,10052
GetFirstAtomic(RwObject *object, void *data)GetFirstAtomic422,11518
FrameCallBack(RwFrame *frame, FrameCallBack436,11742
FindLevels(RwFrame *frame)FindLevels446,11882
LinkFrameHierarchy(void)LinkFrameHierarchy484,12726
ResetFrameHierarchyCallback(RwBool testEnable)ResetFrameHierarchyCallback550,14625

examples/frame/src/main.h,153
#define MAIN_HMAIN_H32,958
#define ATOMICNUM ATOMICNUM37,1021
#define POS_X POS_X39,1047
#define POS_Y POS_Y40,1069
#define POS_Z POS_Z41,1092

examples/frame/src/frame.h,201
#define FRAME_HFRAME_H32,960
typedef struct NextAndPreviousNextAndPrevious37,1024
    RpAtomic *previous;previous39,1059
    RpAtomic *next;next40,1084
NextAndPrevious;NextAndPrevious42,1109

examples/frame/src/win/events.c,894
static RwBool Ctrl = FALSE;Ctrl39,1071
static RwBool RotateFrame = FALSE;RotateFrame40,1100
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown47,1251
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp56,1403
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown68,1643
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp75,1769
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove85,1983
MouseHandler(RsEvent event, void *param)MouseHandler100,2286
FindFirstChild(RwFrame *frame, void *data)FindFirstChild152,3411
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown167,3746
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp244,5666
KeyboardHandler(RsEvent event, void *param)KeyboardHandler270,6130
AttachInputDevices(void)AttachInputDevices307,6863

examples/frame/makefile,103
DEMO = frameDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1083
CSRC =	$(SRC)/main.c		\CSRC39,1163

examples/geometry/src/main.c,1657
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH47,1186
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT48,1222
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO51,1281
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO53,1330
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW56,1381
static RwBool FPSOn = FALSE;FPSOn58,1418
static RwInt32 FrameCounter = 0;FrameCounter60,1450
static RwInt32 FramesPerSecond = 0;FramesPerSecond61,1484
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor63,1523
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor64,1578
static RwV3d Xaxis = {1.0f, 0.0f, 0.0f};Xaxis66,1635
static RwV3d Yaxis = {0.0f, 1.0f, 0.0f};Yaxis67,1677
static RpWorld *World = NULL;World69,1721
static RpLight *MainLight = NULL;MainLight70,1752
static RpLight *AmbientLight = NULL;AmbientLight71,1787
static RwCamera *Camera = NULL;Camera72,1825
static RpClump *Clump = NULL;Clump73,1858
static RtCharset *Charset = NULL;Charset74,1889
CreateWorld(void)CreateWorld83,2089
CreateAmbientLight(RpWorld *world)CreateAmbientLight101,2413
CreateMainLight(RpWorld *world)CreateMainLight121,2749
CreateCamera(RpWorld *world)CreateCamera154,3420
Initialize(void)Initialize177,3891
InitializeMenu(void)InitializeMenu204,4440
Initialize3D(void *param)Initialize3D223,4806
Terminate3D(void)Terminate3D313,6701
AttachPlugins(void)AttachPlugins375,7704
DisplayOnScreenInfo(void)DisplayOnScreenInfo403,8123
Render(void)Render423,8479
UpdateClump(RwReal timeStep)UpdateClump460,9136
Idle(void)Idle484,9647
AppEventHandler(RsEvent event, void *param)AppEventHandler538,10651

examples/geometry/src/geometry.c,383
#define NOP NOP39,1048
#define NOH NOH44,1103
#define NOV NOV49,1191
#define NOT NOT54,1284
static RwV3d BuckyBallVertexList[60] = BuckyBallVertexList56,1305
static RwUInt16 BuckyBallPentagonList[5*NOP] = BuckyBallPentagonList125,3644
static RwUInt16 BuckyBallHexagonList[6*NOH] = BuckyBallHexagonList141,4001
CreateBuckyBall(RwBool normalize)CreateBuckyBall173,4789

examples/geometry/src/win/events.c,769
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown41,1139
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp48,1267
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown58,1482
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp65,1611
HandleMouseMove(RsMouseStatus *mouseStatus __RWUNUSED__)HandleMouseMove75,1828
MouseHandler(RsEvent event, void *param)MouseHandler85,2041
HandleKeyDown(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyDown137,3171
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp147,3378
KeyboardHandler(RsEvent event, void *param)KeyboardHandler157,3583
AttachInputDevices(void)AttachInputDevices194,4316

examples/geometry/makefile,106
DEMO = geometryDEMO29,1015
RWGDIR = $(CURDIR)/../..RWGDIR34,1086
CSRC =	$(SRC)/main.c		\CSRC39,1166

examples/prtstd/src/main.c,1453
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH51,1218
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT52,1254
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO55,1313
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO57,1362
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW60,1413
static RwBool FPSOn = FALSE;FPSOn62,1450
static RwInt32 FrameCounter = 0;FrameCounter64,1482
static RwInt32 FramesPerSecond = 0;FramesPerSecond65,1516
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor67,1555
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor68,1610
static RtCharset *Charset = NULL;Charset70,1667
static RwBool PrtStdAutoRotate = FALSE;PrtStdAutoRotate72,1704
static RwV3d AutoRotate = {0.0f,0.0f,0.0f};AutoRotate73,1745
RwCamera *Camera = NULL;Camera75,1792
RpWorld *World = NULL;World77,1820
CreateWorld(void)CreateWorld84,1955
CreateCamera(RpWorld *world)CreateCamera102,2280
Initialize(void)Initialize136,3102
emtSizeMenuCB(RwBool justCheck)emtSizeMenuCB163,3651
emtEmitBiasCB(RwBool justCheck)emtEmitBiasCB178,3833
InitializeMenu(void)InitializeMenu196,4143
Initialize3D(void *param)Initialize3D624,16371
Terminate3D(void)Terminate3D684,17517
AttachPlugins(void)AttachPlugins721,18032
DisplayOnScreenInfo(void)DisplayOnScreenInfo765,18695
Render(void)Render787,19209
Idle(void)Idle824,19859
AppEventHandler(RsEvent event, void *param)AppEventHandler894,21207

examples/prtstd/src/prtstd.h,756
#define PRTSTD_HPRTSTD_H32,954
#define COLORANIMCOLORANIM37,1020
#define SIZEANIMSIZEANIM38,1039
#define BATCHSIZE BATCHSIZE39,1057
typedef struct PrtStdData PrtStdData;PrtStdData43,1112
struct PrtStdDataPrtStdData47,1185
    RpPrtStdEmitterClass        *eClass;eClass49,1207
    RpPrtStdParticleClass       *pClass;pClass50,1249
    RpAtomic                    *atmEmitter;atmEmitter52,1293
    RpPrtStdEmitter             *emitter;emitter54,1341
    RpPrtStdEmitterStandard     *EmtStd;EmtStd57,1417
    RpPrtStdEmitterPrtColor     *emtPrtCol;emtPrtCol62,1512
    RpPrtStdEmitterPrtSize      *emtPrtSize;emtPrtSize66,1584
    RpPrtStdEmitterPTank        *EmtPtank;EmtPtank69,1640
    RwTexture *PrtTexture;PrtTexture71,1686

examples/prtstd/src/prtstd.c,1289
PrtStdData PrtData;PrtData40,1049
RwBool renderEmitter = TRUE;renderEmitter42,1072
static RwIm3DVertex             EmitterVertex[20];EmitterVertex44,1104
static RwImVertexIndex          EmitterVertexIndex[48] =EmitterVertexIndex45,1156
static const RwRGBA              EmitterColor = {64, 64, 64, 64};    /* WHITE */EmitterColor63,1970
static const RwRGBA              EmitterDirColor = {128, 0, 0, 128};    /* WHITE */EmitterDirColor65,2054
static RwBlendFunction BlendFunctions[11] =BlendFunctions67,2141
RwInt32 SrcBlendID = 4;SrcBlendID82,2446
RwInt32 DestBlendID = 1;DestBlendID83,2471
RwBool VtxAlphaOn = TRUE;VtxAlphaOn85,2499
PrtStdSetPtankAlphaBlending( RwBool justCheck )PrtStdSetPtankAlphaBlending93,2629
PrtEmitterIm3DCreate( RpPrtStdEmitterStandard *emtStd )PrtEmitterIm3DCreate114,3116
PrtStdRender(void)PrtStdRender365,12630
PrtStdSetDefault(RwBool justcheck)PrtStdSetDefault416,13952
PrtStdInitialize(void)PrtStdInitialize514,16931
PrtStdTerminate(void)PrtStdTerminate626,20152
PrtStdCameraRotate(RwReal xAngle, RwReal yAngle)PrtStdCameraRotate662,20836
PrtStdEmitterRotate(RwReal xAngle, RwReal yAngle)PrtStdEmitterRotate706,21899
PrtStdEmitterWorldRotate(RwReal xAngle, RwReal yAngle, RwReal zAngle)PrtStdEmitterWorldRotate747,22914

examples/prtstd/src/win/events.c,838
static RwBool LButton = FALSE;LButton42,1068
static RwBool RButton = FALSE;RButton43,1100
HandleLeftButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonDown49,1245
HandleLeftButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleLeftButtonUp59,1455
HandleRightButtonDown(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonDown74,1755
HandleRightButtonUp(RsMouseStatus *mouseStatus __RWUNUSED__)HandleRightButtonUp84,1967
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove98,2265
MouseHandler(RsEvent event, void *param)MouseHandler121,2734
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown173,3863
HandleKeyUp(RsKeyStatus *keyStatus __RWUNUSED__)HandleKeyUp246,5220
KeyboardHandler(RsEvent event, void *param)KeyboardHandler259,5473
AttachInputDevices(void)AttachInputDevices296,6206

examples/prtstd/makefile,104
DEMO = prtstdDEMO29,1018
RWGDIR = $(CURDIR)/../..RWGDIR34,1087
CSRC =	$(SRC)/main.c		\CSRC39,1167

examples/maestro1/src/main.c,1452
#define DEFAULT_SCREEN_WIDTH DEFAULT_SCREEN_WIDTH66,1397
#define DEFAULT_SCREEN_HEIGHT DEFAULT_SCREEN_HEIGHT67,1433
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO70,1492
#define DEFAULT_ASPECTRATIO DEFAULT_ASPECTRATIO72,1541
#define DEFAULT_VIEWWINDOW DEFAULT_VIEWWINDOW75,1592
static RwBool FPSOn = FALSE;FPSOn77,1629
static RwInt32 FrameCounter = 0;FrameCounter79,1661
static RwInt32 FramesPerSecond = 0;FramesPerSecond80,1695
static RwRGBA ForegroundColor = {200, 200, 200, 255};ForegroundColor82,1734
static RwRGBA BackgroundColor = { 64,  64,  64,   0};BackgroundColor83,1789
RpWorld *World = NULL;World85,1846
RwCamera *Camera = NULL;Camera86,1870
RtCharset *Charset = NULL;Charset87,1896
RpLight *Light = NULL;Light88,1924
RwBool ResetDeltaTime = FALSE;ResetDeltaTime90,1950
const RwChar *ExampleFileName = RWSTRING("models/Combination.anm");ExampleFileName92,1984
CreateWorld(void)CreateWorld98,2162
CreateCamera(RpWorld *world)CreateCamera116,2487
Initialize(void)Initialize139,2957
ResetCB(RwBool justCheck)ResetCB166,3497
InitializeMenu(void)InitializeMenu183,3765
Initialize3D(void *param)Initialize3D207,4251
Terminate3D(void)Terminate3D312,6392
AttachPlugins(void)AttachPlugins364,7232
DisplayOnScreenInfo(RwCamera *camera)DisplayOnScreenInfo399,7798
Render(RwReal deltaTime)Render426,8380
Idle(void)Idle475,9406
AppEventHandler(RsEvent event, void *param)AppEventHandler547,10794

examples/maestro1/src/view.h,29
#define VIEW_HVIEW_H32,921

examples/maestro1/src/view.c,4142
Rt2dObject *MainScene = NULL;MainScene44,1081
Rt2dObject *Scene = NULL;Scene46,1114
Rt2dMaestro *Maestro = NULL;Maestro48,1143
Rt2dObject *MaestroScene = NULL;MaestroScene49,1173
RwBool ObjectLoaded = FALSE;ObjectLoaded51,1209
RwBool ObjectToLoad = FALSE;ObjectToLoad52,1239
RwChar OTLPath[256];OTLPath53,1269
RwV2d Position = { 0.0f, 0.0f };Position56,1295
RwInt32 WinHeight = 480;WinHeight58,1331
RwInt32 WinWidth = 640 ;WinWidth59,1357
RwV2d TranslateXStep;TranslateXStep61,1385
RwV2d TranslateYStep;TranslateYStep62,1408
RwV2d RotateOrigin;RotateOrigin63,1431
RwBool ViewChanged = FALSE;ViewChanged65,1454
RwBool justLoaded = FALSE;justLoaded66,1483
static RwReal MaestroSpeed = 1.0f;MaestroSpeed68,1513
static RwBool MaestroRunning = TRUE;MaestroRunning69,1549
static RwInt32 g_onNewGameSelected;g_onNewGameSelected72,1591
static RwInt32 g_onOptionsSelected;g_onOptionsSelected73,1628
static RwInt32 g_onLoadGameSelected;g_onLoadGameSelected74,1665
static RwInt32 g_onGameOneSelected;g_onGameOneSelected75,1703
static RwInt32 g_onGameTwoSelected;g_onGameTwoSelected76,1740
static RwInt32 g_onGameThreeSelected;g_onGameThreeSelected77,1777
static RwInt32 g_onCharacterSelectChanged;g_onCharacterSelectChanged78,1816
static RwInt32 g_onLetterSliderBtnRightPushed;g_onLetterSliderBtnRightPushed79,1860
static RwInt32 g_onLetterSliderBtnLeftPushed;g_onLetterSliderBtnLeftPushed80,1908
static RwInt32 g_onLetterSliderBtnUpPushed;g_onLetterSliderBtnUpPushed81,1955
static RwInt32 g_onLetterSliderBtnDownPushed;g_onLetterSliderBtnDownPushed82,2000
static RwInt32 g_onLetterSliderSelectPushed;g_onLetterSliderSelectPushed83,2047
static RwInt32 g_onMusicVolumeSliderChanged;g_onMusicVolumeSliderChanged84,2093
static RwInt32 g_onAutosaveOnOffChanged;g_onAutosaveOnOffChanged85,2139
static RwInt32 g_onSoundFXVolumeSliderChanged;g_onSoundFXVolumeSliderChanged86,2181
static const RwChar *g_MarkerText=RWSTRING("Player1 name");g_MarkerText88,2231
static RwUInt32 g_MaxPlayerNameLen = 12;g_MaxPlayerNameLen89,2292
static RwUInt32 g_CurrentEditPos=0;g_CurrentEditPos90,2334
static RwChar *g_PlayerName=NULL;g_PlayerName91,2371
static Rt2dAnim *g_PlayerNameEditSlider=NULL;g_PlayerNameEditSlider92,2406
Rt2dFont *MessageFont = NULL;MessageFont94,2455
Rt2dBrush *MessageBrush = NULL;MessageBrush95,2486
#define MESSAGE_BUFFER_SIZE MESSAGE_BUFFER_SIZE96,2519
RwChar g_MessageBuffer[MESSAGE_BUFFER_SIZE];g_MessageBuffer97,2552
RwChar *g_MessageHead, *g_MessageTail;g_MessageHead98,2598
RwChar *g_MessageHead, *g_MessageTail;g_MessageTail98,2598
RwReal MessageBaseSpeed = 48.0f;MessageBaseSpeed99,2638
RegisterGetURLEvent(const RwChar *name, RwInt32 *event)RegisterGetURLEvent102,2687
RegisterEvents()RegisterEvents108,2842
SetupPrinting()SetupPrinting133,4347
ShutdownPrinting()ShutdownPrinting146,4748
QueueSize()QueueSize153,4864
QueueFull()QueueFull162,5063
QueueChars(const RwChar *message)QueueChars171,5249
QueueMessage(const RwChar *message)QueueMessage191,5711
RenderCurrentMessage(RwReal deltaTime)RenderCurrentMessage199,5861
LocatePlayerNameStringInScene(Rt2dObject *child, Rt2dObject *parent __RWUNUSED__, void *data)LocatePlayerNameStringInScene258,7375
SetupPlayerNameEdit()SetupPlayerNameEdit287,8159
DoPlayerNameEdit()DoPlayerNameEdit314,8850
NewScene()NewScene347,9531
HandleEvent(RwInt32 index)HandleEvent353,9604
ViewerMessageHandler(Rt2dMaestro *maestro, Rt2dMessage *message)ViewerMessageHandler440,12376
AllAnimSetInterpolateCB(Rt2dMaestro *maestro,AllAnimSetInterpolateCB458,12739
MaestroSetInterpolateAll(RwBool maestroInterpolate)MaestroSetInterpolateAll469,12966
ViewerClean(void)ViewerClean479,13252
PreLoadObject(const RwChar *filename)PreLoadObject503,13651
LoadMaestro(RwChar *filename)LoadMaestro516,13900
CreateViewer(RwCamera *camera)CreateViewer643,16783
DestroyViewer(void)DestroyViewer673,17351
InputUpdateViewer(void)InputUpdateViewer693,17586
UpdateViewer(RwReal deltaTime)UpdateViewer732,18647
RenderViewer(RwCamera *camera __RWUNUSED__, RwReal deltaTime)RenderViewer749,18994

examples/maestro1/src/button.c,665
typedef struct ButtonByLabelPacket ButtonByLabelPacket;ButtonByLabelPacket6,67
struct ButtonByLabelPacketButtonByLabelPacket7,124
    RwInt32 buttonID;buttonID9,155
    RwUInt32 animButtonState;animButtonState10,178
BtnStruct BtnList[MAX_BUTTONS];BtnList13,215
static Rt2dMaestro* CheckAnimCB(Rt2dMaestro *maestro, Rt2dAnim *anim __RWUNUSED__, Rt2dAnimPropsCheckAnimCB16,252
void PressButton(Rt2dMaestro *maestro,RwInt32 buttonNo, RwUInt32 animButtonState)PressButton34,898
LookupButton(Rt2dMaestro *maestro, const RwChar *name, BtnStruct *button)LookupButton46,1255
CreateLookUpForAllButtons(Rt2dMaestro *maestro)CreateLookUpForAllButtons56,1501

examples/maestro1/src/button.h,512
#define BUTTON_HBUTTON_H8,410
struct BtnStructBtnStruct23,704
    const RwChar *name;name25,725
    RwInt32 id;id26,750
typedef struct BtnStruct BtnStruct;BtnStruct28,771
#define MAX_BUTTONS MAX_BUTTONS30,810
enum ButtonNo {ButtonNo32,835
    DownButton=0,DownButton33,852
    UpButton,UpButton34,871
    LeftButton,LeftButton35,886
    RightButton,RightButton36,903
    SelectButton,SelectButton37,921
    CancelButton,CancelButton38,940
    LastButton = MAX_BUTTONSLastButton39,959

examples/maestro1/src/win/events.c,873
RwV2d CursorPos = {100.0f, 100.0f};CursorPos43,1085
RwBool CmdTranslate = FALSE;CmdTranslate45,1124
RwBool CmdRotate = FALSE;CmdRotate46,1154
HandleLeftButtonDown(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonDown51,1292
HandleLeftButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleLeftButtonUp76,1835
HandleRightButtonDown(RsMouseStatus *mouseStatus)HandleRightButtonDown102,2403
HandleRightButtonUp(RsMouseStatus * mouseStatus __RWUNUSED__)HandleRightButtonUp121,2918
HandleMouseMove(RsMouseStatus *mouseStatus)HandleMouseMove135,3222
MouseHandler(RsEvent event, void *param)MouseHandler186,4508
HandleKeyDown(RsKeyStatus *keyStatus)HandleKeyDown238,5638
HandleKeyUp(RsKeyStatus *keyStatus)HandleKeyUp322,7188
KeyboardHandler(RsEvent event, void *param)KeyboardHandler446,9952
AttachInputDevices(void)AttachInputDevices483,10685

examples/maestro1/makefile,106
DEMO = maestro1DEMO29,1018
RWGDIR = $(CURDIR)/../..RWGDIR34,1089
CSRC =	$(SRC)/main.c		\CSRC39,1169

README.md,43
librwlibrw1,0
# BuildingBuilding18,618

args.h,188
#define USED(USED2,20
#define SET(SET3,46
#define	ARGBEGIN	ARGBEGIN5,70
#define	ARGEND	ARGEND17,425
#define	ARGF(ARGF18,512
#define	EARGF(EARGF20,612
#define	ARGC(ARGC23,737

skeleton/skeleton.cpp,317
namespace sk {sk5,40
Globals globals;globals7,56
Args args;args8,73
InitRW(void)InitRW12,91
TerminateRW(void)TerminateRW53,1048
CameraCreate(int32 width, int32 height, bool32 z)CameraCreate62,1174
CameraSize(Camera *cam, Rect *r)CameraSize73,1456
EventHandler(Event e, void *param)EventHandler88,1791

skeleton/imgui/imgui_demo.cpp,4794
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS22,1950
#define snprintf snprintf38,2544
#define IM_NEWLINE IM_NEWLINE61,4575
#define IM_NEWLINE IM_NEWLINE63,4607
#define IM_MAX(IM_MAX66,4639
#define IMGUI_DISABLE_DEMO_WINDOWSIMGUI_DISABLE_DEMO_WINDOWS73,5041
static void ShowHelpMarker(const char* desc)ShowHelpMarker91,5727
void ImGui::ShowUserGuide()ShowUserGuide104,6024
void ImGui::ShowDemoWindow(bool* p_open)ShowDemoWindow127,7272
            struct TextFilters { static int FilterImGuiLetters(ImGuiTextEditCallbackData* data) TextFilters674,37101
            struct TextFilters { static int FilterImGuiLetters(ImGuiTextEditCallbackData* data) FilterImGuiLetters674,37101
            struct FuncsFuncs736,40675
                static float Sin(void*, int i) { return sinf(i * 0.1f); }Sin738,40714
                static float Saw(void*, int i) { return (i & 1) ? 1.0f : -1.0f; }Saw739,40788
bool ImGui::ShowStyleSelector(const char* label)ShowStyleSelector1935,100225
void ImGui::ShowFontSelector(const char* label)ShowFontSelector1953,100771
void ImGui::ShowStyleEditor(ImGuiStyle* ref)ShowStyleEditor1972,101628
static void ShowExampleAppMainMenuBar()ShowExampleAppMainMenuBar2197,115793
static void ShowExampleMenuFile()ShowExampleMenuFile2220,116463
static void ShowExampleAppAutoResize(bool* p_open)ShowExampleAppAutoResize2285,118603
static void ShowExampleAppConstrainedResize(bool* p_open)ShowExampleAppConstrainedResize2302,119318
    struct CustomConstraints // Helper functions to demonstrate programmatic constraintsCustomConstraints2304,119378
        static void Square(ImGuiSizeConstraintCallbackData* data) { data->DesiredSize = ImVec2(ISquare2306,119473
        static void Step(ImGuiSizeConstraintCallbackData* data)   { float step = (float)(int)(inStep2307,119671
static void ShowExampleAppFixedOverlay(bool* p_open)ShowExampleAppFixedOverlay2349,122228
static void ShowExampleAppWindowTitles(bool*)ShowExampleAppWindowTitles2377,123984
static void ShowExampleAppCustomRendering(bool* p_open)ShowExampleAppCustomRendering2403,125205
struct ExampleAppConsoleExampleAppConsole2506,131581
    char                  InputBuf[256];InputBuf2508,131608
    ImVector<char*>       Items;Items2509,131649
    bool                  ScrollToBottom;ScrollToBottom2510,131682
    ImVector<char*>       History;History2511,131724
    int                   HistoryPos;    // -1: new line, 0..History.Size-1 browsing history.HistoryPos2512,131759
    ImVector<const char*> Commands;Commands2513,131853
    ExampleAppConsole()ExampleAppConsole2515,131890
    ~ExampleAppConsole()~ExampleAppConsole2526,132308
    static int   Stricmp(const char* str1, const char* str2)         { int d; while ((d = touppeStricmp2534,132467
    static int   Strnicmp(const char* str1, const char* str2, int n) { int d = 0; while (n > 0 &Strnicmp2535,132637
    static char* Strdup(const char *str)                             { size_t len = strlen(str) Strdup2536,132825
    void    ClearLog()ClearLog2538,133006
    void    AddLog(const char* fmt, ...) IM_FMTARGS(2)AddLog2546,133169
    void    Draw(const char* title, bool* p_open)Draw2559,133516
    void    ExecCommand(const char* command_line)ExecCommand2658,139327
    static int TextEditCallbackStub(ImGuiTextEditCallbackData* data) // In C++11 you are better TextEditCallbackStub2696,140546
    int     TextEditCallback(ImGuiTextEditCallbackData* data)TextEditCallback2702,140832
static void ShowExampleAppConsole(bool* p_open)ShowExampleAppConsole2802,145175
struct ExampleAppLogExampleAppLog2812,145425
    ImGuiTextBuffer     Buf;Buf2814,145448
    ImGuiTextFilter     Filter;Filter2815,145477
    ImVector<int>       LineOffsets;        // Index to lines offsetLineOffsets2816,145509
    bool                ScrollToBottom;ScrollToBottom2817,145578
    void    Clear()     { Buf.clear(); LineOffsets.clear(); }Clear2819,145619
    void    AddLog(const char* fmt, ...) IM_FMTARGS(2)AddLog2821,145682
    void    Draw(const char* title, bool* p_open = NULL)Draw2834,146083
static void ShowExampleAppLog(bool* p_open)ShowExampleAppLog2873,147443
static void ShowExampleAppLayout(bool* p_open)ShowExampleAppLayout2891,148100
static void ShowExampleAppPropertyEditor(bool* p_open)ShowExampleAppPropertyEditor2935,149621
    struct funcsfuncs2950,150262
        static void ShowDummyObject(const char* prefix, int uid)ShowDummyObject2952,150285
static void ShowExampleAppLongText(bool* p_open)ShowExampleAppLongText3008,152679
void ImGui::ShowDemoWindow(bool*) {}ShowDemoWindow3064,154697
void ImGui::ShowUserGuide() {}ShowUserGuide3065,154734
void ImGui::ShowStyleEditor(ImGuiStyle*) {}ShowStyleEditor3066,154765

skeleton/imgui/ImGuizmo.h,262
#define IMGUI_APIIMGUI_API110,4656
namespace ImGuizmoImGuizmo113,4682
	enum OPERATIONOPERATION155,6815
		TRANSLATE,TRANSLATE157,6834
		ROTATE,ROTATE158,6847
		SCALESCALE159,6857
	enum MODEMODE162,6870
		LOCAL,LOCAL164,6884
		WORLDWORLD165,6893

skeleton/imgui/imgui_impl_rw.cpp,640
static rw::Texture *g_FontTexture;g_FontTexture10,143
static Im2DVertex *g_vertbuf;g_vertbuf11,178
static int g_vertbufSize;g_vertbufSize12,208
ImGui_ImplRW_RenderDrawLists(ImDrawData* draw_data)ImGui_ImplRW_RenderDrawLists15,240
ImGui_ImplRW_Init(void)ImGui_ImplRW_Init91,2791
ImGui_ImplRW_Shutdown(void)ImGui_ImplRW_Shutdown122,3705
ImGui_ImplRW_CreateFontsTexture()ImGui_ImplRW_CreateFontsTexture127,3750
ImGui_ImplRW_CreateDeviceObjects()ImGui_ImplRW_CreateDeviceObjects151,4372
ImGui_ImplRW_NewFrame(float timeDelta)ImGui_ImplRW_NewFrame161,4526
ImGuiEventHandler(sk::Event e, void *param)ImGuiEventHandler183,5106

skeleton/imgui/imgui.cpp,52177
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS585,47701
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS589,47760
namespace ImGuiImGui675,54415
static ImFontAtlas      GImDefaultFontAtlas;GImDefaultFontAtlas694,55253
static ImGuiContext     GImDefaultContext;GImDefaultContext703,56300
ImGuiContext*           GImGui = &GImDefaultContext;GImGui704,56343
ImGuiStyle::ImGuiStyle()ImGuiStyle711,56591
void ImGuiStyle::ScaleAllSizes(float scale_factor)ScaleAllSizes747,60864
ImGuiIO::ImGuiIO()ImGuiIO769,62034
void ImGuiIO::AddInputCharacter(ImWchar c)AddInputCharacter824,64070
void ImGuiIO::AddInputCharactersUTF8(const char* utf8_chars)AddInputCharactersUTF8834,64292
#define IM_F32_TO_INT8_UNBOUND(IM_F32_TO_INT8_UNBOUND848,64911
#define IM_F32_TO_INT8_SAT(IM_F32_TO_INT8_SAT849,65044
#define IM_NEWLINE IM_NEWLINE853,65294
#define IM_NEWLINE IM_NEWLINE855,65326
ImVec2 ImLineClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& p)ImLineClosestPoint858,65358
bool ImTriangleContainsPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)ImTriangleContainsPoint872,65746
void ImTriangleBarycentricCoords(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2ImTriangleBarycentricCoords880,66121
ImVec2 ImTriangleClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& pImTriangleClosestPoint891,66521
int ImStricmp(const char* str1, const char* str2)ImStricmp907,67087
int ImStrnicmp(const char* str1, const char* str2, size_t count)ImStrnicmp914,67251
void ImStrncpy(char* dst, const char* src, size_t count)ImStrncpy921,67456
char* ImStrdup(const char *str)ImStrdup928,67597
char* ImStrchrRange(const char* str, const char* str_end, char c)ImStrchrRange935,67760
int ImStrlenW(const ImWchar* str)ImStrlenW943,67938
const ImWchar* ImStrbolW(const ImWchar* buf_mid_line, const ImWchar* buf_begin) // find beginninImStrbolW950,68030
const char* ImStristr(const char* haystack, const char* haystack_end, const char* needle, const ImStristr957,68255
static const char* ImAtoi(const char* src, int* output)ImAtoi979,68935
int ImFormatString(char* buf, size_t buf_size, const char* fmt, ...)ImFormatString995,69655
int ImFormatStringV(char* buf, size_t buf_size, const char* fmt, va_list args)ImFormatStringV1009,69978
ImU32 ImHash(const void* data, int data_size, ImU32 seed)ImHash1023,70469
int ImTextCharFromUtf8(unsigned int* out_char, const char* in_text, const char* in_text_end)ImTextCharFromUtf81072,72216
int ImTextStrFromUtf8(ImWchar* buf, int buf_size, const char* in_text, const char* in_text_end, ImTextStrFromUtf81130,74416
int ImTextCountCharsFromUtf8(const char* in_text, const char* in_text_end)ImTextCountCharsFromUtf81149,75078
static inline int ImTextCharToUtf8(char* buf, int buf_size, unsigned int c)ImTextCharToUtf81165,75516
static inline int ImTextCountUtf8BytesFromChar(unsigned int c)ImTextCountUtf8BytesFromChar1202,76435
int ImTextStrToUtf8(char* buf, int buf_size, const ImWchar* in_text, const ImWchar* in_text_end)ImTextStrToUtf81211,76664
int ImTextCountUtf8BytesFromStr(const ImWchar* in_text, const ImWchar* in_text_end)ImTextCountUtf8BytesFromStr1227,77184
ImVec4 ImGui::ColorConvertU32ToFloat4(ImU32 in)ColorConvertU32ToFloat41241,77573
ImU32 ImGui::ColorConvertFloat4ToU32(const ImVec4& in)ColorConvertFloat4ToU321251,77861
ImU32 ImGui::GetColorU32(ImGuiCol idx, float alpha_mul)  GetColorU321261,78216
ImU32 ImGui::GetColorU32(const ImVec4& col)GetColorU321269,78431
const ImVec4& ImGui::GetStyleColorVec4(ImGuiCol idx)GetStyleColorVec41277,78606
ImU32 ImGui::GetColorU32(ImU32 col)GetColorU321283,78734
void ImGui::ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& oColorConvertRGBtoHSV1295,79262
void ImGui::ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& oColorConvertHSVtoRGB1317,79839
FILE* ImFileOpen(const char* filename, const char* mode)ImFileOpen1344,80592
void* ImFileLoadToMemory(const char* filename, const char* file_open_mode, int* out_file_size, iImFileLoadToMemory1362,81476
static ImVector<ImGuiStorage::Pair>::iterator LowerBound(ImVector<ImGuiStorage::Pair>& data, ImGLowerBound1408,82760
void ImGuiStorage::BuildSortByKey()BuildSortByKey1431,83491
    struct StaticFunc StaticFunc1433,83529
        static int PairCompareByID(const void* lhs, const void* rhs) PairCompareByID1435,83559
int ImGuiStorage::GetInt(ImGuiID key, int default_val) constGetInt1447,84081
bool ImGuiStorage::GetBool(ImGuiID key, bool default_val) constGetBool1455,84341
float ImGuiStorage::GetFloat(ImGuiID key, float default_val) constGetFloat1460,84460
void* ImGuiStorage::GetVoidPtr(ImGuiID key) constGetVoidPtr1468,84726
int* ImGuiStorage::GetIntRef(ImGuiID key, int default_val)GetIntRef1477,85119
bool* ImGuiStorage::GetBoolRef(ImGuiID key, bool default_val)GetBoolRef1485,85361
float* ImGuiStorage::GetFloatRef(ImGuiID key, float default_val)GetFloatRef1490,85483
void** ImGuiStorage::GetVoidPtrRef(ImGuiID key, void* default_val)GetVoidPtrRef1498,85731
void ImGuiStorage::SetInt(ImGuiID key, int val)SetInt1507,86154
void ImGuiStorage::SetBool(ImGuiID key, bool val)SetBool1518,86398
void ImGuiStorage::SetFloat(ImGuiID key, float val)SetFloat1523,86483
void ImGuiStorage::SetVoidPtr(ImGuiID key, void* val)SetVoidPtr1534,86731
void ImGuiStorage::SetAllInt(int v)SetAllInt1545,86981
ImGuiTextFilter::ImGuiTextFilter(const char* default_filter)ImGuiTextFilter1556,87343
bool ImGuiTextFilter::Draw(const char* label, float width)Draw1570,87600
void ImGuiTextFilter::TextRange::split(char separator, ImVector<TextRange>& out)split1582,87928
void ImGuiTextFilter::Build()Build1600,88308
bool ImGuiTextFilter::PassFilter(const char* text, const char* text_end) constPassFilter1617,88698
#define va_copy(va_copy1658,89802
void ImGuiTextBuffer::appendfv(const char* fmt, va_list args)appendfv1662,89903
void ImGuiTextBuffer::appendf(const char* fmt, ...)appendf1683,90557
ImGuiSimpleColumns::ImGuiSimpleColumns()ImGuiSimpleColumns1695,90903
void ImGuiSimpleColumns::Update(int count, float spacing, bool clear)Update1703,91084
float ImGuiSimpleColumns::DeclColumns(float w0, float w1, float w2) // not using va_arg because DeclColumns1720,91551
float ImGuiSimpleColumns::CalcExtraSpace(float avail_w)CalcExtraSpace1731,91998
static void SetCursorPosYAndSetupDummyPrevLine(float pos_y, float line_height)SetCursorPosYAndSetupDummyPrevLine1740,92281
void ImGuiListClipper::Begin(int count, float items_height)Begin1755,93755
void ImGuiListClipper::End()End1771,94301
bool ImGuiListClipper::Step()Step1782,94737
ImGuiWindow::ImGuiWindow(ImGuiContext* context, const char* name)ImGuiWindow1823,96493
ImGuiWindow::~ImGuiWindow()~ImGuiWindow1874,98240
ImGuiID ImGuiWindow::GetID(const char* str, const char* str_end)GetID1880,98319
ImGuiID ImGuiWindow::GetID(const void* ptr)GetID1888,98539
ImGuiID ImGuiWindow::GetIDNoKeepAlive(const char* str, const char* str_end)GetIDNoKeepAlive1896,98718
ImGuiID ImGuiWindow::GetIDFromRectangle(const ImRect& r_abs)GetIDFromRectangle1903,98986
static void SetCurrentWindow(ImGuiWindow* window)SetCurrentWindow1916,99530
void ImGui::SetActiveID(ImGuiID id, ImGuiWindow* window)SetActiveID1924,99739
void ImGui::ClearActiveID()ClearActiveID1936,100075
void ImGui::SetHoveredID(ImGuiID id)SetHoveredID1941,100134
void ImGui::KeepAliveID(ImGuiID id)KeepAliveID1949,100379
static inline bool IsWindowContentHoverable(ImGuiWindow* window, ImGuiHoveredFlags flags)IsWindowContentHoverable1956,100511
void ImGui::ItemSize(const ImVec2& size, float text_offset_y)ItemSize1977,101546
void ImGui::ItemSize(const ImRect& bb, float text_offset_y)ItemSize2003,103026
bool ImGui::ItemAdd(const ImRect& bb, ImGuiID id)ItemAdd2011,103464
bool ImGui::IsItemHovered(ImGuiHoveredFlags flags)IsItemHovered2031,104476
bool ImGui::ItemHoverable(const ImRect& bb, ImGuiID id)ItemHoverable2069,106487
bool ImGui::IsClippedEx(const ImRect& bb, ImGuiID id, bool clip_even_when_logged)IsClippedEx2091,107149
bool ImGui::FocusableItemRegister(ImGuiWindow* window, ImGuiID id, bool tab_stop)FocusableItemRegister2102,107494
void ImGui::FocusableItemUnregister(ImGuiWindow* window)FocusableItemUnregister2126,108713
ImVec2 ImGui::CalcItemSize(ImVec2 size, float default_x, float default_y)CalcItemSize2132,108843
float ImGui::CalcWrapWidthForPos(const ImVec2& pos, float wrap_pos_x)CalcWrapWidthForPos2145,109388
void* ImGui::MemAlloc(size_t sz)MemAlloc2161,109914
void ImGui::MemFree(void* ptr)MemFree2167,110022
const char* ImGui::GetClipboardText()GetClipboardText2173,110137
void ImGui::SetClipboardText(const char* text)SetClipboardText2178,110289
const char* ImGui::GetVersion()GetVersion2184,110455
ImGuiContext* ImGui::GetCurrentContext()GetCurrentContext2191,110798
void ImGui::SetCurrentContext(ImGuiContext* ctx)SetCurrentContext2196,110863
ImGuiContext* ImGui::CreateContext(void* (*malloc_fn)(size_t), void (*free_fn)(void*))CreateContext2205,111102
void ImGui::DestroyContext(ImGuiContext* ctx)DestroyContext2215,111450
ImGuiIO& ImGui::GetIO()GetIO2224,111649
ImGuiStyle& ImGui::GetStyle()GetStyle2229,111701
ImDrawData* ImGui::GetDrawData()GetDrawData2235,111883
float ImGui::GetTime()GetTime2240,111995
int ImGui::GetFrameCount()GetFrameCount2245,112048
ImDrawList* ImGui::GetOverlayDrawList()GetOverlayDrawList2250,112111
ImDrawListSharedData* ImGui::GetDrawListSharedData()GetDrawListSharedData2255,112193
void ImGui::NewFrame()NewFrame2260,112291
static void* SettingsHandlerWindow_ReadOpen(ImGuiContext&, const char* name)SettingsHandlerWindow_ReadOpen2524,126520
static void SettingsHandlerWindow_ReadLine(ImGuiContext&, void* entry, const char* line)SettingsHandlerWindow_ReadLine2532,126773
static void SettingsHandlerWindow_WriteAll(ImGuiContext& g, ImGuiTextBuffer* buf)SettingsHandlerWindow_WriteAll2542,127257
void ImGui::Initialize()Initialize2577,128764
void ImGui::Shutdown()Shutdown2598,129471
ImGuiWindowSettings* ImGui::FindWindowSettings(ImGuiID id)FindWindowSettings2655,131289
static ImGuiWindowSettings* AddWindowSettings(const char* name)AddWindowSettings2664,131540
static void LoadIniSettingsFromDisk(const char* ini_filename)LoadIniSettingsFromDisk2674,131853
ImGuiSettingsHandler* ImGui::FindSettingsHandler(ImGuiID type_hash)FindSettingsHandler2685,132147
static void LoadIniSettingsFromMemory(const char* buf_readonly)LoadIniSettingsFromMemory2695,132520
static void SaveIniSettingsToDisk(const char* ini_filename)SaveIniSettingsToDisk2747,134617
static void SaveIniSettingsToMemory(ImVector<char>& out_buf)SaveIniSettingsToMemory2764,134991
void ImGui::MarkIniSettingsDirty()MarkIniSettingsDirty2777,135392
static void MarkIniSettingsDirty(ImGuiWindow* window)MarkIniSettingsDirty2784,135552
static int ChildWindowComparer(const void* lhs, const void* rhs)ChildWindowComparer2793,135866
static void AddWindowToSortedBuffer(ImVector<ImGuiWindow*>& out_sorted_windows, ImGuiWindow* winAddWindowToSortedBuffer2804,136334
static void AddDrawListToRenderList(ImVector<ImDrawList*>& out_render_list, ImDrawList* draw_lisAddDrawListToRenderList2821,136921
static void AddWindowToRenderList(ImVector<ImDrawList*>& out_render_list, ImGuiWindow* window)AddWindowToRenderList2856,139492
static void AddWindowToRenderListSelectLayer(ImGuiWindow* window)AddWindowToRenderListSelectLayer2870,140043
void ImGui::PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersecPushClipRect2884,140764
void ImGui::PopClipRect()PopClipRect2891,141101
void ImGui::EndFrame()EndFrame2899,141425
void ImGui::Render()Render2989,145426
const char* ImGui::FindRenderedTextEnd(const char* text, const char* text_end)FindRenderedTextEnd3058,149016
void ImGui::LogText(const char* fmt, ...)LogText3070,149445
static void LogRenderedText(const ImVec2* ref_pos, const char* text, const char* text_end = NULLLogRenderedText3091,149947
void ImGui::RenderText(ImVec2 pos, const char* text, const char* text_end, bool hide_text_after_RenderText3143,151870
void ImGui::RenderTextWrapped(ImVec2 pos, const char* text, const char* text_end, float wrap_widRenderTextWrapped3170,152660
void ImGui::RenderTextClipped(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, coRenderTextClipped3189,153367
void ImGui::RenderFrame(ImVec2 p_min, ImVec2 p_max, ImU32 fill_col, bool border, float rounding)RenderFrame3229,155376
void ImGui::RenderFrameBorder(ImVec2 p_min, ImVec2 p_max, float rounding)RenderFrameBorder3242,156008
void ImGui::RenderTriangle(ImVec2 p_min, ImGuiDir dir, float scale)RenderTriangle3255,156592
void ImGui::RenderBullet(ImVec2 pos)RenderBullet3292,157611
void ImGui::RenderCheckMark(ImVec2 pos, ImU32 col, float sz)RenderCheckMark3299,157826
ImVec2 ImGui::CalcTextSize(const char* text, const char* text_end, bool hide_text_after_double_hCalcTextSize3319,158590
void ImGui::CalcListClipping(int items_count, float items_height, int* out_items_display_start, CalcListClipping3348,159919
static ImGuiWindow* FindHoveredWindow(ImVec2 pos)FindHoveredWindow3376,161154
bool ImGui::IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip)IsMouseHoveringRect3398,161996
bool ImGui::IsAnyWindowHovered()IsAnyWindowHovered3413,162482
bool ImGui::IsAnyWindowFocused()IsAnyWindowFocused3419,162587
static bool IsKeyPressedMap(ImGuiKey key, bool repeat)IsKeyPressedMap3425,162688
int ImGui::GetKeyIndex(ImGuiKey imgui_key)GetKeyIndex3431,162876
bool ImGui::IsKeyDown(int user_key_index)IsKeyDown3438,163194
int ImGui::CalcTypematicPressedRepeatAmount(float t, float t_prev, float repeat_delay, float repCalcTypematicPressedRepeatAmount3445,163421
int ImGui::GetKeyPressedAmount(int key_index, float repeat_delay, float repeat_rate)GetKeyPressedAmount3455,163783
bool ImGui::IsKeyPressed(int user_key_index, bool repeat)IsKeyPressed3464,164164
bool ImGui::IsKeyReleased(int user_key_index)IsKeyReleased3477,164641
bool ImGui::IsMouseDown(int button)IsMouseDown3487,164981
bool ImGui::IsMouseClicked(int button, bool repeat)IsMouseClicked3494,165157
bool ImGui::IsMouseReleased(int button)IsMouseReleased3512,165683
bool ImGui::IsMouseDoubleClicked(int button)IsMouseDoubleClicked3519,165867
bool ImGui::IsMouseDragging(int button, float lock_threshold)IsMouseDragging3526,166061
ImVec2 ImGui::GetMousePos()GetMousePos3537,166448
ImVec2 ImGui::GetMousePosOnOpeningCurrentPopup()GetMousePosOnOpeningCurrentPopup3543,166636
bool ImGui::IsMousePosValid(const ImVec2* mouse_pos)IsMousePosValid3552,166943
ImVec2 ImGui::GetMouseDragDelta(int button, float lock_threshold)GetMouseDragDelta3560,167189
void ImGui::ResetMouseDragDelta(int button)ResetMouseDragDelta3572,167731
ImGuiMouseCursor ImGui::GetMouseCursor()GetMouseCursor3580,167993
void ImGui::SetMouseCursor(ImGuiMouseCursor cursor_type)SetMouseCursor3585,168071
void ImGui::CaptureKeyboardFromApp(bool capture)CaptureKeyboardFromApp3590,168172
void ImGui::CaptureMouseFromApp(bool capture)CaptureMouseFromApp3595,168286
bool ImGui::IsItemActive()IsItemActive3600,168394
bool ImGui::IsItemClicked(int mouse_button)IsItemClicked3611,168606
bool ImGui::IsAnyItemHovered()IsAnyItemHovered3616,168740
bool ImGui::IsAnyItemActive()IsAnyItemActive3622,168869
bool ImGui::IsItemVisible()IsItemVisible3627,168938
void ImGui::SetItemAllowOverlap()SetItemAllowOverlap3634,169223
ImVec2 ImGui::GetItemRectMin()GetItemRectMin3643,169481
ImVec2 ImGui::GetItemRectMax()GetItemRectMax3649,169607
ImVec2 ImGui::GetItemRectSize()GetItemRectSize3655,169733
ImVec2 ImGui::CalcItemRectClosestPoint(const ImVec2& pos, bool on_edge, float outward)CalcItemRectClosestPoint3661,169866
static ImRect GetVisibleRect()GetVisibleRect3669,170124
void ImGui::BeginTooltipEx(ImGuiWindowFlags extra_flags, bool override_previous_tooltip)BeginTooltipEx3678,170565
void ImGui::SetTooltipV(const char* fmt, va_list args)SetTooltipV3695,171502
void ImGui::SetTooltip(const char* fmt, ...)SetTooltip3702,171631
void ImGui::BeginTooltip()BeginTooltip3710,171770
void ImGui::EndTooltip()EndTooltip3715,171832
void ImGui::OpenPopupEx(ImGuiID id, bool reopen_existing)OpenPopupEx3725,172445
void ImGui::OpenPopup(const char* str_id)OpenPopup3745,173450
static void CloseInactivePopups(ImGuiWindow* ref_window)CloseInactivePopups3751,173584
static ImGuiWindow* GetFrontMostModalRootWindow()GetFrontMostModalRootWindow3783,174859
static void ClosePopupToLevel(int remaining)ClosePopupToLevel3793,175168
void ImGui::ClosePopup(ImGuiID id)ClosePopup3803,175449
void ImGui::CloseCurrentPopup()CloseCurrentPopup3812,175654
static inline void ClearSetNextWindowData()ClearSetNextWindowData3823,176125
bool ImGui::BeginPopupEx(ImGuiID id, ImGuiWindowFlags extra_flags)BeginPopupEx3831,176410
bool ImGui::BeginPopup(const char* str_id)BeginPopup3853,177232
bool ImGui::IsPopupOpen(ImGuiID id)IsPopupOpen3864,177679
bool ImGui::IsPopupOpen(const char* str_id)IsPopupOpen3870,177872
bool ImGui::BeginPopupModal(const char* name, bool* p_open, ImGuiWindowFlags extra_flags)BeginPopupModal3876,178101
void ImGui::EndPopup()EndPopup3904,179126
bool ImGui::OpenPopupOnItemClick(const char* str_id, int mouse_button)OpenPopupOnItemClick3912,179359
bool ImGui::BeginPopupContextItem(const char* str_id, int mouse_button)BeginPopupContextItem3928,180307
bool ImGui::BeginPopupContextWindow(const char* str_id, int mouse_button, bool also_over_items)BeginPopupContextWindow3939,181051
bool ImGui::BeginPopupContextVoid(const char* str_id, int mouse_button)BeginPopupContextVoid3951,181589
static bool BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGuBeginChildEx3961,181991
bool ImGui::BeginChild(const char* str_id, const ImVec2& size_arg, bool border, ImGuiWindowFlagsBeginChild3996,183545
bool ImGui::BeginChild(ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_fBeginChild4002,183793
void ImGui::EndChild()EndChild4007,183966
bool ImGui::BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags)BeginChildFrame4034,185007
void ImGui::EndChildFrame()EndChildFrame4045,185569
static void CheckStacksSize(ImGuiWindow* window, bool write)CheckStacksSize4053,185731
enum ImGuiPopupPositionPolicyImGuiPopupPositionPolicy4067,187502
    ImGuiPopupPositionPolicy_Default,ImGuiPopupPositionPolicy_Default4069,187534
    ImGuiPopupPositionPolicy_ComboBoxImGuiPopupPositionPolicy_ComboBox4070,187572
static ImVec2 FindBestWindowPosForPopup(const ImVec2& ref_pos, const ImVec2& size, ImGuiDir* lasFindBestWindowPosForPopup4073,187614
static void SetWindowConditionAllowFlags(ImGuiWindow* window, ImGuiCond flags, bool enabled)SetWindowConditionAllowFlags4133,191237
ImGuiWindow* ImGui::FindWindowByName(const char* name)FindWindowByName4140,191788
static ImGuiWindow* CreateNewWindow(const char* name, ImVec2 size, ImGuiWindowFlags flags)CreateNewWindow4147,191968
static ImVec2 CalcSizeAfterConstraint(ImGuiWindow* window, ImVec2 new_size)CalcSizeAfterConstraint4197,193961
static ImVec2 CalcSizeContents(ImGuiWindow* window)CalcSizeContents4227,195297
static ImVec2 CalcSizeAutoFit(ImGuiWindow* window, const ImVec2& size_contents)CalcSizeAutoFit4235,195738
static float GetScrollMaxX(ImGuiWindow* window)GetScrollMaxX4259,197075
static float GetScrollMaxY(ImGuiWindow* window)GetScrollMaxY4264,197226
static ImVec2 CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow* window)CalcNextScrollFromScrollTargetAndClamp4269,197377
static ImGuiCol GetWindowBgColorIdxFromFlags(ImGuiWindowFlags flags)GetWindowBgColorIdxFromFlags4287,198198
static void CalcResizePosSizeFromAnyCorner(ImGuiWindow* window, const ImVec2& corner_target, conCalcResizePosSizeFromAnyCorner4296,198483
struct ImGuiResizeGripDefImGuiResizeGripDef4310,199242
    ImVec2           CornerPos;CornerPos4312,199270
    ImVec2           InnerDir;InnerDir4313,199302
    int              AngleMin12, AngleMax12;AngleMin124314,199333
    int              AngleMin12, AngleMax12;AngleMax124314,199333
const ImGuiResizeGripDef resize_grip_def[4] =resize_grip_def4317,199382
static ImRect GetBorderRect(ImGuiWindow* window, int border_n, float perp_padding, float thickneGetBorderRect4325,199660
bool ImGui::Begin(const char* name, bool* p_open, ImGuiWindowFlags flags)Begin4344,201383
bool ImGui::Begin(const char* name, bool* p_open, const ImVec2& size_on_first_use, float bg_alphBegin4974,240485
void ImGui::End()End4998,242237
void ImGui::Scrollbar(ImGuiLayoutType direction)Scrollbar5025,243425
void ImGui::BringWindowToFront(ImGuiWindow* window)BringWindowToFront5130,249607
void ImGui::BringWindowToBack(ImGuiWindow* window)BringWindowToBack5144,249960
void ImGui::FocusWindow(ImGuiWindow* window)FocusWindow5159,250432
void ImGui::FocusPreviousWindow()FocusPreviousWindow5184,251273
void ImGui::PushItemWidth(float item_width)PushItemWidth5195,251566
void ImGui::PushMultiItemsWidths(int components, float w_full)PushMultiItemsWidths5202,251813
void ImGui::PopItemWidth()PopItemWidth5216,252502
float ImGui::CalcItemWidth()CalcItemWidth5223,252746
static ImFont* GetDefaultFont()GetDefaultFont5237,253270
static void SetCurrentFont(ImFont* font)SetCurrentFont5243,253409
void ImGui::PushFont(ImFont* font)PushFont5258,254034
void  ImGui::PopFont()PopFont5268,254287
void ImGui::PushItemFlag(ImGuiItemFlags option, bool enabled)PushItemFlag5276,254502
void ImGui::PopItemFlag()PopItemFlag5286,254785
void ImGui::PushAllowKeyboardFocus(bool allow_keyboard_focus)PushAllowKeyboardFocus5293,255027
void ImGui::PopAllowKeyboardFocus()PopAllowKeyboardFocus5298,255169
void ImGui::PushButtonRepeat(bool repeat)PushButtonRepeat5303,255229
void ImGui::PopButtonRepeat()PopButtonRepeat5308,255331
void ImGui::PushTextWrapPos(float wrap_pos_x)PushTextWrapPos5313,255385
void ImGui::PopTextWrapPos()PopTextWrapPos5320,255578
void ImGui::PushStyleColor(ImGuiCol idx, ImU32 col)PushStyleColor5328,255959
void ImGui::PushStyleColor(ImGuiCol idx, const ImVec4& col)PushStyleColor5338,256235
void ImGui::PopStyleColor(int count)PopStyleColor5348,256494
struct ImGuiStyleVarInfoImGuiStyleVarInfo5360,256767
    ImGuiDataType   Type;Type5362,256794
    ImU32           Offset;Offset5363,256820
    void*           GetVarPtr(ImGuiStyle* style) const { return (void*)((unsigned char*)style + GetVarPtr5364,256848
static const ImGuiStyleVarInfo GStyleVarInfo[ImGuiStyleVar_Count_] =GStyleVarInfo5367,256959
static const ImGuiStyleVarInfo* GetStyleVarInfo(ImGuiStyleVar idx)GetStyleVarInfo5388,258991
void ImGui::PushStyleVar(ImGuiStyleVar idx, float val)PushStyleVar5394,259150
void ImGui::PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)PushStyleVar5408,259606
void ImGui::PopStyleVar(int count)PopStyleVar5422,260074
const char* ImGui::GetStyleColorName(ImGuiCol idx)GetStyleColorName5437,260744
bool ImGui::IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent)IsWindowChildOf5490,263361
bool ImGui::IsWindowHovered(ImGuiHoveredFlags flags)IsWindowHovered5503,263676
bool ImGui::IsWindowFocused(ImGuiFocusedFlags flags)IsWindowFocused5535,264858
float ImGui::GetWindowWidth()GetWindowWidth5553,265545
float ImGui::GetWindowHeight()GetWindowHeight5559,265656
ImVec2 ImGui::GetWindowPos()GetWindowPos5565,265768
static void SetWindowScrollY(ImGuiWindow* window, float new_scroll_y)SetWindowScrollY5572,265900
static void SetWindowPos(ImGuiWindow* window, const ImVec2& pos, ImGuiCond cond)SetWindowPos5579,266250
void ImGui::SetWindowPos(const ImVec2& pos, ImGuiCond cond)SetWindowPos5595,267157
void ImGui::SetWindowPos(const char* name, const ImVec2& pos, ImGuiCond cond)SetWindowPos5601,267309
ImVec2 ImGui::GetWindowSize()GetWindowSize5607,267487
static void SetWindowSize(ImGuiWindow* window, const ImVec2& size, ImGuiCond cond)SetWindowSize5613,267597
void ImGui::SetWindowSize(const ImVec2& size, ImGuiCond cond)SetWindowSize5643,268374
void ImGui::SetWindowSize(const char* name, const ImVec2& size, ImGuiCond cond)SetWindowSize5648,268495
static void SetWindowCollapsed(ImGuiWindow* window, bool collapsed, ImGuiCond cond)SetWindowCollapsed5654,268677
void ImGui::SetWindowCollapsed(bool collapsed, ImGuiCond cond)SetWindowCollapsed5665,269086
bool ImGui::IsWindowCollapsed()IsWindowCollapsed5670,269218
bool ImGui::IsWindowAppearing()IsWindowAppearing5676,269335
void ImGui::SetWindowCollapsed(const char* name, bool collapsed, ImGuiCond cond)SetWindowCollapsed5682,269452
void ImGui::SetWindowFocus()SetWindowFocus5688,269645
void ImGui::SetWindowFocus(const char* name)SetWindowFocus5693,269719
void ImGui::SetNextWindowPos(const ImVec2& pos, ImGuiCond cond, const ImVec2& pivot)SetNextWindowPos5706,269934
void ImGui::SetNextWindowSize(const ImVec2& size, ImGuiCond cond)SetNextWindowSize5714,270186
void ImGui::SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSiSetNextWindowSizeConstraints5721,270385
void ImGui::SetNextWindowContentSize(const ImVec2& size)SetNextWindowContentSize5730,270838
void ImGui::SetNextWindowCollapsed(bool collapsed, ImGuiCond cond)SetNextWindowCollapsed5737,271147
void ImGui::SetNextWindowFocus()SetNextWindowFocus5744,271362
ImVec2 ImGui::GetContentRegionMax()GetContentRegionMax5751,271503
ImVec2 ImGui::GetContentRegionAvail()GetContentRegionAvail5760,271782
float ImGui::GetContentRegionAvailWidth()GetContentRegionAvailWidth5766,271948
ImVec2 ImGui::GetWindowContentRegionMin()GetWindowContentRegionMin5772,272072
ImVec2 ImGui::GetWindowContentRegionMax()GetWindowContentRegionMax5778,272212
float ImGui::GetWindowContentRegionWidth()GetWindowContentRegionWidth5784,272352
float ImGui::GetTextLineHeight()GetTextLineHeight5790,272530
float ImGui::GetTextLineHeightWithSpacing()GetTextLineHeightWithSpacing5796,272622
float ImGui::GetFrameHeight()GetFrameHeight5802,272749
float ImGui::GetFrameHeightWithSpacing()GetFrameHeightWithSpacing5808,272870
ImDrawList* ImGui::GetWindowDrawList()GetWindowDrawList5814,273026
ImFont* ImGui::GetFont()GetFont5820,273145
float ImGui::GetFontSize()GetFontSize5825,273200
ImVec2 ImGui::GetFontTexUvWhitePixel()GetFontTexUvWhitePixel5830,273261
void ImGui::SetWindowFontScale(float scale)SetWindowFontScale5835,273360
ImVec2 ImGui::GetCursorPos()GetCursorPos5845,273931
float ImGui::GetCursorPosX()GetCursorPosX5851,274079
float ImGui::GetCursorPosY()GetCursorPosY5857,274233
void ImGui::SetCursorPos(const ImVec2& local_pos)SetCursorPos5863,274387
void ImGui::SetCursorPosX(float x)SetCursorPosX5870,274641
void ImGui::SetCursorPosY(float y)SetCursorPosY5877,274884
ImVec2 ImGui::GetCursorStartPos()GetCursorStartPos5884,275127
ImVec2 ImGui::GetCursorScreenPos()GetCursorScreenPos5890,275268
void ImGui::SetCursorScreenPos(const ImVec2& screen_pos)SetCursorScreenPos5896,275391
float ImGui::GetScrollX()GetScrollX5903,275622
float ImGui::GetScrollY()GetScrollY5908,275697
float ImGui::GetScrollMaxX()GetScrollMaxX5913,275772
float ImGui::GetScrollMaxY()GetScrollMaxY5918,275855
void ImGui::SetScrollX(float scroll_x)SetScrollX5923,275938
void ImGui::SetScrollY(float scroll_y)SetScrollY5930,276113
void ImGui::SetScrollFromPosY(float pos_y, float center_y_ratio)SetScrollFromPosY5937,276402
void ImGui::SetScrollHere(float center_y_ratio)SetScrollHere5953,277399
void ImGui::SetItemDefaultFocus()SetItemDefaultFocus5964,278182
void ImGui::SetKeyboardFocusHere(int offset)SetKeyboardFocusHere5970,278275
void ImGui::SetStateStorage(ImGuiStorage* tree)SetStateStorage5978,278558
ImGuiStorage* ImGui::GetStateStorage()GetStateStorage5984,278724
void ImGui::TextV(const char* fmt, va_list args)TextV5990,278854
void ImGui::Text(const char* fmt, ...)Text6001,279186
void ImGui::TextColoredV(const ImVec4& col, const char* fmt, va_list args)TextColoredV6009,279313
void ImGui::TextColored(const ImVec4& col, const char* fmt, ...)TextColored6016,279476
void ImGui::TextDisabledV(const char* fmt, va_list args)TextDisabledV6024,279641
void ImGui::TextDisabled(const char* fmt, ...)TextDisabled6031,279826
void ImGui::TextWrappedV(const char* fmt, va_list args)TextWrappedV6039,279969
void ImGui::TextWrapped(const char* fmt, ...)TextWrapped6047,280256
void ImGui::TextUnformatted(const char* text, const char* text_end)TextUnformatted6055,280397
void ImGui::AlignTextToFramePadding()AlignTextToFramePadding6161,284433
void ImGui::LabelTextV(const char* label, const char* fmt, va_list args)LabelTextV6173,284885
void ImGui::LabelText(const char* label, const char* fmt, ...)LabelText6198,286063
bool ImGui::ButtonBehavior(const ImRect& bb, ImGuiID id, bool* out_hovered, bool* out_held, ImGuButtonBehavior6206,286226
bool ImGui::ButtonEx(const char* label, const ImVec2& size_arg, ImGuiButtonFlags flags)ButtonEx6316,291335
bool ImGui::Button(const char* label, const ImVec2& size_arg)Button6353,293063
bool ImGui::SmallButton(const char* label)SmallButton6359,293242
bool ImGui::InvisibleButton(const char* str_id, const ImVec2& size_arg)InvisibleButton6371,293767
bool ImGui::CloseButton(ImGuiID id, const ImVec2& pos, float radius)CloseButton6391,294325
bool ImGui::ArrowButton(ImGuiID id, ImGuiDir dir, ImVec2 padding, ImGuiButtonFlags flags)ArrowButton6416,295323
void ImGui::Image(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVeImage6443,296225
bool ImGui::ImageButton(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, consImageButton6471,297207
void ImGui::LogToTTY(int max_depth)LogToTTY6507,298848
void ImGui::LogToFile(int max_depth, const char* filename)LogToFile6522,299208
void ImGui::LogToClipboard(int max_depth)LogToClipboard6549,299834
void ImGui::LogFinish()LogFinish6563,300154
void ImGui::LogButtons()LogButtons6587,300647
bool ImGui::TreeNodeBehaviorIsOpen(ImGuiID id, ImGuiTreeNodeFlags flags)TreeNodeBehaviorIsOpen6611,301434
bool ImGui::TreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, const char* label, const charTreeNodeBehavior6658,303064
bool ImGui::CollapsingHeader(const char* label, ImGuiTreeNodeFlags flags)CollapsingHeader6772,309329
bool ImGui::CollapsingHeader(const char* label, bool* p_open, ImGuiTreeNodeFlags flags)CollapsingHeader6781,309645
bool ImGui::TreeNodeEx(const char* label, ImGuiTreeNodeFlags flags)TreeNodeEx6806,310765
bool ImGui::TreeNodeExV(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list aTreeNodeExV6815,311005
bool ImGui::TreeNodeExV(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list aTreeNodeExV6826,311435
bool ImGui::TreeNodeV(const char* str_id, const char* fmt, va_list args)TreeNodeV6837,311865
bool ImGui::TreeNodeV(const void* ptr_id, const char* fmt, va_list args)TreeNodeV6842,311989
bool ImGui::TreeNodeEx(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)TreeNodeEx6847,312113
bool ImGui::TreeNodeEx(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)TreeNodeEx6856,312348
bool ImGui::TreeNode(const char* str_id, const char* fmt, ...)TreeNode6865,312583
bool ImGui::TreeNode(const void* ptr_id, const char* fmt, ...)TreeNode6874,312786
bool ImGui::TreeNode(const char* label)TreeNode6883,312989
void ImGui::TreeAdvanceToLabelPos()TreeAdvanceToLabelPos6891,313196
float ImGui::GetTreeNodeToLabelSpacing()GetTreeNodeToLabelSpacing6898,313409
void ImGui::SetNextTreeNodeOpen(bool is_open, ImGuiCond cond)SetNextTreeNodeOpen6904,313543
void ImGui::PushID(const char* str_id)PushID6913,313797
void ImGui::PushID(const char* str_id_begin, const char* str_id_end)PushID6919,313945
void ImGui::PushID(const void* ptr_id)PushID6925,314141
void ImGui::PushID(int int_id)PushID6931,314289
void ImGui::PopID()PopID6938,314479
ImGuiID ImGui::GetID(const char* str_id)GetID6944,314586
ImGuiID ImGui::GetID(const char* str_id_begin, const char* str_id_end)GetID6949,314681
ImGuiID ImGui::GetID(const void* ptr_id)GetID6954,314824
void ImGui::Bullet()Bullet6959,314919
void ImGui::BulletTextV(const char* fmt, va_list args)BulletTextV6982,315679
void ImGui::BulletText(const char* fmt, ...)BulletText7006,316887
static inline void DataTypeFormatString(ImGuiDataType data_type, void* data_ptr, const char* disDataTypeFormatString7014,317026
static inline void DataTypeFormatString(ImGuiDataType data_type, void* data_ptr, int decimal_preDataTypeFormatString7022,317398
static void DataTypeApplyOp(ImGuiDataType data_type, int op, void* value1, const void* value2)//DataTypeApplyOp7040,318183
static bool DataTypeApplyOpFromText(const char* buf, const char* initial_value_buf, ImGuiDataTypDataTypeApplyOpFromText7059,318861
bool ImGui::InputScalarAsWidgetReplacement(const ImRect& aabb, const char* label, ImGuiDataType InputScalarAsWidgetReplacement7123,321579
int ImGui::ParseFormatPrecision(const char* fmt, int default_precision)ParseFormatPrecision7149,322962
static float GetMinimumStepAtDecimalPrecision(int decimal_precision)GetMinimumStepAtDecimalPrecision7171,323614
float ImGui::RoundScalar(float value, int decimal_precision)RoundScalar7177,323962
static inline float SliderBehaviorCalcRatioFromValue(float v, float v_min, float v_max, float poSliderBehaviorCalcRatioFromValue7195,324596
bool ImGui::SliderBehavior(const ImRect& frame_bb, ImGuiID id, float* v, float v_min, float v_maSliderBehavior7220,325472
bool ImGui::SliderFloat(const char* label, float* v, float v_min, float v_max, const char* displSliderFloat7338,330483
bool ImGui::VSliderFloat(const char* label, const ImVec2& size, float* v, float v_min, float v_mVSliderFloat7396,332947
bool ImGui::SliderAngle(const char* label, float* v_rad, float v_degrees_min, float v_degrees_maSliderAngle7439,334797
bool ImGui::SliderInt(const char* label, int* v, int v_min, int v_max, const char* display_formaSliderInt7447,335118
bool ImGui::VSliderInt(const char* label, const ImVec2& size, int* v, int v_min, int v_max, consVSliderInt7457,335453
bool ImGui::SliderFloatN(const char* label, float* v, int components, float v_min, float v_max, SliderFloatN7468,335893
bool ImGui::SliderFloat2(const char* label, float v[2], float v_min, float v_max, const char* diSliderFloat27495,336633
bool ImGui::SliderFloat3(const char* label, float v[3], float v_min, float v_max, const char* diSliderFloat37500,336836
bool ImGui::SliderFloat4(const char* label, float v[4], float v_min, float v_max, const char* diSliderFloat47505,337039
bool ImGui::SliderIntN(const char* label, int* v, int components, int v_min, int v_max, const chSliderIntN7510,337242
bool ImGui::SliderInt2(const char* label, int v[2], int v_min, int v_max, const char* display_foSliderInt27537,337952
bool ImGui::SliderInt3(const char* label, int v[3], int v_min, int v_max, const char* display_foSliderInt37542,338125
bool ImGui::SliderInt4(const char* label, int v[4], int v_min, int v_max, const char* display_foSliderInt47547,338298
bool ImGui::DragBehavior(const ImRect& frame_bb, ImGuiID id, float* v, float v_speed, float v_miDragBehavior7552,338471
bool ImGui::DragFloat(const char* label, float* v, float v_speed, float v_min, float v_max, consDragFloat7632,341417
bool ImGui::DragFloatN(const char* label, float* v, int components, float v_speed, float v_min, DragFloatN7691,344019
bool ImGui::DragFloat2(const char* label, float v[2], float v_speed, float v_min, float v_max, cDragFloat27718,344779
bool ImGui::DragFloat3(const char* label, float v[3], float v_speed, float v_min, float v_max, cDragFloat37723,345002
bool ImGui::DragFloat4(const char* label, float v[4], float v_speed, float v_min, float v_max, cDragFloat47728,345225
bool ImGui::DragFloatRange2(const char* label, float* v_current_min, float* v_current_max, floatDragFloatRange27733,345448
bool ImGui::DragInt(const char* label, int* v, float v_speed, int v_min, int v_max, const char* DragInt7759,346600
bool ImGui::DragIntN(const char* label, int* v, int components, float v_speed, int v_min, int v_DragIntN7769,346949
bool ImGui::DragInt2(const char* label, int v[2], float v_speed, int v_min, int v_max, const chaDragInt27796,347679
bool ImGui::DragInt3(const char* label, int v[3], float v_speed, int v_min, int v_max, const chaDragInt37801,347872
bool ImGui::DragInt4(const char* label, int v[4], float v_speed, int v_min, int v_max, const chaDragInt47806,348065
bool ImGui::DragIntRange2(const char* label, int* v_current_min, int* v_current_max, float v_speDragIntRange27811,348258
void ImGui::PlotEx(ImGuiPlotType plot_type, const char* label, float (*values_getter)(void* dataPlotEx7836,349290
struct ImGuiPlotArrayGetterDataImGuiPlotArrayGetterData7945,354424
    const float* Values;Values7947,354458
    int Stride;Stride7948,354483
    ImGuiPlotArrayGetterData(const float* values, int stride) { Values = values; Stride = strideImGuiPlotArrayGetterData7950,354500
static float Plot_ArrayGetter(void* data, int idx)Plot_ArrayGetter7953,354604
void ImGui::PlotLines(const char* label, const float* values, int values_count, int values_offsePlotLines7960,354856
void ImGui::PlotLines(const char* label, float (*values_getter)(void* data, int idx), void* dataPlotLines7966,355252
void ImGui::PlotHistogram(const char* label, const float* values, int values_count, int values_oPlotHistogram7971,355609
void ImGui::PlotHistogram(const char* label, float (*values_getter)(void* data, int idx), void* PlotHistogram7977,356013
void ImGui::ProgressBar(float fraction, const ImVec2& size_arg, const char* overlay)ProgressBar7983,356463
bool ImGui::Checkbox(const char* label, bool* v)Checkbox8018,357930
bool ImGui::CheckboxFlags(const char* label, unsigned int* flags, unsigned int flags_value)CheckboxFlags8066,359822
bool ImGui::RadioButton(const char* label, bool active)RadioButton8081,360162
bool ImGui::RadioButton(const char* label, int* v, int v_button)RadioButton8138,362369
static int InputTextCalcTextLenAndLineCount(const char* text_begin, const char** out_text_end)InputTextCalcTextLenAndLineCount8148,362572
static ImVec2 InputTextCalcTextSizeW(const ImWchar* text_begin, const ImWchar* text_end, const IInputTextCalcTextSizeW8162,362981
namespace ImGuiStbImGuiStb8207,364490
static int     STB_TEXTEDIT_STRINGLEN(const STB_TEXTEDIT_STRING* obj)                           STB_TEXTEDIT_STRINGLEN8210,364512
static ImWchar STB_TEXTEDIT_GETCHAR(const STB_TEXTEDIT_STRING* obj, int idx)                    STB_TEXTEDIT_GETCHAR8211,364635
static float   STB_TEXTEDIT_GETWIDTH(STB_TEXTEDIT_STRING* obj, int line_start_idx, int char_idx)STB_TEXTEDIT_GETWIDTH8212,364760
static int     STB_TEXTEDIT_KEYTOTEXT(int key)                                                  STB_TEXTEDIT_KEYTOTEXT8213,365049
static ImWchar STB_TEXTEDIT_NEWLINE = '\n';STB_TEXTEDIT_NEWLINE8214,365184
static void    STB_TEXTEDIT_LAYOUTROW(StbTexteditRow* r, STB_TEXTEDIT_STRING* obj, int line_starSTB_TEXTEDIT_LAYOUTROW8215,365228
static bool is_separator(unsigned int c)                                        { return ImCharIis_separator8228,365723
static int  is_word_boundary_from_right(STB_TEXTEDIT_STRING* obj, int idx)      { return idx > 0is_word_boundary_from_right8229,365922
static int  STB_TEXTEDIT_MOVEWORDLEFT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)   { idx--; while (STB_TEXTEDIT_MOVEWORDLEFT_IMPL8230,366099
static int  is_word_boundary_from_left(STB_TEXTEDIT_STRING* obj, int idx)       { return idx > 0is_word_boundary_from_left8232,366341
static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int lenSTB_TEXTEDIT_MOVEWORDRIGHT_IMPL8233,366518
static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int lenSTB_TEXTEDIT_MOVEWORDRIGHT_IMPL8235,366735
#define STB_TEXTEDIT_MOVEWORDLEFT STB_TEXTEDIT_MOVEWORDLEFT8237,366954
#define STB_TEXTEDIT_MOVEWORDRIGHT STB_TEXTEDIT_MOVEWORDRIGHT8238,367070
static void STB_TEXTEDIT_DELETECHARS(STB_TEXTEDIT_STRING* obj, int pos, int n)STB_TEXTEDIT_DELETECHARS8240,367139
static bool STB_TEXTEDIT_INSERTCHARS(STB_TEXTEDIT_STRING* obj, int pos, const ImWchar* new_text,STB_TEXTEDIT_INSERTCHARS8255,367569
#define STB_TEXTEDIT_K_LEFT STB_TEXTEDIT_K_LEFT8279,368525
#define STB_TEXTEDIT_K_RIGHT STB_TEXTEDIT_K_RIGHT8280,368607
#define STB_TEXTEDIT_K_UP STB_TEXTEDIT_K_UP8281,368690
#define STB_TEXTEDIT_K_DOWN STB_TEXTEDIT_K_DOWN8282,368770
#define STB_TEXTEDIT_K_LINESTART STB_TEXTEDIT_K_LINESTART8283,368852
#define STB_TEXTEDIT_K_LINEEND STB_TEXTEDIT_K_LINEEND8284,368946
#define STB_TEXTEDIT_K_TEXTSTART STB_TEXTEDIT_K_TEXTSTART8285,369038
#define STB_TEXTEDIT_K_TEXTEND STB_TEXTEDIT_K_TEXTEND8286,369132
#define STB_TEXTEDIT_K_DELETE STB_TEXTEDIT_K_DELETE8287,369224
#define STB_TEXTEDIT_K_BACKSPACE STB_TEXTEDIT_K_BACKSPACE8288,369332
#define STB_TEXTEDIT_K_UNDO STB_TEXTEDIT_K_UNDO8289,369442
#define STB_TEXTEDIT_K_REDO STB_TEXTEDIT_K_REDO8290,369520
#define STB_TEXTEDIT_K_WORDLEFT STB_TEXTEDIT_K_WORDLEFT8291,369598
#define STB_TEXTEDIT_K_WORDRIGHT STB_TEXTEDIT_K_WORDRIGHT8292,369689
#define STB_TEXTEDIT_K_SHIFT STB_TEXTEDIT_K_SHIFT8293,369781
#define STB_TEXTEDIT_IMPLEMENTATIONSTB_TEXTEDIT_IMPLEMENTATION8295,369826
void ImGuiTextEditState::OnKeyPressed(int key)OnKeyPressed8300,369892
void ImGuiTextEditCallbackData::DeleteChars(int pos, int bytes_count)DeleteChars8310,370256
void ImGuiTextEditCallbackData::InsertChars(int pos, const char* new_text, const char* new_text_InsertChars8328,370748
static bool InputTextFilterCharacter(unsigned int* p_char, ImGuiInputTextFlags flags, ImGuiTextEInputTextFilterCharacter8347,371445
bool ImGui::InputTextEx(const char* label, char* buf, int buf_size, const ImVec2& size_arg, ImGuInputTextEx8403,373932
bool ImGui::InputText(const char* label, char* buf, size_t buf_size, ImGuiInputTextFlags flags, InputText8988,407491
bool ImGui::InputTextMultiline(const char* label, char* buf, size_t buf_size, const ImVec2& sizeInputTextMultiline8994,407819
bool ImGui::InputScalarEx(const char* label, ImGuiDataType data_type, void* data_ptr, void* stepInputScalarEx9000,408261
bool ImGui::InputFloat(const char* label, float* v, float step, float step_fast, int decimal_preInputFloat9056,410484
bool ImGui::InputInt(const char* label, int* v, int step, int step_fast, ImGuiInputTextFlags extInputInt9066,411173
bool ImGui::InputFloatN(const char* label, float* v, int components, int decimal_precision, ImGuInputFloatN9073,411725
bool ImGui::InputFloat2(const char* label, float v[2], int decimal_precision, ImGuiInputTextFlagInputFloat29100,412453
bool ImGui::InputFloat3(const char* label, float v[3], int decimal_precision, ImGuiInputTextFlagInputFloat39105,412638
bool ImGui::InputFloat4(const char* label, float v[4], int decimal_precision, ImGuiInputTextFlagInputFloat49110,412823
bool ImGui::InputIntN(const char* label, int* v, int components, ImGuiInputTextFlags extra_flagsInputIntN9115,413008
bool ImGui::InputInt2(const char* label, int v[2], ImGuiInputTextFlags extra_flags)InputInt29142,413688
bool ImGui::InputInt3(const char* label, int v[3], ImGuiInputTextFlags extra_flags)InputInt39147,413825
bool ImGui::InputInt4(const char* label, int v[4], ImGuiInputTextFlags extra_flags)InputInt49152,413962
static float CalcMaxPopupHeightFromItemCount(int items_count)CalcMaxPopupHeightFromItemCount9157,414099
bool ImGui::BeginCombo(const char* label, const char* preview_value, ImGuiComboFlags flags)BeginCombo9165,414366
void ImGui::EndCombo()EndCombo9256,418698
bool ImGui::Combo(const char* label, int* current_item, bool (*items_getter)(void*, int, const cCombo9265,418965
static bool Items_ArrayGetter(void* data, int idx, const char** out_text)Items_ArrayGetter9307,420517
static bool Items_SingleStringGetter(void* data, int idx, const char** out_text)Items_SingleStringGetter9315,420720
bool ImGui::Combo(const char* label, int* current_item, const char* const items[], int items_couCombo9336,421338
bool ImGui::Combo(const char* label, int* current_item, const char* items_separated_by_zeros, inCombo9343,421679
bool ImGui::Selectable(const char* label, bool selected, ImGuiSelectableFlags flags, const ImVecSelectable9358,422378
bool ImGui::Selectable(const char* label, bool* p_selected, ImGuiSelectableFlags flags, const ImSelectable9436,426200
bool ImGui::ListBoxHeader(const char* label, const ImVec2& size_arg)ListBoxHeader9448,426648
bool ImGui::ListBoxHeader(const char* label, int items_count, int height_in_items)ListBoxHeader9473,427750
void ImGui::ListBoxFooter()ListBoxFooter9489,428855
bool ImGui::ListBox(const char* label, int* current_item, const char* const items[], int items_cListBox9505,429350
bool ImGui::ListBox(const char* label, int* current_item, bool (*items_getter)(void*, int, constListBox9511,429622
bool ImGui::MenuItem(const char* label, const char* shortcut, bool selected, bool enabled)MenuItem9539,430841
bool ImGui::MenuItem(const char* label, const char* shortcut, bool* p_selected, bool enabled)MenuItem9581,433119
bool ImGui::BeginMainMenuBar()BeginMainMenuBar9592,433411
void ImGui::EndMainMenuBar()EndMainMenuBar9610,434131
bool ImGui::BeginMenuBar()BeginMenuBar9617,434214
void ImGui::EndMenuBar()EndMenuBar9643,435464
bool ImGui::BeginMenu(const char* label, bool enabled)BeginMenu9660,435970
void ImGui::EndMenu()EndMenu9775,442772
void ImGui::ColorTooltip(const char* text, const float* col, ImGuiColorEditFlags flags)ColorTooltip9781,442889
static inline ImU32 ImAlphaBlendColor(ImU32 col_a, ImU32 col_b)ImAlphaBlendColor9805,444091
void ImGui::RenderColorRectWithAlphaCheckerboard(ImVec2 p_min, ImVec2 p_max, ImU32 col, float grRenderColorRectWithAlphaCheckerboard9816,445018
void ImGui::SetColorEditOptions(ImGuiColorEditFlags flags)SetColorEditOptions9850,446925
bool ImGui::ColorButton(const char* desc_id, const ImVec4& col, ImGuiColorEditFlags flags, ImVecColorButton9868,448105
bool ImGui::ColorEdit3(const char* label, float col[3], ImGuiColorEditFlags flags)ColorEdit39939,451643
void ImGui::ColorEditOptionsPopup(const float* col, ImGuiColorEditFlags flags)ColorEditOptionsPopup9944,451803
static void ColorPickerOptionsPopup(ImGuiColorEditFlags flags, const float* ref_col)ColorPickerOptionsPopup9992,454234
bool ImGui::ColorEdit4(const char* label, float col[4], ImGuiColorEditFlags flags)ColorEdit410033,456833
bool ImGui::ColorPicker3(const char* label, float col[3], ImGuiColorEditFlags flags)ColorPicker310232,465766
static void RenderArrow(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir direction, IRenderArrow10242,466191
static void RenderArrowsForVerticalBar(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, float RenderArrowsForVerticalBar10254,467066
bool ImGui::ColorPicker4(const char* label, float col[4], ImGuiColorEditFlags flags, const floatColorPicker410265,468038
void ImGui::Separator()Separator10554,484036
void ImGui::VerticalSeparator()VerticalSeparator10601,485659
bool ImGui::SplitterBehavior(ImGuiID id, const ImRect& bb, ImGuiAxis axis, float* size1, float* SplitterBehavior10620,486277
void ImGui::Spacing()Spacing10669,488215
void ImGui::Dummy(const ImVec2& size)Dummy10677,488358
bool ImGui::IsRectVisible(const ImVec2& size)IsRectVisible10688,488601
bool ImGui::IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max)IsRectVisible10694,488799
void ImGui::BeginGroup()BeginGroup10701,489170
void ImGui::EndGroup()EndGroup10724,490227
void ImGui::SameLine(float pos_x, float spacing_w)SameLine10768,492625
void ImGui::NewLine()NewLine10791,493459
void ImGui::NextColumn()NextColumn10807,494026
int ImGui::GetColumnIndex()GetColumnIndex10841,495195
int ImGui::GetColumnsCount()GetColumnsCount10847,495349
static float OffsetNormToPixels(const ImGuiColumnsSet* columns, float offset_norm)OffsetNormToPixels10853,495502
static float PixelsToOffsetNorm(const ImGuiColumnsSet* columns, float offset)PixelsToOffsetNorm10858,495648
static inline float GetColumnsRectHalfWidth() { return 4.0f; }GetColumnsRectHalfWidth10863,495784
static float GetDraggedColumnOffset(ImGuiColumnsSet* columns, int column_index)GetDraggedColumnOffset10865,495848
float ImGui::GetColumnOffset(int column_index)GetColumnOffset10882,496861
static float GetColumnWidthEx(ImGuiColumnsSet* columns, int column_index, bool before_resize = fGetColumnWidthEx10907,497589
float ImGui::GetColumnWidth(int column_index)GetColumnWidth10920,498122
void ImGui::SetColumnOffset(int column_index, float offset)SetColumnOffset10931,498508
void ImGui::SetColumnWidth(int column_index, float width)SetColumnWidth10953,499490
void ImGui::PushColumnClipRect(int column_index)PushColumnClipRect10964,499835
static ImGuiColumnsSet* FindOrAddColumnsSet(ImGuiWindow* window, ImGuiID id)FindOrAddColumnsSet10974,500176
void ImGui::BeginColumns(const char* str_id, int columns_count, ImGuiColumnsFlags flags)BeginColumns10986,500574
void ImGui::EndColumns()EndColumns11057,503767
void ImGui::Columns(int columns_count, const char* id, bool border)Columns11125,507002
void ImGui::Indent(float indent_w)Indent11138,507494
void ImGui::Unindent(float indent_w)Unindent11146,507785
void ImGui::TreePush(const char* str_id)TreePush11154,508078
void ImGui::TreePush(const void* ptr_id)TreePush11162,508255
void ImGui::TreePushRawID(ImGuiID id)TreePushRawID11170,508445
void ImGui::TreePop()TreePop11178,508611
void ImGui::Value(const char* prefix, bool b)Value11186,508741
void ImGui::Value(const char* prefix, int v)Value11191,508844
void ImGui::Value(const char* prefix, unsigned int v)Value11196,508925
void ImGui::Value(const char* prefix, float v, const char* float_format)Value11201,509015
void ImGui::ClearDragDrop()ClearDragDrop11219,509488
bool ImGui::BeginDragDropSource(ImGuiDragDropFlags flags, int mouse_button)BeginDragDropSource11231,509952
void ImGui::EndDragDropSource()EndDragDropSource11319,513767
bool ImGui::SetDragDropPayload(const char* type, const void* data, size_t data_size, ImGuiCond cSetDragDropPayload11337,514240
bool ImGui::BeginDragDropTargetCustom(const ImRect& bb, ImGuiID id)BeginDragDropTargetCustom11380,515959
bool ImGui::BeginDragDropTarget()BeginDragDropTarget11402,516987
bool ImGui::IsDragDropPayloadBeingAccepted()IsDragDropPayloadBeingAccepted11425,517612
const ImGuiPayload* ImGui::AcceptDragDropPayload(const char* type, ImGuiDragDropFlags flags)AcceptDragDropPayload11431,517753
void ImGui::EndDragDropTarget()EndDragDropTarget11474,520107
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN11486,520596
static const char* GetClipboardTextFn_DefaultImpl(void*)GetClipboardTextFn_DefaultImpl11497,520828
static void SetClipboardTextFn_DefaultImpl(void*, const char* text)SetClipboardTextFn_DefaultImpl11520,521484
static const char* GetClipboardTextFn_DefaultImpl(void*)GetClipboardTextFn_DefaultImpl11542,522200
static void SetClipboardTextFn_DefaultImpl(void*, const char* text)SetClipboardTextFn_DefaultImpl11549,522463
static void ImeSetInputScreenPosFn_DefaultImpl(int x, int y)ImeSetInputScreenPosFn_DefaultImpl11569,523057
static void ImeSetInputScreenPosFn_DefaultImpl(int, int) {}ImeSetInputScreenPosFn_DefaultImpl11585,523504
void ImGui::ShowMetricsWindow(bool* p_open)ShowMetricsWindow11593,523742
        struct FuncsFuncs11605,524445
            static void NodeDrawList(ImDrawList* draw_list, const char* label)NodeDrawList11607,524476
            static void NodeWindows(ImVector<ImGuiWindow*>& windows, const char* label)NodeWindows11673,529105
            static void NodeWindow(ImGuiWindow* window, const char* label)NodeWindow11682,529477

skeleton/imgui/imconfig.h,0

skeleton/imgui/imgui_internal.h,43034
typedef int ImGuiLayoutType;        // enum: horizontal or vertical             // enum ImGuiLayImGuiLayoutType46,1509
typedef int ImGuiButtonFlags;       // flags: for ButtonEx(), ButtonBehavior()  // enum ImGuiButImGuiButtonFlags47,1614
typedef int ImGuiItemFlags;         // flags: for PushItemFlag()                // enum ImGuiIteImGuiItemFlags48,1720
typedef int ImGuiSeparatorFlags;    // flags: for Separator() - internal        // enum ImGuiSepImGuiSeparatorFlags49,1824
typedef int ImGuiSliderFlags;       // flags: for SliderBehavior()              // enum ImGuiSliImGuiSliderFlags50,1933
namespace ImGuiStbImGuiStb56,2210
#define STB_TEXTEDIT_STRING STB_TEXTEDIT_STRING61,2288
#define STB_TEXTEDIT_CHARTYPE STB_TEXTEDIT_CHARTYPE62,2347
#define STB_TEXTEDIT_GETWIDTH_NEWLINE STB_TEXTEDIT_GETWIDTH_NEWLINE63,2395
#define IM_PI IM_PI80,2942
#define IM_OFFSETOF(IM_OFFSETOF81,3002
static inline bool      ImCharIsSpace(int c)            { return c == ' ' || c == '\t' || c == 0ImCharIsSpace94,4347
static inline bool      ImIsPowerOfTwo(int v)           { return v != 0 && (v & (v - 1)) == 0; }ImIsPowerOfTwo95,4452
static inline int       ImUpperPowerOfTwo(int v)        { v--; v |= v >> 1; v |= v >> 2; v |= v ImUpperPowerOfTwo96,4549
static inline ImVec2 operator*(const ImVec2& lhs, const float rhs)              { return ImVec2(operator *119,6353
static inline ImVec2 operator/(const ImVec2& lhs, const float rhs)              { return ImVec2(operator /120,6474
static inline ImVec2 operator+(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator +121,6595
static inline ImVec2 operator-(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator -122,6720
static inline ImVec2 operator*(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator *123,6845
static inline ImVec2 operator/(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator /124,6970
static inline ImVec2& operator+=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x += rhs.xoperator +=125,7095
static inline ImVec2& operator-=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x -= rhs.xoperator -=126,7223
static inline ImVec2& operator*=(ImVec2& lhs, const float rhs)                  { lhs.x *= rhs; operator *=127,7351
static inline ImVec2& operator/=(ImVec2& lhs, const float rhs)                  { lhs.x /= rhs; operator /=128,7475
static inline ImVec4 operator+(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(operator +129,7599
static inline ImVec4 operator-(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(operator -130,7750
static inline ImVec4 operator*(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(operator *131,7901
static inline int    ImMin(int lhs, int rhs)                                    { return lhs < rImMin134,8060
static inline int    ImMax(int lhs, int rhs)                                    { return lhs >= ImMax135,8174
static inline float  ImMin(float lhs, float rhs)                                { return lhs < rImMin136,8289
static inline float  ImMax(float lhs, float rhs)                                { return lhs >= ImMax137,8403
static inline ImVec2 ImMin(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMin138,8518
static inline ImVec2 ImMax(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMax139,8657
static inline int    ImClamp(int v, int mn, int mx)                             { return (v < mnImClamp140,8796
static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mnImClamp141,8922
static inline ImVec2 ImClamp(const ImVec2& f, const ImVec2& mn, ImVec2 mx)      { return ImVec2(ImClamp142,9048
static inline float  ImSaturate(float f)                                        { return (f < 0.ImSaturate143,9195
static inline void   ImSwap(int& a, int& b)                                     { int tmp = a; aImSwap144,9329
static inline void   ImSwap(float& a, float& b)                                 { float tmp = a;ImSwap145,9442
static inline int    ImLerp(int a, int b, float t)                              { return (int)(aImLerp146,9557
static inline float  ImLerp(float a, float b, float t)                          { return a + (b ImLerp147,9672
static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, float t)          { return ImVec2(ImLerp148,9780
static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, const ImVec2& t)  { return ImVec2(ImLerp149,9925
static inline ImVec4 ImLerp(const ImVec4& a, const ImVec4& b, float t)          { return ImVec4(ImLerp150,10074
static inline float  ImLengthSqr(const ImVec2& lhs)                             { return lhs.x*lImLengthSqr151,10265
static inline float  ImLengthSqr(const ImVec4& lhs)                             { return lhs.x*lImLengthSqr152,10383
static inline float  ImInvLength(const ImVec2& lhs, float fail_value)           { float d = lhs.ImInvLength153,10529
static inline float  ImFloor(float f)                                           { return (float)ImFloor154,10707
static inline ImVec2 ImFloor(const ImVec2& v)                                   { return ImVec2(ImFloor155,10813
static inline float  ImDot(const ImVec2& a, const ImVec2& b)                    { return a.x * bImDot156,10946
static inline ImVec2 ImRotate(const ImVec2& v, float cos_a, float sin_a)        { return ImVec2(ImRotate157,11060
static inline float  ImLinearSweep(float current, float target, float speed)    { if (current < ImLinearSweep158,11213
static inline ImVec2 ImMul(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMul159,11435
struct ImNewPlacementDummy {};ImNewPlacementDummy163,11825
inline void* operator   new(size_t, ImNewPlacementDummy, void* ptr) { return ptr; }operator new164,11856
inline void  operator   delete(void*, ImNewPlacementDummy, void*)   {} // This is only required operator delete165,11940
#define IM_PLACEMENT_NEW(IM_PLACEMENT_NEW166,12071
#define IM_NEW(IM_NEW167,12148
template <typename T> void IM_DELETE(T*& p) { if (p) { p->~T(); ImGui::MemFree(p); p = NULL; } }IM_DELETE168,12257
#define IMGUI_PAYLOAD_TYPE_DOCKABLE IMGUI_PAYLOAD_TYPE_DOCKABLE175,12620
enum ImGuiButtonFlags_ImGuiButtonFlags_177,12720
    ImGuiButtonFlags_Repeat                 = 1 << 0,   // hold to repeatImGuiButtonFlags_Repeat179,12745
    ImGuiButtonFlags_PressedOnClickRelease  = 1 << 1,   // return true on click + release on samImGuiButtonFlags_PressedOnClickRelease180,12819
    ImGuiButtonFlags_PressedOnClick         = 1 << 2,   // return true on click (default requireImGuiButtonFlags_PressedOnClick181,12961
    ImGuiButtonFlags_PressedOnRelease       = 1 << 3,   // return true on release (default requiImGuiButtonFlags_PressedOnRelease182,13074
    ImGuiButtonFlags_PressedOnDoubleClick   = 1 << 4,   // return true on double-click (default ImGuiButtonFlags_PressedOnDoubleClick183,13189
    ImGuiButtonFlags_FlattenChildren        = 1 << 5,   // allow interactions even if a child wiImGuiButtonFlags_FlattenChildren184,13309
    ImGuiButtonFlags_AllowItemOverlap       = 1 << 6,   // require previous frame HoveredId to eImGuiButtonFlags_AllowItemOverlap185,13425
    ImGuiButtonFlags_DontClosePopups        = 1 << 7,   // disable automatically closing parent ImGuiButtonFlags_DontClosePopups186,13605
    ImGuiButtonFlags_Disabled               = 1 << 8,   // disable interactionsImGuiButtonFlags_Disabled187,13728
    ImGuiButtonFlags_AlignTextBaseLine      = 1 << 9,   // vertically align button to match textImGuiButtonFlags_AlignTextBaseLine188,13808
    ImGuiButtonFlags_NoKeyModifiers         = 1 << 10,  // disable interaction if a key modifierImGuiButtonFlags_NoKeyModifiers189,14045
    ImGuiButtonFlags_NoHoldingActiveID      = 1 << 11,  // don't set ActiveId while holding the ImGuiButtonFlags_NoHoldingActiveID190,14150
    ImGuiButtonFlags_PressedOnDragDropHold  = 1 << 12   // press when held into while we are draImGuiButtonFlags_PressedOnDragDropHold191,14291
enum ImGuiSliderFlags_ImGuiSliderFlags_194,14465
    ImGuiSliderFlags_Vertical               = 1 << 0ImGuiSliderFlags_Vertical196,14490
enum ImGuiColumnsFlags_ImGuiColumnsFlags_199,14547
    ImGuiColumnsFlags_NoBorder              = 1 << 0,   // Disable column dividersImGuiColumnsFlags_NoBorder202,14591
    ImGuiColumnsFlags_NoResize              = 1 << 1,   // Disable resizing columns when clickinImGuiColumnsFlags_NoResize203,14674
    ImGuiColumnsFlags_NoPreserveWidths      = 1 << 2,   // Disable column width preservation wheImGuiColumnsFlags_NoPreserveWidths204,14788
    ImGuiColumnsFlags_NoForceWithinWindow   = 1 << 3,   // Disable forcing columns to fit withinImGuiColumnsFlags_NoForceWithinWindow205,14904
    ImGuiColumnsFlags_GrowParentContentsSize= 1 << 4    // (WIP) Restore pre-1.51 behavior of exImGuiColumnsFlags_GrowParentContentsSize206,15008
enum ImGuiSelectableFlagsPrivate_ImGuiSelectableFlagsPrivate_209,15222
    ImGuiSelectableFlags_Menu               = 1 << 3,   // -> PressedOnClickImGuiSelectableFlags_Menu212,15329
    ImGuiSelectableFlags_MenuItem           = 1 << 4,   // -> PressedOnReleaseImGuiSelectableFlags_MenuItem213,15406
    ImGuiSelectableFlags_Disabled           = 1 << 5,ImGuiSelectableFlags_Disabled214,15485
    ImGuiSelectableFlags_DrawFillAvailWidth = 1 << 6ImGuiSelectableFlags_DrawFillAvailWidth215,15539
enum ImGuiSeparatorFlags_ImGuiSeparatorFlags_218,15596
    ImGuiSeparatorFlags_Horizontal          = 1 << 0,   // Axis default to current layout type, ImGuiSeparatorFlags_Horizontal220,15624
    ImGuiSeparatorFlags_Vertical            = 1 << 1ImGuiSeparatorFlags_Vertical221,15770
enum ImGuiLayoutType_ImGuiLayoutType_225,15910
    ImGuiLayoutType_Vertical,ImGuiLayoutType_Vertical227,15934
    ImGuiLayoutType_HorizontalImGuiLayoutType_Horizontal228,15964
enum ImGuiAxisImGuiAxis231,15999
    ImGuiAxis_None = -1,ImGuiAxis_None233,16016
    ImGuiAxis_X = 0,ImGuiAxis_X234,16041
    ImGuiAxis_Y = 1ImGuiAxis_Y235,16062
enum ImGuiPlotTypeImGuiPlotType238,16086
    ImGuiPlotType_Lines,ImGuiPlotType_Lines240,16107
    ImGuiPlotType_HistogramImGuiPlotType_Histogram241,16132
enum ImGuiDataTypeImGuiDataType244,16164
    ImGuiDataType_Int,ImGuiDataType_Int246,16185
    ImGuiDataType_Float,ImGuiDataType_Float247,16208
    ImGuiDataType_Float2ImGuiDataType_Float2248,16233
enum ImGuiDirImGuiDir251,16262
    ImGuiDir_None    = -1,ImGuiDir_None253,16278
    ImGuiDir_Left    = 0,ImGuiDir_Left254,16305
    ImGuiDir_Right   = 1,ImGuiDir_Right255,16331
    ImGuiDir_Up      = 2,ImGuiDir_Up256,16357
    ImGuiDir_Down    = 3,ImGuiDir_Down257,16383
    ImGuiDir_Count_ImGuiDir_Count_258,16409
struct IMGUI_API ImRectImRect263,16532
    ImVec2      Min;    // Upper-leftMin265,16558
    ImVec2      Max;    // Lower-rightMax266,16596
    ImRect()                                        : Min(FLT_MAX,FLT_MAX), Max(-FLT_MAX,-FLT_MAImRect268,16636
    ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                        ImRect269,16739
    ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)              ImRect270,16842
    ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                  ImRect271,16945
    ImVec2      GetCenter() const               { return ImVec2((Min.x+Max.x)*0.5f, (Min.y+Max.yGetCenter273,17049
    ImVec2      GetSize() const                 { return ImVec2(Max.x-Min.x, Max.y-Min.y); }GetSize274,17156
    float       GetWidth() const                { return Max.x-Min.x; }GetWidth275,17249
    float       GetHeight() const               { return Max.y-Min.y; }GetHeight276,17321
    ImVec2      GetTL() const                   { return Min; }                   // Top-leftGetTL277,17393
    ImVec2      GetTR() const                   { return ImVec2(Max.x, Min.y); }  // Top-rightGetTR278,17487
    ImVec2      GetBL() const                   { return ImVec2(Min.x, Max.y); }  // Bottom-leftGetBL279,17582
    ImVec2      GetBR() const                   { return Max; }                   // Bottom-righGetBR280,17679
    bool        Contains(const ImVec2& p) const { return p.x >= Min.x     && p.y >= Min.y     &&Contains281,17777
    bool        Contains(const ImRect& r) const { return r.Min.x >= Min.x && r.Min.y >= Min.y &&Contains282,17908
    bool        Overlaps(const ImRect& r) const { return r.Min.y < Max.y  && r.Max.y > Min.y  &&Overlaps283,18043
    void        Add(const ImVec2& rhs)          { if (Min.x > rhs.x)     Min.x = rhs.x;     if (Add284,18178
    void        Add(const ImRect& rhs)          { if (Min.x > rhs.Min.x) Min.x = rhs.Min.x; if (Add285,18390
    void        Expand(const float amount)      { Min.x -= amount;   Min.y -= amount;   Max.x +=Expand286,18610
    void        Expand(const ImVec2& amount)    { Min.x -= amount.x; Min.y -= amount.y; Max.x +=Expand287,18736
    void        Translate(const ImVec2& v)      { Min.x += v.x; Min.y += v.y; Max.x += v.x; Max.Translate288,18864
    void        ClipWith(const ImRect& clip)    { if (Min.x < clip.Min.x) Min.x = clip.Min.x; ifClipWith289,18972
    void        Floor()                         { Min.x = (float)(int)Min.x; Min.y = (float)(intFloor290,19200
    void        FixInverted()                   { if (Min.x > Max.x) ImSwap(Min.x, Max.x); if (MFixInverted291,19360
    bool        IsFinite() const                { return Min.x != FLT_MAX; }IsFinite292,19494
    ImVec2      GetClosestPoint(ImVec2 p, bool on_edge) constGetClosestPoint293,19571
struct ImGuiColModImGuiColMod306,19960
    ImGuiCol    Col;Col308,19981
    ImVec4      BackupValue;BackupValue309,20002
struct ImGuiStyleModImGuiStyleMod313,20146
    ImGuiStyleVar   VarIdx;VarIdx315,20169
    union           { int BackupInt[2]; float BackupFloat[2]; };__anon609fda90010a316,20197
    union           { int BackupInt[2]; float BackupFloat[2]; };BackupInt316,20197
    union           { int BackupInt[2]; float BackupFloat[2]; };BackupFloat316,20197
    ImGuiStyleMod(ImGuiStyleVar idx, int v)     { VarIdx = idx; BackupInt[0] = v; }ImGuiStyleMod317,20262
    ImGuiStyleMod(ImGuiStyleVar idx, float v)   { VarIdx = idx; BackupFloat[0] = v; }ImGuiStyleMod318,20346
    ImGuiStyleMod(ImGuiStyleVar idx, ImVec2 v)  { VarIdx = idx; BackupFloat[0] = v.x; BackupFloaImGuiStyleMod319,20432
struct ImGuiGroupDataImGuiGroupData323,20590
    ImVec2      BackupCursorPos;BackupCursorPos325,20614
    ImVec2      BackupCursorMaxPos;BackupCursorMaxPos326,20647
    float       BackupIndentX;BackupIndentX327,20683
    float       BackupGroupOffsetX;BackupGroupOffsetX328,20714
    float       BackupCurrentLineHeight;BackupCurrentLineHeight329,20750
    float       BackupCurrentLineTextBaseOffset;BackupCurrentLineTextBaseOffset330,20791
    float       BackupLogLinePosY;BackupLogLinePosY331,20840
    bool        BackupActiveIdIsAlive;BackupActiveIdIsAlive332,20875
    bool        AdvanceCursor;AdvanceCursor333,20914
struct IMGUI_API ImGuiSimpleColumnsImGuiSimpleColumns337,21083
    int         Count;Count339,21121
    float       Spacing;Spacing340,21144
    float       Width, NextWidth;Width341,21169
    float       Width, NextWidth;NextWidth341,21169
    float       Pos[8], NextWidths[8];Pos342,21203
    float       Pos[8], NextWidths[8];NextWidths342,21203
struct IMGUI_API ImGuiTextEditStateImGuiTextEditState351,21506
    ImGuiID             Id;                         // widget id owning the text stateId353,21544
    ImVector<ImWchar>   Text;                       // edit buffer, we need to persist but can'tText354,21631
    ImVector<char>      InitialText;                // backup of end-user buffer at the time of InitialText355,21811
    ImVector<char>      TempTextBuffer;TempTextBuffer356,21935
    int                 CurLenA, CurLenW;           // we need to maintain our buffer length in CurLenA357,21975
    int                 CurLenA, CurLenW;           // we need to maintain our buffer length in CurLenW357,21975
    int                 BufSizeA;                   // end-user buffer sizeBufSizeA358,22100
    float               ScrollX;ScrollX359,22176
    ImGuiStb::STB_TexteditState   StbState;StbState360,22209
    float               CursorAnim;CursorAnim361,22253
    bool                CursorFollow;CursorFollow362,22289
    bool                SelectedAllMouseLock;SelectedAllMouseLock363,22327
    ImGuiTextEditState()                            { memset(this, 0, sizeof(*this)); }ImGuiTextEditState365,22374
    void                CursorAnimReset()           { CursorAnim = -0.30f; }                    CursorAnimReset366,22462
    void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, CCursorClamp367,22644
    bool                HasSelection() const        { return StbState.select_start != StbState.sHasSelection368,22873
    void                ClearSelection()            { StbState.select_start = StbState.select_enClearSelection369,22982
    void                SelectAll()                 { StbState.select_start = 0; StbState.selectSelectAll370,23101
struct ImGuiWindowSettingsImGuiWindowSettings375,23371
    char*       Name;Name377,23400
    ImGuiID     Id;Id378,23422
    ImVec2      Pos;Pos379,23442
    ImVec2      Size;Size380,23463
    bool        Collapsed;Collapsed381,23485
    ImGuiWindowSettings() { Name = NULL; Id = 0; Pos = Size = ImVec2(0,0); Collapsed = false; }ImGuiWindowSettings383,23513
struct ImGuiSettingsHandlerImGuiSettingsHandler386,23613
    const char* TypeName;   // Short description stored in .ini file. Disallowed characters: '['TypeName388,23643
    ImGuiID     TypeHash;   // == ImHash(TypeName, 0, 0)TypeHash389,23746
    void*       (*ReadOpenFn)(ImGuiContext& ctx, const char* name);ReadOpenFn390,23803
    void        (*ReadLineFn)(ImGuiContext& ctx, void* entry, const char* line);ReadLineFn391,23871
    void        (*WriteAllFn)(ImGuiContext& ctx, ImGuiTextBuffer* out_buf);WriteAllFn392,23952
struct ImGuiMouseCursorDataImGuiMouseCursorData396,24091
    ImGuiMouseCursor    Type;Type398,24121
    ImVec2              HotOffset;HotOffset399,24151
    ImVec2              Size;Size400,24186
    ImVec2              TexUvMin[2];TexUvMin401,24216
    ImVec2              TexUvMax[2];TexUvMax402,24253
struct ImGuiPopupRefImGuiPopupRef406,24329
    ImGuiID             PopupId;        // Set on OpenPopup()PopupId408,24352
    ImGuiWindow*        Window;         // Resolved on BeginPopup() - may stay unresolved if useWindow409,24414
    ImGuiWindow*        ParentWindow;   // Set on OpenPopup()ParentWindow410,24536
    ImGuiID             ParentMenuSet;  // Set on OpenPopup()ParentMenuSet411,24598
    ImVec2              MousePosOnOpen; // Copy of mouse position at the time of opening popupMousePosOnOpen412,24660
    ImGuiPopupRef(ImGuiID id, ImGuiWindow* parent_window, ImGuiID parent_menu_set, const ImVec2&ImGuiPopupRef414,24756
struct ImGuiColumnDataImGuiColumnData417,24992
    float               OffsetNorm;         // Column start offset, normalized 0.0 (far left) ->OffsetNorm419,25017
    float               OffsetNormBeforeResize;OffsetNormBeforeResize420,25130
    ImGuiColumnsFlags   Flags;              // Not exposedFlags421,25178
    ImRect              ClipRect;ClipRect422,25237
    ImGuiColumnData()   { OffsetNorm = OffsetNormBeforeResize = 0.0f; Flags = 0; }ImGuiColumnData424,25272
struct ImGuiColumnsSetImGuiColumnsSet427,25359
    ImGuiID             ID;ID429,25384
    ImGuiColumnsFlags   Flags;Flags430,25412
    bool                IsFirstFrame;IsFirstFrame431,25443
    bool                IsBeingResized;IsBeingResized432,25481
    int                 Current;Current433,25521
    int                 Count;Count434,25554
    float               MinX, MaxX;MinX435,25585
    float               MinX, MaxX;MaxX435,25585
    float               StartPosY;StartPosY436,25621
    float               StartMaxPosX;       // Backup of CursorMaxPosStartMaxPosX437,25656
    float               CellMinY, CellMaxY;CellMinY438,25726
    float               CellMinY, CellMaxY;CellMaxY438,25726
    ImVector<ImGuiColumnData> Columns;Columns439,25770
    ImGuiColumnsSet()   { Clear(); }ImGuiColumnsSet441,25810
    void Clear()Clear442,25847
struct ImDrawListSharedDataImDrawListSharedData458,26161
    ImVec2          TexUvWhitePixel;            // UV of white pixel in the atlasTexUvWhitePixel460,26191
    ImFont*         Font;                       // Current/default font (optional, for simplifieFont461,26273
    float           FontSize;                   // Current/default font size (optional, for simpFontSize462,26389
    float           CurveTessellationTol;CurveTessellationTol463,26510
    ImVec4          ClipRectFullscreen;         // Value for PushClipRectFullscreen()ClipRectFullscreen464,26552
    ImVec2          CircleVtx12[12];CircleVtx12468,26714
struct ImGuiContextImGuiContext474,26808
    bool                    Initialized;Initialized476,26830
    ImGuiIO                 IO;IO477,26871
    ImGuiStyle              Style;Style478,26903
    ImFont*                 Font;                               // (Shortcut) == FontStack.emptyFont479,26938
    float                   FontSize;                           // (Shortcut) == FontBaseSize * FontSize480,27066
    float                   FontBaseSize;                       // (Shortcut) == IO.FontGlobalScFontBaseSize481,27250
    ImDrawListSharedData    DrawListSharedData;DrawListSharedData482,27400
    float                   Time;Time484,27449
    int                     FrameCount;FrameCount485,27483
    int                     FrameCountEnded;FrameCountEnded486,27523
    int                     FrameCountRendered;FrameCountRendered487,27568
    ImVector<ImGuiWindow*>  Windows;Windows488,27616
    ImVector<ImGuiWindow*>  WindowsSortBuffer;WindowsSortBuffer489,27653
    ImVector<ImGuiWindow*>  CurrentWindowStack;CurrentWindowStack490,27700
    ImGuiStorage            WindowsById;WindowsById491,27748
    int                     WindowsActiveCount;WindowsActiveCount492,27789
    ImGuiWindow*            CurrentWindow;                      // Being drawn intoCurrentWindow493,27837
    ImGuiWindow*            NavWindow;                          // Nav/focused window for navigaNavWindow494,27921
    ImGuiWindow*            HoveredWindow;                      // Will catch mouse inputsHoveredWindow495,28022
    ImGuiWindow*            HoveredRootWindow;                  // Will catch mouse inputs (for HoveredRootWindow496,28113
    ImGuiID                 HoveredId;                          // Hovered widgetHoveredId497,28226
    bool                    HoveredIdAllowOverlap;HoveredIdAllowOverlap498,28308
    ImGuiID                 HoveredIdPreviousFrame;HoveredIdPreviousFrame499,28359
    float                   HoveredIdTimer;HoveredIdTimer500,28411
    ImGuiID                 ActiveId;                           // Active widgetActiveId501,28455
    ImGuiID                 ActiveIdPreviousFrame;ActiveIdPreviousFrame502,28536
    float                   ActiveIdTimer;ActiveIdTimer503,28587
    bool                    ActiveIdIsAlive;                    // Active widget has been seen tActiveIdIsAlive504,28630
    bool                    ActiveIdIsJustActivated;            // Set at the time of activationActiveIdIsJustActivated505,28736
    bool                    ActiveIdAllowOverlap;               // Active widget allows another ActiveIdAllowOverlap506,28847
    ImVec2                  ActiveIdClickOffset;                // Clicked offset from upper-lefActiveIdClickOffset507,29021
    ImGuiWindow*            ActiveIdWindow;ActiveIdWindow508,29180
    ImGuiWindow*            MovingWindow;                       // Track the child window we cliMovingWindow509,29224
    ImGuiID                 MovingWindowMoveId;                 // == MovingWindow->MoveIdMovingWindowMoveId510,29346
    ImVector<ImGuiColMod>   ColorModifiers;                     // Stack for PushStyleColor()/PoColorModifiers511,29437
    ImVector<ImGuiStyleMod> StyleModifiers;                     // Stack for PushStyleVar()/PopSStyleModifiers512,29547
    ImVector<ImFont*>       FontStack;                          // Stack for PushFont()/PopFont(FontStack513,29653
    ImVector<ImGuiPopupRef> OpenPopupStack;                     // Which popups are open (persisOpenPopupStack514,29751
    ImVector<ImGuiPopupRef> CurrentPopupStack;                  // Which level of BeginPopup() wCurrentPopupStack515,29853
    ImVec2                  SetNextWindowPosVal;SetNextWindowPosVal518,30046
    ImVec2                  SetNextWindowPosPivot;SetNextWindowPosPivot519,30095
    ImVec2                  SetNextWindowSizeVal;SetNextWindowSizeVal520,30146
    ImVec2                  SetNextWindowContentSizeVal;SetNextWindowContentSizeVal521,30196
    bool                    SetNextWindowCollapsedVal;SetNextWindowCollapsedVal522,30253
    ImGuiCond               SetNextWindowPosCond;SetNextWindowPosCond523,30308
    ImGuiCond               SetNextWindowSizeCond;SetNextWindowSizeCond524,30358
    ImGuiCond               SetNextWindowContentSizeCond;SetNextWindowContentSizeCond525,30409
    ImGuiCond               SetNextWindowCollapsedCond;SetNextWindowCollapsedCond526,30467
    ImRect                  SetNextWindowSizeConstraintRect;           // Valid if 'SetNextWindoSetNextWindowSizeConstraintRect527,30523
    ImGuiSizeConstraintCallback SetNextWindowSizeConstraintCallback;SetNextWindowSizeConstraintCallback528,30644
    void*                   SetNextWindowSizeConstraintCallbackUserData;SetNextWindowSizeConstraintCallbackUserData529,30713
    bool                    SetNextWindowSizeConstraint;SetNextWindowSizeConstraint530,30786
    bool                    SetNextWindowFocus;SetNextWindowFocus531,30843
    bool                    SetNextTreeNodeOpenVal;SetNextTreeNodeOpenVal532,30891
    ImGuiCond               SetNextTreeNodeOpenCond;SetNextTreeNodeOpenCond533,30943
    ImDrawData              RenderDrawData;                     // Main ImDrawData instance to pRenderDrawData536,31011
    ImVector<ImDrawList*>   RenderDrawLists[3];RenderDrawLists537,31142
    float                   ModalWindowDarkeningRatio;ModalWindowDarkeningRatio538,31190
    ImDrawList              OverlayDrawList;                    // Optional software render of mOverlayDrawList539,31245
    ImGuiMouseCursor        MouseCursor;MouseCursor540,31407
    ImGuiMouseCursorData    MouseCursorData[ImGuiMouseCursor_Count_];MouseCursorData541,31448
    bool                    DragDropActive;DragDropActive544,31540
    ImGuiDragDropFlags      DragDropSourceFlags;DragDropSourceFlags545,31584
    int                     DragDropMouseButton;DragDropMouseButton546,31633
    ImGuiPayload            DragDropPayload;DragDropPayload547,31682
    ImRect                  DragDropTargetRect;DragDropTargetRect548,31727
    ImGuiID                 DragDropTargetId;DragDropTargetId549,31775
    float                   DragDropAcceptIdCurrRectSurface;DragDropAcceptIdCurrRectSurface550,31821
    ImGuiID                 DragDropAcceptIdCurr;               // Target item id (set at the tiDragDropAcceptIdCurr551,31882
    ImGuiID                 DragDropAcceptIdPrev;               // Target item id from previous DragDropAcceptIdPrev552,32007
    int                     DragDropAcceptFrameCount;           // Last time a target expressed DragDropAcceptFrameCount553,32180
    ImVector<unsigned char> DragDropPayloadBufHeap;             // We don't expose the ImVector<DragDropPayloadBufHeap554,32306
    unsigned char           DragDropPayloadBufLocal[8];DragDropPayloadBufLocal555,32413
    ImGuiTextEditState      InputTextState;InputTextState558,32490
    ImFont                  InputTextPasswordFont;InputTextPasswordFont559,32534
    ImGuiID                 ScalarAsInputTextId;                // Temporary text input when CTRScalarAsInputTextId560,32585
    ImGuiColorEditFlags     ColorEditOptions;                   // Store user options for color ColorEditOptions561,32710
    ImVec4                  ColorPickerRef;ColorPickerRef562,32819
    float                   DragCurrentValue;                   // Currently dragged value, alwaDragCurrentValue563,32863
    ImVec2                  DragLastMouseDelta;DragLastMouseDelta564,33012
    float                   DragSpeedDefaultRatio;              // If speed == 0.0f, uses (max-mDragSpeedDefaultRatio565,33060
    float                   DragSpeedScaleSlow;DragSpeedScaleSlow566,33184
    float                   DragSpeedScaleFast;DragSpeedScaleFast567,33232
    ImVec2                  ScrollbarClickDeltaToGrabCenter;    // Distance between mouse and ceScrollbarClickDeltaToGrabCenter568,33280
    int                     TooltipOverrideCount;TooltipOverrideCount569,33435
    ImVector<char>          PrivateClipboard;                   // If no custom clipboard handlePrivateClipboard570,33485
    ImVec2                  OsImePosRequest, OsImePosSet;       // Cursor position request & lasOsImePosRequest571,33594
    ImVec2                  OsImePosRequest, OsImePosSet;       // Cursor position request & lasOsImePosSet571,33594
    float                          SettingsDirtyTimer;          // Save .ini Settings on disk whSettingsDirtyTimer574,33746
    ImVector<ImGuiWindowSettings>  SettingsWindows;             // .ini settings for ImGuiWindowSettingsWindows575,33863
    ImVector<ImGuiSettingsHandler> SettingsHandlers;            // List of .ini settings handlerSettingsHandlers576,33960
    bool                    LogEnabled;LogEnabled579,34074
    FILE*                   LogFile;                            // If != NULL log to stdout/ filLogFile580,34114
    ImGuiTextBuffer*        LogClipboard;                       // Else log to clipboard. This iLogClipboard581,34212
    int                     LogStartDepth;LogStartDepth582,34381
    int                     LogAutoExpandMaxDepth;LogAutoExpandMaxDepth583,34424
    float                   FramerateSecPerFrame[120];          // calculate estimate of frameraFramerateSecPerFrame586,34488
    int                     FramerateSecPerFrameIdx;FramerateSecPerFrameIdx587,34596
    float                   FramerateSecPerFrameAccum;FramerateSecPerFrameAccum588,34649
    int                     WantCaptureMouseNextFrame;          // explicit capture via CaptureIWantCaptureMouseNextFrame589,34704
    int                     WantCaptureKeyboardNextFrame;WantCaptureKeyboardNextFrame590,34825
    int                     WantTextInputNextFrame;WantTextInputNextFrame591,34883
    char                    TempBuffer[1024*3+1];               // temporary text bufferTempBuffer592,34935
    ImGuiContext() : OverlayDrawList(NULL)ImGuiContext594,35025
enum ImGuiItemFlags_ImGuiItemFlags_680,38163
    ImGuiItemFlags_AllowKeyboardFocus           = 1 << 0,  // trueImGuiItemFlags_AllowKeyboardFocus682,38186
    ImGuiItemFlags_ButtonRepeat                 = 1 << 1,  // false    // Button() will return tImGuiItemFlags_ButtonRepeat683,38253
    ImGuiItemFlags_Disabled                     = 1 << 2,  // false    // FIXME-WIP: Disable intImGuiItemFlags_Disabled684,38426
    ImGuiItemFlags_SelectableDontClosePopup     = 1 << 5,  // false    // MenuItem/Selectable() ImGuiItemFlags_SelectableDontClosePopup687,38793
    ImGuiItemFlags_Default_                     = ImGuiItemFlags_AllowKeyboardFocusImGuiItemFlags_Default_688,38931
struct IMGUI_API ImGuiDrawContextImGuiDrawContext693,39224
    ImVec2                  CursorPos;CursorPos695,39260
    ImVec2                  CursorPosPrevLine;CursorPosPrevLine696,39299
    ImVec2                  CursorStartPos;CursorStartPos697,39346
    ImVec2                  CursorMaxPos;           // Used to implicitly calculate the size of CursorMaxPos698,39390
    float                   CurrentLineHeight;CurrentLineHeight699,39597
    float                   CurrentLineTextBaseOffset;CurrentLineTextBaseOffset700,39644
    float                   PrevLineHeight;PrevLineHeight701,39699
    float                   PrevLineTextBaseOffset;PrevLineTextBaseOffset702,39743
    float                   LogLinePosY;LogLinePosY703,39795
    int                     TreeDepth;TreeDepth704,39836
    ImGuiID                 LastItemId;LastItemId705,39875
    ImRect                  LastItemRect;LastItemRect706,39915
    bool                    LastItemRectHoveredRect;LastItemRectHoveredRect707,39957
    bool                    MenuBarAppending;MenuBarAppending708,40010
    float                   MenuBarOffsetX;MenuBarOffsetX709,40056
    ImVector<ImGuiWindow*>  ChildWindows;ChildWindows710,40100
    ImGuiStorage*           StateStorage;StateStorage711,40142
    ImGuiLayoutType         LayoutType;LayoutType712,40184
    ImGuiItemFlags          ItemFlags;              // == ItemFlagsStack.back() [empty == ImGuiIItemFlags715,40468
    float                   ItemWidth;              // == ItemWidthStack.back(). 0.0: default, >ItemWidth716,40582
    float                   TextWrapPos;            // == TextWrapPosStack.back() [empty == -1.0TextWrapPos717,40745
    ImVector<ImGuiItemFlags>ItemFlagsStack;ItemFlagsStack718,40844
    ImVector<float>         ItemWidthStack;ItemWidthStack719,40888
    ImVector<float>         TextWrapPosStack;TextWrapPosStack720,40932
    ImVector<ImGuiGroupData>GroupStack;GroupStack721,40978
    int                     StackSizesBackup[6];    // Store size of various stacks for assertinStackSizesBackup722,41018
    float                   IndentX;                // Indentation / start position from left ofIndentX724,41117
    float                   GroupOffsetX;GroupOffsetX725,41259
    float                   ColumnsOffsetX;         // Offset to the current column (if ColumnsCColumnsOffsetX726,41301
    ImGuiColumnsSet*        ColumnsSet;             // Current columns setColumnsSet727,41523
    ImGuiDrawContext()ImGuiDrawContext729,41599
struct IMGUI_API ImGuiWindowImGuiWindow756,42430
    char*                   Name;Name758,42461
    ImGuiID                 ID;                                 // == ImHash(Name)ID759,42495
    ImGuiWindowFlags        Flags;                              // See enum ImGuiWindowFlags_Flags760,42578
    ImVec2                  PosFloat;PosFloat761,42672
    ImVec2                  Pos;                                // Position rounded-up to nearesPos762,42710
    ImVec2                  Size;                               // Current size (==SizeFull or cSize763,42814
    ImVec2                  SizeFull;                           // Size when non collapsedSizeFull764,42935
    ImVec2                  SizeFullAtLastBegin;                // Copy of SizeFull at the end oSizeFullAtLastBegin765,43026
    ImVec2                  SizeContents;                       // Size of contents (== extents SizeContents766,43220
    ImVec2                  SizeContentsExplicit;               // Size of contents explicitly sSizeContentsExplicit767,43419
    ImRect                  ContentsRegionRect;                 // Maximum visible content positContentsRegionRect768,43561
    ImVec2                  WindowPadding;                      // Window padding at the time ofWindowPadding769,43784
    float                   WindowRounding;                     // Window rounding at the time oWindowRounding770,43888
    float                   WindowBorderSize;                   // Window border size at the timWindowBorderSize771,43993
    ImGuiID                 MoveId;                             // == window->GetID("#MOVE")MoveId772,44101
    ImVec2                  Scroll;Scroll773,44194
    ImVec2                  ScrollTarget;                       // target scroll position. storeScrollTarget774,44230
    ImVec2                  ScrollTargetCenterRatio;            // 0.0f = scroll so that target ScrollTargetCenterRatio775,44437
    bool                    ScrollbarX, ScrollbarY;ScrollbarX776,44603
    bool                    ScrollbarX, ScrollbarY;ScrollbarY776,44603
    ImVec2                  ScrollbarSizes;ScrollbarSizes777,44655
    bool                    Active;                             // Set to true on Begin()Active778,44699
    bool                    WasActive;WasActive779,44789
    bool                    WriteAccessed;                      // Set to true when any widget aWriteAccessed780,44828
    bool                    Collapsed;                          // Set when collapsing window toCollapsed781,44949
    bool                    SkipItems;                          // Set when items can safely be SkipItems782,45068
    bool                    Appearing;                          // Set during the frame where thAppearing783,45215
    bool                    CloseButton;                        // Set when the window has a cloCloseButton784,45351
    int                     BeginOrderWithinParent;             // Order within immediate parentBeginOrderWithinParent785,45474
    int                     BeginOrderWithinContext;            // Order within entire imgui conBeginOrderWithinContext786,45618
    int                     BeginCount;                         // Number of Begin() during the BeginCount787,45787
    ImGuiID                 PopupId;                            // ID in the popup stack when thPopupId788,45962
    int                     AutoFitFramesX, AutoFitFramesY;AutoFitFramesX789,46139
    int                     AutoFitFramesX, AutoFitFramesY;AutoFitFramesY789,46139
    bool                    AutoFitOnlyGrows;AutoFitOnlyGrows790,46199
    int                     AutoFitChildAxises;AutoFitChildAxises791,46245
    ImGuiDir                AutoPosLastDirection;AutoPosLastDirection792,46293
    int                     HiddenFrames;HiddenFrames793,46343
    ImGuiCond               SetWindowPosAllowFlags;             // store condition flags for nexSetWindowPosAllowFlags794,46385
    ImGuiCond               SetWindowSizeAllowFlags;            // store condition flags for nexSetWindowSizeAllowFlags795,46504
    ImGuiCond               SetWindowCollapsedAllowFlags;       // store condition flags for nexSetWindowCollapsedAllowFlags796,46624
    ImVec2                  SetWindowPosVal;                    // store window position when usSetWindowPosVal797,46749
    ImVec2                  SetWindowPosPivot;                  // store window pivot for positiSetWindowPosPivot798,46932
    ImGuiDrawContext        DC;                                 // Temporary per-window data, reDC800,47150
    ImVector<ImGuiID>       IDStack;                            // ID stack. ID are hashes seedeIDStack801,47280
    ImRect                  ClipRect;                           // = DrawList->clip_rect_stack.bClipRect802,47417
    ImRect                  WindowRectClipped;                  // = WindowRect just after setupWindowRectClipped803,47569
    ImRect                  InnerRect;InnerRect804,47713
    int                     LastFrameActive;LastFrameActive805,47752
    float                   ItemWidthDefault;ItemWidthDefault806,47797
    ImGuiSimpleColumns      MenuColumns;                        // Simplified columns storage foMenuColumns807,47843
    ImGuiStorage            StateStorage;StateStorage808,47952
    ImVector<ImGuiColumnsSet> ColumnsStorage;ColumnsStorage809,47994
    float                   FontWindowScale;                    // Scale multiplier per-windowFontWindowScale810,48040
    ImDrawList*             DrawList;DrawList811,48135
    ImGuiWindow*            ParentWindow;                       // If we are a child _or_ popup ParentWindow812,48173
    ImGuiWindow*            RootWindow;                         // Generally point to ourself. IRootWindow813,48325
    ImGuiWindow*            RootNonPopupWindow;                 // Generally point to ourself. URootNonPopupWindow814,48501
    int                     FocusIdxAllCounter;                 // Start at -1 and increase as aFocusIdxAllCounter817,48714
    int                     FocusIdxTabCounter;                 // (same, but only count widgetsFocusIdxTabCounter818,48842
    int                     FocusIdxAllRequestCurrent;          // Item being requested for focuFocusIdxAllRequestCurrent819,48966
    int                     FocusIdxTabRequestCurrent;          // Tab-able item being requestedFocusIdxTabRequestCurrent820,49064
    int                     FocusIdxAllRequestNext;             // Item being requested for focuFocusIdxAllRequestNext821,49171
    int                     FocusIdxTabRequestNext;             // "FocusIdxTabRequestNext822,49368
    ImRect      Rect() const                            { return ImRect(Pos.x, Pos.y, Pos.x+SizeRect834,49846
    float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindCalcFontSize835,49963
    float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitTitleBarHeight836,50070
    ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + SizeTitleBarRect837,50238
    float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBMenuBarHeight838,50372
    ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); rMenuBarRect839,50537
struct ImGuiItemHoveredDataBackupImGuiItemHoveredDataBackup843,50852
    ImGuiID     LastItemId;LastItemId845,50888
    ImRect      LastItemRect;LastItemRect846,50916
    bool        LastItemRectHoveredRect;LastItemRectHoveredRect847,50946
    ImGuiItemHoveredDataBackup() { Backup(); }ImGuiItemHoveredDataBackup849,50988
    void Backup()        { ImGuiWindow* window = GImGui->CurrentWindow; LastItemId = window->DC.Backup850,51035
    void Restore() const { ImGuiWindow* window = GImGui->CurrentWindow; window->DC.LastItemId = Restore851,51247
namespace ImGuiImGui859,51687
    inline    ImGuiWindow*  GetCurrentWindowRead()      { ImGuiContext& g = *GImGui; return g.CuGetCurrentWindowRead865,52073
    inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWiGetCurrentWindow866,52184

skeleton/imgui/ImGuizmo.cpp,13719
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS25,1201
namespace ImGuizmoImGuizmo33,1392
   static const float ZPI = 3.14159265358979323846f;ZPI35,1413
   static const float RAD2DEG = (180.f / ZPI);RAD2DEG36,1466
   static const float DEG2RAD = (ZPI / 180.f);DEG2RAD37,1513
   const float screenRotateSize = 0.06f;screenRotateSize39,1561
   void FPU_MatrixF_x_MatrixF(const float *a, const float *b, float *r)FPU_MatrixF_x_MatrixF44,1790
   template <typename T> T Clamp(T x, T y, T z) { return ((x<y) ? y : ((x>z) ? z : x)); }Clamp68,3099
   template <typename T> T max(T x, T y) { return (x > y) ? x : y; }max69,3189
   template <typename T> T min(T x, T y) { return (x < y) ? x : y; }min70,3258
   template <typename T> bool IsWithin(T x, T y, T z) { return (x>=y) && (x<=z); }IsWithin71,3327
   struct vec_tvec_t74,3431
      float x, y, z, w;x77,3463
      float x, y, z, w;y77,3463
      float x, y, z, w;z77,3463
      float x, y, z, w;w77,3463
      void Lerp(const vec_t& v, float t)Lerp79,3488
      void Set(float v) { x = y = z = w = v; }Set87,3662
      void Set(float _x, float _y, float _z = 0.f, float _w = 0.f) { x = _x; y = _y; z = _z; w =Set88,3709
      vec_t& operator -= (const vec_t& v) { x -= v.x; y -= v.y; z -= v.z; w -= v.w; return *thisoperator -=90,3813
      vec_t& operator += (const vec_t& v) { x += v.x; y += v.y; z += v.z; w += v.w; return *thisoperator +=91,3913
      vec_t& operator *= (const vec_t& v) { x *= v.x; y *= v.y; z *= v.z; w *= v.w; return *thisoperator *=92,4013
      vec_t& operator *= (float v) { x *= v;    y *= v;    z *= v;    w *= v;    return *this; }operator *=93,4113
      const vec_t& operator + () const { return (*this); }operator +101,4426
      float Length() const { return sqrtf(x*x + y*y + z*z); };Length102,4485
      float LengthSq() const { return (x*x + y*y + z*z); };LengthSq103,4548
      vec_t Normalize() { (*this) *= (1.f / Length()); return (*this); }Normalize104,4608
      vec_t Normalize(const vec_t& v) { this->Set(v.x, v.y, v.z, v.w); this->Normalize(); returnNormalize105,4681
      void Cross(const vec_t& v)Cross107,4814
      void Cross(const vec_t& v1, const vec_t& v2)Cross119,5070
      float Dot(const vec_t &v) constDot126,5275
      float Dot3(const vec_t &v) constDot3130,5392
      void TransformVector(const vec_t& v, const matrix_t& matrix) { (*this) = v; this->TransforTransformVector140,5718
      void TransformPoint(const vec_t& v, const matrix_t& matrix) { (*this) = v; this->TransformTransformPoint141,5833
      float& operator [] (size_t index) { return ((float*)&x)[index]; }operator [] 143,5947
      const float& operator [] (size_t index) const { return ((float*)&x)[index]; }__anon9193c1650102144,6019
   vec_t makeVect(float _x, float _y, float _z = 0.f, float _w = 0.f) { vec_t res; res.x = _x; rmakeVect147,6110
   vec_t vec_t::operator * (float f) const { return makeVect(x * f, y * f, z * f, w *f); }operator *148,6255
   vec_t vec_t::operator - () const { return makeVect(-x, -y, -z, -w); }operator -149,6346
   vec_t vec_t::operator - (const vec_t& v) const { return makeVect(x - v.x, y - v.y, z - v.z, woperator -150,6419
   vec_t vec_t::operator + (const vec_t& v) const { return makeVect(x + v.x, y + v.y, z + v.z, woperator +151,6526
   vec_t vec_t::operator * (const vec_t& v) const { return makeVect(x * v.x, y * v.y, z * v.z, woperator *152,6633
   vec_t vec_t::Abs() const { return makeVect(fabsf(x), fabsf(y), fabsf(z)); }Abs153,6740
   vec_t Normalized(const vec_t& v) { vec_t res; res = v; res.Normalize(); return res; }Normalized155,6820
   vec_t Cross(const vec_t& v1, const vec_t& v2)Cross156,6909
   float Dot(const vec_t &v1, const vec_t &v2)Dot166,7146
   vec_t BuildPlan(const vec_t & p_point1, const vec_t & p_normal)BuildPlan171,7264
   struct matrix_tmatrix_t182,7527
      {__anon9193c165020a187,7575
         float m[4][4];m188,7583
         float m16[16];m16189,7607
         {__anon9193c1650308191,7647
            vec_t right, up, dir, position;right192,7658
            vec_t right, up, dir, position;up192,7658
            vec_t right, up, dir, position;dir192,7658
            vec_t right, up, dir, position;position192,7658
         } v;v193,7702
         vec_t component[4];component194,7716
      matrix_t(const matrix_t& other) { memcpy(&m16[0], &other.m16[0], sizeof(float) * 16); }matrix_t197,7755
      matrix_t() {}matrix_t198,7849
      void Translation(float _x, float _y, float _z) { this->Translation(makeVect(_x, _y, _z)); Translation202,7965
      void Translation(const vec_t& vt)Translation204,8064
      void Scale(float _x, float _y, float _z)Scale212,8290
      void Scale(const vec_t& s) { Scale(s.x, s.y, s.z); }Scale219,8516
      matrix_t& operator *= (const matrix_t& mat)operator *=221,8576
      matrix_t operator * (const matrix_t& mat) constoperator *229,8772
      void Multiply(const matrix_t &matrix)Multiply236,8925
      void Multiply(const matrix_t &m1, const matrix_t &m2)Multiply244,9109
      float GetDeterminant() constGetDeterminant249,9258
      void SetToIdentity() SetToIdentity256,9586
      void Transpose()Transpose263,9796
      void OrthoNormalize()OrthoNormalize278,10116
   void vec_t::Transform(const matrix_t& matrix)Transform286,10252
   void vec_t::Transform(const vec_t & s, const matrix_t& matrix)Transform301,10787
   void vec_t::TransformPoint(const matrix_t& matrix)TransformPoint307,10906
   void vec_t::TransformVector(const matrix_t& matrix)TransformVector323,11431
   float matrix_t::Inverse(const matrix_t &srcMatrix, bool affine)Inverse338,11888
   void matrix_t::RotationAxis(const vec_t & axis, float angle)RotationAxis434,17251
   enum MOVETYPEMOVETYPE479,18400
      NONE,NONE481,18422
      MOVE_X,MOVE_X482,18434
      MOVE_Y,MOVE_Y483,18448
      MOVE_Z,MOVE_Z484,18462
      MOVE_XY,MOVE_XY485,18476
      MOVE_XZ,MOVE_XZ486,18491
      MOVE_YZ,MOVE_YZ487,18506
      MOVE_SCREEN,MOVE_SCREEN488,18521
      ROTATE_X,ROTATE_X489,18540
      ROTATE_Y,ROTATE_Y490,18556
      ROTATE_Z,ROTATE_Z491,18572
      ROTATE_SCREEN,ROTATE_SCREEN492,18588
      SCALE_X,SCALE_X493,18609
      SCALE_Y,SCALE_Y494,18624
      SCALE_Z,SCALE_Z495,18639
      SCALE_XYZ,SCALE_XYZ496,18654
      BOUNDSBOUNDS497,18671
   struct ContextContext500,18691
      Context() : mbUsing(false), mbEnable(true), mbUsingBounds(false)Context502,18714
      ImDrawList* mDrawList;mDrawList506,18802
      MODE mMode;mMode508,18832
      matrix_t mViewMat;mViewMat509,18850
      matrix_t mProjectionMat;mProjectionMat510,18875
      matrix_t mModel;mModel511,18906
      matrix_t mModelInverse;mModelInverse512,18929
      matrix_t mModelSource;mModelSource513,18959
      matrix_t mModelSourceInverse;mModelSourceInverse514,18988
      matrix_t mMVP;mMVP515,19024
      matrix_t mViewProjection;mViewProjection516,19045
      vec_t mModelScaleOrigin;mModelScaleOrigin518,19078
      vec_t mCameraEye;mCameraEye519,19109
      vec_t mCameraRight;mCameraRight520,19133
      vec_t mCameraDir;mCameraDir521,19159
      vec_t mCameraUp;mCameraUp522,19183
      vec_t mRayOrigin;mRayOrigin523,19206
      vec_t mRayVector;mRayVector524,19230
      float  mRadiusSquareCenter;mRadiusSquareCenter526,19255
      ImVec2 mScreenSquareCenter;mScreenSquareCenter527,19289
      ImVec2 mScreenSquareMin;mScreenSquareMin528,19323
      ImVec2 mScreenSquareMax;mScreenSquareMax529,19354
      float mScreenFactor;mScreenFactor531,19386
      vec_t mRelativeOrigin;mRelativeOrigin532,19413
      bool mbUsing;mbUsing534,19443
      bool mbEnable;mbEnable535,19463
      vec_t mTranslationPlan;mTranslationPlan538,19506
      vec_t mTranslationPlanOrigin;mTranslationPlanOrigin539,19536
      vec_t mMatrixOrigin;mMatrixOrigin540,19572
      vec_t mRotationVectorSource;mRotationVectorSource543,19618
      float mRotationAngle;mRotationAngle544,19653
      float mRotationAngleOrigin;mRotationAngleOrigin545,19681
      vec_t mScale;mScale549,19764
      vec_t mScaleValueOrigin;mScaleValueOrigin550,19784
      float mSaveMousePosx;mSaveMousePosx551,19815
      bool mBelowAxisLimit[3];mBelowAxisLimit554,19887
      bool mBelowPlaneLimit[3];mBelowPlaneLimit555,19918
      float mAxisFactor[3];mAxisFactor556,19950
      vec_t mBoundsPivot;mBoundsPivot559,20006
      vec_t mBoundsAnchor;mBoundsAnchor560,20032
      vec_t mBoundsPlan;mBoundsPlan561,20059
      vec_t mBoundsLocalPivot;mBoundsLocalPivot562,20084
      int mBoundsBestAxis;mBoundsBestAxis563,20115
      int mBoundsAxis[2];mBoundsAxis564,20142
      bool mbUsingBounds;mbUsingBounds565,20168
      matrix_t mBoundsMatrix;mBoundsMatrix566,20194
      int mCurrentOperation;mCurrentOperation569,20234
      float mX = 0.f;mX571,20264
      float mY = 0.f;mY572,20286
      float mWidth = 0.f;mWidth573,20308
      float mHeight = 0.f;mHeight574,20334
      float mXMax = 0.f;mXMax575,20361
      float mYMax = 0.f;mYMax576,20386
   static Context gContext;gContext579,20418
   static const float angleLimit = 0.96f;angleLimit581,20447
   static const float planeLimit = 0.2f;planeLimit582,20489
   static const vec_t directionUnary[3] = { makeVect(1.f, 0.f, 0.f), makeVect(0.f, 1.f, 0.f), madirectionUnary584,20531
   static const ImU32 directionColor[3] = { 0xFF0000AA, 0xFF00AA00, 0xFFAA0000 };directionColor585,20652
   static const ImU32 planeBorderColor[3] = { 0xFFAA0000, 0xFF0000AA, 0xFF00AA00 };planeBorderColor588,20811
   static const ImU32 planeColor[3] = { 0x610000AA, 0x6100AA00, 0x61AA0000 };planeColor589,20895
   static const ImU32 selectionColor = 0x8A1080FF;selectionColor590,20973
   static const ImU32 inactiveColor = 0x99999999;inactiveColor591,21024
   static const ImU32 translationLineColor = 0xAAAAAAAA;translationLineColor592,21074
   static const char *translationInfoMask[] = { "X : %5.3f", "Y : %5.3f", "Z : %5.3f", "X : %5.3translationInfoMask593,21131
   static const char *scaleInfoMask[] = { "X : %5.2f", "Y : %5.2f", "Z : %5.2f", "XYZ : %5.2f" }scaleInfoMask594,21322
   static const char *rotationInfoMask[] = { "X : %5.2f deg %5.2f rad", "Y : %5.2f deg %5.2f radrotationInfoMask595,21420
   static const int translationInfoIndex[] = { 0,0,0, 1,0,0, 2,0,0, 0,1,0, 1,2,0, 0,2,1, 0,1,2 }translationInfoIndex596,21580
   static const float quadMin = 0.5f;quadMin597,21678
   static const float quadMax = 0.8f;quadMax598,21716
   static const float quadUV[8] = { quadMin, quadMin, quadMin, quadMax, quadMax, quadMax, quadMaquadUV599,21754
   static const int halfCircleSegmentCount = 64;halfCircleSegmentCount600,21864
   static const float snapTension = 0.5f;snapTension601,21913
   static ImVec2 worldToPos(const vec_t& worldPos, const matrix_t& mat)worldToPos609,22242
   static void ComputeCameraRay(vec_t &rayOrigin, vec_t &rayDir)ComputeCameraRay623,22654
   static float IntersectRayPlane(const vec_t & rOrigin, const vec_t& rVector, const vec_t& planIntersectRayPlane641,23340
   static bool IsInContextRect( ImVec2 p )IsInContextRect652,23683
   void SetRect(float x, float y, float width, float height)SetRect657,23844
   void SetDrawlist()SetDrawlist667,24139
   void BeginFrame()BeginFrame672,24227
   bool IsUsing()IsUsing686,24793
   bool IsOver()IsOver691,24877
   void Enable(bool enable)Enable696,25013
   static float GetUniform(const vec_t& position, const matrix_t& mat)GetUniform706,25199
   static void ComputeContext(const float *view, const float *projection, float *matrix, MODE moComputeContext713,25396
   static void ComputeColors(ImU32 *colors, int type, OPERATION operation)ComputeColors752,27086
   static void ComputeTripodAxisAndVisibility(int axisIndex, vec_t& dirPlaneX, vec_t& dirPlaneY,ComputeTripodAxisAndVisibility787,28413
   static void ComputeSnap(float*value, float snap)ComputeSnap842,30541
   static void ComputeSnap(vec_t& value, float *snap)ComputeSnap853,30926
   static float ComputeAngleOnPlan()ComputeAngleOnPlan861,31083
   static void DrawRotationGizmo(int type)DrawRotationGizmo875,31748
   static void DrawHatchedAxis(const vec_t& axis)DrawHatchedAxis935,34707
   static void DrawScaleGizmo(int type)DrawScaleGizmo945,35138
   static void DrawTranslationGizmo(int type)DrawTranslationGizmo1012,38063
   static bool CanActivate()CanActivate1094,41656
   static void HandleAndDrawLocalBounds(float *bounds, matrix_t *matrix, float *snapValues)HandleAndDrawLocalBounds1101,41833
   static int GetScaleType()GetScaleType1326,52202
   static int GetRotateType()GetRotateType1359,53684
   static int GetMoveType(vec_t *gizmoHitProportion)GetMoveType1390,54871
   static void HandleTranslation(float *matrix, float *deltaMatrix, int& type, float *snap)HandleTranslation1430,56609
   static void HandleScale(float *matrix, float *deltaMatrix, int& type, float *snap)HandleScale1514,60122
   static void HandleRotation(float *matrix, float *deltaMatrix, int& type, float *snap)HandleRotation1599,63750
   void DecomposeMatrixToComponents(const float *matrix, float *translation, float *rotation, flDecomposeMatrixToComponents1683,66758
   void RecomposeMatrixFromComponents(const float *translation, const float *rotation, const floRecomposeMatrixFromComponents1702,67427
   void Manipulate(const float *view, const float *projection, OPERATION operation, MODE mode, fManipulate1726,68162
   void DrawCube(const float *view, const float *projection, float *matrix)DrawCube1781,69756

skeleton/imgui/CMakeLists.txt,58
add_library(librw_skeleton_imguilibrw_skeleton_imgui1,0

skeleton/imgui/stb_textedit.h,6769
#define INCLUDE_STB_TEXTEDIT_HINCLUDE_STB_TEXTEDIT_H272,14190
#define STB_TEXTEDIT_UNDOSTATECOUNT STB_TEXTEDIT_UNDOSTATECOUNT284,14507
#define STB_TEXTEDIT_UNDOCHARCOUNT STB_TEXTEDIT_UNDOCHARCOUNT287,14590
#define STB_TEXTEDIT_CHARTYPE STB_TEXTEDIT_CHARTYPE290,14668
#define STB_TEXTEDIT_POSITIONTYPE STB_TEXTEDIT_POSITIONTYPE293,14750
{__anona3b00bcc0108297,14814
   STB_TEXTEDIT_POSITIONTYPE  where;where299,14835
   short           insert_length;insert_length300,14872
   short           delete_length;delete_length301,14906
   short           char_storage;char_storage302,14940
} StbUndoRecord;StbUndoRecord303,14973
{__anona3b00bcc0208306,15006
   StbUndoRecord          undo_rec [STB_TEXTEDIT_UNDOSTATECOUNT];undo_rec308,15027
   STB_TEXTEDIT_CHARTYPE  undo_char[STB_TEXTEDIT_UNDOCHARCOUNT];undo_char309,15093
   short undo_point, redo_point;undo_point310,15158
   short undo_point, redo_point;redo_point310,15158
   short undo_char_point, redo_char_point;undo_char_point311,15191
   short undo_char_point, redo_char_point;redo_char_point311,15191
} StbUndoState;StbUndoState312,15234
{__anona3b00bcc0308315,15266
   int cursor;cursor321,15324
   int select_start;          // selection start pointselect_start324,15392
   int select_end;select_end325,15447
   unsigned char insert_mode;insert_mode331,15720
   unsigned char cursor_at_end_of_line; // not implemented yetcursor_at_end_of_line339,15940
   unsigned char initialized;initialized340,16003
   unsigned char has_preferred_x;has_preferred_x341,16033
   unsigned char single_line;single_line342,16067
   unsigned char padding1, padding2, padding3;padding1343,16097
   unsigned char padding1, padding2, padding3;padding2343,16097
   unsigned char padding1, padding2, padding3;padding3343,16097
   float preferred_x; // this determines where the cursor up/down tries to seek to along xpreferred_x344,16144
   StbUndoState undostate;undostate345,16235
} STB_TexteditState;STB_TexteditState346,16262
{__anona3b00bcc0408358,16523
   float x0,x1;             // starting x location, end x location (allows for align=right, etc)x0359,16525
   float x0,x1;             // starting x location, end x location (allows for align=right, etc)x1359,16525
   float baseline_y_delta;  // position of baseline relative to previous row's baselinebaseline_y_delta360,16622
   float ymin,ymax;         // height of row above and below baselineymin361,16710
   float ymin,ymax;         // height of row above and below baselineymax361,16710
   int num_chars;num_chars362,16780
} StbTexteditRow;StbTexteditRow363,16798
#define STB_TEXTEDIT_memmove STB_TEXTEDIT_memmove381,17243
static int stb_text_locate_coord(STB_TEXTEDIT_STRING *str, float x, float y)stb_text_locate_coord391,17480
static void stb_textedit_click(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, floastb_textedit_click451,19067
static void stb_textedit_drag(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, floatstb_textedit_drag460,19426
{__anona3b00bcc0508481,20359
   float x,y;    // position of n'th characterx482,20361
   float x,y;    // position of n'th charactery482,20361
   float height; // height of lineheight483,20408
   int first_char, length; // first char of row, and lengthfirst_char484,20443
   int first_char, length; // first char of row, and lengthlength484,20443
   int prev_first;  // first char of previous rowprev_first485,20503
} StbFindState;StbFindState486,20553
static void stb_textedit_find_charpos(StbFindState *find, STB_TEXTEDIT_STRING *str, int n, int sstb_textedit_find_charpos490,20722
#define STB_TEXT_HAS_SELECTION(STB_TEXT_HAS_SELECTION547,22208
static void stb_textedit_clamp(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_clamp550,22354
static void stb_textedit_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, istb_textedit_delete564,22900
static void stb_textedit_delete_selection(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_delete_selection572,23161
static void stb_textedit_sortselection(STB_TexteditState *state)stb_textedit_sortselection588,23834
static void stb_textedit_move_to_first(STB_TexteditState *state)stb_textedit_move_to_first598,24123
static void stb_textedit_move_to_last(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_move_to_last609,24449
static int is_word_boundary( STB_TEXTEDIT_STRING *str, int idx )is_word_boundary621,24819
static int stb_textedit_move_to_word_previous( STB_TEXTEDIT_STRING *str, int c )stb_textedit_move_to_word_previous627,25068
#define STB_TEXTEDIT_MOVEWORDLEFT STB_TEXTEDIT_MOVEWORDLEFT638,25303
static int stb_textedit_move_to_word_next( STB_TEXTEDIT_STRING *str, int c )stb_textedit_move_to_word_next642,25415
#define STB_TEXTEDIT_MOVEWORDRIGHT STB_TEXTEDIT_MOVEWORDRIGHT654,25699
static void stb_textedit_prep_selection_at_cursor(STB_TexteditState *state)stb_textedit_prep_selection_at_cursor660,25832
static int stb_textedit_cut(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_cut669,26093
static int stb_textedit_paste(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_Cstb_textedit_paste680,26415
static void stb_textedit_key(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int key)stb_textedit_key700,27185
static void stb_textedit_flush_redo(StbUndoState *state)stb_textedit_flush_redo1063,39533
static void stb_textedit_discard_undo(StbUndoState *state)stb_textedit_discard_undo1070,39748
static void stb_textedit_discard_redo(StbUndoState *state)stb_textedit_discard_redo1092,40956
static StbUndoRecord *stb_text_create_undo_record(StbUndoState *state, int numchars)stb_text_create_undo_record1112,42069
static STB_TEXTEDIT_CHARTYPE *stb_text_createundo(StbUndoState *state, int pos, int insert_len, stb_text_createundo1136,42915
static void stb_text_undo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_text_undo1156,43507
static void stb_text_redo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_text_redo1224,45948
static void stb_text_makeundo_insert(STB_TexteditState *state, int where, int length)stb_text_makeundo_insert1275,47541
static void stb_text_makeundo_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int whestb_text_makeundo_delete1280,47693
static void stb_text_makeundo_replace(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int whstb_text_makeundo_replace1290,48010
static void stb_textedit_clear_state(STB_TexteditState *state, int is_single_line)stb_textedit_clear_state1301,48395
static void stb_textedit_initialize_state(STB_TexteditState *state, int is_single_line)stb_textedit_initialize_state1318,48981

skeleton/imgui/stb_truetype.h,29655
   typedef unsigned char   stbtt_uint8;stbtt_uint8388,14974
   typedef signed   char   stbtt_int8;stbtt_int8389,15014
   typedef unsigned short  stbtt_uint16;stbtt_uint16390,15053
   typedef signed   short  stbtt_int16;stbtt_int16391,15094
   typedef unsigned int    stbtt_uint32;stbtt_uint32392,15134
   typedef signed   int    stbtt_int32;stbtt_int32393,15175
   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];stbtt__check_size32396,15226
   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];stbtt__check_size16397,15296
   #define STBTT_ifloor(STBTT_ifloor402,15478
   #define STBTT_iceil(STBTT_iceil403,15524
   #define STBTT_sqrt(STBTT_sqrt408,15623
   #define STBTT_fabs(STBTT_fabs413,15715
   #define STBTT_malloc(STBTT_malloc419,15892
   #define STBTT_free(STBTT_free420,15944
   #define STBTT_assert(STBTT_assert425,16052
   #define STBTT_strlen(STBTT_strlen430,16150
   #define STBTT_memcpy STBTT_memcpy435,16248
   #define STBTT_memset STBTT_memset436,16285
#define __STB_INCLUDE_STB_TRUETYPE_H____STB_INCLUDE_STB_TRUETYPE_H__448,16572
#define STBTT_DEF STBTT_DEF451,16632
#define STBTT_DEF STBTT_DEF453,16663
{__anon6b0fb5c30108462,16772
   unsigned char *data;data463,16774
   int cursor;cursor464,16798
   int size;size465,16813
} stbtt__buf;stbtt__buf466,16826
{__anon6b0fb5c30208476,17033
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx0477,17035
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy0477,17035
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx1477,17035
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy1477,17035
   float xoff,yoff,xadvance;xoff478,17099
   float xoff,yoff,xadvance;yoff478,17099
   float xoff,yoff,xadvance;xadvance478,17099
} stbtt_bakedchar;stbtt_bakedchar479,17128
{__anon6b0fb5c30308492,17932
   float x0,y0,s0,t0; // top-leftx0493,17934
   float x0,y0,s0,t0; // top-lefty0493,17934
   float x0,y0,s0,t0; // top-lefts0493,17934
   float x0,y0,s0,t0; // top-leftt0493,17934
   float x1,y1,s1,t1; // bottom-rightx1494,17968
   float x1,y1,s1,t1; // bottom-righty1494,17968
   float x1,y1,s1,t1; // bottom-rights1494,17968
   float x1,y1,s1,t1; // bottom-rightt1494,17968
} stbtt_aligned_quad;stbtt_aligned_quad495,18006
{__anon6b0fb5c30408522,19145
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx0523,19147
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy0523,19147
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx1523,19147
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy1523,19147
   float xoff,yoff,xadvance;xoff524,19211
   float xoff,yoff,xadvance;yoff524,19211
   float xoff,yoff,xadvance;xadvance524,19211
   float xoff2,yoff2;xoff2525,19240
   float xoff2,yoff2;yoff2525,19240
} stbtt_packedchar;stbtt_packedchar526,19262
typedef struct stbtt_pack_context stbtt_pack_context;stbtt_pack_context528,19283
typedef struct stbtt_fontinfo stbtt_fontinfo;stbtt_fontinfo529,19337
typedef struct stbrp_rect stbrp_rect;stbrp_rect531,19413
#define STBTT_POINT_SIZE(STBTT_POINT_SIZE548,20253
{__anon6b0fb5c30508566,21370
   float font_size;font_size567,21372
   int first_unicode_codepoint_in_range;  // if non-zero, then the chars are continuous, and thifirst_unicode_codepoint_in_range568,21392
   int *array_of_unicode_codepoints;       // if non-zero, then this is an array of unicode codearray_of_unicode_codepoints569,21513
   int num_chars;num_chars570,21616
   stbtt_packedchar *chardata_for_range; // outputchardata_for_range571,21634
   unsigned char h_oversample, v_oversample; // don't set these, they're used internallyh_oversample572,21685
   unsigned char h_oversample, v_oversample; // don't set these, they're used internallyv_oversample572,21685
} stbtt_pack_range;stbtt_pack_range573,21774
struct stbtt_pack_context {stbtt_pack_context618,24722
   void *user_allocator_context;user_allocator_context619,24750
   void *pack_info;pack_info620,24783
   int   width;width621,24803
   int   height;height622,24819
   int   stride_in_bytes;stride_in_bytes623,24836
   int   padding;padding624,24862
   unsigned int   h_oversample, v_oversample;h_oversample625,24880
   unsigned int   h_oversample, v_oversample;v_oversample625,24880
   unsigned char *pixels;pixels626,24926
   void  *nodes;nodes627,24952
struct stbtt_fontinfostbtt_fontinfo652,26112
   void           * userdata;userdata654,26136
   unsigned char  * data;              // pointer to .ttf filedata655,26166
   int              fontstart;         // offset of start of fontfontstart656,26229
   int numGlyphs;                     // number of glyphs, needed for range checkingnumGlyphs658,26296
   int loca,head,glyf,hhea,hmtx,kern; // table locations as offset from start of .ttfloca660,26382
   int loca,head,glyf,hhea,hmtx,kern; // table locations as offset from start of .ttfhead660,26382
   int loca,head,glyf,hhea,hmtx,kern; // table locations as offset from start of .ttfglyf660,26382
   int loca,head,glyf,hhea,hmtx,kern; // table locations as offset from start of .ttfhhea660,26382
   int loca,head,glyf,hhea,hmtx,kern; // table locations as offset from start of .ttfhmtx660,26382
   int loca,head,glyf,hhea,hmtx,kern; // table locations as offset from start of .ttfkern660,26382
   int index_map;                     // a cmap mapping for our chosen character encodingindex_map661,26468
   int indexToLocFormat;              // format needed to map from glyph index to glyphindexToLocFormat662,26558
   stbtt__buf cff;                    // cff font datacff664,26647
   stbtt__buf charstrings;            // the charstring indexcharstrings665,26702
   stbtt__buf gsubrs;                 // global charstring subroutines indexgsubrs666,26764
   stbtt__buf subrs;                  // private charstring subroutines indexsubrs667,26841
   stbtt__buf fontdicts;              // array of font dictsfontdicts668,26919
   stbtt__buf fdselect;               // map from glyph to fontdictfdselect669,26980
   enum {__anon6b0fb5c30603744,30955
      STBTT_vmove=1,STBTT_vmove745,30965
      STBTT_vline,STBTT_vline746,30986
      STBTT_vcurve,STBTT_vcurve747,31005
      STBTT_vcubicSTBTT_vcubic748,31025
   #define stbtt_vertex_type stbtt_vertex_type754,31190
   {__anon6b0fb5c30708756,31314
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;x757,31319
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;y757,31319
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cx757,31319
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cy757,31319
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cx1757,31319
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cy1757,31319
      unsigned char type,padding;type758,31362
      unsigned char type,padding;padding758,31362
   } stbtt_vertex;stbtt_vertex759,31396
{__anon6b0fb5c30808834,36333
   int w,h,stride;w835,36335
   int w,h,stride;h835,36335
   int w,h,stride;stride835,36335
   unsigned char *pixels;pixels836,36354
} stbtt__bitmap;stbtt__bitmap837,36380
#define STBTT_MACSTYLE_DONTCARE STBTT_MACSTYLE_DONTCARE877,38836
#define STBTT_MACSTYLE_BOLD STBTT_MACSTYLE_BOLD878,38874
#define STBTT_MACSTYLE_ITALIC STBTT_MACSTYLE_ITALIC879,38912
#define STBTT_MACSTYLE_UNDERSCORE STBTT_MACSTYLE_UNDERSCORE880,38950
#define STBTT_MACSTYLE_NONE STBTT_MACSTYLE_NONE881,38988
enum { // platformID__anon6b0fb5c30903895,39840
   STBTT_PLATFORM_ID_UNICODE   =0,STBTT_PLATFORM_ID_UNICODE896,39861
   STBTT_PLATFORM_ID_MAC       =1,STBTT_PLATFORM_ID_MAC897,39896
   STBTT_PLATFORM_ID_ISO       =2,STBTT_PLATFORM_ID_ISO898,39931
   STBTT_PLATFORM_ID_MICROSOFT =3STBTT_PLATFORM_ID_MICROSOFT899,39966
enum { // encodingID for STBTT_PLATFORM_ID_UNICODE__anon6b0fb5c30a03902,40004
   STBTT_UNICODE_EID_UNICODE_1_0    =0,STBTT_UNICODE_EID_UNICODE_1_0903,40055
   STBTT_UNICODE_EID_UNICODE_1_1    =1,STBTT_UNICODE_EID_UNICODE_1_1904,40095
   STBTT_UNICODE_EID_ISO_10646      =2,STBTT_UNICODE_EID_ISO_10646905,40135
   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,STBTT_UNICODE_EID_UNICODE_2_0_BMP906,40175
   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4STBTT_UNICODE_EID_UNICODE_2_0_FULL907,40215
enum { // encodingID for STBTT_PLATFORM_ID_MICROSOFT__anon6b0fb5c30b03910,40259
   STBTT_MS_EID_SYMBOL        =0,STBTT_MS_EID_SYMBOL911,40312
   STBTT_MS_EID_UNICODE_BMP   =1,STBTT_MS_EID_UNICODE_BMP912,40346
   STBTT_MS_EID_SHIFTJIS      =2,STBTT_MS_EID_SHIFTJIS913,40380
   STBTT_MS_EID_UNICODE_FULL  =10STBTT_MS_EID_UNICODE_FULL914,40414
enum { // encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes__anon6b0fb5c30c03917,40452
   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,STBTT_MAC_EID_ROMAN918,40529
   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,STBTT_MAC_EID_ARABIC918,40529
   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,STBTT_MAC_EID_JAPANESE919,40596
   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,STBTT_MAC_EID_HEBREW919,40596
   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,STBTT_MAC_EID_CHINESE_TRAD920,40663
   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,STBTT_MAC_EID_GREEK920,40663
   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7STBTT_MAC_EID_KOREAN921,40730
   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7STBTT_MAC_EID_RUSSIAN921,40730
enum { // languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...__anon6b0fb5c30d03924,40800
   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,STBTT_MS_LANG_ENGLISH926,40952
   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,STBTT_MS_LANG_ITALIAN926,40952
   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,STBTT_MS_LANG_CHINESE927,41027
   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,STBTT_MS_LANG_JAPANESE927,41027
   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,STBTT_MS_LANG_DUTCH928,41102
   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,STBTT_MS_LANG_KOREAN928,41102
   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,STBTT_MS_LANG_FRENCH929,41177
   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,STBTT_MS_LANG_RUSSIAN929,41177
   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,STBTT_MS_LANG_GERMAN930,41252
   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,STBTT_MS_LANG_SPANISH930,41252
   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041DSTBTT_MS_LANG_HEBREW931,41327
   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041DSTBTT_MS_LANG_SWEDISH931,41327
enum { // languageID for STBTT_PLATFORM_ID_MAC__anon6b0fb5c30e03934,41405
   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,STBTT_MAC_LANG_ENGLISH935,41452
   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,STBTT_MAC_LANG_JAPANESE935,41452
   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,STBTT_MAC_LANG_ARABIC936,41523
   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,STBTT_MAC_LANG_KOREAN936,41523
   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,STBTT_MAC_LANG_DUTCH937,41594
   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,STBTT_MAC_LANG_RUSSIAN937,41594
   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,STBTT_MAC_LANG_FRENCH938,41665
   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,STBTT_MAC_LANG_SPANISH938,41665
   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,STBTT_MAC_LANG_GERMAN939,41736
   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,STBTT_MAC_LANG_SWEDISH939,41736
   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,STBTT_MAC_LANG_HEBREW940,41807
   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,STBTT_MAC_LANG_CHINESE_SIMPLIFIED940,41807
   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19STBTT_MAC_LANG_ITALIAN941,41884
   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19STBTT_MAC_LANG_CHINESE_TRAD941,41884
#define STBTT_MAX_OVERSAMPLE STBTT_MAX_OVERSAMPLE960,42292
typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ?stbtt__test_oversample_pow2967,42418
#define STBTT_RASTERIZER_VERSION STBTT_RASTERIZER_VERSION970,42558
#define STBTT__NOTUSED(STBTT__NOTUSED974,42617
#define STBTT__NOTUSED(STBTT__NOTUSED976,42660
static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)stbtt__buf_get8984,42839
static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)stbtt__buf_peek8991,42971
static void stbtt__buf_seek(stbtt__buf *b, int o)stbtt__buf_seek998,43102
static void stbtt__buf_skip(stbtt__buf *b, int o)stbtt__buf_skip1004,43252
static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)stbtt__buf_get1009,43345
static stbtt__buf stbtt__new_buf(const void *p, size_t size)stbtt__new_buf1019,43556
#define stbtt__buf_get16(stbtt__buf_get161029,43759
#define stbtt__buf_get32(stbtt__buf_get321030,43811
static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)stbtt__buf_range1032,43864
static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)stbtt__cff_get_index1041,44102
static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)stbtt__cff_int1055,44510
static void stbtt__cff_skip_operand(stbtt__buf *b) {stbtt__cff_skip_operand1067,44984
static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)stbtt__dict_get1082,45339
static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)stbtt__dict_get_ints1097,45793
static int stbtt__cff_index_count(stbtt__buf *b)stbtt__cff_index_count1105,46059
static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)stbtt__cff_index_get1111,46170
#define ttBYTE(ttBYTE1133,46908
#define ttCHAR(ttCHAR1134,46954
#define ttFixed(ttFixed1135,46999
static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }ttUSHORT1137,47032
static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }ttSHORT1138,47105
static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]ttULONG1139,47178
static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]ttLONG1140,47278
#define stbtt_tag4(stbtt_tag41142,47379
#define stbtt_tag(stbtt_tag1143,47484
static int stbtt__isfont(stbtt_uint8 *font)stbtt__isfont1145,47562
static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tagstbtt__find_table1157,48054
static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)stbtt_GetFontOffsetForIndex_internal1170,48445
static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)stbtt_GetNumberOfFonts_internal1189,49040
static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)stbtt__get_subrs1205,49489
static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)stbtt_InitFont_internal1218,50032
STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)stbtt_FindGlyphIndex1328,54010
STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_vstbtt_GetCodepointShape1421,57725
static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbstbtt_setvertex1426,57938
static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)stbtt__GetGlyfOffset1435,58199
STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, istbtt_GetGlyphBox1457,59048
STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0,stbtt_GetCodepointBox1473,59564
STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)stbtt_IsGlyphEmpty1478,59770
static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_ostbtt__close_shape1490,60155
static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvstbtt__GetGlyphShapeTT1506,60806
{__anon6b0fb5c30f081733,69271
   int bounds;bounds1734,69273
   int started;started1735,69288
   float first_x, first_y;first_x1736,69304
   float first_x, first_y;first_y1736,69304
   float x, y;x1737,69331
   float x, y;y1737,69331
   stbtt_int32 min_x, max_x, min_y, max_y;min_x1738,69346
   stbtt_int32 min_x, max_x, min_y, max_y;max_x1738,69346
   stbtt_int32 min_x, max_x, min_y, max_y;min_y1738,69346
   stbtt_int32 min_x, max_x, min_y, max_y;max_y1738,69346
   stbtt_vertex *pvertices;pvertices1740,69390
   int num_vertices;num_vertices1741,69418
} stbtt__csctx;stbtt__csctx1742,69439
#define STBTT__CSCTX_INIT(STBTT__CSCTX_INIT1744,69456
static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)stbtt__track_vertex1746,69530
static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtstbtt__csctx_v1755,69833
static void stbtt__csctx_close_shape(stbtt__csctx *ctx)stbtt__csctx_close_shape1771,70414
static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)stbtt__csctx_rmove_to1777,70622
static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)stbtt__csctx_rline_to1785,70889
static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dystbtt__csctx_rccurve_to1792,71076
static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)stbtt__get_subr1803,71462
static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)stbtt__cid_get_glyph_subrs1817,71797
static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)stbtt__run_charstring1845,72720
#define STBTT__CSERR(STBTT__CSERR1853,73012
static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvstbtt__GetGlyphShapeT22104,81161
static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, stbtt__GetGlyphInfoT22121,81900
STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvstbtt_GetGlyphShape2134,82286
STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceWstbtt_GetGlyphHMetrics2142,82562
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)stbtt_GetGlyphKernAdvance2154,83280
STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)stbtt_GetCodepointKernAdvance2184,84104
STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advancstbtt_GetCodepointHMetrics2191,84418
STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int stbtt_GetFontVMetrics2196,84651
STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, istbtt_GetFontBoundingBox2203,84951
STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)stbtt_ScaleForPixelHeight2211,85252
STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)stbtt_ScaleForMappingEmToPixels2217,85471
STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)stbtt_FreeShape2223,85657
STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scalstbtt_GetGlyphBitmapBoxSubpixel2233,85894
STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, flostbtt_GetGlyphBitmapBox2251,86687
STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, flstbtt_GetCodepointBitmapBoxSubpixel2256,86937
STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scalstbtt_GetCodepointBitmapBox2261,87267
typedef struct stbtt__hheap_chunkstbtt__hheap_chunk2270,87628
   struct stbtt__hheap_chunk *next;next2272,87664
} stbtt__hheap_chunk;stbtt__hheap_chunk2273,87700
typedef struct stbtt__hheapstbtt__hheap2275,87723
   struct stbtt__hheap_chunk *head;head2277,87753
   void   *first_free;first_free2278,87789
   int    num_remaining_in_head_chunk;num_remaining_in_head_chunk2279,87812
} stbtt__hheap;stbtt__hheap2280,87851
static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)stbtt__hheap_alloc2282,87868
static void stbtt__hheap_free(stbtt__hheap *hh, void *p)stbtt__hheap_free2303,88594
static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)stbtt__hheap_cleanup2309,88713
typedef struct stbtt__edge {stbtt__edge2319,88925
   float x0,y0, x1,y1;x02320,88954
   float x0,y0, x1,y1;y02320,88954
   float x0,y0, x1,y1;x12320,88954
   float x0,y0, x1,y1;y12320,88954
   int invert;invert2321,88977
} stbtt__edge;stbtt__edge2322,88992
typedef struct stbtt__active_edgestbtt__active_edge2325,89009
   struct stbtt__active_edge *next;next2327,89045
   int x,dx;x2329,89116
   int x,dx;dx2329,89116
   float ey;ey2330,89129
   int direction;direction2331,89142
   float fx,fdx,fdy;fx2333,89197
   float fx,fdx,fdy;fdx2333,89197
   float fx,fdx,fdy;fdy2333,89197
   float direction;direction2334,89218
   float sy;sy2335,89238
   float ey;ey2336,89251
} stbtt__active_edge;stbtt__active_edge2340,89342
#define STBTT_FIXSHIFT STBTT_FIXSHIFT2343,89399
#define STBTT_FIX STBTT_FIX2344,89427
#define STBTT_FIXMASK STBTT_FIXMASK2345,89474
static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float stbtt__new_active2347,89514
static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float stbtt__new_active2369,90293
static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, instbtt__fill_active_edges2394,91215
static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsubstbtt__rasterize_sorted_edges2436,92735
static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, stbtt__handle_clipped_edge2540,96317
static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__stbtt__fill_active_edges_new2577,97324
static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsubstbtt__rasterize_sorted_edges2740,104505
#define STBTT__COMPARE(STBTT__COMPARE2834,107319
static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)stbtt__sort_edges_ins_sort2836,107369
static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)stbtt__sort_edges_quicksort2854,107732
static void stbtt__sort_edges(stbtt__edge *p, int n)stbtt__sort_edges2916,109413
{__anon6b0fb5c310082923,109561
   float x,y;x2924,109563
   float x,y;y2924,109563
} stbtt__point;stbtt__point2925,109577
static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windingsstbtt__rasterize2927,109594
static void stbtt__add_point(stbtt__point *points, int n, float x, float y)stbtt__add_point2984,111563
static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, flostbtt__tesselate_curve2992,111844
static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, flstbtt__tesselate_cubic3012,112744
static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_fstbtt_FlattenCurves3055,114286
STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *vestbtt_Rasterize3132,116973
STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)stbtt_FreeBitmap3144,117694
STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x,stbtt_GetGlyphBitmapSubpixel3149,117803
STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float sstbtt_GetGlyphBitmap3189,119063
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, stbtt_MakeGlyphBitmapSubpixel3194,119340
STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_stbtt_MakeGlyphBitmap3213,120058
STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scalstbtt_GetCodepointBitmapSubpixel3218,120340
STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *outpstbtt_MakeCodepointBitmapSubpixel3223,120698
STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, flostbtt_GetCodepointBitmap3228,121064
STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int stbtt_MakeCodepointBitmap3233,121356
static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  // font location (usestbtt_BakeFontBitmap_internal3244,121815
STBTT_DEF void stbtt_GetBakedQuad(stbtt_bakedchar *chardata, int pw, int ph, int char_index, flostbtt_GetBakedQuad3290,123618
typedef int stbrp_coord;stbrp_coord3318,124512
{__anon6b0fb5c311083332,125404
   int width,height;width3333,125406
   int width,height;height3333,125406
   int x,y,bottom_y;x3334,125427
   int x,y,bottom_y;y3334,125427
   int x,y,bottom_y;bottom_y3334,125427
} stbrp_context;stbrp_context3335,125448
{__anon6b0fb5c312083338,125481
   unsigned char x;x3339,125483
} stbrp_node;stbrp_node3340,125503
struct stbrp_rectstbrp_rect3342,125518
   stbrp_coord x,y;x3344,125538
   stbrp_coord x,y;y3344,125538
   int id,w,h,was_packed;id3345,125558
   int id,w,h,was_packed;w3345,125558
   int id,w,h,was_packed;h3345,125558
   int id,w,h,was_packed;was_packed3345,125558
static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nodstbrp_init_target3348,125588
static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)stbrp_pack_rects3359,125846
STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, instbtt_PackBegin3388,126682
STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)stbtt_PackEnd3419,127771
STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, unsstbtt_PackSetOversampling3425,127952
#define STBTT__OVER_MASK STBTT__OVER_MASK3435,128357
static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsignestbtt__h_prefilter3437,128409
static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsignestbtt__v_prefilter3499,130645
static float stbtt__oversample_shift(int oversample)stbtt__oversample_shift3561,133139
STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *infstbtt_PackFontRangesGatherRects3574,133593
STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo stbtt_PackFontRangesRenderIntoRects3603,134979
STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int numstbtt_PackFontRangesPackRects3685,138617
STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, unsigned char *fontdata, int font_instbtt_PackFontRanges3690,138799
STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, unsigned char *fontdata, int font_indstbtt_PackFontRange3726,140052
STBTT_DEF void stbtt_GetPackedQuad(stbtt_packedchar *chardata, int pw, int ph, int char_index, fstbtt_GetPackedQuad3738,140674
static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1,stbtt__CompareUTF8toUTF16_bigendian_prefix3772,141723
static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2) stbtt_CompareUTF8toUTF16_bigendian_internal3811,143162
STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platfstbtt_GetFontNameString3818,143538
static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nlestbtt__matchpair3839,144331
static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 fstbtt__matches3886,146371
static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbtstbtt_FindMatchingFont_internal3915,147414
STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,stbtt_BakeFontBitmap3931,147920
STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)stbtt_GetFontOffsetForIndex3938,148316
STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)stbtt_GetNumberOfFonts3943,148483
STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)stbtt_InitFont3948,148619
STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)stbtt_FindMatchingFont3953,148787
STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int lstbtt_CompareUTF8toUTF16_bigendian3958,148982

skeleton/imgui/imgui_draw.cpp,13215
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS13,248
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS17,307
#define alloca alloca25,515
#define snprintf snprintf37,943
namespace IMGUI_STB_NAMESPACEIMGUI_STB_NAMESPACE68,3035
#define STBRP_ASSERT(STBRP_ASSERT89,3660
#define STBRP_STATICSTBRP_STATIC91,3751
#define STB_RECT_PACK_IMPLEMENTATIONSTB_RECT_PACK_IMPLEMENTATION92,3772
#define STBTT_malloc(STBTT_malloc96,3844
#define STBTT_free(STBTT_free97,3903
#define STBTT_assert(STBTT_assert98,3961
#define STBTT_STATICSTBTT_STATIC100,4051
#define STB_TRUETYPE_IMPLEMENTATIONSTB_TRUETYPE_IMPLEMENTATION101,4072
void ImGui::StyleColorsClassic(ImGuiStyle* dst)StyleColorsClassic128,4600
void ImGui::StyleColorsDark(ImGuiStyle* dst)StyleColorsDark178,8272
void ImGui::StyleColorsLight(ImGuiStyle* dst)StyleColorsLight229,12062
ImDrawListSharedData::ImDrawListSharedData()ImDrawListSharedData285,16075
void ImDrawList::Clear()Clear304,16669
void ImDrawList::ClearFreeMemory()ClearFreeMemory321,17147
#define GetCurrentClipRect(GetCurrentClipRect344,17883
#define GetCurrentTextureId(GetCurrentTextureId345,18011
void ImDrawList::AddDrawCmd()AddDrawCmd347,18121
void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)AddCallback357,18415
void ImDrawList::UpdateClipRect()UpdateClipRect373,19201
void ImDrawList::UpdateTextureID()UpdateTextureID392,20106
void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_recPushClipRect415,21240
void ImDrawList::PushClipRectFullScreen()PushClipRectFullScreen433,21854
void ImDrawList::PopClipRect()PopClipRect438,22051
void ImDrawList::PushTextureID(const ImTextureID& texture_id)PushTextureID445,22180
void ImDrawList::PopTextureID()PopTextureID451,22313
void ImDrawList::ChannelsSplit(int channels_count)ChannelsSplit458,22446
void ImDrawList::ChannelsMerge()ChannelsMerge491,23736
void ImDrawList::ChannelsSetCurrent(int idx)ChannelsSetCurrent525,25235
void ImDrawList::PrimReserve(int idx_count, int vtx_count)PrimReserve538,25937
void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)PrimRect553,26491
void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& PrimRectUV568,27280
void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, PrimQuadUV583,28135
void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, bool closeAddPolyline598,29054
void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)AddConvexPolyFilled777,38128
void ImDrawList::PathArcToFast(const ImVec2& centre, float radius, int a_min_of_12, int a_max_ofPathArcToFast858,41463
void ImDrawList::PathArcTo(const ImVec2& centre, float radius, float a_min, float a_max, int numPathArcTo873,41980
static void PathBezierToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2PathBezierToCasteljau888,42460
void ImDrawList::PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int numPathBezierCurveTo914,43573
void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, int rounding_cornersPathRect938,44366
void ImDrawList::AddLine(const ImVec2& a, const ImVec2& b, ImU32 col, float thickness)AddLine963,45883
void ImDrawList::AddRect(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int roundiAddRect973,46228
void ImDrawList::AddRectFilled(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int AddRectFilled981,46550
void ImDrawList::AddRectFilledMultiColor(const ImVec2& a, const ImVec2& c, ImU32 col_upr_left, IAddRectFilledMultiColor997,46930
void ImDrawList::AddQuad(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImUAddQuad1012,47736
void ImDrawList::AddQuadFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& AddQuadFilled1024,48031
void ImDrawList::AddTriangle(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col, floatAddTriangle1036,48302
void ImDrawList::AddTriangleFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col)AddTriangleFilled1047,48565
void ImDrawList::AddCircle(const ImVec2& centre, float radius, ImU32 col, int num_segments, floaAddCircle1058,48804
void ImDrawList::AddCircleFilled(const ImVec2& centre, float radius, ImU32 col, int num_segmentsAddCircleFilled1068,49163
void ImDrawList::AddBezierCurve(const ImVec2& pos0, const ImVec2& cp0, const ImVec2& cp1, const AddBezierCurve1078,49493
void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, consAddText1088,49823
void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_AddText1117,51024
void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const IAddImage1122,51187
void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, conAddImageQuad1138,51668
void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, AddImageRounded1154,52245
void ImDrawData::DeIndexAllBuffers()DeIndexAllBuffers1184,53524
void ImDrawData::ScaleClipRects(const ImVec2& scale)ScaleClipRects1203,54362
void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawVert* vert_start, ImDrawVert* vert_end,ShadeVertsLinearColorGradientKeepAlpha1221,55067
void ImGui::ShadeVertsLinearAlphaGradientForLeftToRightText(ImDrawVert* vert_start, ImDrawVert* ShadeVertsLinearAlphaGradientForLeftToRightText1237,56211
void ImGui::ShadeVertsLinearUV(ImDrawVert* vert_start, ImDrawVert* vert_end, const ImVec2& a, coShadeVertsLinearUV1254,57053
ImFontConfig::ImFontConfig()ImFontConfig1281,58098
const int FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF = 90;FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF1307,58918
const int FONT_ATLAS_DEFAULT_TEX_DATA_H      = 27;FONT_ATLAS_DEFAULT_TEX_DATA_H1308,58969
const unsigned int FONT_ATLAS_DEFAULT_TEX_DATA_ID = 0x80000000;FONT_ATLAS_DEFAULT_TEX_DATA_ID1309,59020
static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * FONT_AFONT_ATLAS_DEFAULT_TEX_DATA_PIXELS1310,59084
static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_Count_][3] =FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA1341,61836
ImFontAtlas::ImFontAtlas()ImFontAtlas1354,62542
ImFontAtlas::~ImFontAtlas()~ImFontAtlas1367,62853
void    ImFontAtlas::ClearInputData()ClearInputData1372,62899
void    ImFontAtlas::ClearTexData()ClearTexData1394,63679
void    ImFontAtlas::ClearFonts()ClearFonts1404,63908
void    ImFontAtlas::Clear()Clear1411,64036
void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_heiGetTexDataAsAlpha81418,64130
void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_heiGetTexDataAsRGBA321434,64593
ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)AddFont1455,65492
static unsigned int Decode85Byte(char c)                                    { return c >= '\\' ?Decode85Byte1486,66846
static void         Decode85(const unsigned char* src, unsigned char* dst)Decode851487,66958
ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)AddFontDefault1499,67498
ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConAddFontFromFileTTF1515,68180
ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, constAddFontFromMemoryTTF1536,69197
ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compresAddFontFromMemoryCompressedTTF1548,69697
ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85AddFontFromMemoryCompressedBase85TTF1560,70513
int ImFontAtlas::AddCustomRectRegular(unsigned int id, int width, int height)AddCustomRectRegular1570,71128
int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float aAddCustomRectFontGlyph1583,71521
void ImFontAtlas::CalcCustomRectUV(const CustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_maCalcCustomRectUV1599,72043
bool    ImFontAtlas::Build()Build1607,72552
void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_ImFontAtlasBuildMultiplyCalcLookupTable1612,72636
void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixelsImFontAtlasBuildMultiplyRectAlpha81621,72928
bool    ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)ImFontAtlasBuildWithStbTruetype1629,73244
    struct ImFontTempBuildDataImFontTempBuildData1667,75072
        stbtt_fontinfo      FontInfo;FontInfo1669,75109
        stbrp_rect*         Rects;Rects1670,75147
        int                 RectsCount;RectsCount1671,75182
        stbtt_pack_range*   Ranges;Ranges1672,75222
        int                 RangesCount;RangesCount1673,75258
void ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas* atlas)ImFontAtlasBuildRegisterDefaultCustomRects1821,82389
void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, floaImFontAtlasBuildSetupFont1827,82665
void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* pack_context_opaque)ImFontAtlasBuildPackCustomRects1841,83090
static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)ImFontAtlasBuildRenderDefaultTexData1867,84217
void ImFontAtlasBuildFinish(ImFontAtlas* atlas)ImFontAtlasBuildFinish1906,86201
const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()GetGlyphRangesDefault1930,87084
const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()GetGlyphRangesKorean1940,87284
const ImWchar*  ImFontAtlas::GetGlyphRangesChinese()GetGlyphRangesChinese1952,87571
const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()GetGlyphRangesJapanese1966,87976
const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()GetGlyphRangesCyrillic2031,94272
const ImWchar*  ImFontAtlas::GetGlyphRangesThai()GetGlyphRangesThai2044,94624
void ImFontAtlas::GlyphRangesBuilder::AddText(const char* text, const char* text_end)AddText2060,95069
void ImFontAtlas::GlyphRangesBuilder::AddRanges(const ImWchar* ranges)AddRanges2074,95433
void ImFontAtlas::GlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)BuildRanges2081,95625
ImFont::ImFont()ImFont2098,96157
ImFont::~ImFont()~ImFont2106,96293
void    ImFont::ClearOutputData()ClearOutputData2119,96635
void ImFont::BuildLookupTable()BuildLookupTable2134,96955
void ImFont::SetFallbackChar(ImWchar c)SetFallbackChar2173,98461
void ImFont::GrowIndex(int new_size)GrowIndex2179,98552
void ImFont::AddGlyph(ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, floatAddGlyph2188,98800
void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)AddRemapChar2210,99670
const ImFontGlyph* ImFont::FindGlyph(ImWchar c) constFindGlyph2225,100383
const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, fCalcWordWrapPositionA2236,100632
ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begCalcTextSizeA2335,103771
void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, unsigned shortRenderChar2429,106716
void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& RenderText2443,107460
static inline float ImAcos01(float x)ImAcos012619,115151
void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float xRenderRectFilledRangeH2628,115483
static unsigned int stb_decompress_length(unsigned char *input)stb_decompress_length2695,118516
static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;stb__barrier2700,118664
static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;stb__barrier22700,118664
static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;stb__barrier32700,118664
static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;stb__barrier42700,118664
static unsigned char *stb__dout;stb__dout2701,118748
static void stb__match(unsigned char *data, unsigned int length)stb__match2702,118781
static void stb__lit(unsigned char *data, unsigned int length)stb__lit2711,119166
#define stb__in2(stb__in22720,119494
#define stb__in3(stb__in32721,119541
#define stb__in4(stb__in42722,119596
static unsigned char *stb_decompress_token(unsigned char *i)stb_decompress_token2724,119652
static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflenstb_adler322741,120737
static unsigned int stb_decompress(unsigned char *output, unsigned char *i, unsigned int length)stb_decompress2772,121653
static const char proggy_clean_ttf_compressed_data_base85[11980+1] =proggy_clean_ttf_compressed_data_base852815,123266
static const char* GetDefaultCompressedFontDataTTFBase85()GetDefaultCompressedFontDataTTFBase852903,135920

skeleton/imgui/stb_rect_pack.h,3390
#define STB_INCLUDE_STB_RECT_PACK_HSTB_INCLUDE_STB_RECT_PACK_H56,1773
#define STB_RECT_PACK_VERSION STB_RECT_PACK_VERSION58,1810
#define STBRP_DEF STBRP_DEF61,1864
#define STBRP_DEF STBRP_DEF63,1895
typedef struct stbrp_context stbrp_context;stbrp_context70,1968
typedef struct stbrp_node    stbrp_node;stbrp_node71,2012
typedef struct stbrp_rect    stbrp_rect;stbrp_rect72,2053
typedef int            stbrp_coord;stbrp_coord75,2120
typedef unsigned short stbrp_coord;stbrp_coord77,2162
struct stbrp_rectstbrp_rect102,3334
   int            id;id105,3383
   stbrp_coord    w, h;w108,3419
   stbrp_coord    w, h;h108,3419
   stbrp_coord    x, y;x111,3458
   stbrp_coord    x, y;y111,3458
   int            was_packed;  // non-zero if valid packingwas_packed112,3482
{__anonce4a36ad0103150,5268
   STBRP_HEURISTIC_Skyline_default=0,STBRP_HEURISTIC_Skyline_default151,5270
   STBRP_HEURISTIC_Skyline_BL_sortHeight = STBRP_HEURISTIC_Skyline_default,STBRP_HEURISTIC_Skyline_BL_sortHeight152,5308
   STBRP_HEURISTIC_Skyline_BF_sortHeightSTBRP_HEURISTIC_Skyline_BF_sortHeight153,5384
struct stbrp_nodestbrp_node162,5655
   stbrp_coord  x,y;x164,5675
   stbrp_coord  x,y;y164,5675
   stbrp_node  *next;next165,5696
struct stbrp_contextstbrp_context168,5722
   int width;width170,5745
   int height;height171,5759
   int align;align172,5774
   int init_mode;init_mode173,5788
   int heuristic;heuristic174,5806
   int num_nodes;num_nodes175,5824
   stbrp_node *active_head;active_head176,5842
   stbrp_node *free_head;free_head177,5870
   stbrp_node extra[2]; // we allocate two extra nodes so optimal user-node-count is 'width' notextra178,5896
#define STBRP_SORT STBRP_SORT195,6235
#define STBRP_ASSERT STBRP_ASSERT200,6309
#define STBRP__NOTUSED(STBRP__NOTUSED204,6361
#define STBRP__NOTUSED(STBRP__NOTUSED206,6404
{__anonce4a36ad0203210,6460
   STBRP__INIT_skyline = 1STBRP__INIT_skyline211,6462
STBRP_DEF void stbrp_setup_heuristic(stbrp_context *context, int heuristic)stbrp_setup_heuristic214,6493
STBRP_DEF void stbrp_setup_allow_out_of_mem(stbrp_context *context, int allow_out_of_mem)stbrp_setup_allow_out_of_mem226,6871
STBRP_DEF void stbrp_init_target(stbrp_context *context, int width, int height, stbrp_node *nodestbrp_init_target246,7705
static int stbrp__skyline_find_min_y(stbrp_context *c, stbrp_node *first, int x0, int width, intstbrp__skyline_find_min_y279,8763
{__anonce4a36ad0308330,10212
   int x,y;x331,10214
   int x,y;y331,10214
   stbrp_node **prev_link;prev_link332,10226
} stbrp__findresult;stbrp__findresult333,10253
static stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context *c, int width, int height)stbrp__skyline_find_best_pos335,10275
static stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context *context, int width, int hestbrp__skyline_pack_rectangle430,13112
static int rect_height_compare(const void *a, const void *b)rect_height_compare512,15278
static int rect_width_compare(const void *a, const void *b)rect_width_compare523,15562
static int rect_original_order(const void *a, const void *b)rect_original_order534,15845
#define STBRP__MAXVAL STBRP__MAXVAL542,16116
#define STBRP__MAXVAL STBRP__MAXVAL544,16156
STBRP_DEF void stbrp_pack_rects(stbrp_context *context, stbrp_rect *rects, int num_rects)stbrp_pack_rects547,16194

skeleton/imgui/imgui_impl_rw.h,0

skeleton/imgui/imgui.h,66768
#define IMGUI_VERSION IMGUI_VERSION19,685
#define IMGUI_APIIMGUI_API23,825
#define IM_ASSERT(IM_ASSERT29,918
#define IM_FMTARGS(IM_FMTARGS35,1099
#define IM_FMTLIST(IM_FMTLIST36,1179
#define IM_FMTARGS(IM_FMTARGS38,1261
#define IM_FMTLIST(IM_FMTLIST39,1285
#define IM_ARRAYSIZE(IM_ARRAYSIZE41,1316
typedef unsigned int ImU32;         // 32-bit unsigned integer (typically used to store packed cImU3272,3917
typedef unsigned int ImGuiID;       // unique ID used by widgets (typically hashed from a stack ImGuiID73,4020
typedef unsigned short ImWchar;     // character for keyboard input/displayImWchar74,4127
typedef void* ImTextureID;          // user data to identify a texture (this is whatever to you ImTextureID75,4203
typedef int ImGuiCol;               // enum: a color identifier for styling     // enum ImGuiColImGuiCol76,4359
typedef int ImGuiCond;              // enum: a condition for Set*()             // enum ImGuiConImGuiCond77,4457
typedef int ImGuiKey;               // enum: a key identifier (ImGui-side enum) // enum ImGuiKeyImGuiKey78,4556
typedef int ImGuiMouseCursor;       // enum: a mouse cursor identifier          // enum ImGuiMouImGuiMouseCursor79,4654
typedef int ImGuiStyleVar;          // enum: a variable identifier for styling  // enum ImGuiStyImGuiStyleVar80,4760
typedef int ImDrawCornerFlags;      // flags: for ImDrawList::AddRect*() etc.   // enum ImDrawCoImDrawCornerFlags81,4863
typedef int ImDrawListFlags;        // flags: for ImDrawList                    // enum ImDrawLiImDrawListFlags82,4970
typedef int ImGuiColorEditFlags;    // flags: for ColorEdit*(), ColorPicker*()  // enum ImGuiColImGuiColorEditFlags83,5075
typedef int ImGuiColumnsFlags;      // flags: for *Columns*()                   // enum ImGuiColImGuiColumnsFlags84,5184
typedef int ImGuiDragDropFlags;     // flags: for *DragDrop*()                  // enum ImGuiDraImGuiDragDropFlags85,5291
typedef int ImGuiComboFlags;        // flags: for BeginCombo()                  // enum ImGuiComImGuiComboFlags86,5399
typedef int ImGuiFocusedFlags;      // flags: for IsWindowFocused()             // enum ImGuiFocImGuiFocusedFlags87,5504
typedef int ImGuiHoveredFlags;      // flags: for IsItemHovered() etc.          // enum ImGuiHovImGuiHoveredFlags88,5611
typedef int ImGuiInputTextFlags;    // flags: for InputText*()                  // enum ImGuiInpImGuiInputTextFlags89,5718
typedef int ImGuiSelectableFlags;   // flags: for Selectable()                  // enum ImGuiSelImGuiSelectableFlags90,5827
typedef int ImGuiTreeNodeFlags;     // flags: for TreeNode*(),CollapsingHeader()// enum ImGuiTreImGuiTreeNodeFlags91,5937
typedef int ImGuiWindowFlags;       // flags: for Begin*()                      // enum ImGuiWinImGuiWindowFlags92,6045
typedef int (*ImGuiTextEditCallback)(ImGuiTextEditCallbackData *data);ImGuiTextEditCallback93,6151
typedef void (*ImGuiSizeConstraintCallback)(ImGuiSizeConstraintCallbackData* data);ImGuiSizeConstraintCallback94,6222
typedef unsigned __int64 ImU64;     // 64-bit unsigned integerImU6496,6351
typedef unsigned long long ImU64;   // 64-bit unsigned integerImU6498,6420
struct ImVec2ImVec2105,6770
    float x, y;x107,6786
    float x, y;y107,6786
    ImVec2() { x = y = 0.0f; }ImVec2108,6802
    ImVec2(float _x, float _y) { x = _x; y = _y; }ImVec2109,6833
struct ImVec4ImVec4115,7075
    float x, y, z, w;x117,7091
    float x, y, z, w;y117,7091
    float x, y, z, w;z117,7091
    float x, y, z, w;w117,7091
    ImVec4() { x = y = z = w = 0.0f; }ImVec4118,7113
    ImVec4(float _x, float _y, float _z, float _w) { x = _x; y = _y; z = _z; w = _w; }ImVec4119,7152
namespace ImGuiImGui127,7581
enum ImGuiWindowFlags_ImGuiWindowFlags_525,61205
    ImGuiWindowFlags_NoTitleBar             = 1 << 0,   // Disable title-barImGuiWindowFlags_NoTitleBar527,61230
    ImGuiWindowFlags_NoResize               = 1 << 1,   // Disable user resizing with the lower-ImGuiWindowFlags_NoResize528,61307
    ImGuiWindowFlags_NoMove                 = 1 << 2,   // Disable user moving the windowImGuiWindowFlags_NoMove529,61414
    ImGuiWindowFlags_NoScrollbar            = 1 << 3,   // Disable scrollbars (window can still ImGuiWindowFlags_NoScrollbar530,61504
    ImGuiWindowFlags_NoScrollWithMouse      = 1 << 4,   // Disable user vertically scrolling witImGuiWindowFlags_NoScrollWithMouse531,61638
    ImGuiWindowFlags_NoCollapse             = 1 << 5,   // Disable user collapsing window by douImGuiWindowFlags_NoCollapse532,61842
    ImGuiWindowFlags_AlwaysAutoResize       = 1 << 6,   // Resize every window to its content evImGuiWindowFlags_AlwaysAutoResize533,61957
    ImGuiWindowFlags_NoSavedSettings        = 1 << 8,   // Never load/save settings in .ini fileImGuiWindowFlags_NoSavedSettings535,62227
    ImGuiWindowFlags_NoInputs               = 1 << 9,   // Disable catching mouse or keyboard inImGuiWindowFlags_NoInputs536,62324
    ImGuiWindowFlags_MenuBar                = 1 << 10,  // Has a menu-barImGuiWindowFlags_MenuBar537,62459
    ImGuiWindowFlags_HorizontalScrollbar    = 1 << 11,  // Allow horizontal scrollbar to appear ImGuiWindowFlags_HorizontalScrollbar538,62533
    ImGuiWindowFlags_NoFocusOnAppearing     = 1 << 12,  // Disable taking focus when transitioniImGuiWindowFlags_NoFocusOnAppearing539,62811
    ImGuiWindowFlags_NoBringToFrontOnFocus  = 1 << 13,  // Disable bringing window to front whenImGuiWindowFlags_NoBringToFrontOnFocus540,62939
    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,  // Always show vertical scrollbar (even ImGuiWindowFlags_AlwaysVerticalScrollbar541,63106
    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,  // Always show horizontal scrollbar (eveImGuiWindowFlags_AlwaysHorizontalScrollbar542,63229
    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,  // Ensure child windows without border uImGuiWindowFlags_AlwaysUseWindowPadding543,63354
    ImGuiWindowFlags_ResizeFromAnySide      = 1 << 17,  // (WIP) Enable resize from any corners ImGuiWindowFlags_ResizeFromAnySide544,63551
    ImGuiWindowFlags_ChildWindow            = 1 << 24,  // Don't use! For internal use by BeginCImGuiWindowFlags_ChildWindow547,63761
    ImGuiWindowFlags_Tooltip                = 1 << 25,  // Don't use! For internal use by BeginTImGuiWindowFlags_Tooltip548,63864
    ImGuiWindowFlags_Popup                  = 1 << 26,  // Don't use! For internal use by BeginPImGuiWindowFlags_Popup549,63969
    ImGuiWindowFlags_Modal                  = 1 << 27,  // Don't use! For internal use by BeginPImGuiWindowFlags_Modal550,64072
    ImGuiWindowFlags_ChildMenu              = 1 << 28   // Don't use! For internal use by BeginMImGuiWindowFlags_ChildMenu551,64180
enum ImGuiInputTextFlags_ImGuiInputTextFlags_555,64318
    ImGuiInputTextFlags_CharsDecimal        = 1 << 0,   // Allow 0123456789.+-*/ImGuiInputTextFlags_CharsDecimal557,64346
    ImGuiInputTextFlags_CharsHexadecimal    = 1 << 1,   // Allow 0123456789ABCDEFabcdefImGuiInputTextFlags_CharsHexadecimal558,64427
    ImGuiInputTextFlags_CharsUppercase      = 1 << 2,   // Turn a..z into A..ZImGuiInputTextFlags_CharsUppercase559,64515
    ImGuiInputTextFlags_CharsNoBlank        = 1 << 3,   // Filter out spaces, tabsImGuiInputTextFlags_CharsNoBlank560,64594
    ImGuiInputTextFlags_AutoSelectAll       = 1 << 4,   // Select entire text when first taking ImGuiInputTextFlags_AutoSelectAll561,64677
    ImGuiInputTextFlags_EnterReturnsTrue    = 1 << 5,   // Return 'true' when Enter is pressed (ImGuiInputTextFlags_EnterReturnsTrue562,64785
    ImGuiInputTextFlags_CallbackCompletion  = 1 << 6,   // Call user function on pressing TAB (fImGuiInputTextFlags_CallbackCompletion563,64924
    ImGuiInputTextFlags_CallbackHistory     = 1 << 7,   // Call user function on pressing Up/DowImGuiInputTextFlags_CallbackHistory564,65044
    ImGuiInputTextFlags_CallbackAlways      = 1 << 8,   // Call user function every time. User cImGuiInputTextFlags_CallbackAlways565,65172
    ImGuiInputTextFlags_CallbackCharFilter  = 1 << 9,   // Call user function to filter characteImGuiInputTextFlags_CallbackCharFilter566,65319
    ImGuiInputTextFlags_AllowTabInput       = 1 << 10,  // Pressing TAB input a '\t' character iImGuiInputTextFlags_AllowTabInput567,65500
    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,  // In multi-line mode, unfocus with EnteImGuiInputTextFlags_CtrlEnterForNewLine568,65615
    ImGuiInputTextFlags_NoHorizontalScroll  = 1 << 12,  // Disable following the cursor horizontImGuiInputTextFlags_NoHorizontalScroll569,65812
    ImGuiInputTextFlags_AlwaysInsertMode    = 1 << 13,  // Insert modeImGuiInputTextFlags_AlwaysInsertMode570,65913
    ImGuiInputTextFlags_ReadOnly            = 1 << 14,  // Read-only modeImGuiInputTextFlags_ReadOnly571,65984
    ImGuiInputTextFlags_Password            = 1 << 15,  // Password mode, display all charactersImGuiInputTextFlags_Password572,66058
    ImGuiInputTextFlags_NoUndoRedo          = 1 << 16,  // Disable undo/redo. Note that input teImGuiInputTextFlags_NoUndoRedo573,66162
    ImGuiInputTextFlags_Multiline           = 1 << 20   // For internal use by InputTextMultilinImGuiInputTextFlags_Multiline575,66399
enum ImGuiTreeNodeFlags_ImGuiTreeNodeFlags_579,66564
    ImGuiTreeNodeFlags_Selected             = 1 << 0,   // Draw as selectedImGuiTreeNodeFlags_Selected581,66591
    ImGuiTreeNodeFlags_Framed               = 1 << 1,   // Full colored frame (e.g. for CollapsiImGuiTreeNodeFlags_Framed582,66667
    ImGuiTreeNodeFlags_AllowItemOverlap     = 1 << 2,   // Hit testing to allow subsequent widgeImGuiTreeNodeFlags_AllowItemOverlap583,66773
    ImGuiTreeNodeFlags_NoTreePushOnOpen     = 1 << 3,   // Don't do a TreePush() when open (e.g.ImGuiTreeNodeFlags_NoTreePushOnOpen584,66892
    ImGuiTreeNodeFlags_NoAutoOpenOnLog      = 1 << 4,   // Don't automatically and temporarily oImGuiTreeNodeFlags_NoAutoOpenOnLog585,67053
    ImGuiTreeNodeFlags_DefaultOpen          = 1 << 5,   // Default node to be openImGuiTreeNodeFlags_DefaultOpen586,67237
    ImGuiTreeNodeFlags_OpenOnDoubleClick    = 1 << 6,   // Need double-click to open nodeImGuiTreeNodeFlags_OpenOnDoubleClick587,67320
    ImGuiTreeNodeFlags_OpenOnArrow          = 1 << 7,   // Only open when clicking on the arrow ImGuiTreeNodeFlags_OpenOnArrow588,67410
    ImGuiTreeNodeFlags_Leaf                 = 1 << 8,   // No collapsing, no arrow (use as a conImGuiTreeNodeFlags_Leaf589,67617
    ImGuiTreeNodeFlags_Bullet               = 1 << 9,   // Display a bullet instead of arrowImGuiTreeNodeFlags_Bullet590,67740
    ImGuiTreeNodeFlags_FramePadding         = 1 << 10,  // Use FramePadding (even for an unframeImGuiTreeNodeFlags_FramePadding591,67833
    ImGuiTreeNodeFlags_CollapsingHeader     = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoAImGuiTreeNodeFlags_CollapsingHeader594,68330
    , ImGuiTreeNodeFlags_AllowOverlapMode = ImGuiTreeNodeFlags_AllowItemOverlapImGuiTreeNodeFlags_AllowOverlapMode598,68521
enum ImGuiSelectableFlags_ImGuiSelectableFlags_603,68645
    ImGuiSelectableFlags_DontClosePopups    = 1 << 0,   // Clicking this don't close parent popuImGuiSelectableFlags_DontClosePopups605,68674
    ImGuiSelectableFlags_SpanAllColumns     = 1 << 1,   // Selectable frame can span all columnsImGuiSelectableFlags_SpanAllColumns606,68779
    ImGuiSelectableFlags_AllowDoubleClick   = 1 << 2    // Generate press events on double clickImGuiSelectableFlags_AllowDoubleClick607,68916
enum ImGuiComboFlags_ImGuiComboFlags_611,69055
    ImGuiComboFlags_PopupAlignLeft          = 1 << 0,   // Align the popup toward the left by deImGuiComboFlags_PopupAlignLeft613,69079
    ImGuiComboFlags_HeightSmall             = 1 << 1,   // Max ~4 items visible. Tip: If you wanImGuiComboFlags_HeightSmall614,69181
    ImGuiComboFlags_HeightRegular           = 1 << 2,   // Max ~8 items visible (default)ImGuiComboFlags_HeightRegular615,69391
    ImGuiComboFlags_HeightLarge             = 1 << 3,   // Max ~20 items visibleImGuiComboFlags_HeightLarge616,69481
    ImGuiComboFlags_HeightLargest           = 1 << 4,   // As many fitting items as possibleImGuiComboFlags_HeightLargest617,69562
    ImGuiComboFlags_HeightMask_             = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeigImGuiComboFlags_HeightMask_618,69655
enum ImGuiFocusedFlags_ImGuiFocusedFlags_622,69865
    ImGuiFocusedFlags_ChildWindows                  = 1 << 0,   // IsWindowFocused(): Return truImGuiFocusedFlags_ChildWindows624,69891
    ImGuiFocusedFlags_RootWindow                    = 1 << 1,   // IsWindowFocused(): Test from ImGuiFocusedFlags_RootWindow625,70030
    ImGuiFocusedFlags_RootAndChildWindows           = ImGuiFocusedFlags_RootWindow | ImGuiFocuseImGuiFocusedFlags_RootAndChildWindows626,70181
enum ImGuiHoveredFlags_ImGuiHoveredFlags_630,70363
    ImGuiHoveredFlags_Default                       = 0,        // Return true if directly over ImGuiHoveredFlags_Default632,70389
    ImGuiHoveredFlags_ChildWindows                  = 1 << 0,   // IsWindowHovered() only: ReturImGuiHoveredFlags_ChildWindows633,70607
    ImGuiHoveredFlags_RootWindow                    = 1 << 1,   // IsWindowHovered() only: Test ImGuiHoveredFlags_RootWindow634,70751
    ImGuiHoveredFlags_AllowWhenBlockedByPopup       = 1 << 2,   // Return true even if a popup wImGuiHoveredFlags_AllowWhenBlockedByPopup635,70907
    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem  = 1 << 4,   // Return true even if an activeImGuiHoveredFlags_AllowWhenBlockedByActiveItem637,71243
    ImGuiHoveredFlags_AllowWhenOverlapped           = 1 << 5,   // Return true even if the positImGuiHoveredFlags_AllowWhenOverlapped638,71420
    ImGuiHoveredFlags_RectOnly                      = ImGuiHoveredFlags_AllowWhenBlockedByPopup ImGuiHoveredFlags_RectOnly639,71552
    ImGuiHoveredFlags_RootAndChildWindows           = ImGuiHoveredFlags_RootWindow | ImGuiHovereImGuiHoveredFlags_RootAndChildWindows640,71738
enum ImGuiDragDropFlags_ImGuiDragDropFlags_644,71932
    ImGuiDragDropFlags_SourceNoPreviewTooltip       = 1 << 0,       // By default, a successful ImGuiDragDropFlags_SourceNoPreviewTooltip647,71994
    ImGuiDragDropFlags_SourceNoDisableHover         = 1 << 1,       // By default, when draggingImGuiDragDropFlags_SourceNoDisableHover648,72235
    ImGuiDragDropFlags_SourceNoHoldToOpenOthers     = 1 << 2,       // Disable the behavior thatImGuiDragDropFlags_SourceNoHoldToOpenOthers649,72529
    ImGuiDragDropFlags_SourceAllowNullID            = 1 << 3,       // Allow items such as Text(ImGuiDragDropFlags_SourceAllowNullID650,72725
    ImGuiDragDropFlags_SourceExtern                 = 1 << 4,       // External source (from outImGuiDragDropFlags_SourceExtern651,73057
    ImGuiDragDropFlags_AcceptBeforeDelivery         = 1 << 10,      // AcceptDragDropPayload() wImGuiDragDropFlags_AcceptBeforeDelivery653,73332
    ImGuiDragDropFlags_AcceptNoDrawDefaultRect      = 1 << 11,      // Do not draw the default hImGuiDragDropFlags_AcceptNoDrawDefaultRect654,73564
    ImGuiDragDropFlags_AcceptPeekOnly               = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptPeekOnly655,73706
#define IMGUI_PAYLOAD_TYPE_COLOR_3F IMGUI_PAYLOAD_TYPE_COLOR_3F659,74077
#define IMGUI_PAYLOAD_TYPE_COLOR_4F IMGUI_PAYLOAD_TYPE_COLOR_4F660,74219
enum ImGuiKey_ImGuiKey_663,74432
    ImGuiKey_Tab,       // for tabbing through fieldsImGuiKey_Tab665,74449
    ImGuiKey_LeftArrow, // for text editImGuiKey_LeftArrow666,74503
    ImGuiKey_RightArrow,// for text editImGuiKey_RightArrow667,74544
    ImGuiKey_UpArrow,   // for text editImGuiKey_UpArrow668,74585
    ImGuiKey_DownArrow, // for text editImGuiKey_DownArrow669,74626
    ImGuiKey_PageUp,ImGuiKey_PageUp670,74667
    ImGuiKey_PageDown,ImGuiKey_PageDown671,74688
    ImGuiKey_Home,      // for text editImGuiKey_Home672,74711
    ImGuiKey_End,       // for text editImGuiKey_End673,74752
    ImGuiKey_Delete,    // for text editImGuiKey_Delete674,74793
    ImGuiKey_Backspace, // for text editImGuiKey_Backspace675,74834
    ImGuiKey_Enter,     // for text editImGuiKey_Enter676,74875
    ImGuiKey_Escape,    // for text editImGuiKey_Escape677,74916
    ImGuiKey_A,         // for text edit CTRL+A: select allImGuiKey_A678,74957
    ImGuiKey_C,         // for text edit CTRL+C: copyImGuiKey_C679,75017
    ImGuiKey_V,         // for text edit CTRL+V: pasteImGuiKey_V680,75071
    ImGuiKey_X,         // for text edit CTRL+X: cutImGuiKey_X681,75126
    ImGuiKey_Y,         // for text edit CTRL+Y: redoImGuiKey_Y682,75179
    ImGuiKey_Z,         // for text edit CTRL+Z: undoImGuiKey_Z683,75233
    ImGuiKey_COUNTImGuiKey_COUNT684,75287
enum ImGuiCol_ImGuiCol_688,75364
    ImGuiCol_Text,ImGuiCol_Text690,75381
    ImGuiCol_TextDisabled,ImGuiCol_TextDisabled691,75400
    ImGuiCol_WindowBg,              // Background of normal windowsImGuiCol_WindowBg692,75427
    ImGuiCol_ChildBg,               // Background of child windowsImGuiCol_ChildBg693,75495
    ImGuiCol_PopupBg,               // Background of popups, menus, tooltips windowsImGuiCol_PopupBg694,75562
    ImGuiCol_Border,ImGuiCol_Border695,75647
    ImGuiCol_BorderShadow,ImGuiCol_BorderShadow696,75668
    ImGuiCol_FrameBg,               // Background of checkbox, radio button, plot, slider, text ImGuiCol_FrameBg697,75695
    ImGuiCol_FrameBgHovered,ImGuiCol_FrameBgHovered698,75797
    ImGuiCol_FrameBgActive,ImGuiCol_FrameBgActive699,75826
    ImGuiCol_TitleBg,ImGuiCol_TitleBg700,75854
    ImGuiCol_TitleBgActive,ImGuiCol_TitleBgActive701,75876
    ImGuiCol_TitleBgCollapsed,ImGuiCol_TitleBgCollapsed702,75904
    ImGuiCol_MenuBarBg,ImGuiCol_MenuBarBg703,75935
    ImGuiCol_ScrollbarBg,ImGuiCol_ScrollbarBg704,75959
    ImGuiCol_ScrollbarGrab,ImGuiCol_ScrollbarGrab705,75985
    ImGuiCol_ScrollbarGrabHovered,ImGuiCol_ScrollbarGrabHovered706,76013
    ImGuiCol_ScrollbarGrabActive,ImGuiCol_ScrollbarGrabActive707,76048
    ImGuiCol_CheckMark,ImGuiCol_CheckMark708,76082
    ImGuiCol_SliderGrab,ImGuiCol_SliderGrab709,76106
    ImGuiCol_SliderGrabActive,ImGuiCol_SliderGrabActive710,76131
    ImGuiCol_Button,ImGuiCol_Button711,76162
    ImGuiCol_ButtonHovered,ImGuiCol_ButtonHovered712,76183
    ImGuiCol_ButtonActive,ImGuiCol_ButtonActive713,76211
    ImGuiCol_Header,ImGuiCol_Header714,76238
    ImGuiCol_HeaderHovered,ImGuiCol_HeaderHovered715,76259
    ImGuiCol_HeaderActive,ImGuiCol_HeaderActive716,76287
    ImGuiCol_Separator,ImGuiCol_Separator717,76314
    ImGuiCol_SeparatorHovered,ImGuiCol_SeparatorHovered718,76338
    ImGuiCol_SeparatorActive,ImGuiCol_SeparatorActive719,76369
    ImGuiCol_ResizeGrip,ImGuiCol_ResizeGrip720,76399
    ImGuiCol_ResizeGripHovered,ImGuiCol_ResizeGripHovered721,76424
    ImGuiCol_ResizeGripActive,ImGuiCol_ResizeGripActive722,76456
    ImGuiCol_CloseButton,ImGuiCol_CloseButton723,76487
    ImGuiCol_CloseButtonHovered,ImGuiCol_CloseButtonHovered724,76513
    ImGuiCol_CloseButtonActive,ImGuiCol_CloseButtonActive725,76546
    ImGuiCol_PlotLines,ImGuiCol_PlotLines726,76578
    ImGuiCol_PlotLinesHovered,ImGuiCol_PlotLinesHovered727,76602
    ImGuiCol_PlotHistogram,ImGuiCol_PlotHistogram728,76633
    ImGuiCol_PlotHistogramHovered,ImGuiCol_PlotHistogramHovered729,76661
    ImGuiCol_TextSelectedBg,ImGuiCol_TextSelectedBg730,76696
    ImGuiCol_ModalWindowDarkening,  // darken entire screen when a modal window is activeImGuiCol_ModalWindowDarkening731,76725
    ImGuiCol_DragDropTarget,ImGuiCol_DragDropTarget732,76815
    ImGuiCol_COUNTImGuiCol_COUNT733,76844
    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_ImGuiCol_ChildWindowBg738,77064
    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_ImGuiCol_Column738,77064
    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_ImGuiCol_ColumnHovered738,77064
    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_ImGuiCol_ColumnActive738,77064
enum ImGuiStyleVar_ImGuiStyleVar_745,77705
    ImGuiStyleVar_Alpha,               // float     AlphaImGuiStyleVar_Alpha748,77834
    ImGuiStyleVar_WindowPadding,       // ImVec2    WindowPaddingImGuiStyleVar_WindowPadding749,77892
    ImGuiStyleVar_WindowRounding,      // float     WindowRoundingImGuiStyleVar_WindowRounding750,77958
    ImGuiStyleVar_WindowBorderSize,    // float     WindowBorderSizeImGuiStyleVar_WindowBorderSize751,78025
    ImGuiStyleVar_WindowMinSize,       // ImVec2    WindowMinSizeImGuiStyleVar_WindowMinSize752,78094
    ImGuiStyleVar_ChildRounding,       // float     ChildRoundingImGuiStyleVar_ChildRounding753,78160
    ImGuiStyleVar_ChildBorderSize,     // float     ChildBorderSizeImGuiStyleVar_ChildBorderSize754,78226
    ImGuiStyleVar_PopupRounding,       // float     PopupRoundingImGuiStyleVar_PopupRounding755,78294
    ImGuiStyleVar_PopupBorderSize,     // float     PopupBorderSizeImGuiStyleVar_PopupBorderSize756,78360
    ImGuiStyleVar_FramePadding,        // ImVec2    FramePaddingImGuiStyleVar_FramePadding757,78428
    ImGuiStyleVar_FrameRounding,       // float     FrameRoundingImGuiStyleVar_FrameRounding758,78493
    ImGuiStyleVar_FrameBorderSize,     // float     FrameBorderSizeImGuiStyleVar_FrameBorderSize759,78559
    ImGuiStyleVar_ItemSpacing,         // ImVec2    ItemSpacingImGuiStyleVar_ItemSpacing760,78627
    ImGuiStyleVar_ItemInnerSpacing,    // ImVec2    ItemInnerSpacingImGuiStyleVar_ItemInnerSpacing761,78691
    ImGuiStyleVar_IndentSpacing,       // float     IndentSpacingImGuiStyleVar_IndentSpacing762,78760
    ImGuiStyleVar_GrabMinSize,         // float     GrabMinSizeImGuiStyleVar_GrabMinSize763,78826
    ImGuiStyleVar_ButtonTextAlign,     // ImVec2    ButtonTextAlignImGuiStyleVar_ButtonTextAlign764,78890
    ImGuiStyleVar_Count_ImGuiStyleVar_Count_765,78958
    , ImGuiStyleVar_ChildWindowRounding = ImGuiStyleVar_ChildRoundingImGuiStyleVar_ChildWindowRounding769,79065
enum ImGuiColorEditFlags_ImGuiColorEditFlags_774,79243
    ImGuiColorEditFlags_NoAlpha         = 1 << 1,   //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_NoAlpha776,79271
    ImGuiColorEditFlags_NoPicker        = 1 << 2,   //              // ColorEdit: disable pickerImGuiColorEditFlags_NoPicker777,79446
    ImGuiColorEditFlags_NoOptions       = 1 << 3,   //              // ColorEdit: disable toggliImGuiColorEditFlags_NoOptions778,79576
    ImGuiColorEditFlags_NoSmallPreview  = 1 << 4,   //              // ColorEdit, ColorPicker: dImGuiColorEditFlags_NoSmallPreview779,79733
    ImGuiColorEditFlags_NoInputs        = 1 << 5,   //              // ColorEdit, ColorPicker: dImGuiColorEditFlags_NoInputs780,79910
    ImGuiColorEditFlags_NoTooltip       = 1 << 6,   //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_NoTooltip781,80095
    ImGuiColorEditFlags_NoLabel         = 1 << 7,   //              // ColorEdit, ColorPicker: dImGuiColorEditFlags_NoLabel782,80246
    ImGuiColorEditFlags_NoSidePreview   = 1 << 8,   //              // ColorPicker: disable biggImGuiColorEditFlags_NoSidePreview783,80436
    ImGuiColorEditFlags_AlphaBar        = 1 << 9,   //              // ColorEdit, ColorPicker: sImGuiColorEditFlags_AlphaBar785,80901
    ImGuiColorEditFlags_AlphaPreview    = 1 << 10,  //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_AlphaPreview786,81040
    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 11,  //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_AlphaPreviewHalf787,81227
    ImGuiColorEditFlags_HDR             = 1 << 12,  //              // (WIP) ColorEdit: CurrentlImGuiColorEditFlags_HDR788,81395
    ImGuiColorEditFlags_RGB             = 1 << 13,  // [Inputs]     // ColorEdit: choose one amoImGuiColorEditFlags_RGB789,81613
    ImGuiColorEditFlags_HSV             = 1 << 14,  // [Inputs]     // "ImGuiColorEditFlags_HSV790,81780
    ImGuiColorEditFlags_HEX             = 1 << 15,  // [Inputs]     // "ImGuiColorEditFlags_HEX791,81853
    ImGuiColorEditFlags_Uint8           = 1 << 16,  // [DataType]   // ColorEdit, ColorPicker, CImGuiColorEditFlags_Uint8792,81926
    ImGuiColorEditFlags_Float           = 1 << 17,  // [DataType]   // ColorEdit, ColorPicker, CImGuiColorEditFlags_Float793,82073
    ImGuiColorEditFlags_PickerHueBar    = 1 << 18,  // [PickerMode] // ColorPicker: bar for Hue,ImGuiColorEditFlags_PickerHueBar794,82294
    ImGuiColorEditFlags_PickerHueWheel  = 1 << 19,  // [PickerMode] // ColorPicker: wheel for HuImGuiColorEditFlags_PickerHueWheel795,82416
    ImGuiColorEditFlags__InputsMask     = ImGuiColorEditFlags_RGB|ImGuiColorEditFlags_HSV|ImGuiCImGuiColorEditFlags__InputsMask797,82562
    ImGuiColorEditFlags__DataTypeMask   = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_Float,ImGuiColorEditFlags__DataTypeMask798,82677
    ImGuiColorEditFlags__PickerMask     = ImGuiColorEditFlags_PickerHueWheel|ImGuiColorEditFlagsImGuiColorEditFlags__PickerMask799,82772
    ImGuiColorEditFlags__OptionsDefault = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_RGB|ImGuImGuiColorEditFlags__OptionsDefault800,82883
enum ImGuiMouseCursor_ImGuiMouseCursor_804,83109
    ImGuiMouseCursor_None = -1,ImGuiMouseCursor_None806,83134
    ImGuiMouseCursor_Arrow = 0,ImGuiMouseCursor_Arrow807,83166
    ImGuiMouseCursor_TextInput,         // When hovering over InputText, etc.ImGuiMouseCursor_TextInput808,83198
    ImGuiMouseCursor_Move,              // UnusedImGuiMouseCursor_Move809,83276
    ImGuiMouseCursor_ResizeNS,          // When hovering over an horizontal borderImGuiMouseCursor_ResizeNS810,83326
    ImGuiMouseCursor_ResizeEW,          // When hovering over a vertical border or a columnImGuiMouseCursor_ResizeEW811,83409
    ImGuiMouseCursor_ResizeNESW,        // When hovering over the bottom-left corner of a windowImGuiMouseCursor_ResizeNESW812,83501
    ImGuiMouseCursor_ResizeNWSE,        // When hovering over the bottom-right corner of a windoImGuiMouseCursor_ResizeNWSE813,83598
    ImGuiMouseCursor_Count_ImGuiMouseCursor_Count_814,83696
enum ImGuiCond_ImGuiCond_819,83984
    ImGuiCond_Always        = 1 << 0,   // Set the variableImGuiCond_Always821,84002
    ImGuiCond_Once          = 1 << 1,   // Set the variable once per runtime session (only the fImGuiCond_Once822,84062
    ImGuiCond_FirstUseEver  = 1 << 2,   // Set the variable if the window has no saved data (if ImGuiCond_FirstUseEver823,84182
    ImGuiCond_Appearing     = 1 << 3    // Set the variable if the window is appearing after beiImGuiCond_Appearing824,84310
    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_FImGuiSetCond_Always828,84527
    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_FImGuiSetCond_Once828,84527
    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_FImGuiSetCond_FirstUseEver828,84527
    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_FImGuiSetCond_Appearing828,84527
struct ImGuiStyleImGuiStyle832,84717
    float       Alpha;                      // Global alpha applies to everything in ImGuiAlpha834,84737
    ImVec2      WindowPadding;              // Padding within a windowWindowPadding835,84828
    float       WindowRounding;             // Radius of window corners rounding. Set to 0.0f toWindowRounding836,84899
    float       WindowBorderSize;           // Thickness of border around windows. Generally setWindowBorderSize837,85021
    ImVec2      WindowMinSize;              // Minimum window sizeWindowMinSize838,85194
    ImVec2      WindowTitleAlign;           // Alignment for title bar text. Defaults to (0.0f,0WindowTitleAlign839,85261
    float       ChildRounding;              // Radius of child window corners rounding. Set to 0ChildRounding840,85400
    float       ChildBorderSize;            // Thickness of border around child windows. GeneralChildBorderSize841,85529
    float       PopupRounding;              // Radius of popup window corners rounding.PopupRounding842,85708
    float       PopupBorderSize;            // Thickness of border around popup windows. GeneralPopupBorderSize843,85796
    ImVec2      FramePadding;               // Padding within a framed rectangle (used by most wFramePadding844,85975
    float       FrameRounding;              // Radius of frame corners rounding. Set to 0.0f to FrameRounding845,86079
    float       FrameBorderSize;            // Thickness of border around frames. Generally set FrameBorderSize846,86222
    ImVec2      ItemSpacing;                // Horizontal and vertical spacing between widgets/lItemSpacing847,86394
    ImVec2      ItemInnerSpacing;           // Horizontal and vertical spacing between within elItemInnerSpacing848,86495
    ImVec2      TouchExtraPadding;          // Expand reactive bounding box for touch-based systTouchExtraPadding849,86649
    float       IndentSpacing;              // Horizontal indentation when e.g. entering a tree IndentSpacing850,86923
    float       ColumnsMinSpacing;          // Minimum horizontal spacing between two columnsColumnsMinSpacing851,87069
    float       ScrollbarSize;              // Width of the vertical scrollbar, Height of the hoScrollbarSize852,87163
    float       ScrollbarRounding;          // Radius of grab corners for scrollbarScrollbarRounding853,87278
    float       GrabMinSize;                // Minimum width/height of a grab box for slider/scrGrabMinSize854,87362
    float       GrabRounding;               // Radius of grabs corners rounding. Set to 0.0f to GrabRounding855,87466
    ImVec2      ButtonTextAlign;            // Alignment of button text when button is larger thButtonTextAlign856,87593
    ImVec2      DisplayWindowPadding;       // Window positions are clamped to be visible withinDisplayWindowPadding857,87760
    ImVec2      DisplaySafeAreaPadding;     // If you cannot see the edge of your screen (e.g. oDisplaySafeAreaPadding858,87928
    bool        AntiAliasedLines;           // Enable anti-aliasing on lines/borders. Disable ifAntiAliasedLines859,88112
    bool        AntiAliasedFill;            // Enable anti-aliasing on filled shapes (rounded reAntiAliasedFill860,88242
    float       CurveTessellationTol;       // Tessellation tolerance when using PathBezierCurveCurveTessellationTol861,88363
    ImVec4      Colors[ImGuiCol_COUNT];Colors862,88603
struct ImGuiIOImGuiIO870,88874
    ImVec2        DisplaySize;              // <unset>              // Display size, in pixels. DisplaySize876,89100
    float         DeltaTime;                // = 1.0f/60.0f         // Time elapsed since last fDeltaTime877,89228
    float         IniSavingRate;            // = 5.0f               // Maximum time between saviIniSavingRate878,89342
    const char*   IniFilename;              // = "imgui.ini"        // Path to .ini file. NULL tIniFilename879,89483
    const char*   LogFilename;              // = "imgui_log.txt"    // Path to .log file (defaulLogFilename880,89602
    float         MouseDoubleClickTime;     // = 0.30f              // Time for a double-click, MouseDoubleClickTime881,89758
    float         MouseDoubleClickMaxDist;  // = 6.0f               // Distance threshold to staMouseDoubleClickMaxDist882,89866
    float         MouseDragThreshold;       // = 6.0f               // Distance threshold beforeMouseDragThreshold883,90006
    int           KeyMap[ImGuiKey_COUNT];   // <unset>              // Map of indices into the KKeyMap884,90131
    float         KeyRepeatDelay;           // = 0.250f             // When holding a key/buttonKeyRepeatDelay885,90254
    float         KeyRepeatRate;            // = 0.050f             // When holding a key/buttonKeyRepeatRate886,90432
    void*         UserData;                 // = NULL               // Store your own data for rUserData887,90568
    ImFontAtlas*  Fonts;                    // <auto>               // Load and assemble one or Fonts889,90688
    float         FontGlobalScale;          // = 1.0f               // Global scale all fontsFontGlobalScale890,90856
    bool          FontAllowUserScaling;     // = false              // Allow user scaling text oFontAllowUserScaling891,90950
    ImFont*       FontDefault;              // = NULL               // Font to use on NewFrame()FontDefault892,91083
    ImVec2        DisplayFramebufferScale;  // = (1.0f,1.0f)        // For retina display or othDisplayFramebufferScale893,91215
    ImVec2        DisplayVisibleMin;        // <unset> (0.0f,0.0f)  // If you use DisplaySize asDisplayVisibleMin894,91442
    ImVec2        DisplayVisibleMax;        // <unset> (0.0f,0.0f)  // If the values are the samDisplayVisibleMax895,91627
    bool          OptMacOSXBehaviors;       // = defined(__APPLE__) // OS X style: Text editing OptMacOSXBehaviors898,91806
    bool          OptCursorBlink;           // = true               // Enable blinking cursor, fOptCursorBlink899,92168
    void        (*RenderDrawListsFn)(ImDrawData* data);RenderDrawListsFn908,92721
    const char* (*GetClipboardTextFn)(void* user_data);GetClipboardTextFn912,92965
    void        (*SetClipboardTextFn)(void* user_data, const char* text);SetClipboardTextFn913,93021
    void*       ClipboardUserData;ClipboardUserData914,93095
    void*       (*MemAllocFn)(size_t sz);MemAllocFn918,93262
    void        (*MemFreeFn)(void* ptr);MemFreeFn919,93304
    void        (*ImeSetInputScreenPosFn)(int x, int y);ImeSetInputScreenPosFn923,93557
    void*       ImeWindowHandle;            // (Windows) Set this to your HWND to get automatic ImeWindowHandle924,93614
    ImVec2      MousePos;                   // Mouse position, in pixels. Set to ImVec2(-FLT_MAXMousePos930,93928
    bool        MouseDown[5];               // Mouse buttons: left, right, middle + extras. ImGuMouseDown931,94085
    float       MouseWheel;                 // Mouse wheel: 1 unit scrolls about 5 lines text.MouseWheel932,94402
    bool        MouseDrawCursor;            // Request ImGui to draw a mouse cursor for you (if MouseDrawCursor933,94497
    bool        KeyCtrl;                    // Keyboard modifier pressed: ControlKeyCtrl934,94640
    bool        KeyShift;                   // Keyboard modifier pressed: ShiftKeyShift935,94722
    bool        KeyAlt;                     // Keyboard modifier pressed: AltKeyAlt936,94802
    bool        KeySuper;                   // Keyboard modifier pressed: Cmd/Super/WindowsKeySuper937,94880
    bool        KeysDown[512];              // Keyboard keys that are pressed (in whatever storaKeysDown938,94972
    ImWchar     InputCharacters[16+1];      // List of characters input (translated by user fromInputCharacters939,95121
    inline void    ClearInputCharacters() { InputCharacters[0] = 0; }   // Clear the text input ClearInputCharacters944,95555
    bool        WantCaptureMouse;           // When io.WantCaptureMouse is true, do not dispatchWantCaptureMouse950,95865
    bool        WantCaptureKeyboard;        // When io.WantCaptureKeyboard is true, do not dispaWantCaptureKeyboard951,96127
    bool        WantTextInput;              // Mobile/console: when io.WantTextInput is true, yoWantTextInput952,96337
    bool        WantMoveMouse;              // [BETA-NAV] MousePos has been altered, back-end shWantMoveMouse953,96580
    float       Framerate;                  // Application framerate estimation, in frame per seFramerate954,96749
    int         MetricsAllocs;              // Number of active memory allocationsMetricsAllocs955,96940
    int         MetricsRenderVertices;      // Vertices output during last call to Render()MetricsRenderVertices956,97023
    int         MetricsRenderIndices;       // Indices output during last call to Render() = numMetricsRenderIndices957,97115
    int         MetricsActiveWindows;       // Number of visible root windows (exclude child winMetricsActiveWindows958,97232
    ImVec2      MouseDelta;                 // Mouse delta. Note that this is zero if either curMouseDelta959,97334
    ImVec2      MousePosPrev;               // Previous mouse position temporary storage (nb: noMousePosPrev965,97788
    ImVec2      MouseClickedPos[5];         // Position at time of clickingMouseClickedPos966,97933
    float       MouseClickedTime[5];        // Time of last click (used to figure out double-cliMouseClickedTime967,98009
    bool        MouseClicked[5];            // Mouse button went from !Down to DownMouseClicked968,98109
    bool        MouseDoubleClicked[5];      // Has mouse button been double-clicked?MouseDoubleClicked969,98193
    bool        MouseReleased[5];           // Mouse button went from Down to !DownMouseReleased970,98278
    bool        MouseDownOwned[5];          // Track if button was clicked inside a window. We dMouseDownOwned971,98362
    float       MouseDownDuration[5];       // Duration the mouse button has been down (0.0f == MouseDownDuration972,98545
    float       MouseDownDurationPrev[5];   // Previous time the mouse button has been downMouseDownDurationPrev973,98655
    ImVec2      MouseDragMaxDistanceAbs[5]; // Maximum distance, absolute, on each axis, of how MouseDragMaxDistanceAbs974,98747
    float       MouseDragMaxDistanceSqr[5]; // Squared maximum distance of how much mouse has trMouseDragMaxDistanceSqr975,98891
    float       KeysDownDuration[512];      // Duration the keyboard key has been down (0.0f == KeysDownDuration976,99018
    float       KeysDownDurationPrev[512];  // Previous duration the key has been downKeysDownDurationPrev977,99128
namespace ImGuiImGui987,99543
    static inline void  ShowTestWindow() { return ShowDemoWindow(); } // OBSOLETE 1.53+ShowTestWindow989,99561
    static inline bool  IsRootWindowFocused() { return IsWindowFocused(ImGuiFocusedFlags_RootWinIsRootWindowFocused990,99649
    static inline bool  IsRootWindowOrAnyChildFocused() { return IsWindowFocused(ImGuiFocusedFlaIsRootWindowOrAnyChildFocused991,99771
    static inline void  SetNextWindowContentWidth(float width) { SetNextWindowContentSize(ImVec2SetNextWindowContentWidth992,99912
    static inline bool  IsRootWindowOrAnyChildHovered(ImGuiHoveredFlags flags = 0) { return IsItIsRootWindowOrAnyChildHovered993,100124
    static inline void  AlignFirstTextHeightToWidgets() { AlignTextToFramePadding(); }     // OBAlignFirstTextHeightToWidgets995,100583
    static inline void  SetNextWindowPosCenter(ImGuiCond cond = 0) { SetNextWindowPos(ImVec2(GetSetNextWindowPosCenter996,100692
    static inline bool  IsItemHoveredRect() { return IsItemHovered(ImGuiHoveredFlags_RectOnly); IsItemHoveredRect997,100893
    static inline bool  IsPosHoveringAnyWindow(const ImVec2&) { IM_ASSERT(0); return false; } //IsPosHoveringAnyWindow998,101009
    static inline bool  IsMouseHoveringAnyWindow() { return IsAnyWindowHovered(); }        // OBIsMouseHoveringAnyWindow999,101214
    static inline bool  IsMouseHoveringWindow() { return IsWindowHovered(ImGuiHoveredFlags_AllowIsMouseHoveringWindow1000,101323
    static inline bool  CollapsingHeader(const char* label, const char* str_id, bool framed = trCollapsingHeader1001,101509
class ImVectorImVector1012,102393
    int                         Size;Size1015,102418
    int                         Capacity;Capacity1016,102456
    T*                          Data;Data1017,102498
    typedef T                   value_type;value_type1019,102537
    typedef value_type*         iterator;iterator1020,102581
    typedef const value_type*   const_iterator;const_iterator1021,102623
    inline ImVector()           { Size = Capacity = 0; Data = NULL; }ImVector1023,102672
    inline ~ImVector()          { if (Data) ImGui::MemFree(Data); }~ImVector1024,102742
    inline bool                 empty() const                   { return Size == 0; }empty1026,102811
    inline int                  size() const                    { return Size; }size1027,102897
    inline int                  capacity() const                { return Capacity; }capacity1028,102978
    inline value_type&          operator[](int i)               { IM_ASSERT(i < Size); return Daoperator []1030,103064
    inline const value_type&    operator[](int i) const         { IM_ASSERT(i < Size); return Da__anon4ec3fb5401021031,103169
    inline const value_type&    operator[](int i) const         { IM_ASSERT(i < Size); return Daoperator []1031,103169
    inline iterator             begin()                         { return Data; }begin1034,103413
    inline const_iterator       begin() const                   { return Data; }begin1035,103494
    inline iterator             end()                           { return Data + Size; }end1036,103575
    inline const_iterator       end() const                     { return Data + Size; }end1037,103663
    inline value_type&          front()                         { IM_ASSERT(Size > 0); return Dafront1038,103751
    inline const value_type&    front() const                   { IM_ASSERT(Size > 0); return Dafront1039,103856
    inline value_type&          back()                          { IM_ASSERT(Size > 0); return Daback1040,103961
    inline const value_type&    back() const                    { IM_ASSERT(Size > 0); return Daback1041,104073
    inline void                 swap(ImVector<T>& rhs)          { int rhs_size = rhs.Size; rhs.Sswap1042,104185
    inline int                  _grow_capacity(int sz) const    { int new_capacity = Capacity ? _grow_capacity1044,104453
    inline void                 resize(int new_size)            { if (new_size > Capacity) reserresize1046,104627
    inline void                 resize(int new_size, const T& v){ if (new_size > Capacity) reserresize1047,104772
    inline void                 reserve(int new_capacity)reserve1048,104989
    inline void                 push_back(const value_type& v)  { if (Size == Capacity) reserve(push_back1060,105373
    inline void                 pop_back()                      { IM_ASSERT(Size > 0); Size--; }pop_back1061,105516
    inline void                 push_front(const value_type& v) { if (Size == 0) push_back(v); epush_front1062,105613
    inline iterator             erase(const_iterator it)        { IM_ASSERT(it >= Data && it < Derase1064,105733
    inline iterator             insert(const_iterator it, const value_type& v)  { IM_ASSERT(it >insert1065,105994
    inline bool                 contains(const value_type& v) const             { const T* data contains1066,106361
struct ImGuiOnceUponAFrameImGuiOnceUponAFrame1074,106869
    ImGuiOnceUponAFrame() { RefFrame = -1; }ImGuiOnceUponAFrame1076,106898
    mutable int RefFrame;RefFrame1077,106943
    operator bool() const { int current_frame = ImGui::GetFrameCount(); if (RefFrame == current_current_frame1078,106969
#define IMGUI_ONCE_UPON_A_FRAME IMGUI_ONCE_UPON_A_FRAME1083,107361
struct ImGuiTextFilterImGuiTextFilter1087,107532
    struct TextRangeTextRange1089,107557
        const char* b;b1091,107584
        const char* e;e1092,107607
        TextRange() { b = e = NULL; }TextRange1094,107631
        TextRange(const char* _b, const char* _e) { b = _b; e = _e; }TextRange1095,107669
        const char* begin() const { return b; }begin1096,107739
        const char* end() const { return e; }end1097,107787
        bool empty() const { return b == e; }empty1098,107833
        char front() const { return *b; }front1099,107879
        static bool is_blank(char c) { return c == ' ' || c == '\t'; }is_blank1100,107921
        void trim_blanks() { while (b < e && is_blank(*b)) b++; while (e > b && is_blank(*(e-1))trim_blanks1101,107992
    char                InputBuf[256];InputBuf1105,108177
    ImVector<TextRange> Filters;Filters1106,108216
    int                 CountGrep;CountGrep1107,108249
    void                Clear() { InputBuf[0] = 0; Build(); }Clear1113,108609
    bool                IsActive() const { return !Filters.empty(); }IsActive1114,108671
struct ImGuiTextBufferImGuiTextBuffer1118,108798
    ImVector<char>      Buf;Buf1120,108823
    ImGuiTextBuffer()   { Buf.push_back(0); }ImGuiTextBuffer1122,108853
    inline char         operator[](int i) { return Buf.Data[i]; }operator []1123,108899
    const char*         begin() const { return &Buf.front(); }begin1124,108965
    const char*         end() const { return &Buf.back(); }      // Buf is zero-terminated, so eend1125,109028
    int                 size() const { return Buf.Size - 1; }size1126,109163
    bool                empty() { return Buf.Size <= 1; }empty1127,109225
    void                clear() { Buf.clear(); Buf.push_back(0); }clear1128,109283
    void                reserve(int capacity) { Buf.reserve(capacity); }reserve1129,109350
    const char*         c_str() const { return Buf.Data; }c_str1130,109423
struct ImGuiStorageImGuiStorage1143,110471
    struct PairPair1145,110493
        ImGuiID key;key1147,110515
        union { int val_i; float val_f; void* val_p; };__anon4ec3fb54020a1148,110536
        union { int val_i; float val_f; void* val_p; };val_i1148,110536
        union { int val_i; float val_f; void* val_p; };val_f1148,110536
        union { int val_i; float val_f; void* val_p; };val_p1148,110536
        Pair(ImGuiID _key, int _val_i)   { key = _key; val_i = _val_i; }Pair1149,110592
        Pair(ImGuiID _key, float _val_f) { key = _key; val_f = _val_f; }Pair1150,110665
        Pair(ImGuiID _key, void* _val_p) { key = _key; val_p = _val_p; }Pair1151,110738
    ImVector<Pair>      Data;Data1153,110818
    void                Clear() { Data.clear(); }Clear1158,111122
struct ImGuiTextEditCallbackDataImGuiTextEditCallbackData1185,113030
    ImGuiInputTextFlags EventFlag;      // One of ImGuiInputTextFlags_Callback* // Read-onlyEventFlag1187,113065
    ImGuiInputTextFlags Flags;          // What user passed to InputText()      // Read-onlyFlags1188,113158
    void*               UserData;       // What user passed to InputText()      // Read-onlyUserData1189,113251
    bool                ReadOnly;       // Read-only mode                       // Read-onlyReadOnly1190,113344
    ImWchar             EventChar;      // Character input                      // Read-write (rEventChar1193,113463
    ImGuiKey            EventKey;       // Key pressed (Up/Down/TAB)            // Read-onlyEventKey1197,113737
    char*               Buf;            // Current text buffer                  // Read-write (pBuf1198,113830
    int                 BufTextLen;     // Current text length in bytes         // Read-writeBufTextLen1199,113978
    int                 BufSize;        // Maximum text length in bytes         // Read-onlyBufSize1200,114072
    bool                BufDirty;       // Set if you modify Buf/BufTextLen!!   // WriteBufDirty1201,114165
    int                 CursorPos;      //                                      // Read-writeCursorPos1202,114254
    int                 SelectionStart; //                                      // Read-write (=SelectionStart1203,114348
    int                 SelectionEnd;   //                                      // Read-writeSelectionEnd1204,114481
    bool              HasSelection() const { return SelectionStart != SelectionEnd; }HasSelection1209,114819
struct ImGuiSizeConstraintCallbackDataImGuiSizeConstraintCallbackData1214,115201
    void*   UserData;       // Read-only.   What user passed to SetNextWindowSizeConstraints()UserData1216,115242
    ImVec2  Pos;            // Read-only.   Window position, for reference.Pos1217,115337
    ImVec2  CurrentSize;    // Read-only.   Current window size.CurrentSize1218,115413
    ImVec2  DesiredSize;    // Read-write.  Desired size, based on user's mouse position. Write DesiredSize1219,115478
struct ImGuiPayloadImGuiPayload1223,115659
    const void*     Data;               // Data (copied and owned by dear imgui)Data1226,115696
    int             DataSize;           // Data sizeDataSize1227,115777
    ImGuiID         SourceId;           // Source item idSourceId1230,115849
    ImGuiID         SourceParentId;     // Source parent id (if available)SourceParentId1231,115907
    int             DataFrameCount;     // Data timestampDataFrameCount1232,115982
    char            DataType[8 + 1];    // Data type tag (short user-supplied string)DataType1233,116040
    bool            Preview;            // Set when AcceptDragDropPayload() was called and mousePreview1234,116126
    bool            Delivery;           // Set when AcceptDragDropPayload() was called and mouseDelivery1235,116295
    ImGuiPayload()  { Clear(); }ImGuiPayload1237,116434
    void Clear()    { SourceId = SourceParentId = 0; Data = NULL; DataSize = 0; memset(DataType,Clear1238,116467
    bool IsDataType(const char* type) const { return DataFrameCount != -1 && strcmp(type, DataTyIsDataType1239,116637
    bool IsPreview() const                  { return Preview; }IsPreview1240,116745
    bool IsDelivery() const                 { return Delivery; }IsDelivery1241,116809
#define IM_COL32_R_SHIFT IM_COL32_R_SHIFT1246,116966
#define IM_COL32_G_SHIFT IM_COL32_G_SHIFT1247,116997
#define IM_COL32_B_SHIFT IM_COL32_B_SHIFT1248,117027
#define IM_COL32_A_SHIFT IM_COL32_A_SHIFT1249,117057
#define IM_COL32_A_MASK IM_COL32_A_MASK1250,117088
#define IM_COL32_R_SHIFT IM_COL32_R_SHIFT1252,117133
#define IM_COL32_G_SHIFT IM_COL32_G_SHIFT1253,117163
#define IM_COL32_B_SHIFT IM_COL32_B_SHIFT1254,117193
#define IM_COL32_A_SHIFT IM_COL32_A_SHIFT1255,117224
#define IM_COL32_A_MASK IM_COL32_A_MASK1256,117255
#define IM_COL32(IM_COL321258,117301
#define IM_COL32_WHITE IM_COL32_WHITE1259,117462
#define IM_COL32_BLACK IM_COL32_BLACK1260,117547
#define IM_COL32_BLACK_TRANS IM_COL32_BLACK_TRANS1261,117619
struct ImColorImColor1267,118221
    ImVec4              Value;Value1269,118238
    ImColor()                                                       { Value.x = Value.y = Value.ImColor1271,118270
    ImColor(int r, int g, int b, int a = 255)                       { float sc = 1.0f/255.0f; VaImColor1272,118388
    ImColor(ImU32 rgba)                                             { float sc = 1.0f/255.0f; VaImColor1273,118584
    ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; ImColor1274,118900
    ImColor(const ImVec4& col)                                      { Value = col; }ImColor1275,119024
    inline void    SetHSV(float h, float s, float v, float a = 1.0f){ ImGui::ColorConvertHSVtoRGSetHSV1280,119381
    static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorCHSV1281,119531
struct ImGuiListClipperImGuiListClipper1297,121242
    float   StartPosY;StartPosY1299,121268
    float   ItemsHeight;ItemsHeight1300,121291
    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;ItemsCount1301,121316
    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;StepNo1301,121316
    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;DisplayStart1301,121316
    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;DisplayEnd1301,121316
    ImGuiListClipper(int items_count = -1, float items_height = -1.0f)  { Begin(items_count, iteImGuiListClipper1306,121934
    ~ImGuiListClipper()                                                 { IM_ASSERT(ItemsCount =~ImGuiListClipper1307,122168
typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);ImDrawCallback1323,123670
struct ImDrawCmdImDrawCmd1326,123829
    unsigned int    ElemCount;              // Number of indices (multiple of 3) to be rendered ElemCount1328,123848
    ImVec4          ClipRect;               // Clipping rectangle (x1, y1, x2, y2)ClipRect1329,124050
    ImTextureID     TextureId;              // User-provided texture ID. Set by user in ImfontAtTextureId1330,124133
    ImDrawCallback  UserCallback;           // If != NULL, call the function instead of renderinUserCallback1331,124342
    void*           UserCallbackData;       // The draw callback code can access this.UserCallbackData1332,124501
    ImDrawCmd() { ElemCount = 0; ClipRect.x = ClipRect.y = ClipRect.z = ClipRect.w = 0.0f; TextuImDrawCmd1334,124589
typedef unsigned short ImDrawIdx;ImDrawIdx1339,124854
struct ImDrawVertImDrawVert1344,124959
    ImVec2  pos;pos1346,124979
    ImVec2  uv;uv1347,124996
    ImU32   col;col1348,125012
struct ImDrawChannelImDrawChannel1360,125994
    ImVector<ImDrawCmd>     CmdBuffer;CmdBuffer1362,126017
    ImVector<ImDrawIdx>     IdxBuffer;IdxBuffer1363,126056
enum ImDrawCornerFlags_ImDrawCornerFlags_1366,126099
    ImDrawCornerFlags_TopLeft   = 1 << 0, // 0x1ImDrawCornerFlags_TopLeft1368,126125
    ImDrawCornerFlags_TopRight  = 1 << 1, // 0x2ImDrawCornerFlags_TopRight1369,126174
    ImDrawCornerFlags_BotLeft   = 1 << 2, // 0x4ImDrawCornerFlags_BotLeft1370,126223
    ImDrawCornerFlags_BotRight  = 1 << 3, // 0x8ImDrawCornerFlags_BotRight1371,126272
    ImDrawCornerFlags_Top       = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,   // 0ImDrawCornerFlags_Top1372,126321
    ImDrawCornerFlags_Bot       = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,   // 0ImDrawCornerFlags_Bot1373,126420
    ImDrawCornerFlags_Left      = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,    // 0ImDrawCornerFlags_Left1374,126519
    ImDrawCornerFlags_Right     = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,  // 0ImDrawCornerFlags_Right1375,126618
    ImDrawCornerFlags_All       = 0xF     // In your function calls you may use ~0 (= all bits sImDrawCornerFlags_All1376,126717
enum ImDrawListFlags_ImDrawListFlags_1379,126873
    ImDrawListFlags_AntiAliasedLines = 1 << 0,ImDrawListFlags_AntiAliasedLines1381,126897
    ImDrawListFlags_AntiAliasedFill  = 1 << 1ImDrawListFlags_AntiAliasedFill1382,126944
struct ImDrawListImDrawList1391,127918
    ImVector<ImDrawCmd>     CmdBuffer;          // Draw commands. Typically 1 command = 1 GPU drCmdBuffer1394,127977
    ImVector<ImDrawIdx>     IdxBuffer;          // Index buffer. Each command consume ImDrawCmd:IdxBuffer1395,128116
    ImVector<ImDrawVert>    VtxBuffer;          // Vertex buffer.VtxBuffer1396,128232
    ImDrawListFlags         Flags;              // Flags, you may poke into these to adjust antiFlags1399,128344
    const ImDrawListSharedData* _Data;          // Pointer to shared draw data (you can use ImGu_Data1400,128474
    const char*             _OwnerName;         // Pointer to owner window's name for debugging_OwnerName1401,128640
    unsigned int            _VtxCurrentIdx;     // [Internal] == VtxBuffer.Size_VtxCurrentIdx1402,128736
    ImDrawVert*             _VtxWritePtr;       // [Internal] point within VtxBuffer.Data after _VtxWritePtr1403,128816
    ImDrawIdx*              _IdxWritePtr;       // [Internal] point within IdxBuffer.Data after _IdxWritePtr1404,128980
    ImVector<ImVec4>        _ClipRectStack;     // [Internal]_ClipRectStack1405,129144
    ImVector<ImTextureID>   _TextureIdStack;    // [Internal]_TextureIdStack1406,129206
    ImVector<ImVec2>        _Path;              // [Internal] current path building_Path1407,129268
    int                     _ChannelsCurrent;   // [Internal] current channel number (0)_ChannelsCurrent1408,129352
    int                     _ChannelsCount;     // [Internal] number of active channels (1+)_ChannelsCount1409,129441
    ImVector<ImDrawChannel> _Channels;          // [Internal] draw channels for columns API (not_Channels1410,129534
    ImDrawList(const ImDrawListSharedData* shared_data) { _Data = shared_data; _OwnerName = NULLImDrawList1412,129699
    ~ImDrawList() { ClearFreeMemory(); }~ImDrawList1413,129808
    inline ImVec2   GetClipRectMin() const { const ImVec4& cr = _ClipRectStack.back(); return ImGetClipRectMin1419,130370
    inline ImVec2   GetClipRectMax() const { const ImVec4& cr = _ClipRectStack.back(); return ImGetClipRectMax1420,130486
    inline    void  PathClear()                                                 { _Path.resize(0PathClear1443,133541
    inline    void  PathLineTo(const ImVec2& pos)                               { _Path.push_bacPathLineTo1444,133642
    inline    void  PathLineToMergeDuplicate(const ImVec2& pos)                 { if (_Path.SizePathLineToMergeDuplicate1445,133748
    inline    void  PathFillConvex(ImU32 col)                                   { AddConvexPolyFPathFillConvex1446,133921
    inline    void  PathStroke(ImU32 col, bool closed, float thickness = 1.0f)  { AddPolyline(_PPathStroke1447,134068
    inline    void  PrimWriteVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col){ _VtxWritePtr->PrimWriteVtx1472,136458
    inline    void  PrimWriteIdx(ImDrawIdx idx)                                 { *_IdxWritePtr PrimWriteIdx1473,136649
    inline    void  PrimVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)     { PrimWriteIdx((PrimVtx1474,136770
struct ImDrawDataImDrawData1480,137046
    bool            Valid;                  // Only valid after Render() is called and before thValid1482,137066
    ImDrawList**    CmdLists;CmdLists1483,137191
    int             CmdListsCount;CmdListsCount1484,137221
    int             TotalVtxCount;          // For convenience, sum of all cmd_lists vtx_buffer.TotalVtxCount1485,137256
    int             TotalIdxCount;          // For convenience, sum of all cmd_lists idx_buffer.TotalIdxCount1486,137357
    ImDrawData() { Valid = false; CmdLists = NULL; CmdListsCount = TotalVtxCount = TotalIdxCountImDrawData1489,137476
struct ImFontConfigImFontConfig1494,138131
    void*           FontData;                   //          // TTF/OTF dataFontData1496,138153
    int             FontDataSize;               //          // TTF/OTF data sizeFontDataSize1497,138229
    bool            FontDataOwnedByAtlas;       // true     // TTF/OTF data ownership taken by tFontDataOwnedByAtlas1498,138310
    int             FontNo;                     // 0        // Index of font within TTF/OTF fileFontNo1499,138460
    float           SizePixels;                 //          // Size in pixels for rasterizer.SizePixels1500,138557
    int             OversampleH, OversampleV;   // 3, 1     // Rasterize at higher quality for sOversampleH1501,138651
    int             OversampleH, OversampleV;   // 3, 1     // Rasterize at higher quality for sOversampleV1501,138651
    bool            PixelSnapH;                 // false    // Align every glyph to pixel boundaPixelSnapH1502,138817
    ImVec2          GlyphExtraSpacing;          // 0, 0     // Extra spacing (in pixels) betweenGlyphExtraSpacing1503,139040
    ImVec2          GlyphOffset;                // 0, 0     // Offset all glyphs from this font GlyphOffset1504,139179
    const ImWchar*  GlyphRanges;                // NULL     // Pointer to a user-provided list oGlyphRanges1505,139282
    bool            MergeMode;                  // false    // Merge into previous ImFont, so yoMergeMode1506,139521
    unsigned int    RasterizerFlags;            // 0x00     // Settings for custom font rasterizRasterizerFlags1507,139785
    float           RasterizerMultiply;         // 1.0f     // Brighten (>1.0f) or darken (<1.0fRasterizerMultiply1508,139945
    char            Name[32];                               // Name (strictly to ease debugging)Name1511,140152
    ImFont*         DstFont;DstFont1512,140249
struct ImFontGlyphImFontGlyph1517,140313
    ImWchar         Codepoint;          // 0x0000..0xFFFFCodepoint1519,140334
    float           AdvanceX;           // Distance to next character (= data from font + ImFontAdvanceX1520,140392
    float           X0, Y0, X1, Y1;     // Glyph cornersX01521,140526
    float           X0, Y0, X1, Y1;     // Glyph cornersY01521,140526
    float           X0, Y0, X1, Y1;     // Glyph cornersX11521,140526
    float           X0, Y0, X1, Y1;     // Glyph cornersY11521,140526
    float           U0, V0, U1, V1;     // Texture coordinatesU01522,140583
    float           U0, V0, U1, V1;     // Texture coordinatesV01522,140583
    float           U0, V0, U1, V1;     // Texture coordinatesU11522,140583
    float           U0, V0, U1, V1;     // Texture coordinatesV11522,140583
struct ImFontAtlasImFontAtlas1533,141562
    void                        SetTexID(ImTextureID id)    { TexID = id; }SetTexID1555,144333
    struct GlyphRangesBuilderGlyphRangesBuilder1571,145599
        ImVector<unsigned char> UsedChars;  // Store 1-bit per Unicode code point (0=unused, 1=uUsedChars1573,145635
        GlyphRangesBuilder()                { UsedChars.resize(0x10000 / 8); memset(UsedChars.DaGlyphRangesBuilder1574,145736
        bool           GetBit(int n)        { return (UsedChars[n >> 3] & (1 << (n & 7))) != 0; GetBit1575,145855
        void           SetBit(int n)        { UsedChars[n >> 3] |= 1 << (n & 7); }  // Set bit 'SetBit1576,145953
        void           AddChar(ImWchar c)   { SetBit(c); }                          // Add charaAddChar1577,146065
    struct CustomRectCustomRect1589,147115
        unsigned int    ID;             // Input    // User ID. Use <0x10000 to map into a font ID1591,147143
        unsigned short  Width, Height;  // Input    // Desired rectangle dimensionWidth1592,147296
        unsigned short  Width, Height;  // Input    // Desired rectangle dimensionHeight1592,147296
        unsigned short  X, Y;           // Output   // Packed position in AtlasX1593,147379
        unsigned short  X, Y;           // Output   // Packed position in AtlasY1593,147379
        float           GlyphAdvanceX;  // Input    // For custom font glyphs only (ID<0x10000):GlyphAdvanceX1594,147459
        ImVec2          GlyphOffset;    // Input    // For custom font glyphs only (ID<0x10000):GlyphOffset1595,147571
        ImFont*         Font;           // Input    // For custom font glyphs only (ID<0x10000):Font1596,147689
        CustomRect()            { ID = 0xFFFFFFFF; Width = Height = 0; X = Y = 0xFFFF; GlyphAdvaCustomRect1597,147798
        bool IsPacked() const   { return X != 0xFFFF; }IsPacked1598,147949
    const CustomRect*   GetCustomRectByIndex(int index) const { if (index < 0) return NULL; retuGetCustomRectByIndex1604,148589
    ImTextureID                 TexID;              // User data to refer to the texture once itTexID1610,148828
    int                         TexDesiredWidth;    // Texture width desired by user before BuilTexDesiredWidth1611,149041
    int                         TexGlyphPadding;    // Padding between glyphs within texture in TexGlyphPadding1612,149294
    unsigned char*              TexPixelsAlpha8;    // 1 component per pixel, each component is TexPixelsAlpha81616,149529
    unsigned int*               TexPixelsRGBA32;    // 4 component per pixel, each component is TexPixelsRGBA321617,149675
    int                         TexWidth;           // Texture width calculated during Build().TexWidth1618,149825
    int                         TexHeight;          // Texture height calculated during Build().TexHeight1619,149921
    ImVec2                      TexUvWhitePixel;    // Texture coordinates to a white pixelTexUvWhitePixel1620,150018
    ImVector<ImFont*>           Fonts;              // Hold all the fonts returned by AddFont*. Fonts1621,150110
    ImVector<CustomRect>        CustomRects;        // Rectangles for packing custom texture datCustomRects1622,150327
    ImVector<ImFontConfig>      ConfigData;         // Internal dataConfigData1623,150441
    int                         CustomRectIds[1];   // Identifiers of custom texture rectangle uCustomRectIds1624,150510
struct ImFontImFont1629,150802
    float                       FontSize;           // <user set>   // Height of characters, setFontSize1632,150851
    float                       Scale;              // = 1.f        // Base font scale, multipliScale1633,150992
    ImVec2                      DisplayOffset;      // = (0.f,1.f)  // Offset font rendering by DisplayOffset1634,151161
    ImVector<ImFontGlyph>       Glyphs;             //              // All glyphs.Glyphs1635,151267
    ImVector<float>             IndexAdvanceX;      //              // Sparse. Glyphs->AdvanceX IndexAdvanceX1636,151350
    ImVector<unsigned short>    IndexLookup;        //              // Sparse. Index glyphs by UIndexLookup1637,151564
    const ImFontGlyph*          FallbackGlyph;      // == FindGlyph(FontFallbackChar)FallbackGlyph1638,151679
    float                       FallbackAdvanceX;   // == FallbackGlyph->AdvanceXFallbackAdvanceX1639,151765
    ImWchar                     FallbackChar;       // = '?'        // Replacement glyph if one FallbackChar1640,151847
    short                       ConfigDataCount;    // ~ 1          // Number of ImFontConfig inConfigDataCount1643,152022
    ImFontConfig*               ConfigData;         //              // Pointer within ContainerAConfigData1644,152214
    ImFontAtlas*                ContainerAtlas;     //              // What we has been loaded iContainerAtlas1645,152327
    float                       Ascent, Descent;    //              // Ascent: distance from topAscent1646,152427
    float                       Ascent, Descent;    //              // Ascent: distance from topDescent1646,152427
    int                         MetricsTotalSurface;//              // Total surface in pixels tMetricsTotalSurface1647,152560
    float                       GetCharAdvance(ImWchar c) const     { return ((int)c < IndexAdvaGetCharAdvance1656,153060
    bool                        IsLoaded() const                    { return ContainerAtlas != NIsLoaded1657,153213
    const char*                 GetDebugName() const                { return ConfigData ? ConfigGetDebugName1658,153316
    typedef ImFontGlyph Glyph; // OBSOLETE 1.52+Glyph1673,154838

skeleton/win.cpp,704
#define VK_OEM_NEC_EQUAL VK_OEM_NEC_EQUAL12,156
static int keymap[256];keymap15,194
initkeymap(void)initkeymap17,230
bool running;running62,1428
static void KeyUp(int key) { EventHandler(KEYUP, &key); }KeyUp64,1443
static void KeyDown(int key) { EventHandler(KEYDOWN, &key); }KeyDown65,1501
WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)WndProc68,1581
MakeWindow(HINSTANCE instance, int width, int height, const char *title)MakeWindow165,3957
pollEvents(void)pollEvents207,5010
WinMain(HINSTANCE instance, HINSTANCE,WinMain222,5229
namespace sk {sk280,6486
SetMousePosition(int x, int y)SetMousePosition283,6507
WinMain(HINSTANCE instance, HINSTANCE,WinMain298,6717

skeleton/skeleton.h,2179
namespace sk {sk3,47
enum KeyKey8,107
	KEY_ESC   = 128,KEY_ESC12,132
	KEY_F1    = 129,KEY_F114,151
	KEY_F2    = 130,KEY_F215,169
	KEY_F3    = 131,KEY_F316,187
	KEY_F4    = 132,KEY_F417,205
	KEY_F5    = 133,KEY_F518,223
	KEY_F6    = 134,KEY_F619,241
	KEY_F7    = 135,KEY_F720,259
	KEY_F8    = 136,KEY_F821,277
	KEY_F9    = 137,KEY_F922,295
	KEY_F10   = 138,KEY_F1023,313
	KEY_F11   = 139,KEY_F1124,331
	KEY_F12   = 140,KEY_F1225,349
	KEY_INS   = 141,KEY_INS27,368
	KEY_DEL   = 142,KEY_DEL28,386
	KEY_HOME  = 143,KEY_HOME29,404
	KEY_END   = 144,KEY_END30,422
	KEY_PGUP  = 145,KEY_PGUP31,440
	KEY_PGDN  = 146,KEY_PGDN32,458
	KEY_UP    = 147,KEY_UP34,477
	KEY_DOWN  = 148,KEY_DOWN35,495
	KEY_LEFT  = 149,KEY_LEFT36,513
	KEY_RIGHT = 150,KEY_RIGHT37,531
	KEY_BACKSP = 168,KEY_BACKSP41,575
	KEY_TAB    = 169,KEY_TAB42,594
	KEY_CAPSLK = 170,KEY_CAPSLK43,613
	KEY_ENTER  = 171,KEY_ENTER44,632
	KEY_LSHIFT = 172,KEY_LSHIFT45,651
	KEY_RSHIFT = 173,KEY_RSHIFT46,670
	KEY_LCTRL  = 174,KEY_LCTRL47,689
	KEY_RCTRL  = 175,KEY_RCTRL48,708
	KEY_LALT   = 176,KEY_LALT49,727
	KEY_RALT   = 177,KEY_RALT50,746
	KEY_NULL,	// unusedKEY_NULL52,766
	KEY_NUMKEYS,KEY_NUMKEYS53,787
enum EventStatusEventStatus56,805
	EVENTERROR,EVENTERROR58,824
	EVENTPROCESSED,EVENTPROCESSED59,837
	EVENTNOTPROCESSEDEVENTNOTPROCESSED60,854
enum EventEvent63,877
	INITIALIZE,INITIALIZE65,890
	RWINITIALIZE,RWINITIALIZE66,903
	RWTERMINATE,RWTERMINATE67,918
	SELECTDEVICE,SELECTDEVICE68,932
	PLUGINATTACH,PLUGINATTACH69,947
	KEYDOWN,KEYDOWN70,962
	KEYUP,KEYUP71,972
	CHARINPUT,CHARINPUT72,980
	MOUSEMOVE,MOUSEMOVE73,992
	MOUSEBTN,MOUSEBTN74,1004
	RESIZE,RESIZE75,1015
	IDLE,IDLE76,1024
	QUITQUIT77,1031
struct GlobalsGlobals80,1041
	const char *windowtitle;windowtitle82,1058
	int32 width;width83,1084
	int32 height;height84,1098
	bool32 quit;quit85,1113
struct MouseStateMouseState90,1183
	int posx, posy;posx92,1203
	int posx, posy;posy92,1203
	int buttons;	// bits 0-2 are left, middle, right button downbuttons93,1220
struct ArgsArgs96,1286
	int argc;argc98,1300
	char **argv;argv99,1311

skeleton/CMakeLists.txt,46
add_library(librw_skeletonlibrw_skeleton1,0

skeleton/sdl2.cpp,398
SDL_Window *window;window11,117
static int keyCodeToSkKey(SDL_Keycode keycode) {keyCodeToSkKey13,138
enum mousebutton {mousebutton203,5008
BUTTON_LEFT = 0x1,BUTTON_LEFT204,5027
BUTTON_MIDDLE = 0x2,BUTTON_MIDDLE205,5046
BUTTON_RIGHT = 0x4,BUTTON_RIGHT206,5067
main(int argc, char *argv[])main210,5095
namespace sk {sk314,7531
SetMousePosition(int x, int y)SetMousePosition317,7552

skeleton/glfw.cpp,755
GLFWwindow *window;window11,118
int keymap[GLFW_KEY_LAST+1];keymap12,138
initkeymap(void)initkeymap15,180
static void KeyUp(int key) { EventHandler(KEYUP, &key); }KeyUp141,4184
static void KeyDown(int key) { EventHandler(KEYDOWN, &key); }KeyDown142,4242
keypress(GLFWwindow *window, int key, int scancode, int action, int mods)keypress145,4317
charinput(GLFWwindow *window, unsigned int c)charinput155,4611
resize(GLFWwindow *window, int w, int h)resize161,4719
mousemove(GLFWwindow *window, double x, double y)mousemove172,4857
mousebtn(GLFWwindow *window, int button, int action, int mods)mousebtn181,5003
main(int argc, char *argv[])main212,5523
namespace sk {sk251,6458
SetMousePosition(int x, int y)SetMousePosition254,6479

skeleton/3ds_skel.cpp,385
enum mousebutton {mousebutton12,135
BUTTON_LEFT = 0x1,BUTTON_LEFT13,154
#define CLAMPINT(CLAMPINT16,177
typedef struct {__anonc5619922010818,254
	u32 mask;mask19,271
	u32 key;key20,282
} KeyBind;KeyBind21,292
KeyBind gKeyMap[] = {gKeyMap23,304
main(int argc, char *argv[])main37,609
namespace sk {sk117,2394
SetMousePosition(int x, int y)SetMousePosition120,2415
