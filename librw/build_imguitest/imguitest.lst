         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w userAppExit
         w userAppInit
00000000 00000001 b g_gdbHioWasInterruptedByCtrlC
00000000 b .LANCHOR0
00000000 a shift
00000000 a shift
00000000 b _TLS_MODULE_BASE_
00000004 00000401 B __ctru_dev_path_buf
00000408 00000802 B __ctru_dev_utf16_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
001000ac t .udivsi3_skip_div0_test
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc T __aeabi_ldivmod
00100990 T __aeabi_uldivmod
001009cc 00000014 T __restore_core_regs
001009cc 00000014 T restore_core_regs
001009e0 T __gnu_Unwind_Restore_VFP
001009e8 T __gnu_Unwind_Save_VFP
001009f0 T __gnu_Unwind_Restore_VFP_D
001009f8 T __gnu_Unwind_Save_VFP_D
00100a00 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100a08 T __gnu_Unwind_Save_VFP_D_16_to_31
00100a10 T __gnu_Unwind_Restore_WMMXD
00100a54 T __gnu_Unwind_Save_WMMXD
00100a98 T __gnu_Unwind_Restore_WMMXC
00100aac T __gnu_Unwind_Save_WMMXC
00100ac0 00000024 T ___Unwind_RaiseException
00100ac0 00000024 T _Unwind_RaiseException
00100ae4 00000024 T ___Unwind_Resume
00100ae4 00000024 T _Unwind_Resume
00100b08 00000024 T ___Unwind_Resume_or_Rethrow
00100b08 00000024 T _Unwind_Resume_or_Rethrow
00100b2c 00000024 T ___Unwind_ForcedUnwind
00100b2c 00000024 T _Unwind_ForcedUnwind
00100b50 00000024 T ___Unwind_Backtrace
00100b50 00000024 T _Unwind_Backtrace
00100b88 00000390 T strcmp
00100f10 t __do_global_dtors_aux
00100f50 t frame_dummy
00100f7c 00000028 W operator new(unsigned int, void*)
00100fa4 00000048 W rw::LLLink::remove()
00100fec 00000038 W rw::LinkList::init()
00101024 0000005c W rw::LinkList::add(rw::LLLink*)
00101080 00000024 W rw::LinkList::end()
001010a4 00000024 W rw::PluginList::PluginList()
001010a4 00000024 W rw::PluginList::PluginList()
001010c8 0000004c W rw::PluginList::PluginList(long)
001010c8 0000004c W rw::PluginList::PluginList(long)
00101114 00000050 W rw::malloc_LOC(unsigned int, unsigned long, char const*)
00101164 00000050 W rw::mustmalloc_LOC(unsigned int, unsigned long, char const*)
001011b4 00000044 T rw::malloc_h(unsigned int, unsigned long)
001011f8 00000034 T rw::realloc_h(void*, unsigned int, unsigned long)
0010122c 00000100 T rw::malloc_managed(unsigned int, unsigned long)
0010132c 00000168 T rw::realloc_managed(void*, unsigned int, unsigned long)
00101494 00000078 T rw::free_managed(void*)
0010150c 00000084 T rw::mustmalloc_h(unsigned int, unsigned long)
00101590 0000008c T rw::mustrealloc_h(void*, unsigned int, unsigned long)
0010161c 0000006c T rw::strdup_LOC(char const*, unsigned long, char const*)
00101688 000002c0 T rw::Engine::init(rw::MemoryFunctions*)
00101948 0000030c T rw::Engine::open(rw::EngineOpenParams*)
00101c54 000001c0 T rw::Engine::start()
00101e14 000000d0 T rw::Engine::term()
00101ee4 0000015c T rw::Engine::close()
00102040 00000140 T rw::Engine::stop()
00102180 00000034 T rw::Engine::getNumSubSystems()
001021b4 00000040 T rw::Engine::setSubSystem(long)
001021f4 00000068 T rw::Engine::getSubSystemInfo(rw::SubSystemInfo*, long)
0010225c 00000034 T rw::Engine::getNumVideoModes()
00102290 00000034 T rw::Engine::getCurrentVideoMode()
001022c4 00000068 T rw::Engine::getVideoModeInfo(rw::VideoMode*, long)
0010232c 00000020 T rw::null::beginUpdate(rw::Camera*)
0010234c 00000020 T rw::null::endUpdate(rw::Camera*)
0010236c 00000028 T rw::null::clearCamera(rw::Camera*, rw::RGBA*, unsigned long)
00102394 00000024 T rw::null::showRaster(rw::Raster*, unsigned long)
001023b8 00000024 T rw::null::setRenderState(long, void*)
001023dc 00000024 T rw::null::getRenderState(long)
00102400 0000002c T rw::null::rasterRenderFast(rw::Raster*, long, long)
0010242c 0000002c T rw::null::im2DRenderLine(void*, long, long, long)
00102458 0000002c T rw::null::im2DRenderTriangle(void*, long, long, long, long)
00102484 0000002c T rw::null::im2DRenderPrimitive(rw::PrimitiveType, void*, long)
001024b0 00000030 T rw::null::im2DRenderIndexedPrimitive(rw::PrimitiveType, void*, long, void*, long)
001024e0 0000002c T rw::null::im3DTransform(void*, long, rw::Matrix*, unsigned long)
0010250c 00000024 T rw::null::im3DRenderPrimitive(rw::PrimitiveType)
00102530 0000002c T rw::null::im3DRenderIndexedPrimitive(rw::PrimitiveType, void*, long)
0010255c 00000018 T rw::null::im3DEnd()
00102574 00000030 T rw::null::rasterCreate(rw::Raster*)
001025a4 0000003c T rw::null::rasterLock(rw::Raster*, long, long)
001025e0 00000038 T rw::null::rasterUnlock(rw::Raster*, long)
00102618 00000034 T rw::null::rasterLockPalette(rw::Raster*, long)
0010264c 00000034 T rw::null::rasterUnlockPalette(rw::Raster*)
00102680 00000034 T rw::null::rasterNumLevels(rw::Raster*)
001026b4 00000040 T rw::null::imageFindRasterFormat(rw::Image*, long, long*, long*, long*, long*)
001026f4 00000034 T rw::null::rasterFromImage(rw::Raster*, rw::Image*)
00102728 00000034 T rw::null::rasterToImage(rw::Raster*)
0010275c 00000074 T rw::null::deviceSystem(rw::DeviceReq, void*, long)
001027d0 0000007c t __static_initialization_and_destruction_0(int, int)
0010284c 0000001c t _GLOBAL__sub_I__ZN2rw6engineE
00102868 00000030 W rw::c3d::Im2DVertex::setScreenX(float)
00102898 00000030 W rw::c3d::Im2DVertex::setScreenY(float)
001028c8 00000030 W rw::c3d::Im2DVertex::setScreenZ(float)
001028f8 00000030 W rw::c3d::Im2DVertex::setCameraZ(float)
00102928 0000003c W rw::c3d::Im2DVertex::setRecipCameraZ(float)
00102964 00000074 W rw::c3d::Im2DVertex::setColor(unsigned char, unsigned char, unsigned char, unsigned char)
001029d8 00000034 W rw::c3d::Im2DVertex::setU(float, float)
00102a0c 00000034 W rw::c3d::Im2DVertex::setV(float, float)
00102a40 00000038 W rw::LLLink::init()
00102a78 0000005c W rw::LinkList::append(rw::LLLink*)
00102ad4 00000088 W rw::LinkList::count()
00102b5c 00000054 W rw::Engine::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long))
00102bb0 0000016c T rw::Image::create(long, long, long)
00102d1c 00000050 T rw::Image::destroy()
00102d6c 00000108 T rw::Image::allocate()
00102e74 0000009c T rw::Image::free()
00102f10 00000044 T rw::Image::setPixels(unsigned char*)
00102f54 000005b8 T rw::decompressDXT1(unsigned char*, long, long, unsigned char*)
0010350c 00000584 T rw::decompressDXT3(unsigned char*, long, long, unsigned char*)
00103a90 00000838 T rw::decompressDXT5(unsigned char*, long, long, unsigned char*)
001042c8 000000c4 T rw::Image::setPixelsDXT(long, unsigned char*)
0010438c 000000f4 T rw::Image::compressPalette()
00104480 000002bc T rw::Image::hasAlpha()
0010473c 00000284 T rw::Image::convertTo32()
001049c0 000001c4 T rw::Image::palettize(long)
00104b84 000002f4 T rw::Image::unpalettize(bool)
00104e78 00000344 T rw::Image::makeMask()
001051bc 000001f8 T rw::Image::applyMask(rw::Image*)
001053b4 000001e8 T rw::Image::removeMask()
0010559c 00000110 T rw::Image::setSearchPath(char const*)
001056ac 0000026c T rw::Image::getFilename(char const*)
00105918 000000d4 T rw::Image::readMasked(char const*, char const*)
001059ec 000001ec T rw::Image::read(char const*)
00105bd8 0000010c T rw::Image::registerFileFormat(char const*, rw::Image* (*)(char const*), void (*)(rw::Image*, char const*))
00105ce4 0000007c t rw::imageOpen(void*, long, long)
00105d60 000000e8 t rw::imageClose(void*, long, long)
00105e48 00000030 T rw::Image::registerModule()
00105e78 00000150 t rw::makeTreeAddr(rw::RGBA)
00105fc8 000000a4 T rw::ColorQuant::Node::destroy()
0010606c 000000f8 T rw::ColorQuant::createNode(long)
00106164 000000d0 T rw::ColorQuant::getNode(rw::ColorQuant::Node*, unsigned long, long)
00106234 00000098 T rw::ColorQuant::findNode(rw::ColorQuant::Node*, unsigned long, long)
001062cc 000001f8 T rw::ColorQuant::reduceNode(rw::ColorQuant::Node*)
001064c4 00000098 T rw::ColorQuant::Node::addColor(rw::RGBA)
0010655c 00000044 T rw::ColorQuant::init()
001065a0 0000002c T rw::ColorQuant::destroy()
001065cc 00000054 T rw::ColorQuant::addColor(rw::RGBA)
00106620 00000054 T rw::ColorQuant::findColor(rw::RGBA)
00106674 00000208 T rw::ColorQuant::addImage(rw::Image*)
0010687c 00000230 T rw::ColorQuant::makePalette(long, rw::RGBA*)
00106aac 0000024c T rw::ColorQuant::matchImage(unsigned char*, unsigned long, rw::Image*)
00106cf8 00000040 T rw::SetRenderState(long, unsigned long)
00106d38 0000003c T rw::SetRenderStatePtr(long, void*)
00106d74 00000038 T rw::GetRenderState(long)
00106dac 0000002c T rw::im2d::GetNearZ()
00106dd8 00000058 T rw::im2d::RenderIndexedPrimitive(rw::PrimitiveType, void*, long, void*, long)
00106e30 000000a8 t rw::rasterOpen(void*, long, long)
00106ed8 0000002c t rw::rasterClose(void*, long, long)
00106f04 00000030 T rw::Raster::registerModule()
00106f34 0000019c T rw::Raster::create(long, long, long, long, long)
001070d0 00000058 T rw::Raster::destroy()
00107128 00000058 T rw::Raster::lock(long, long)
00107180 0000004c T rw::Raster::unlock(long)
001071cc 00000050 T rw::Raster::lockPalette(long)
0010721c 00000044 T rw::Raster::unlockPalette()
00107260 00000080 T rw::Raster::calculateNumLevels(long, long)
001072e0 00000088 T rw::Raster::imageFindRasterFormat(rw::Image*, long, long*, long*, long*, long*, long)
00107368 00000090 T rw::Raster::setFromImage(rw::Image*, long)
001073f8 000000c4 T rw::Raster::createFromImage(rw::Image*, long)
001074bc 0000003c T rw::Raster::show(unsigned long)
001074f8 0000007c T rw::Raster::getCurrentContext()
00107574 00000070 T rw::conv_RGBA8888_from_RGBA8888(unsigned char*, unsigned char*)
001075e4 00000070 T rw::conv_BGRA8888_from_RGBA8888(unsigned char*, unsigned char*)
00107654 00000070 T rw::conv_ABGR8888_from_RGBA8888(unsigned char*, unsigned char*)
001076c4 0000006c T rw::conv_RGBA8888_from_RGB888(unsigned char*, unsigned char*)
00107730 0000006c T rw::conv_BGRA8888_from_RGB888(unsigned char*, unsigned char*)
0010779c 0000006c T rw::conv_ABGR8888_from_RGB888(unsigned char*, unsigned char*)
00107808 0000005c T rw::conv_RGB888_from_RGB888(unsigned char*, unsigned char*)
00107864 0000005c T rw::conv_BGR888_from_RGB888(unsigned char*, unsigned char*)
001078c0 00000048 T rw::conv_ARGB1555_from_ARGB1555(unsigned char*, unsigned char*)
00107908 00000058 T rw::conv_ARGB1555_from_RGB555(unsigned char*, unsigned char*)
00107960 00000104 T rw::conv_RGBA5551_from_ARGB1555(unsigned char*, unsigned char*)
00107a64 00000100 T rw::conv_ARGB1555_from_RGBA5551(unsigned char*, unsigned char*)
00107b64 00000158 T rw::conv_RGBA8888_from_ARGB1555(unsigned char*, unsigned char*)
00107cbc 000000b0 T rw::conv_ABGR1555_from_ARGB1555(unsigned char*, unsigned char*)
00107d6c 00000128 T rw::expandPal4(unsigned char*, unsigned long, unsigned char*, unsigned long, long, long)
00107e94 00000110 T rw::compressPal4(unsigned char*, unsigned long, unsigned char*, unsigned long, long, long)
00107fa4 00000128 T rw::expandPal4_BE(unsigned char*, unsigned long, unsigned char*, unsigned long, long, long)
001080cc 00000110 T rw::compressPal4_BE(unsigned char*, unsigned long, unsigned char*, unsigned long, long, long)
001081dc 000000bc T rw::copyPal8(unsigned char*, unsigned long, unsigned char*, unsigned long, long, long)
00108298 00000088 W rw::makeQuat(float, float, float, float)
00108320 00000030 W rw::KeyFrameHeader::next(long)
00108350 00000028 W rw::AnimInterpolator::getFrames()
00108378 00000040 W rw::AnimInterpolator::getInterpFrame(long)
001083b8 00000044 W rw::AnimInterpolator::getAnimFrame(long)
001083fc 00000088 T rw::AnimInterpolatorInfo::registerInterp(rw::AnimInterpolatorInfo*)
00108484 0000008c T rw::AnimInterpolatorInfo::unregisterInterp(rw::AnimInterpolatorInfo*)
00108510 0000008c T rw::AnimInterpolatorInfo::find(long)
0010859c 00000178 T rw::Animation::create(rw::AnimInterpolatorInfo*, long, long, float)
00108714 00000030 T rw::Animation::destroy()
00108744 00000080 T rw::Animation::getNumNodes()
001087c4 00000138 T rw::AnimInterpolator::create(long, long)
001088fc 00000030 T rw::AnimInterpolator::destroy()
0010892c 00000224 T rw::AnimInterpolator::setCurrentAnim(rw::Animation*)
00108b50 00000038 W rw::Matrix::update()
00108b88 00000054 W rw::Material::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
00108bdc 0000004c W rw::Material::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
00108c28 00000028 W rw::UVAnimCustomData::get(rw::Animation*)
00108c50 00000028 W rw::UVAnimDictEntry::fromDict(rw::LLLink*)
00108c78 0000004c T rw::UVAnimCustomData::destroy(rw::Animation*)
00108cc4 00000060 T rw::UVAnimDictionary::add(rw::Animation*)
00108d24 000000d4 T rw::UVAnimDictionary::find(char const*)
00108df8 00000124 t rw::uvAnimStreamRead(rw::Stream*, rw::Animation*)
00108f1c 00000118 t rw::uvAnimStreamWrite(rw::Stream*, rw::Animation*)
00109034 00000030 t rw::uvAnimStreamGetSize(rw::Animation*)
00109064 000000e0 t rw::uvAnimLinearApplyCB(void*, void*)
00109144 00000194 t rw::uvAnimLinearInterpCB(void*, void*, void*, float, void*)
001092d8 00000148 t rw::uvAnimParamApplyCB(void*, void*)
00109420 000001f8 t rw::uvAnimParamInterpCB(void*, void*, void*, float, void*)
00109618 0000019c t rw::registerUVAnimInterpolator()
001097b4 00000048 t rw::createUVAnim(void*, long, long)
001097fc 000000b8 t rw::destroyUVAnim(void*, long, long)
001098b4 00000104 t rw::copyUVAnim(void*, void*, long, long)
001099b8 000000d0 T rw::makeDummyAnimation(char const*)
00109a88 00000280 t rw::readUVAnim(rw::Stream*, long, void*, long, long)
00109d08 00000148 t rw::writeUVAnim(rw::Stream*, long, void*, long, long)
00109e50 000000a4 t rw::getSizeUVAnim(void*, long, long)
00109ef4 0000002c t rw::uvanimOpen(void*, long, long)
00109f20 0000002c t rw::uvanimClose(void*, long, long)
00109f4c 00000090 T rw::registerUVAnimPlugin()
00109fdc 00000070 W rw::makeV3d(float, float, float)
0010a04c 000000a4 W rw::add(rw::V3d const&, rw::V3d const&)
0010a0f0 000000a4 W rw::sub(rw::V3d const&, rw::V3d const&)
0010a194 00000098 W rw::scale(rw::V3d const&, float)
0010a22c 0000006c W rw::length(rw::V3d const&)
0010a298 00000024 W rw::memNative32(void*, unsigned long)
0010a2bc 0000006c W rw::Object::init(unsigned char, unsigned char)
0010a328 00000034 W rw::Texture::addRef()
0010a35c 00000028 W rw::MeshHeader::getMeshes()
0010a384 00000058 W rw::mustrealloc_LOC(void*, unsigned int, unsigned long, char const*)
0010a3dc 00000354 T rw::Geometry::allocateData()
0010a730 00000084 t rw::isDegenerate(unsigned short*)
0010a7b4 000004a0 T rw::Geometry::generateTriangles(signed char*)
0010ac54 00000080 T rw::MaterialList::findIndex(rw::Material*)
0010acd4 00000040 t rw::readMaterialRights(rw::Stream*, long, void*, long, long)
0010ad14 00000068 t rw::writeMaterialRights(rw::Stream*, long, void*, long, long)
0010ad7c 00000060 t rw::getSizeMaterialRights(void*, long, long)
0010addc 00000054 T rw::registerMaterialRightsPlugin()
0010ae30 00000060 t __static_initialization_and_destruction_0(int, int)
0010ae90 0000001c t _GLOBAL__sub_I__ZN2rw8Geometry12numAllocatedE
0010aeac 0000003c W rw::LinkList::isEmpty()
0010aee8 00000028 W rw::Frame::getParent() const
0010af10 0000007c W rw::ObjectWithFrame::setFrame(rw::Frame*)
0010af8c 0000002c W rw::ObjectWithFrame::sync()
0010afb8 00000028 W rw::ObjectWithFrame::fromFrame(rw::LLLink*)
0010afe0 00000040 t rw::frameOpen(void*, long, long)
0010b020 0000002c t rw::frameClose(void*, long, long)
0010b04c 00000030 T rw::Frame::registerModule()
0010b07c 0000015c T rw::Frame::create()
0010b1d8 0000008c T rw::Frame::forAllChildren(rw::Frame* (*)(rw::Frame*, void*), void*)
0010b264 0000004c t rw::countCB(rw::Frame*, void*)
0010b2b0 00000040 T rw::Frame::count()
0010b2f0 000000c4 t rw::syncLTMRecurse(rw::Frame*, unsigned char)
0010b3b4 000000d0 t rw::syncObjRecurse(rw::Frame*)
0010b484 00000134 t rw::syncRecurse(rw::Frame*, unsigned char)
0010b5b8 00000094 T rw::Frame::syncHierarchyLTM()
0010b64c 0000004c T rw::Frame::getLTM()
0010b698 00000220 T rw::Frame::syncDirty()
0010b8b8 00000050 T rw::Frame::rotate(rw::V3d const*, float, rw::CombineOp)
0010b908 00000094 T rw::Frame::updateObjects()
0010b99c 00000050 t __static_initialization_and_destruction_0(int, int)
0010b9ec 0000001c t _GLOBAL__sub_I__ZN2rw5Frame12numAllocatedE
0010ba08 00000034 T rw::setError(rw::Error*)
0010ba3c 0000006c T rw::dbgsprint(unsigned long, ...)
0010baa8 00000054 W rw::Texture::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
0010bafc 0000004c W rw::Texture::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
0010bb48 00000028 W rw::Texture::fromDict(rw::LLLink*)
0010bb70 00000028 W rw::TexDictionary::fromLink(rw::LLLink*)
0010bb98 00000118 t rw::textureOpen(void*, long, long)
0010bcb0 000001dc t rw::textureClose(void*, long, long)
0010be8c 00000030 T rw::Texture::registerModule()
0010bebc 00000044 T rw::Texture::setMipmapping(long)
0010bf00 00000044 T rw::Texture::setAutoMipmapping(long)
0010bf44 00000038 T rw::Texture::getMipmapping()
0010bf7c 00000038 T rw::Texture::getAutoMipmapping()
0010bfb4 0000014c T rw::TexDictionary::create()
0010c100 0000012c T rw::TexDictionary::destroy()
0010c22c 00000068 T rw::TexDictionary::add(rw::Texture*)
0010c294 00000070 T rw::TexDictionary::remove(rw::Texture*)
0010c304 000000c8 T rw::TexDictionary::find(char const*)
0010c3cc 00000044 T rw::TexDictionary::setCurrent(rw::TexDictionary*)
0010c410 000001a0 T rw::Texture::create(rw::Raster*)
0010c5b0 000000cc T rw::Texture::destroy()
0010c67c 00000074 t rw::defaultFindCB(char const*)
0010c6f0 000000a8 t rw::defaultReadCB(char const*, char const*)
0010c798 000001e0 T rw::Texture::read(char const*, char const*)
0010c978 00000388 T rw::Texture::streamRead(rw::Stream*)
0010cd00 000001a0 T rw::Texture::streamWrite(rw::Stream*)
0010cea0 000000b8 T rw::Texture::streamGetSize()
0010cf58 00000070 t __static_initialization_and_destruction_0(int, int)
0010cfc8 0000001c t _GLOBAL__sub_I__ZN2rw7Texture12numAllocatedE
0010cfe4 0000006c W rw::libraryIDPack(int, int)
0010d050 00000054 W rw::Geometry::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
0010d0a4 0000004c W rw::Geometry::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
0010d0f0 00000208 T rw::Geometry::allocateMeshes(long, unsigned long, long)
0010d2f8 000002f0 t rw::readMesh(rw::Stream*, long, void*, long, long)
0010d5e8 0000025c t rw::writeMesh(rw::Stream*, long, void*, long, long)
0010d844 000000f4 t rw::getSizeMesh(void*, long, long)
0010d938 00000058 T rw::registerMeshPlugin()
0010d990 00000064 T rw::MeshHeader::guessNumTriangles()
0010d9f4 0000017c t rw::destroyNativeData(void*, long, long)
0010db70 0000021c t rw::readNativeData(rw::Stream*, long, void*, long, long)
0010dd8c 00000164 t rw::writeNativeData(rw::Stream*, long, void*, long, long)
0010def0 00000124 t rw::getSizeNativeData(void*, long, long)
0010e014 00000058 T rw::registerNativeDataPlugin()
0010e06c 00000048 W rw::Pipeline::init(unsigned long)
0010e0b4 00000024 t rw::nothing(rw::ObjPipeline*, rw::Atomic*)
0010e0d8 00000058 T rw::ObjPipeline::init(unsigned long)
0010e130 00000040 T rw::ObjPipeline::create()
0010e170 00000030 T rw::ObjPipeline::destroy()
0010e1a0 0000011c T rw::findMinVertAndNumVertices(unsigned short*, unsigned long, unsigned long*, long*)
0010e2bc 0000028c T rw::instV3d(int, unsigned char*, rw::V3d*, unsigned long, unsigned long)
0010e548 000001f0 T rw::uninstV3d(int, rw::V3d*, unsigned char*, unsigned long, unsigned long)
0010e738 000000a8 T rw::instTexCoords(int, unsigned char*, rw::TexCoords*, unsigned long, unsigned long)
0010e7e0 000000a8 T rw::uninstTexCoords(int, rw::TexCoords*, unsigned char*, unsigned long, unsigned long)
0010e888 000001c4 T rw::instColor(int, unsigned char*, rw::RGBA*, unsigned long, unsigned long)
0010ea4c 000000d8 T rw::uninstColor(int, rw::RGBA*, unsigned char*, unsigned long, unsigned long)
0010eb24 0000002c t rw::defCtor(void*, long, long)
0010eb50 0000002c t rw::defDtor(void*, long, long)
0010eb7c 00000030 t rw::defCopy(void*, void*, long, long)
0010ebac 0000001c T rw::PluginList::open()
0010ebc8 0000012c T rw::PluginList::close()
0010ecf4 000000a8 T rw::PluginList::construct(void*)
0010ed9c 000000a8 T rw::PluginList::destruct(void*)
0010ee44 00000234 T rw::PluginList::streamRead(rw::Stream*, void*)
0010f078 00000150 T rw::PluginList::streamWrite(rw::Stream*, void*)
0010f1c8 000000fc T rw::PluginList::streamGetSize(void*)
0010f2c4 000000c0 T rw::PluginList::streamSkip(rw::Stream*)
0010f384 0000019c T rw::PluginList::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
0010f520 000000d8 T rw::PluginList::registerStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
0010f5f8 000000bc T rw::PluginList::setStreamRightsCallback(unsigned long, void (*)(void*, long, long, unsigned long))
0010f6b4 000000bc T rw::PluginList::setStreamAlwaysCallback(unsigned long, void (*)(void*, long, long))
0010f770 00000028 W rw::Atomic::getFrame() const
0010f798 00000028 W rw::Light::getFrame() const
0010f7c0 00000028 W rw::Light::fromWorld(rw::LLLink*)
0010f7e8 00000028 W rw::Light::getType()
0010f810 00000028 W rw::Light::getFlags()
0010f838 00000028 W rw::Camera::getFrame() const
0010f860 00000138 T rw::World::create()
0010f998 000000f4 T rw::World::addLight(rw::Light*)
0010fa8c 00000094 T rw::World::addCamera(rw::Camera*)
0010fb20 000003d8 T rw::World::enumerateLights(rw::Atomic*, rw::WorldLights*)
0010fef8 00000050 t __static_initialization_and_destruction_0(int, int)
0010ff48 0000001c t _GLOBAL__sub_I__ZN2rw5World12numAllocatedE
0010ff64 0000018c T rw::BBox::calculate(rw::V3d*, long)
001100f0 00000030 W rw::Light::setFrame(rw::Frame*)
00110120 00000020 t rw::lightSync(rw::ObjectWithFrame*)
00110140 00000034 t rw::worldLightSync(rw::ObjectWithFrame*)
00110174 000001d8 T rw::Light::create(long)
0011034c 00000090 T rw::Light::setColor(float, float, float)
001103dc 00000050 t __static_initialization_and_destruction_0(int, int)
0011042c 0000001c t _GLOBAL__sub_I__ZN2rw5Light12numAllocatedE
00110448 00000054 W rw::Atomic::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
0011049c 0000004c W rw::Atomic::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
001104e8 00000060 W rw::Driver::registerPlugin(long, long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long))
00110548 00000040 t rw::createAtomicMatFX(void*, long, long)
00110588 0000005c t rw::copyAtomicMatFX(void*, void*, long, long)
001105e4 00000058 t rw::readAtomicMatFX(rw::Stream*, long, void*, long, long)
0011063c 00000048 t rw::writeAtomicMatFX(rw::Stream*, long, void*, long, long)
00110684 00000068 t rw::getSizeAtomicMatFX(void*, long, long)
001106ec 00000214 t rw::clearMatFX(rw::MatFX*)
00110900 0000013c T rw::MatFX::setEffects(rw::Material*, unsigned long)
00110a3c 0000003c T rw::MatFX::get(rw::Material const*)
00110a78 00000080 T rw::MatFX::getEffectIndex(unsigned long)
00110af8 00000040 t rw::createMaterialMatFX(void*, long, long)
00110b38 00000064 t rw::destroyMaterialMatFX(void*, long, long)
00110b9c 0000027c t rw::copyMaterialMatFX(void*, void*, long, long)
00110e18 0000065c t rw::readMaterialMatFX(rw::Stream*, long, void*, long, long)
00111474 00000468 t rw::writeMaterialMatFX(rw::Stream*, long, void*, long, long)
001118dc 000002b4 t rw::getSizeMaterialMatFX(void*, long, long)
00111b90 00000060 T rw::MatFX::enableEffects(rw::Atomic*)
00111bf0 00000098 t rw::matfxOpen(void*, long, long)
00111c88 000000a0 t rw::matfxClose(void*, long, long)
00111d28 00000100 T rw::registerMatFXPlugin()
00111e28 00000038 W rw::Stream::~Stream()
00111e28 00000038 W rw::Stream::~Stream()
00111e60 00000030 W rw::Stream::~Stream()
00111e90 00000020 W rw::Stream::close()
00111eb0 00000034 W rw::Stream::Stream()
00111eb0 00000034 W rw::Stream::Stream()
00111ee4 00000048 W rw::StreamFile::StreamFile()
00111ee4 00000048 W rw::StreamFile::StreamFile()
00111f2c 000000b0 T rw::BMPheader::read(rw::Stream*)
00111fdc 00000084 T rw::BMPheader::write(rw::Stream*)
00112060 0000003c W rw::StreamMemory::StreamMemory()
00112060 0000003c W rw::StreamMemory::StreamMemory()
0011209c 000006b0 T rw::readBMP(char const*)
0011274c 0000062c T rw::writeBMP(rw::Image*, char const*)
00112d78 0000003c W rw::StreamMemory::~StreamMemory()
00112d78 0000003c W rw::StreamMemory::~StreamMemory()
00112db4 00000030 W rw::StreamMemory::~StreamMemory()
00112de4 0000003c W rw::StreamFile::~StreamFile()
00112de4 0000003c W rw::StreamFile::~StreamFile()
00112e20 00000030 W rw::StreamFile::~StreamFile()
00112e50 00000054 W rw::Frame::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
00112ea4 0000004c W rw::Frame::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
00112ef0 00000054 W rw::Light::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
00112f44 0000004c W rw::Light::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
00112f90 00000054 W rw::Camera::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
00112fe4 0000004c W rw::Camera::registerPluginStream(unsigned long, rw::Stream* (*)(rw::Stream*, long, void*, long, long), rw::Stream* (*)(rw::Stream*, long, void*, long, long), long (*)(void*, long, long))
00113030 00000054 t rw::createUserData(void*, long, long)
00113084 00000164 t rw::destroyUserData(void*, long, long)
001131e8 00000374 t rw::copyUserData(void*, void*, long, long)
0011355c 000002d4 t rw::readUserData(rw::Stream*, long, void*, long, long)
00113830 0000021c t rw::writeUserData(rw::Stream*, long, void*, long, long)
00113a4c 000001a8 t rw::getSizeUserData(void*, long, long)
00113bf4 000001a0 T rw::registerUserDataPlugin()
00113d94 00000078 W rw::normalize(rw::V3d const&)
00113e0c 00000068 W rw::dot(rw::V3d const&, rw::V3d const&)
00113e74 000000d0 W rw::add(rw::Quat const&, rw::Quat const&)
00113f44 000000ac W rw::negate(rw::Quat const&)
00113ff0 00000080 W rw::dot(rw::Quat const&, rw::Quat const&)
00114070 000000c0 W rw::scale(rw::Quat const&, float)
00114130 00000024 W rw::memNative16(void*, unsigned long)
00114154 00000068 W rw::libraryIDUnpackVersion(unsigned long)
001141bc 00000044 W rw::libraryIDUnpackBuild(unsigned long)
00114200 000000cc T rw::strncmp_ci(char const*, char const*, int)
001142cc 000001dc T rw::slerp(rw::Quat const&, rw::Quat const&, float)
001144a8 000000ec T rw::cross(rw::V3d const&, rw::V3d const&)
00114594 0000027c T rw::V3d::transformPoints(rw::V3d*, rw::V3d const*, long, rw::Matrix const*)
00114810 00000668 T rw::RawMatrix::mult(rw::RawMatrix*, rw::RawMatrix*, rw::RawMatrix*)
00114e78 00000040 T rw::Matrix::create()
00114eb8 00000050 T rw::Matrix::setIdentity()
00114f08 00000180 T rw::Matrix::optimize(rw::Matrix::Tolerance*)
00115088 000000e4 T rw::Matrix::mult(rw::Matrix*, rw::Matrix const*, rw::Matrix const*)
0011516c 000000a4 T rw::Matrix::invert(rw::Matrix*, rw::Matrix const*)
00115210 00000124 T rw::Matrix::rotate(rw::V3d const*, float, rw::CombineOp)
00115334 0000011c T rw::Matrix::rotate(rw::Quat const&, rw::CombineOp)
00115450 00000158 T rw::Matrix::translate(rw::V3d const*, rw::CombineOp)
001155a8 000003dc T rw::Matrix::mult_(rw::Matrix*, rw::Matrix const*, rw::Matrix const*)
00115984 000001b0 T rw::Matrix::invertOrthonormal(rw::Matrix*, rw::Matrix const*)
00115b34 000003ec T rw::Matrix::invertGeneral(rw::Matrix*, rw::Matrix const*)
00115f20 00000270 T rw::Matrix::makeRotation(rw::Matrix*, rw::V3d const*, float)
00116190 00000220 T rw::Matrix::makeRotation(rw::Matrix*, rw::Quat const&)
001163b0 000000bc T rw::Matrix::normalError()
0011646c 00000094 T rw::Matrix::orthogonalError()
00116500 00000120 T rw::Matrix::identityError()
00116620 0000020c T rw::correctPathCase(char*)
0011682c 0000009c T rw::makePath(char*)
001168c8 00000048 T rw::Stream::write32(void const*, unsigned long)
00116910 00000048 T rw::Stream::write16(void const*, unsigned long)
00116958 00000058 T rw::Stream::read32(void*, unsigned long)
001169b0 00000058 T rw::Stream::read16(void*, unsigned long)
00116a08 00000048 T rw::Stream::writeI8(signed char)
00116a50 00000048 T rw::Stream::writeU8(unsigned char)
00116a98 0000003c T rw::Stream::writeI16(short)
00116ad4 0000003c T rw::Stream::writeU16(unsigned short)
00116b10 00000038 T rw::Stream::writeI32(long)
00116b48 00000038 T rw::Stream::writeU32(unsigned long)
00116b80 00000038 T rw::Stream::writeF32(float)
00116bb8 00000040 T rw::Stream::readI8()
00116bf8 00000040 T rw::Stream::readU8()
00116c38 00000034 T rw::Stream::readI16()
00116c6c 00000034 T rw::Stream::readU16()
00116ca0 00000034 T rw::Stream::readI32()
00116cd4 00000034 T rw::Stream::readU32()
00116d08 00000038 T rw::Stream::readF32()
00116d40 00000020 T rw::StreamMemory::close()
00116d60 00000124 T rw::StreamMemory::write8(void const*, unsigned long)
00116e84 000000ec T rw::StreamMemory::read8(void*, unsigned long)
00116f70 000000d4 T rw::StreamMemory::seek(long, long)
00117044 00000028 T rw::StreamMemory::tell()
0011706c 00000038 T rw::StreamMemory::eof()
001170a4 00000088 T rw::StreamMemory::open(unsigned char*, unsigned long, unsigned long)
0011712c 000000fc T rw::StreamFile::open(char const*, char const*)
00117228 0000006c T rw::StreamFile::close()
00117294 00000040 T rw::StreamFile::write8(void const*, unsigned long)
001172d4 00000040 T rw::StreamFile::read8(void*, unsigned long)
00117314 0000003c T rw::StreamFile::seek(long, long)
00117350 00000030 T rw::StreamFile::tell()
00117380 00000040 T rw::StreamFile::eof()
001173c0 00000078 T rw::writeChunkHeader(rw::Stream*, long, long)
00117438 000000ec T rw::readChunkHeaderInfo(rw::Stream*, rw::ChunkHeaderInfo*)
00117524 000000cc T rw::findChunk(rw::Stream*, unsigned long, unsigned long*, unsigned long*)
001175f0 000000c4 T rw::getFileContents(char const*, unsigned long*)
001176b4 000003f0 T rw::readPNG(char const*)
00117aa4 00000558 T rw::writePNG(rw::Image*, char const*)
00117ffc 00000038 W rw::Atomic::setStreamRightsCallback(unsigned long, void (*)(void*, long, long, unsigned long))
00118034 00000038 W rw::Atomic::setStreamAlwaysCallback(unsigned long, void (*)(void*, long, long))
0011806c 0000003c W rw::Skin::get(rw::Geometry const*)
001180a8 00000040 t rw::createSkin(void*, long, long)
001180e8 0000008c t rw::destroySkin(void*, long, long)
00118174 00000130 t rw::copySkin(void*, void*, long, long)
001182a4 00000128 T rw::readSkinSplitData(rw::Stream*, rw::Skin*)
001183cc 000000b8 T rw::writeSkinSplitData(rw::Stream*, rw::Skin*)
00118484 00000060 T rw::skinSplitDataSize(rw::Skin*)
001184e4 00000330 t rw::readSkin(rw::Stream*, long, void*, long, long)
00118814 000002b0 t rw::writeSkin(rw::Stream*, long, void*, long, long)
00118ac4 000001bc t rw::getSizeSkin(void*, long, long)
00118c80 000002cc t rw::readSkinLegacy(rw::Stream*, long, void*, long, long)
00118f4c 00000034 t rw::skinRights(void*, long, long, unsigned long)
00118f80 00000074 t rw::skinAlways(void*, long, long)
00118ff4 00000040 t rw::createSkinAtm(void*, long, long)
00119034 0000002c t rw::destroySkinAtm(void*, long, long)
00119060 00000050 t rw::copySkinAtm(void*, void*, long, long)
001190b0 0000009c t rw::skinOpen(void*, long, long)
0011914c 000000a4 t rw::skinClose(void*, long, long)
001191f0 00000128 T rw::registerSkinPlugin()
00119318 000001fc T rw::Skin::init(long, long, long)
00119514 000000bc T rw::Skin::findNumWeights(long)
001195d0 000001a8 T rw::Skin::findUsedBones(long)
00119778 00000048 T rw::Skin::setPipeline(rw::Atomic*, long)
001197c0 00000040 W rw::V2d::set(float, float)
00119800 00000088 W rw::neg(rw::V3d const&)
00119888 00000030 W rw::Camera::setFrame(rw::Frame*)
001198b8 00000048 T rw::defaultBeginUpdateCB(rw::Camera*)
00119900 00000034 T rw::defaultEndUpdateCB(rw::Camera*)
00119934 000007bc t rw::buildPlanes(rw::Camera*)
0011a0f0 00000460 t rw::buildClipPersp(rw::Camera*)
0011a550 0000033c t rw::buildClipParallel(rw::Camera*)
0011a88c 00000238 t rw::cameraSync(rw::ObjectWithFrame*)
0011aac4 00000044 T rw::worldBeginUpdateCB(rw::Camera*)
0011ab08 0000002c T rw::worldEndUpdateCB(rw::Camera*)
0011ab34 00000034 t rw::worldCameraSync(rw::ObjectWithFrame*)
0011ab68 00000250 T rw::Camera::create()
0011adb8 00000044 T rw::Camera::clear(rw::RGBA*, unsigned long)
0011adfc 00000034 T rw::Camera::showRaster(unsigned long)
0011ae30 00000050 t __static_initialization_and_destruction_0(int, int)
0011ae80 0000001c t _GLOBAL__sub_I__ZN2rw6Camera12numAllocatedE
0011ae9c 000000e4 W rw::lerp(rw::V3d const&, rw::V3d const&, float)
0011af80 000002d4 T rw::HAnimHierarchy::create(long, long*, long*, long, long)
0011b254 00000070 T rw::HAnimHierarchy::destroy()
0011b2c4 00000038 T rw::HAnimData::get(rw::Frame*)
0011b2fc 00000054 t rw::createHAnim(void*, long, long)
0011b350 000000d8 t rw::destroyHAnim(void*, long, long)
0011b428 000001b8 t rw::copyHAnim(void*, void*, long, long)
0011b5e0 000001cc t rw::readHAnim(rw::Stream*, long, void*, long, long)
0011b7ac 00000164 t rw::writeHAnim(rw::Stream*, long, void*, long, long)
0011b910 000000c0 t rw::getSizeHAnim(void*, long, long)
0011b9d0 0000015c t rw::hAnimFrameRead(rw::Stream*, rw::Animation*)
0011bb2c 00000128 t rw::hAnimFrameWrite(rw::Stream*, rw::Animation*)
0011bc54 00000038 t rw::hAnimFrameGetSize(rw::Animation*)
0011bc8c 00000060 t rw::hanimApplyCB(void*, void*)
0011bcec 00000144 t rw::hanimInterpCB(void*, void*, void*, float, void*)
0011be30 000000f0 t rw::hanimOpen(void*, long, long)
0011bf20 0000003c t rw::hanimClose(void*, long, long)
0011bf5c 00000090 T rw::registerHAnimPlugin()
0011bfec 00000050 W rw::V3d::set(float, float, float)
0011c03c 00000034 W rw::ObjPipeline::instance(rw::Atomic*)
0011c070 00000040 W rw::Frame::dirty() const
0011c0b0 000000d4 T rw::Atomic::getWorldBoundingSphere()
0011c184 00000040 t rw::readAtomicRights(rw::Stream*, long, void*, long, long)
0011c1c4 00000068 t rw::writeAtomicRights(rw::Stream*, long, void*, long, long)
0011c22c 00000060 t rw::getSizeAtomicRights(void*, long, long)
0011c28c 00000054 T rw::registerAtomicRightsPlugin()
0011c2e0 00000060 t __static_initialization_and_destruction_0(int, int)
0011c340 0000001c t _GLOBAL__sub_I__ZN2rw5Clump12numAllocatedE
0011c35c 00000140 T rw::TGAHeader::read(rw::Stream*)
0011c49c 00000110 T rw::TGAHeader::write(rw::Stream*)
0011c5ac 0000066c T rw::readTGA(char const*)
0011cc18 00000558 T rw::writeTGA(rw::Image*, char const*)
0011d170 00000054 W rw::Raster::registerPlugin(long, unsigned long, void* (*)(void*, long, long), void* (*)(void*, long, long), void* (*)(void*, void*, long, long))
0011d1c4 00000034 t C3D_TexCalcLevelSize
0011d1f8 00000054 t C3D_TexCalcTotalSize
0011d24c 000000e8 t C3D_TexGetImagePtr
0011d334 00000040 t C3D_Tex2DGetImagePtr
0011d374 00000074 t C3D_TexSetFilter
0011d3e8 00000068 t C3D_FrameBufAttrib
0011d450 0000008c t C3D_FrameBufColor
0011d4dc 000000b4 t C3D_FrameBufDepth
0011d590 00000048 t rw::c3d::getLevelSize(rw::Raster*, long)
0011d5d8 00000250 t rw::c3d::textureFormatMapping(rw::Raster*, rw::c3d::C3DRaster*)
0011d828 00000300 t rw::c3d::rasterCreateTexture(rw::Raster*)
0011db28 00000074 t rw::c3d::cameraFormat(GPU_TEXCOLOR)
0011db9c 000003f4 t rw::c3d::rasterCreateCameraTexture(rw::Raster*, bool)
0011df90 0000019c t rw::c3d::rasterCreateZbuffer(rw::Raster*)
0011e12c 000001f0 T rw::c3d::rasterCreate(rw::Raster*)
0011e31c 00000178 T rw::c3d::texSwizzle(rw::Raster*, rw::c3d::C3DRaster*)
0011e494 00000194 T rw::c3d::texUnswizzle(rw::Raster*, rw::c3d::C3DRaster*)
0011e628 0000029c T rw::c3d::rasterLock(rw::Raster*, long, long)
0011e8c4 00000160 T rw::c3d::rasterUnlock(rw::Raster*, long)
0011ea24 0000003c T rw::c3d::rasterNumLevels(rw::Raster*)
0011ea60 000001dc T rw::c3d::imageFindRasterFormat(rw::Image*, long, long*, long*, long*, long*)
0011ec3c 0000046c T rw::c3d::rasterFromImage(rw::Raster*, rw::Image*)
0011f0a8 0000042c T rw::c3d::rasterToImage(rw::Raster*)
0011f4d4 00000060 t rw::c3d::createNativeRaster(void*, long, long)
0011f534 0000028c t rw::c3d::destroyNativeRaster(void*, long, long)
0011f7c0 00000064 t rw::c3d::copyNativeRaster(void*, void*, long, long)
0011f824 00000054 T rw::c3d::registerNativeRaster()
0011f878 0000003c t rw::c3d::skinOpen(void*, long, long)
0011f8b4 00000048 t rw::c3d::skinClose(void*, long, long)
0011f8fc 00000040 T rw::c3d::initSkin()
0011f93c 00000070 T rw::c3d::makeSkinPipeline()
0011f9ac 000000ec T rw::c3d::freeInstanceData(rw::Geometry*)
0011fa98 00000030 T rw::c3d::destroyNativeData(void*, long, long)
0011fac8 00000278 t rw::c3d::instanceMesh(rw::ObjPipeline*, rw::Geometry*)
0011fd40 0000013c t rw::c3d::instance(rw::ObjPipeline*, rw::Atomic*)
0011fe7c 00000034 t rw::c3d::uninstance(rw::ObjPipeline*, rw::Atomic*)
0011feb0 000000cc t rw::c3d::render(rw::ObjPipeline*, rw::Atomic*)
0011ff7c 00000080 T rw::c3d::ObjPipeline::init()
0011fffc 0000003c T rw::c3d::ObjPipeline::create()
00120038 00000608 T rw::c3d::defaultInstanceCB(rw::Geometry*, rw::c3d::InstanceDataHeader*, long)
00120640 00000038 T rw::c3d::defaultUninstanceCB(rw::Geometry*, rw::c3d::InstanceDataHeader*)
00120678 00000054 T rw::c3d::makeDefaultPipeline()
001206cc 00000108 t rw::c3d::driverOpen(void*, long, long)
001207d4 0000002c t rw::c3d::driverClose(void*, long, long)
00120800 00000040 T rw::c3d::registerPlatformPlugins()
00120840 00000080 W rw::convMatrix(rw::RawMatrix*, rw::Matrix*)
001208c0 000000b8 t C3D_FVUnifWritePtr
00120978 00000098 t C3D_FVUnifMtxNx4
00120a10 00000060 W rw::c3d::setMaterial(unsigned long, rw::RGBA const&, rw::SurfaceProperties const&, float)
00120a70 00000040 t rw::c3d::c3dUniformMatrix4fv(int, int, int, C3D_Mtx*)
00120ab0 000000c0 T rw::c3d::matfxDefaultRender(rw::c3d::InstanceDataHeader*, rw::c3d::InstanceData*, unsigned long)
00120b70 00000144 T rw::c3d::uploadEnvMatrix(rw::Frame*)
00120cb4 00000108 T rw::c3d::matfxEnvRender(rw::c3d::InstanceDataHeader*, rw::c3d::InstanceData*, unsigned long, rw::MatFX::Env*)
00120dbc 00000130 T rw::c3d::matfxRenderCB(rw::Atomic*, rw::c3d::InstanceDataHeader*)
00120eec 0000006c T rw::c3d::makeMatFXPipeline()
00120f58 0000008c t rw::c3d::matfxOpen(void*, long, long)
00120fe4 00000068 t rw::c3d::matfxClose(void*, long, long)
0012104c 0000003c T rw::c3d::initMatFX()
00121088 00000090 W rw::equal(rw::RGBA const&, rw::RGBA const&)
00121118 000000a8 W rw::convColor(rw::RGBAf*, rw::RGBA const*)
001211c0 0000002c W rw::Texture::getFilter()
001211ec 00000038 W rw::Texture::getAddressU()
00121224 00000038 W rw::Texture::getAddressV()
0012125c 000000b8 t C3D_FVUnifWritePtr
00121314 00000098 t C3D_FVUnifMtxNx4
001213ac 000000c0 t C3D_TexInit
0012146c 00000074 t C3D_TexSetFilter
001214e0 00000074 t C3D_TexSetWrap
00121554 000000b4 t C3D_FrameBufDepth
00121608 00000040 t rw::c3d::c3dUniformMatrix4fv(int, int, int, C3D_Mtx*)
00121648 000000dc t rw::c3d::c3dUniform4fv(int, int, float*)
00121724 000001a4 T rw::c3d::setC3DRenderState(unsigned long, unsigned long)
001218c8 000004f4 T rw::c3d::flushC3DRenderState()
00121dbc 00000050 T rw::c3d::setAlphaBlend(long)
00121e0c 00000098 t rw::c3d::setDepthTest(long)
00121ea4 000000b8 t rw::c3d::setDepthWrite(long)
00121f5c 000000a4 t rw::c3d::setAlphaTest(long)
00122000 00000084 t rw::c3d::setAlphaTestFunction(unsigned long)
00122084 00000060 t rw::c3d::setVertexAlpha(long)
001220e4 00000060 t rw::c3d::setTextureAlpha(int)
00122144 000000b0 t rw::c3d::updateRasterParams(rw::c3d::C3DRaster*)
001221f4 000000c8 t rw::c3d::setRasterParams(int, long, long, long)
001222bc 000000f4 t rw::c3d::setRasterStage(int, rw::Raster*)
001223b0 0000008c T rw::c3d::setTexture(long, rw::Texture*)
0012243c 000004a8 t rw::c3d::setRenderState(long, void*)
001228e4 000002a0 t rw::c3d::getRenderState(long)
00122b84 00000274 t rw::c3d::resetRenderState()
00122df8 000004a8 T rw::c3d::setLights(rw::WorldLights*)
001232a0 00000068 T rw::c3d::setProjectionMatrix(C3D_Mtx)
00123308 00000068 T rw::c3d::setViewMatrix(C3D_Mtx)
00123370 00000100 T rw::c3d::setWorldMatrix(rw::Matrix*)
00123470 00000144 T rw::c3d::setMaterial(rw::RGBA const&, rw::SurfaceProperties const&, float)
001235b4 00000148 T rw::c3d::flushCache()
001236fc 00000184 t rw::c3d::prepareFrameBuffer(rw::Camera*)
00123880 00000054 T rw::c3d::cameraTilt(rw::Camera*)
001238d4 000000bc T rw::c3d::cameraRenderOn(rw::Camera*)
00123990 00000450 t rw::c3d::beginUpdate(rw::Camera*)
00123de0 00000024 t rw::c3d::endUpdate(rw::Camera*)
00123e04 000000e0 t rw::c3d::clearCamera(rw::Camera*, rw::RGBA*, unsigned long)
00123ee4 00000128 t rw::c3d::showRaster(rw::Raster*, unsigned long)
0012400c 000003d4 t rw::c3d::rasterBlit(rw::c3d::C3DRaster*, rw::Raster*, rw::Raster*)
001243e0 0000014c t rw::c3d::rasterRenderFast(rw::Raster*, long, long)
0012452c 000000f4 t rw::c3d::openC3D(rw::EngineOpenParams*)
00124620 0000001c t rw::c3d::closeC3D()
0012463c 00000020 t rw::c3d::stopC3D()
0012465c 000000e0 t rw::c3d::initC3D()
0012473c 0000001c t rw::c3d::finalizeC3D()
00124758 0000020c t rw::c3d::deviceSystemC3D(rw::DeviceReq, void*, long)
00124964 00000088 t C3D_TexEnvInit
001249ec 000000a4 t C3D_TexEnvSrc
00124a90 0000009c t C3D_TexEnvOpRgb
00124b2c 00000070 t C3D_TexEnvFunc
00124b9c 0000003c T rw::c3d::Shader::loadDVLB(unsigned char*, unsigned long)
00124bd8 00000094 T rw::c3d::Shader::create(unsigned long, void (*)())
00124c6c 00000058 T rw::c3d::Shader::use()
00124cc4 0000003c T rw::c3d::Shader::destroy()
00124d00 0000006c T rw::c3d::combiner_simple()
00124d6c 000000d8 T rw::c3d::combiner_matfx()
00124e44 000000b8 t C3D_FVUnifWritePtr
00124efc 0000007c t C3D_FVUnifSet
00124f78 000000a8 T rw::c3d::openIm2D()
00125020 00000030 T rw::c3d::closeIm2D()
00125050 000000bc T rw::c3d::im2DRenderLine(void*, long, long, long)
0012510c 000000f8 T rw::c3d::im2DRenderTriangle(void*, long, long, long, long)
00125204 000000f8 T rw::c3d::im2DSetXform()
001252fc 00000308 T rw::c3d::im2DRenderIndexedPrimitive(rw::PrimitiveType, void*, long, void*, long)
00125604 00000044 T rw::c3d::im2DRenderPrimitive(rw::PrimitiveType, void*, long)
00125648 000000a8 T rw::c3d::openIm3D()
001256f0 00000030 T rw::c3d::closeIm3D()
00125720 000000b0 T rw::c3d::im3DTransform(void*, long, rw::Matrix*, unsigned long)
001257d0 000002b4 T rw::c3d::im3DRenderIndexedPrimitive(rw::PrimitiveType, void*, long)
00125a84 00000034 T rw::c3d::im3DRenderPrimitive(rw::PrimitiveType)
00125ab8 00000018 T rw::c3d::im3DEnd()
00125ad0 00000068 t C3D_FixedAttribSet
00125b38 00000048 T rw::c3d::drawInst_simple(rw::c3d::InstanceDataHeader*, rw::c3d::InstanceData*)
00125b80 00000060 T rw::c3d::drawInst(rw::c3d::InstanceDataHeader*, rw::c3d::InstanceData*)
00125be0 00000168 T rw::c3d::genAttribPointers(rw::c3d::InstanceDataHeader*)
00125d48 0000003c T rw::c3d::setAttribPointers(rw::c3d::InstanceDataHeader*)
00125d84 00000084 T rw::c3d::setAttribsFixed()
00125e08 000000d8 T rw::c3d::lightingCB(rw::Atomic*)
00125ee0 00000148 T rw::c3d::defaultRenderCB(rw::Atomic*, rw::c3d::InstanceDataHeader*)
00126028 0000008c W rw::c3d::Packet::index(int, int, int)
001260b4 00000090 W rw::c3d::Packet::get(int)
00126144 00000044 W rw::c3d::Packet::set(int, rw::c3d::Color)
00126188 0000006c W rw::c3d::Packet::swap(int, int)
001261f4 0000008c W rw::c3d::Packet::position(int, int)
00126280 0000008c W rw::c3d::Packet::flush()
0012630c 0000006c W rw::c3d::Packet::Packet(unsigned char*, unsigned char*, int, int, int)
0012630c 0000006c W rw::c3d::Packet::Packet(unsigned char*, unsigned char*, int, int, int)
00126378 000002b8 T rw::c3d::swizzle_8x8(rw::c3d::Packet*, bool)
00126630 000000e0 T rw::c3d::cpuSwizzle(unsigned char*, unsigned char*, int, int, int, bool)
00126710 0000003c t rw::xbox::matfxOpen(void*, long, long)
0012674c 00000048 t rw::xbox::matfxClose(void*, long, long)
00126794 0000003c T rw::xbox::initMatFX()
001267d0 0000005c T rw::xbox::makeMatFXPipeline()
0012682c 00000024 T rw::d3d9::matfxRenderCB_Shader(rw::Atomic*, rw::d3d9::InstanceDataHeader*)
00126850 0000003c t rw::d3d9::matfxOpen(void*, long, long)
0012688c 00000048 t rw::d3d9::matfxClose(void*, long, long)
001268d4 0000003c T rw::d3d9::initMatFX()
00126910 0000006c T rw::d3d9::makeMatFXPipeline()
0012697c 00000038 T rw::xbox::getVertexFmt(rw::Geometry*)
001269b4 000000c4 T rw::xbox::makeVertexFmt(long, unsigned long)
00126a78 00000164 T rw::xbox::getVertexFmtStride(unsigned long)
00126bdc 00000040 t rw::xbox::createVertexFmt(void*, long, long)
00126c1c 00000050 t rw::xbox::copyVertexFmt(void*, void*, long, long)
00126c6c 0000004c t rw::xbox::readVertexFmt(rw::Stream*, long, void*, long, long)
00126cb8 00000048 t rw::xbox::writeVertexFmt(rw::Stream*, long, void*, long, long)
00126d00 00000048 t rw::xbox::getSizeVertexFmt(void*, long, long)
00126d48 00000070 T rw::xbox::registerVertexFormatPlugin()
00126db8 00000368 T rw::xbox::readNativeSkin(rw::Stream*, long, void*, long)
00127120 000001c4 T rw::xbox::writeNativeSkin(rw::Stream*, long, void*, long)
001272e4 000000b0 T rw::xbox::getSizeNativeSkin(void*, long)
00127394 000003dc T rw::xbox::skinInstanceCB(rw::Geometry*, rw::xbox::InstanceDataHeader*)
00127770 0000035c T rw::xbox::skinUninstanceCB(rw::Geometry*, rw::xbox::InstanceDataHeader*)
00127acc 0000003c t rw::xbox::skinOpen(void*, long, long)
00127b08 00000048 t rw::xbox::skinClose(void*, long, long)
00127b50 00000040 T rw::xbox::initSkin()
00127b90 00000060 T rw::xbox::makeSkinPipeline()
00127bf0 00000028 T rw::d3d9::skinInstanceCB(rw::Geometry*, rw::d3d9::InstanceDataHeader*, long)
00127c18 00000024 T rw::d3d9::skinRenderCB(rw::Atomic*, rw::d3d9::InstanceDataHeader*)
00127c3c 0000003c t rw::d3d9::skinOpen(void*, long, long)
00127c78 00000048 t rw::d3d9::skinClose(void*, long, long)
00127cc0 00000040 T rw::d3d9::initSkin()
00127d00 0000006c T rw::d3d9::makeSkinPipeline()
00127d6c 0000003c t rw::d3d8::skinOpen(void*, long, long)
00127da8 00000048 t rw::d3d8::skinClose(void*, long, long)
00127df0 00000040 T rw::d3d8::initSkin()
00127e30 00000070 T rw::d3d8::makeSkinPipeline()
00127ea0 0000003c t rw::d3d8::matfxOpen(void*, long, long)
00127edc 00000048 t rw::d3d8::matfxClose(void*, long, long)
00127f24 0000003c T rw::d3d8::initMatFX()
00127f60 0000006c T rw::d3d8::makeMatFXPipeline()
00127fcc 00000024 T rw::d3d9::defaultRenderCB_Shader(rw::Atomic*, rw::d3d9::InstanceDataHeader*)
00127ff0 00000024 T rw::d3d8::defaultRenderCB(rw::Atomic*, rw::d3d8::InstanceDataHeader*)
00128014 000000d8 t rw::xbox::driverOpen(void*, long, long)
001280ec 0000002c t rw::xbox::driverClose(void*, long, long)
00128118 00000040 T rw::xbox::registerPlatformPlugins()
00128158 000000d0 T rw::xbox::destroyNativeData(void*, long, long)
00128228 000004d0 T rw::xbox::readNativeData(rw::Stream*, long, void*, long, long)
001286f8 000002f0 T rw::xbox::writeNativeData(rw::Stream*, long, void*, long, long)
001289e8 0000008c T rw::xbox::getSizeNativeData(void*, long, long)
00128a74 0000034c t rw::xbox::instance(rw::ObjPipeline*, rw::Atomic*)
00128dc0 000002e4 t rw::xbox::uninstance(rw::ObjPipeline*, rw::Atomic*)
001290a4 00000064 T rw::xbox::ObjPipeline::init()
00129108 0000003c T rw::xbox::ObjPipeline::create()
00129144 00000340 T rw::xbox::defaultInstanceCB(rw::Geometry*, rw::xbox::InstanceDataHeader*)
00129484 0000029c T rw::xbox::defaultUninstanceCB(rw::Geometry*, rw::xbox::InstanceDataHeader*)
00129720 00000044 T rw::xbox::makeDefaultPipeline()
00129764 0000022c t rw::xbox::calculateTextureSize(unsigned long, unsigned long, unsigned long, unsigned long)
00129990 00000280 t rw::xbox::createTexture(long, long, long, unsigned long)
00129c10 0000016c t rw::xbox::rasterSetFormat(rw::Raster*)
00129d7c 0000018c t rw::xbox::rasterCreateTexture(rw::Raster*)
00129f08 00000168 T rw::xbox::rasterCreate(rw::Raster*)
0012a070 00000138 T rw::xbox::rasterLock(rw::Raster*, long, long)
0012a1a8 00000078 T rw::xbox::rasterUnlock(rw::Raster*, long)
0012a220 00000050 T rw::xbox::rasterNumLevels(rw::Raster*)
0012a270 000001b8 t rw::xbox::unswizzle(unsigned char*, unsigned char*, long, long, long)
0012a428 000004fc T rw::xbox::rasterToImage(rw::Raster*)
0012a924 00000084 t rw::xbox::createNativeRaster(void*, long, long)
0012a9a8 0000002c t rw::xbox::destroyNativeRaster(void*, long, long)
0012a9d4 0000007c t rw::xbox::copyNativeRaster(void*, void*, long, long)
0012aa50 00000054 T rw::xbox::registerNativeRaster()
0012aaa4 00000108 t rw::d3d9::driverOpen(void*, long, long)
0012abac 0000002c t rw::d3d9::driverClose(void*, long, long)
0012abd8 00000054 T rw::d3d9::registerPlatformPlugins()
0012ac2c 000000a4 T rw::d3d9::createVertexDeclaration(rw::d3d9::VertexElement*)
0012acd0 00000030 T rw::d3d9::destroyVertexDeclaration(void*)
0012ad00 00000090 T rw::d3d9::getDeclaration(void*, rw::d3d9::VertexElement*)
0012ad90 000000c8 T rw::d3d9::freeInstanceData(rw::Geometry*)
0012ae58 00000030 T rw::d3d9::destroyNativeData(void*, long, long)
0012ae88 000007a0 T rw::d3d9::readNativeData(rw::Stream*, long, void*, long, long)
0012b628 00000578 T rw::d3d9::writeNativeData(rw::Stream*, long, void*, long, long)
0012bba0 00000118 T rw::d3d9::getSizeNativeData(void*, long, long)
0012bcb8 0000036c t rw::d3d9::instanceMesh(rw::ObjPipeline*, rw::Geometry*)
0012c024 0000013c t rw::d3d9::instance(rw::ObjPipeline*, rw::Atomic*)
0012c160 00000298 t rw::d3d9::uninstance(rw::ObjPipeline*, rw::Atomic*)
0012c3f8 000000d4 t rw::d3d9::render(rw::ObjPipeline*, rw::Atomic*)
0012c4cc 00000080 T rw::d3d9::ObjPipeline::init()
0012c54c 0000003c T rw::d3d9::ObjPipeline::create()
0012c588 00000bb8 T rw::d3d9::defaultInstanceCB(rw::Geometry*, rw::d3d9::InstanceDataHeader*, long)
0012d140 000004f0 T rw::d3d9::defaultUninstanceCB(rw::Geometry*, rw::d3d9::InstanceDataHeader*)
0012d630 00000054 T rw::d3d9::makeDefaultPipeline()
0012d684 00000034 W rw::conv_8_from_8(unsigned char*, unsigned char*)
0012d6b8 0000002c W rw::conv_RGBA8888_from_BGRA8888(unsigned char*, unsigned char*)
0012d6e4 0000002c W rw::conv_RGB888_from_BGR888(unsigned char*, unsigned char*)
0012d710 00000344 t rw::d3d::calculateTextureSize(unsigned long, unsigned long, unsigned long, unsigned long)
0012da54 00000040 T rw::d3d::createIndexBuffer(unsigned long, bool)
0012da94 00000030 T rw::d3d::destroyIndexBuffer(void*)
0012dac4 00000044 T rw::d3d::lockIndices(void*, unsigned long, unsigned long, unsigned long)
0012db08 00000024 T rw::d3d::unlockIndices(void*)
0012db2c 00000044 T rw::d3d::createVertexBuffer(unsigned long, unsigned long, bool)
0012db70 00000030 T rw::d3d::destroyVertexBuffer(void*)
0012dba0 00000044 T rw::d3d::lockVertices(void*, unsigned long, unsigned long, unsigned long)
0012dbe4 00000024 T rw::d3d::unlockVertices(void*)
0012dc08 00000270 T rw::d3d::createTexture(long, long, long, unsigned long, unsigned long)
0012de78 00000030 T rw::d3d::destroyTexture(void*)
0012dea8 00000198 t rw::d3d::rasterSetFormat(rw::Raster*)
0012e040 000001d4 t rw::d3d::rasterCreateTexture(rw::Raster*)
0012e214 00000168 T rw::d3d::rasterCreate(rw::Raster*)
0012e37c 00000138 T rw::d3d::rasterLock(rw::Raster*, long, long)
0012e4b4 00000078 T rw::d3d::rasterUnlock(rw::Raster*, long)
0012e52c 00000050 T rw::d3d::rasterNumLevels(rw::Raster*)
0012e57c 00000258 T rw::d3d::imageFindRasterFormat(rw::Image*, long, long*, long*, long*, long*)
0012e7d4 00000580 T rw::d3d::rasterFromImage(rw::Raster*, rw::Image*)
0012ed54 00000570 T rw::d3d::rasterToImage(rw::Raster*)
0012f2c4 00000084 t rw::d3d::createNativeRaster(void*, long, long)
0012f348 0000009c t rw::d3d::destroyNativeRaster(void*, long, long)
0012f3e4 00000088 t rw::d3d::copyNativeRaster(void*, void*, long, long)
0012f46c 00000054 T rw::d3d::registerNativeRaster()
0012f4c0 00000108 t rw::d3d8::driverOpen(void*, long, long)
0012f5c8 0000002c t rw::d3d8::driverClose(void*, long, long)
0012f5f4 00000054 T rw::d3d8::registerPlatformPlugins()
0012f648 00000080 T rw::d3d8::makeFVFDeclaration(unsigned long, long)
0012f6c8 0000007c T rw::d3d8::getStride(unsigned long, long)
0012f744 00000108 T rw::d3d8::destroyNativeData(void*, long, long)
0012f84c 000005e4 T rw::d3d8::readNativeData(rw::Stream*, long, void*, long, long)
0012fe30 00000420 T rw::d3d8::writeNativeData(rw::Stream*, long, void*, long, long)
00130250 00000110 T rw::d3d8::getSizeNativeData(void*, long, long)
00130360 000002fc t rw::d3d8::instance(rw::ObjPipeline*, rw::Atomic*)
0013065c 00000284 t rw::d3d8::uninstance(rw::ObjPipeline*, rw::Atomic*)
001308e0 000000e4 t rw::d3d8::render(rw::ObjPipeline*, rw::Atomic*)
001309c4 00000080 T rw::d3d8::ObjPipeline::init()
00130a44 0000003c T rw::d3d8::ObjPipeline::create()
00130a80 000002dc T rw::d3d8::defaultInstanceCB(rw::Geometry*, rw::d3d8::InstanceData*)
00130d5c 00000204 T rw::d3d8::defaultUninstanceCB(rw::Geometry*, rw::d3d8::InstanceData*)
00130f60 00000054 T rw::d3d8::makeDefaultPipeline()
00130fb4 00000018 T rw::gl3::initMatFX()
00130fcc 0000002c T rw::gl3::destroyNativeData(void*, long, long)
00130ff8 00000018 T rw::gl3::initSkin()
00131010 00000044 t rw::wdgl::driverOpen(void*, long, long)
00131054 0000002c t rw::wdgl::driverClose(void*, long, long)
00131080 0000003c T rw::wdgl::registerPlatformPlugins()
001310bc 00000394 T rw::wdgl::packattrib(unsigned char*, float*, rw::wdgl::AttribDesc*, float)
00131450 00000364 T rw::wdgl::unpackattrib(float*, unsigned char*, rw::wdgl::AttribDesc*, float)
001317b4 000000b8 T rw::wdgl::destroyNativeData(void*, long, long)
0013186c 00000174 T rw::wdgl::readNativeData(rw::Stream*, long, void*, long, long)
001319e0 000000d8 T rw::wdgl::writeNativeData(rw::Stream*, long, void*, long, long)
00131ab8 00000098 T rw::wdgl::getSizeNativeData(void*, long, long)
00131b50 000006fc t rw::wdgl::instance(rw::ObjPipeline*, rw::Atomic*)
0013224c 00000430 t rw::wdgl::uninstance(rw::ObjPipeline*, rw::Atomic*)
0013267c 00000070 T rw::wdgl::ObjPipeline::init()
001326ec 0000003c T rw::wdgl::ObjPipeline::create()
00132728 00000024 T rw::wdgl::makeDefaultPipeline()
0013274c 000001d0 T rw::wdgl::readNativeSkin(rw::Stream*, long, void*, long)
0013291c 00000098 T rw::wdgl::writeNativeSkin(rw::Stream*, long, void*, long)
001329b4 00000064 T rw::wdgl::getSizeNativeSkin(void*, long)
00132a18 000002a8 T rw::wdgl::skinInstanceCB(rw::Geometry*, long, unsigned long)
00132cc0 00000348 T rw::wdgl::skinUninstanceCB(rw::Geometry*)
00133008 0000003c t rw::wdgl::skinOpen(void*, long, long)
00133044 00000048 t rw::wdgl::skinClose(void*, long, long)
0013308c 00000040 T rw::wdgl::initSkin()
001330cc 0000006c T rw::wdgl::makeSkinPipeline()
00133138 0000003c t rw::wdgl::matfxOpen(void*, long, long)
00133174 00000048 t rw::wdgl::matfxClose(void*, long, long)
001331bc 0000003c T rw::wdgl::initMatFX()
001331f8 0000003c T rw::wdgl::makeMatFXPipeline()
00133234 000000f4 t rw::gl3::driverOpen(void*, long, long)
00133328 0000002c t rw::gl3::driverClose(void*, long, long)
00133354 00000040 T rw::gl3::registerPlatformPlugins()
00133394 0000017c T rw::gl3::rasterCreate(rw::Raster*)
00133510 0000002c T rw::gl3::rasterLock(rw::Raster*, long, long)
0013353c 00000070 T rw::gl3::rasterUnlock(rw::Raster*, long)
001335ac 0000003c T rw::gl3::rasterNumLevels(rw::Raster*)
001335e8 000001dc T rw::gl3::imageFindRasterFormat(rw::Image*, long, long*, long*, long*, long*)
001337c4 000004e0 T rw::gl3::rasterFromImage(rw::Raster*, rw::Image*)
00133ca4 00000424 T rw::gl3::rasterToImage(rw::Raster*)
001340c8 0000006c t rw::gl3::createNativeRaster(void*, long, long)
00134134 0000002c t rw::gl3::destroyNativeRaster(void*, long, long)
00134160 00000070 t rw::gl3::copyNativeRaster(void*, void*, long, long)
001341d0 00000054 T rw::gl3::registerNativeRaster()
00134224 00000058 W rw::ps2::MatPipeline::getVertCount(unsigned long, unsigned long, unsigned long, unsigned long)
0013427c 00000138 t rw::ps2::driverOpen(void*, long, long)
001343b4 0000002c t rw::ps2::driverClose(void*, long, long)
001343e0 00000040 T rw::ps2::registerPlatformPlugins()
00134420 000000f4 T rw::ps2::destroyNativeData(void*, long, long)
00134514 00000304 T rw::ps2::readNativeData(rw::Stream*, long, void*, long, long)
00134818 0000012c T rw::ps2::writeNativeData(rw::Stream*, long, void*, long, long)
00134944 000000d8 T rw::ps2::getSizeNativeData(void*, long, long)
00134a1c 000000d4 T rw::ps2::unfixDmaOffsets(rw::ps2::InstanceData*)
00134af0 00000050 t rw::ps2::attribSize(unsigned long)
00134b40 000000f0 t rw::ps2::getBatchSize(rw::ps2::MatPipeline*, unsigned long)
00134c30 00000150 T rw::ps2::instanceXYZ(unsigned long*, rw::Geometry*, rw::Mesh*, unsigned long, unsigned long)
00134d80 00000174 T rw::ps2::instanceXYZW(unsigned long*, rw::Geometry*, rw::Mesh*, unsigned long, unsigned long)
00134ef4 00000180 T rw::ps2::instanceUV(unsigned long*, rw::Geometry*, rw::Mesh*, unsigned long, unsigned long)
00135074 000001cc T rw::ps2::instanceUV2(unsigned long*, rw::Geometry*, rw::Mesh*, unsigned long, unsigned long)
00135240 0000012c T rw::ps2::instanceRGBA(unsigned long*, rw::Geometry*, rw::Mesh*, unsigned long, unsigned long)
0013536c 00000224 T rw::ps2::instanceNormal(unsigned long*, rw::Geometry*, rw::Mesh*, unsigned long, unsigned long)
00135590 0000009c T rw::ps2::MatPipeline::init()
0013562c 0000003c T rw::ps2::MatPipeline::create()
00135668 00000030 T rw::ps2::MatPipeline::destroy()
00135698 000000f0 T rw::ps2::MatPipeline::setTriBufferSizes(unsigned long, unsigned long)
00135788 00000428 T rw::ps2::getInstMeshInfo(rw::ps2::MatPipeline*, rw::Geometry*, rw::Mesh*)
00135bb0 000008f8 T rw::ps2::MatPipeline::instance(rw::Geometry*, rw::ps2::InstanceData*, rw::Mesh*)
001364a8 0000044c T rw::ps2::MatPipeline::collectData(rw::Geometry*, rw::ps2::InstanceData*, rw::Mesh*, unsigned char**)
001368f4 000001d0 t rw::ps2::objInstance(rw::ObjPipeline*, rw::Atomic*)
00136ac4 000004cc t rw::ps2::objUninstance(rw::ObjPipeline*, rw::Atomic*)
00136f90 00000058 T rw::ps2::ObjPipeline::init()
00136fe8 0000003c T rw::ps2::ObjPipeline::create()
00137024 00000150 T rw::ps2::insertVertex(rw::Geometry*, long, unsigned long, rw::ps2::Vertex*)
00137174 000000a8 T rw::ps2::genericPreCB(rw::ps2::MatPipeline*, rw::Geometry*)
0013721c 000006f0 T rw::ps2::genericUninstanceCB(rw::ps2::MatPipeline*, rw::Geometry*, unsigned long*, rw::Mesh*, unsigned char**)
0013790c 00000100 T rw::ps2::makeDefaultPipeline()
00137a0c 00000074 T rw::ps2::getADCbits(rw::Geometry*)
00137a80 000000f8 T rw::ps2::getADCbitsForMesh(rw::Geometry*, rw::Mesh*)
00137b78 000000b0 T rw::ps2::allocateADC(rw::Geometry*)
00137c28 00000048 t rw::ps2::createADC(void*, long, long)
00137c70 000000dc t rw::ps2::copyADC(void*, void*, long, long)
00137d4c 00000064 t rw::ps2::destroyADC(void*, long, long)
00137db0 00000194 t rw::ps2::readADC(rw::Stream*, long, void*, long, long)
00137f44 000000d0 t rw::ps2::writeADC(rw::Stream*, long, void*, long, long)
00138014 00000088 t rw::ps2::getSizeADC(void*, long, long)
0013809c 00000070 T rw::ps2::registerADCPlugin()
0013810c 0000002c W rw::conv_ARGB1555_from_ABGR1555(unsigned char*, unsigned char*)
00138138 000001cc t rw::ps2::transferMinSize(long, long, long*, long*)
00138304 00000094 T rw::ps2::mallocalign(unsigned int, long)
00138398 0000004c T rw::ps2::freealign(void*)
001383e4 00000ad0 T rw::ps2::getRasterFormat(rw::Raster*)
00138eb4 000022ec t rw::ps2::calcOffsets(long, long, long, unsigned long long*, unsigned long long*, unsigned long*, unsigned long*, unsigned long*)
0013b1a0 0000256c t rw::ps2::rasterCreateTexture(rw::Raster*)
0013d70c 0000014c T rw::ps2::rasterCreate(rw::Raster*)
0013d858 000000d0 t rw::ps2::swizzle(unsigned long, unsigned long, unsigned long)
0013d928 0000051c T rw::ps2::unswizzleRaster(rw::Raster*)
0013de44 0000052c T rw::ps2::swizzleRaster(rw::Raster*)
0013e370 00000224 T rw::ps2::rasterLock(rw::Raster*, long, long)
0013e594 000000d8 T rw::ps2::rasterUnlock(rw::Raster*, long)
0013e66c 000000b8 t rw::ps2::convertCSM1_16(unsigned long*)
0013e724 000000b8 t rw::ps2::convertCSM1_32(unsigned long*)
0013e7dc 0000007c t rw::ps2::convertPalette(rw::Raster*)
0013e858 000000a4 T rw::ps2::rasterLockPalette(rw::Raster*, long)
0013e8fc 0000004c T rw::ps2::rasterUnlockPalette(rw::Raster*)
0013e948 00000238 T rw::ps2::imageFindRasterFormat(rw::Image*, long, long*, long*, long*, long*)
0013eb80 000005f0 T rw::ps2::rasterFromImage(rw::Raster*, rw::Image*)
0013f170 0000058c T rw::ps2::rasterToImage(rw::Raster*)
0013f6fc 00000084 T rw::ps2::rasterNumLevels(rw::Raster*)
0013f780 000000f0 t rw::ps2::createNativeRaster(void*, long, long)
0013f870 00000048 t rw::ps2::destroyNativeRaster(void*, long, long)
0013f8b8 0000007c t rw::ps2::copyNativeRaster(void*, void*, long, long)
0013f934 0000007c t rw::ps2::readMipmap(rw::Stream*, long, void*, long, long)
0013f9b0 0000008c t rw::ps2::writeMipmap(rw::Stream*, long, void*, long, long)
0013fa3c 00000048 t rw::ps2::getSizeMipmap(void*, long, long)
0013fa84 00000090 T rw::ps2::registerNativeRaster()
0013fb14 0000003c t rw::ps2::matfxOpen(void*, long, long)
0013fb50 0000005c t rw::ps2::matfxClose(void*, long, long)
0013fbac 0000003c T rw::ps2::initMatFX()
0013fbe8 000000fc T rw::ps2::makeMatFXPipeline()
0013fce4 00000038 W rw::Material::setStreamRightsCallback(unsigned long, void (*)(void*, long, long, unsigned long))
0013fd1c 00000098 T rw::ps2::getPDSPipe(unsigned long)
0013fdb4 000000c4 T rw::ps2::registerPDSPipe(rw::Pipeline*)
0013fe78 00000044 t rw::ps2::atomicPDSRights(void*, long, long, unsigned long)
0013febc 00000044 t rw::ps2::materialPDSRights(void*, long, long, unsigned long)
0013ff00 0000002c t rw::ps2::pdsOpen(void*, long, long)
0013ff2c 00000048 t rw::ps2::pdsClose(void*, long, long)
0013ff74 000000bc T rw::ps2::registerPDSPlugin(long)
00140030 000004cc T rw::ps2::registerPluginPDSPipes()
001404fc 00000068 W rw::equal(rw::TexCoords const&, rw::TexCoords const&)
00140564 00000084 W rw::equal(rw::V3d const&, rw::V3d const&)
001405e8 0000003c t rw::ps2::skinOpen(void*, long, long)
00140624 0000006c t rw::ps2::skinClose(void*, long, long)
00140690 00000040 T rw::ps2::initSkin()
001406d0 0000013c T rw::ps2::makeSkinPipeline()
0014080c 00000328 T rw::ps2::readNativeSkin(rw::Stream*, long, void*, long)
00140b34 000001a0 T rw::ps2::writeNativeSkin(rw::Stream*, long, void*, long)
00140cd4 0000009c T rw::ps2::getSizeNativeSkin(void*, long)
00140d70 00000194 T rw::ps2::instanceSkinData(rw::Geometry*, rw::Mesh*, rw::Skin*, unsigned long*)
00140f04 00000060 T rw::ps2::skinInstanceCB(rw::ps2::MatPipeline*, rw::Geometry*, rw::Mesh*, unsigned char**)
00140f64 00000408 T rw::ps2::findVertexSkin(rw::Geometry*, unsigned long*, unsigned long, rw::ps2::Vertex*)
0014136c 000000a4 T rw::ps2::insertVertexSkin(rw::Geometry*, long, unsigned long, rw::ps2::Vertex*)
00141410 000000ac T rw::ps2::skinPreCB(rw::ps2::MatPipeline*, rw::Geometry*)
001414bc 00000060 T rw::ps2::skinPostCB(rw::ps2::MatPipeline*, rw::Geometry*)
0014151c 00000028 t lodepng_malloc(unsigned int)
00141544 00000030 t lodepng_realloc(void*, unsigned int)
00141574 00000024 t lodepng_free(void*)
00141598 00000070 t lodepng_memcpy(void*, void const*, unsigned int)
00141608 00000068 t lodepng_memset(void*, int, unsigned int)
00141670 00000054 t lodepng_strlen(char const*)
001416c4 00000058 t lodepng_addofl(unsigned int, unsigned int, unsigned int*)
0014171c 00000078 t lodepng_mulofl(unsigned int, unsigned int, unsigned int*)
00141794 00000074 t lodepng_gtofl(unsigned int, unsigned int, unsigned int)
00141808 00000054 t uivector_cleanup(void*)
0014185c 000000b0 t uivector_resize(uivector*, unsigned int)
0014190c 00000048 t uivector_init(uivector*)
00141954 00000084 t uivector_push_back(uivector*, unsigned int)
001419d8 000000a4 t ucvector_resize(ucvector*, unsigned int)
00141a7c 00000054 t ucvector_init(unsigned char*, unsigned int)
00141ad0 00000038 t string_cleanup(char**)
00141b08 00000068 t alloc_string_sized(char const*, unsigned int)
00141b70 00000038 t alloc_string(char const*)
00141ba8 00000064 t lodepng_read32bitInt(unsigned char const*)
00141c0c 0000007c t lodepng_set32bitInt(unsigned char*, unsigned int)
00141c88 0000003c t LodePNGBitWriter_init(LodePNGBitWriter*, ucvector*)
00141cc4 00000274 t writeBits(LodePNGBitWriter*, unsigned int, unsigned int)
00141f38 0000016c t writeBitsReversed(LodePNGBitWriter*, unsigned int, unsigned int)
001420a4 000000d0 t LodePNGBitReader_init(LodePNGBitReader*, unsigned char const*, unsigned int)
00142174 00000148 t ensureBits9(LodePNGBitReader*, unsigned int)
001422bc 000001ac t ensureBits17(LodePNGBitReader*, unsigned int)
00142468 00000210 t ensureBits25(LodePNGBitReader*, unsigned int)
00142678 00000298 t ensureBits32(LodePNGBitReader*, unsigned int)
00142910 00000040 t peekBits(LodePNGBitReader*, unsigned int)
00142950 00000054 t advanceBits(LodePNGBitReader*, unsigned int)
001429a4 00000040 t readBits(LodePNGBitReader*, unsigned int)
001429e4 00000088 t reverseBits(unsigned int, unsigned int)
00142a6c 00000050 t HuffmanTree_init(HuffmanTree*)
00142abc 0000005c t HuffmanTree_cleanup(HuffmanTree*)
00142b18 00000654 t HuffmanTree_makeTable(HuffmanTree*)
0014316c 00000304 t HuffmanTree_makeFromLengths2(HuffmanTree*)
00143470 000000d8 t HuffmanTree_makeFromLengths(HuffmanTree*, unsigned int const*, unsigned int, unsigned int)
00143548 00000230 t bpmnode_create(BPMLists*, int, unsigned int, BPMNode*)
00143778 00000250 t bpmnode_sort(BPMNode*, unsigned int)
001439c8 000002a4 t boundaryPM(BPMLists*, BPMNode*, unsigned int, int, int)
00143c6c 000004a0 T lodepng_huffman_code_lengths(unsigned int*, unsigned int const*, unsigned int, unsigned int)
0014410c 000000f4 t HuffmanTree_makeFromFrequencies(HuffmanTree*, unsigned int const*, unsigned int, unsigned int, unsigned int)
00144200 00000158 t generateFixedLitLenTree(HuffmanTree*)
00144358 000000a4 t generateFixedDistanceTree(HuffmanTree*)
001443fc 000000f8 t huffmanDecodeSymbol(LodePNGBitReader*, HuffmanTree const*)
001444f4 00000050 t getTreeInflateFixed(HuffmanTree*, HuffmanTree*)
00144544 000006d8 t getTreeInflateDynamic(HuffmanTree*, HuffmanTree*, LodePNGBitReader*)
00144c1c 000003fc t inflateHuffmanBlock(ucvector*, LodePNGBitReader*, unsigned int)
00145018 000001e8 t inflateNoCompression(ucvector*, LodePNGBitReader*, LodePNGDecompressSettings const*)
00145200 00000130 t lodepng_inflatev(ucvector*, unsigned char const*, unsigned int, LodePNGDecompressSettings const*)
00145330 00000098 t inflatev(ucvector*, unsigned char const*, unsigned int, LodePNGDecompressSettings const*)
001453c8 000000e0 t searchCodeIndex(unsigned int const*, unsigned int, unsigned int)
001454a8 0000013c t addLengthDistance(uivector*, unsigned int, unsigned int)
001455e4 00000284 t hash_init(Hash*, unsigned int)
00145868 0000007c t hash_cleanup(Hash*)
001458e4 0000013c t getHash(unsigned char const*, unsigned int, unsigned int)
00145a20 000000b4 t countZeros(unsigned char const*, unsigned int, unsigned int)
00145ad4 00000144 t updateHashChain(Hash*, unsigned int, unsigned int, unsigned short)
00145c18 00000824 t encodeLZ77(uivector*, Hash*, unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0014643c 0000025c t deflateNoCompression(ucvector*, unsigned char const*, unsigned int)
00146698 000001d4 t writeLZ77data(LodePNGBitWriter*, uivector const*, HuffmanTree const*, HuffmanTree const*)
0014686c 00000bb0 t deflateDynamic(LodePNGBitWriter*, Hash*, unsigned char const*, unsigned int, unsigned int, LodePNGCompressSettings const*, unsigned int)
0014741c 0000021c t deflateFixed(LodePNGBitWriter*, Hash*, unsigned char const*, unsigned int, unsigned int, LodePNGCompressSettings const*, unsigned int)
00147638 00000254 t lodepng_deflatev(ucvector*, unsigned char const*, unsigned int, LodePNGCompressSettings const*)
0014788c 00000078 T lodepng_deflate(unsigned char**, unsigned int*, unsigned char const*, unsigned int, LodePNGCompressSettings const*)
00147904 00000088 t deflate(unsigned char**, unsigned int*, unsigned char const*, unsigned int, LodePNGCompressSettings const*)
0014798c 00000140 t update_adler32(unsigned int, unsigned char const*, unsigned int)
00147acc 00000034 t adler32(unsigned char const*, unsigned int)
00147b00 000001ac t lodepng_zlib_decompressv(ucvector*, unsigned char const*, unsigned int, LodePNGDecompressSettings const*)
00147cac 000000ec t zlib_decompress(unsigned char**, unsigned int*, unsigned int, unsigned char const*, unsigned int, LodePNGDecompressSettings const*)
00147d98 00000214 T lodepng_zlib_compress(unsigned char**, unsigned int*, unsigned char const*, unsigned int, LodePNGCompressSettings const*)
00147fac 00000088 t zlib_compress(unsigned char**, unsigned int*, unsigned char const*, unsigned int, LodePNGCompressSettings const*)
00148034 0000008c T lodepng_compress_settings_init(LodePNGCompressSettings*)
001480c0 0000005c T lodepng_decompress_settings_init(LodePNGDecompressSettings*)
0014811c 00000098 T lodepng_crc32(unsigned char const*, unsigned int)
001481b4 00000078 t readBitFromReversedStream(unsigned int*, unsigned char const*)
0014822c 00000084 t readBitsFromReversedStream(unsigned int*, unsigned char const*, unsigned int)
001482b0 00000100 t setBitOfReversedStream(unsigned int*, unsigned char*, unsigned char)
001483b0 00000028 T lodepng_chunk_length(unsigned char const*)
001483d8 000000d4 T lodepng_chunk_type_equals(unsigned char const*, char const*)
001484ac 00000040 T lodepng_chunk_ancillary(unsigned char const*)
001484ec 00000028 T lodepng_chunk_data_const(unsigned char const*)
00148514 00000080 T lodepng_chunk_check_crc(unsigned char const*)
00148594 00000064 T lodepng_chunk_generate_crc(unsigned char*)
001485f8 0000015c T lodepng_chunk_next(unsigned char*, unsigned char*)
00148754 0000015c T lodepng_chunk_next_const(unsigned char const*, unsigned char const*)
001488b0 0000014c T lodepng_chunk_append(unsigned char**, unsigned int*, unsigned char const*)
001489fc 00000130 t lodepng_chunk_init(unsigned char**, ucvector*, unsigned int, char const*)
00148b2c 0000007c t lodepng_chunk_createv(ucvector*, unsigned int, char const*, unsigned char const*)
00148ba8 00000184 t checkColorValidity(LodePNGColorType, unsigned int)
00148d2c 000000a0 t getNumColorChannels(LodePNGColorType)
00148dcc 0000003c t lodepng_get_bpp_lct(LodePNGColorType, unsigned int)
00148e08 00000088 T lodepng_color_mode_init(LodePNGColorMode*)
00148e90 000000f0 t lodepng_color_mode_alloc_palette(LodePNGColorMode*)
00148f80 00000024 T lodepng_color_mode_cleanup(LodePNGColorMode*)
00148fa4 000000ac T lodepng_color_mode_copy(LodePNGColorMode*, LodePNGColorMode const*)
00149050 0000004c T lodepng_color_mode_make(LodePNGColorType, unsigned int)
0014909c 00000180 t lodepng_color_mode_equal(LodePNGColorMode const*, LodePNGColorMode const*)
0014921c 00000054 T lodepng_palette_clear(LodePNGColorMode*)
00149270 0000012c T lodepng_palette_add(LodePNGColorMode*, unsigned char, unsigned char, unsigned char, unsigned char)
0014939c 0000003c T lodepng_get_bpp(LodePNGColorMode const*)
001493d8 0000004c T lodepng_is_greyscale_type(LodePNGColorMode const*)
00149424 0000003c T lodepng_is_alpha_type(LodePNGColorMode const*)
00149460 0000007c T lodepng_has_palette_alpha(LodePNGColorMode const*)
001494dc 00000060 T lodepng_can_have_alpha(LodePNGColorMode const*)
0014953c 0000007c t lodepng_get_raw_size_lct(unsigned int, unsigned int, LodePNGColorType, unsigned int)
001495b8 00000044 T lodepng_get_raw_size(unsigned int, unsigned int, LodePNGColorMode const*)
001495fc 00000068 t lodepng_get_raw_size_idat(unsigned int, unsigned int, unsigned int)
00149664 000001d4 t lodepng_pixel_overflow(unsigned int, unsigned int, LodePNGColorMode const*, LodePNGColorMode const*)
00149838 00000098 t LodePNGUnknownChunks_init(LodePNGInfo*)
001498d0 00000060 t LodePNGUnknownChunks_cleanup(LodePNGInfo*)
00149930 00000160 t LodePNGUnknownChunks_copy(LodePNGInfo*, LodePNGInfo const*)
00149a90 00000044 t LodePNGText_init(LodePNGInfo*)
00149ad4 000000a0 t LodePNGText_cleanup(LodePNGInfo*)
00149b74 000000d0 t LodePNGText_copy(LodePNGInfo*, LodePNGInfo const*)
00149c44 00000194 t lodepng_add_text_sized(LodePNGInfo*, char const*, char const*, unsigned int)
00149dd8 00000044 T lodepng_add_text(LodePNGInfo*, char const*, char const*)
00149e1c 0000005c t LodePNGIText_init(LodePNGInfo*)
00149e78 000000f8 t LodePNGIText_cleanup(LodePNGInfo*)
00149f70 00000120 t LodePNGIText_copy(LodePNGInfo*, LodePNGInfo const*)
0014a090 0000022c t lodepng_add_itext_sized(LodePNGInfo*, char const*, char const*, char const*, char const*, unsigned int)
0014a2bc 00000058 T lodepng_add_itext(LodePNGInfo*, char const*, char const*, char const*, char const*)
0014a314 000000b4 t lodepng_assign_icc(LodePNGInfo*, char const*, unsigned char const*, unsigned int)
0014a3c8 00000060 T lodepng_clear_icc(LodePNGInfo*)
0014a428 00000100 T lodepng_info_init(LodePNGInfo*)
0014a528 0000004c T lodepng_info_cleanup(LodePNGInfo*)
0014a574 0000013c T lodepng_info_copy(LodePNGInfo*, LodePNGInfo const*)
0014a6b0 00000114 t addColorBits(unsigned char*, unsigned int, unsigned int, unsigned int)
0014a7c4 0000003c t color_tree_init(ColorTree*)
0014a800 0000007c t color_tree_cleanup(ColorTree*)
0014a87c 00000118 t color_tree_get(ColorTree*, unsigned char, unsigned char, unsigned char, unsigned char)
0014a994 00000070 t color_tree_has(ColorTree*, unsigned char, unsigned char, unsigned char, unsigned char)
0014aa04 0000013c t color_tree_add(ColorTree*, unsigned char, unsigned char, unsigned char, unsigned char, unsigned int)
0014ab40 00000568 t rgba8ToPixel(unsigned char*, unsigned int, LodePNGColorMode const*, ColorTree*, unsigned char, unsigned char, unsigned char, unsigned char)
0014b0a8 00000394 t rgba16ToPixel(unsigned char*, unsigned int, LodePNGColorMode const*, unsigned short, unsigned short, unsigned short, unsigned short)
0014b43c 00000848 t getPixelColorRGBA8(unsigned char*, unsigned char*, unsigned char*, unsigned char*, unsigned char const*, unsigned int, LodePNGColorMode const*)
0014bc84 00000a18 t getPixelColorsRGBA8(unsigned char*, unsigned int, unsigned char const*, LodePNGColorMode const*)
0014c69c 00000614 t getPixelColorsRGB8(unsigned char*, unsigned int, unsigned char const*, LodePNGColorMode const*)
0014ccb0 000005d4 t getPixelColorRGBA16(unsigned short*, unsigned short*, unsigned short*, unsigned short*, unsigned char const*, unsigned int, LodePNGColorMode const*)
0014d284 0000045c T lodepng_convert(unsigned char*, unsigned char const*, LodePNGColorMode const*, LodePNGColorMode const*, unsigned int, unsigned int)
0014d6e0 000003a4 T lodepng_convert_rgb(unsigned int*, unsigned int*, unsigned int*, unsigned int, unsigned int, unsigned int, LodePNGColorMode const*, LodePNGColorMode const*)
0014da84 000000ac T lodepng_color_stats_init(LodePNGColorStats*)
0014db30 000000c0 t getValueRequiredBits(unsigned char)
0014dbf0 00000ce8 T lodepng_compute_color_stats(LodePNGColorStats*, unsigned char const*, unsigned int, unsigned int, LodePNGColorMode const*)
0014e8d8 000000ec t lodepng_color_stats_add(LodePNGColorStats*, unsigned int, unsigned int, unsigned int, unsigned int)
0014e9c4 000003fc t auto_choose_color(LodePNGColorMode*, LodePNGColorMode const*, LodePNGColorStats const*)
0014edc0 000000d0 t paethPredictor(short, short, short)
0014ee90 0000033c t Adam7_getpassvalues(unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int, unsigned int, unsigned int)
0014f1cc 000003d8 T lodepng_inspect(unsigned int*, unsigned int*, LodePNGState*, unsigned char const*, unsigned int)
0014f5a4 00000c08 t unfilterScanline(unsigned char*, unsigned char const*, unsigned char const*, unsigned int, unsigned char, unsigned int)
001501ac 00000120 t unfilter(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int)
001502cc 000003d0 t Adam7_deinterlace(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int)
0015069c 000000d4 t removePaddingBits(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int)
00150770 000002e8 t postProcessScanlines(unsigned char*, unsigned char*, unsigned int, unsigned int, LodePNGInfo const*)
00150a58 00000194 t readChunk_PLTE(LodePNGColorMode*, unsigned char const*, unsigned int)
00150bec 000001d4 t readChunk_tRNS(LodePNGColorMode*, unsigned char const*, unsigned int)
00150dc0 000001f4 t readChunk_bKGD(LodePNGInfo*, unsigned char const*, unsigned int)
00150fb4 000001b8 t readChunk_tEXt(LodePNGInfo*, unsigned char const*, unsigned int)
0015116c 00000200 t readChunk_zTXt(LodePNGInfo*, LodePNGDecompressSettings const*, unsigned char const*, unsigned int)
0015136c 00000420 t readChunk_iTXt(LodePNGInfo*, LodePNGDecompressSettings const*, unsigned char const*, unsigned int)
0015178c 000000e8 t readChunk_tIME(LodePNGInfo*, unsigned char const*, unsigned int)
00151874 00000100 t readChunk_pHYs(LodePNGInfo*, unsigned char const*, unsigned int)
00151974 00000098 t readChunk_gAMA(LodePNGInfo*, unsigned char const*, unsigned int)
00151a0c 000002c8 t readChunk_cHRM(LodePNGInfo*, unsigned char const*, unsigned int)
00151cd4 00000060 t readChunk_sRGB(LodePNGInfo*, unsigned char const*, unsigned int)
00151d34 00000234 t readChunk_iCCP(LodePNGInfo*, LodePNGDecompressSettings const*, unsigned char const*, unsigned int)
00151f68 00000d34 t decodeGeneric(unsigned char**, unsigned int*, unsigned int*, LodePNGState*, unsigned char const*, unsigned int)
00152c9c 0000020c T lodepng_decode(unsigned char**, unsigned int*, unsigned int*, LodePNGState*, unsigned char const*, unsigned int)
00152ea8 00000070 T lodepng_decoder_settings_init(LodePNGDecoderSettings*)
00152f18 00000064 T lodepng_state_init(LodePNGState*)
00152f7c 0000009c t writeSignature(ucvector*)
00153018 000000ec t addChunk_IHDR(ucvector*, unsigned int, unsigned int, LodePNGColorType, unsigned int, unsigned int)
00153104 0000013c t addChunk_PLTE(ucvector*, LodePNGColorMode const*)
00153240 000002c0 t addChunk_tRNS(ucvector*, LodePNGColorMode const*)
00153500 00000098 t addChunk_IDAT(ucvector*, unsigned char const*, unsigned int, LodePNGCompressSettings*)
00153598 00000038 t addChunk_IEND(ucvector*)
001535d0 00000108 t addChunk_tEXt(ucvector*, char const*, char const*)
001536d8 0000016c t addChunk_zTXt(ucvector*, char const*, char const*, LodePNGCompressSettings*)
00153844 000002c4 t addChunk_iTXt(ucvector*, unsigned int, char const*, char const*, char const*, char const*, LodePNGCompressSettings*)
00153b08 0000020c t addChunk_bKGD(ucvector*, LodePNGInfo const*)
00153d14 0000010c t addChunk_tIME(ucvector*, LodePNGTime const*)
00153e20 000000b0 t addChunk_pHYs(ucvector*, LodePNGInfo const*)
00153ed0 0000007c t addChunk_gAMA(ucvector*, LodePNGInfo const*)
00153f4c 00000140 t addChunk_cHRM(ucvector*, LodePNGInfo const*)
0015408c 0000004c t addChunk_sRGB(ucvector*, LodePNGInfo const*)
001540d8 00000174 t addChunk_iCCP(ucvector*, LodePNGInfo const*, LodePNGCompressSettings*)
0015424c 0000059c t filterScanline(unsigned char*, unsigned char const*, unsigned char const*, unsigned int, unsigned int, unsigned char)
001547e8 000000d4 t ilog2(unsigned int)
001548bc 00000064 t ilog2i(unsigned int)
00154920 00000bcc t filter(unsigned char*, unsigned char const*, unsigned int, unsigned int, LodePNGColorMode const*, LodePNGEncoderSettings const*)
001554ec 00000100 t addPaddingBits(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int)
001555ec 000003d0 t Adam7_interlace(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int)
001559bc 000004ec t preProcessScanlines(unsigned char**, unsigned int*, unsigned char const*, unsigned int, unsigned int, LodePNGInfo const*, LodePNGEncoderSettings const*)
00155ea8 000000ac t addUnknownChunks(ucvector*, unsigned char*, unsigned int)
00155f54 00000094 t isGrayICCProfile(unsigned char const*, unsigned int)
00155fe8 00000094 t isRGBICCProfile(unsigned char const*, unsigned int)
0015607c 00000fc8 T lodepng_encode(unsigned char**, unsigned int*, unsigned char const*, unsigned int, unsigned int, LodePNGState*)
00157044 0000007c T lodepng_encoder_settings_init(LodePNGEncoderSettings*)
001570c0 0000064c T lodepng_error_text(unsigned int)
0015770c 000000c4 W rw::makeRGBA(unsigned char, unsigned char, unsigned char, unsigned char)
001577d0 0000002c W rw::Camera::beginUpdate()
001577fc 0000002c W rw::Camera::endUpdate()
00157828 00000044 W ImVec2::ImVec2(float, float)
00157828 00000044 W ImVec2::ImVec2(float, float)
0015786c 00000064 W ImVec4::ImVec4(float, float, float, float)
0015786c 00000064 W ImVec4::ImVec4(float, float, float, float)
001578d0 00000050 T Init()
00157920 0000004c T attachPlugins()
0015796c 00000160 T InitRW()
00157acc 00000380 T Draw(float)
00157e4c 00000020 T KeyUp(int)
00157e6c 00000040 T KeyDown(int)
00157eac 000001a0 T AppEventHandler(sk::Event, void*)
0015804c 00000254 T sk::InitRW()
001582a0 0000001c T sk::TerminateRW()
001582bc 00000094 T sk::CameraCreate(long, long, long)
00158350 000000d8 T sk::CameraSize(rw::Camera*, rw::Rect*)
00158428 000000b4 T sk::EventHandler(sk::Event, void*)
001584dc 00000030 t osTickCounterStart
0015850c 0000004c t osTickCounterUpdate
00158558 000003c4 T main
0015891c 00000024 T sk::SetMousePosition(int, int)
00158940 00000044 W rw::Texture::setFilter(rw::Texture::FilterMode)
00158984 000006c8 T ImGui_ImplRW_RenderDrawLists(ImDrawData*)
0015904c 00000118 T ImGui_ImplRW_Init()
00159164 00000128 t ImGui_ImplRW_CreateFontsTexture()
0015928c 00000034 T ImGui_ImplRW_CreateDeviceObjects()
001592c0 00000174 T ImGui_ImplRW_NewFrame(float)
00159434 000001a8 T ImGuiEventHandler(sk::Event, void*)
001595dc 0000006c W ImVector<ImDrawCmd>::operator[](int) const
00159648 00000040 W ImVec2::ImVec2()
00159648 00000040 W ImVec2::ImVec2()
00159688 00000060 W ImVec4::ImVec4()
00159688 00000060 W ImVec4::ImVec4()
001596e8 0000009c W ImDrawCmd::ImDrawCmd()
001596e8 0000009c W ImDrawCmd::ImDrawCmd()
00159784 00000030 W ImDrawList::PathClear()
001597b4 00000034 W ImDrawList::PathLineTo(ImVec2 const&)
001597e8 00000044 W ImDrawList::PathFillConvex(unsigned int)
0015982c 0000005c W ImDrawList::PathStroke(unsigned int, bool, float)
00159888 00000090 W ImDrawList::PrimWriteVtx(ImVec2 const&, ImVec2 const&, unsigned int)
00159918 0000004c W ImDrawList::PrimWriteIdx(unsigned short)
00159964 000000b8 W ImFontAtlas::CustomRect::CustomRect()
00159964 000000b8 W ImFontAtlas::CustomRect::CustomRect()
00159a1c 00000040 W ImFontAtlas::CustomRect::IsPacked() const
00159a5c 00000038 W ImFont::IsLoaded() const
00159a94 00000028 W std::ceil(float)
00159abc 00000028 W std::fabs(float)
00159ae4 00000028 W std::floor(float)
00159b0c 00000028 W std::sqrt(float)
00159b34 00000050 t ImCharIsSpace(int)
00159b84 000000a0 t ImUpperPowerOfTwo(int)
00159c24 00000078 t operator*(ImVec2 const&, float)
00159c9c 00000080 t operator+(ImVec2 const&, ImVec2 const&)
00159d1c 00000080 t operator-(ImVec2 const&, ImVec2 const&)
00159d9c 00000080 t operator*(ImVec2 const&, ImVec2 const&)
00159e1c 00000058 t operator*=(ImVec2&, float)
00159e74 00000040 t ImMax(int, int)
00159eb4 00000048 t ImMin(float, float)
00159efc 00000048 t ImMax(float, float)
00159f44 00000068 t ImClamp(float, float, float)
00159fac 0000004c t ImSwap(float&, float&)
00159ff8 0000005c t ImLerp(int, int, float)
0015a054 00000044 t ImLerp(float, float, float)
0015a098 0000004c t ImLengthSqr(ImVec2 const&)
0015a0e4 00000080 t ImInvLength(ImVec2 const&, float)
0015a164 00000050 t ImDot(ImVec2 const&, ImVec2 const&)
0015a1b4 0000002c W operator new(unsigned int, ImNewPlacementDummy, void*)
0015a1e0 00000078 t stbrp_setup_allow_out_of_mem
0015a258 00000180 t stbrp_init_target
0015a3d8 00000270 t stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*)
0015a648 00000444 t stbrp__skyline_find_best_pos(stbrp_context*, int, int)
0015aa8c 00000204 t stbrp__skyline_pack_rectangle(stbrp_context*, int, int)
0015ac90 000000b8 t rect_height_compare(void const*, void const*)
0015ad48 00000074 t rect_original_order(void const*, void const*)
0015adbc 0000026c t stbrp_pack_rects
0015b028 00000064 t stbtt__buf_get8(stbtt__buf*)
0015b08c 00000058 t stbtt__buf_peek8(stbtt__buf*)
0015b0e4 00000098 t stbtt__buf_seek(stbtt__buf*, int)
0015b17c 0000003c t stbtt__buf_skip(stbtt__buf*, int)
0015b1b8 000000ac t stbtt__buf_get(stbtt__buf*, int)
0015b264 0000007c t stbtt__new_buf(void const*, unsigned int)
0015b2e0 000000b0 t stbtt__buf_range(stbtt__buf const*, int, int)
0015b390 000000f0 t stbtt__cff_get_index(stbtt__buf*)
0015b480 0000012c t stbtt__cff_int(stbtt__buf*)
0015b5ac 000000c8 t stbtt__cff_skip_operand(stbtt__buf*)
0015b674 00000104 t stbtt__dict_get(stbtt__buf*, int)
0015b778 00000098 t stbtt__dict_get_ints(stbtt__buf*, int, int, unsigned int*)
0015b810 00000038 t stbtt__cff_index_count(stbtt__buf*)
0015b848 00000158 t stbtt__cff_index_get(stbtt__buf, int)
0015b9a0 0000004c t ttUSHORT(unsigned char*)
0015b9ec 00000050 t ttSHORT(unsigned char*)
0015ba3c 00000064 t ttULONG(unsigned char*)
0015baa0 00000064 t ttLONG(unsigned char*)
0015bb04 000001f8 t stbtt__isfont(unsigned char*)
0015bcfc 0000014c t stbtt__find_table(unsigned char*, unsigned int, char const*)
0015be48 0000015c t stbtt_GetFontOffsetForIndex_internal(unsigned char*, int)
0015bfa4 00000114 t stbtt__get_subrs(stbtt__buf, stbtt__buf)
0015c0b8 00000704 t stbtt_InitFont_internal(stbtt_fontinfo*, unsigned char*, int)
0015c7bc 000006b4 t stbtt_FindGlyphIndex
0015ce70 0000007c t stbtt_setvertex(stbtt_vertex*, unsigned char, int, int, int, int)
0015ceec 000001d4 t stbtt__GetGlyfOffset(stbtt_fontinfo const*, int)
0015d0c0 00000168 t stbtt_GetGlyphBox
0015d228 000001a8 t stbtt__close_shape(stbtt_vertex*, int, int, int, int, int, int, int, int, int)
0015d3d0 000010b8 t stbtt__GetGlyphShapeTT(stbtt_fontinfo const*, int, stbtt_vertex**)
0015e488 000000f4 t stbtt__track_vertex(stbtt__csctx*, int, int)
0015e57c 00000140 t stbtt__csctx_v(stbtt__csctx*, unsigned char, int, int, int, int, int, int)
0015e6bc 000000a0 t stbtt__csctx_close_shape(stbtt__csctx*)
0015e75c 000000c8 t stbtt__csctx_rmove_to(stbtt__csctx*, float, float)
0015e824 000000a0 t stbtt__csctx_rline_to(stbtt__csctx*, float, float)
0015e8c4 00000110 t stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float)
0015e9d4 000000d8 t stbtt__get_subr(stbtt__buf, int)
0015eaac 000001c0 t stbtt__cid_get_glyph_subrs(stbtt_fontinfo const*, int)
0015ec6c 00001210 t stbtt__run_charstring(stbtt_fontinfo const*, int, stbtt__csctx*)
0015fe7c 00000138 t stbtt__GetGlyphShapeT2(stbtt_fontinfo const*, int, stbtt_vertex**)
0015ffb4 00000100 t stbtt__GetGlyphInfoT2(stbtt_fontinfo const*, int, int*, int*, int*, int*)
001600b4 00000064 t stbtt_GetGlyphShape
00160118 000001a4 t stbtt_GetGlyphHMetrics
001602bc 000000dc t stbtt_GetFontVMetrics
00160398 0000008c t stbtt_ScaleForPixelHeight
00160424 00000060 t stbtt_ScaleForMappingEmToPixels
00160484 00000208 t stbtt_GetGlyphBitmapBoxSubpixel
0016068c 00000068 t stbtt_GetGlyphBitmapBox
001606f4 00000124 t stbtt__hheap_alloc(stbtt__hheap*, unsigned int, void*)
00160818 00000040 t stbtt__hheap_free(stbtt__hheap*, void*)
00160858 00000058 t stbtt__hheap_cleanup(stbtt__hheap*, void*)
001608b0 00000198 t stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*)
00160a48 00000550 t stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float)
00160f98 00000b04 t stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float)
00161a9c 00000490 t stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*)
00161f2c 000001a8 t stbtt__sort_edges_ins_sort(stbtt__edge*, int)
001620d4 0000051c t stbtt__sort_edges_quicksort(stbtt__edge*, int)
001625f0 00000038 t stbtt__sort_edges(stbtt__edge*, int)
00162628 00000474 t stbtt__rasterize(stbtt__bitmap*, stbtt__point*, int*, int, float, float, float, float, int, int, int, void*)
00162a9c 0000006c t stbtt__add_point(stbtt__point*, int, float, float)
00162b08 000001f8 t stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int)
00162d00 00000368 t stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int)
00163068 0000068c t stbtt_FlattenCurves(stbtt_vertex*, int, float, int**, int*, void*)
001636f4 000000fc t stbtt_Rasterize
001637f0 00000114 t stbtt_MakeGlyphBitmapSubpixel
00163904 00000184 t stbtt_PackBegin
00163a88 0000003c t stbtt_PackEnd
00163ac4 000000ac t stbtt_PackSetOversampling
00163b70 00000510 t stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int)
00164080 000005d4 t stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int)
00164654 00000060 t stbtt__oversample_shift(int)
001646b4 00000340 t stbtt_PackFontRangesGatherRects
001649f4 00000718 t stbtt_PackFontRangesRenderIntoRects
0016510c 00000268 t stbtt_GetPackedQuad
00165374 00000030 t stbtt_GetFontOffsetForIndex
001653a4 00000038 t stbtt_InitFont
001653dc 000009d0 T ImGui::StyleColorsClassic(ImGuiStyle*)
00165dac 000009b8 T ImGui::StyleColorsDark(ImGuiStyle*)
00166764 000009bc T ImGui::StyleColorsLight(ImGuiStyle*)
00167120 0000016c T ImDrawListSharedData::ImDrawListSharedData()
00167120 0000016c T ImDrawListSharedData::ImDrawListSharedData()
0016728c 000000d8 T ImDrawList::Clear()
00167364 00000168 T ImDrawList::ClearFreeMemory()
001674cc 0000010c T ImDrawList::AddDrawCmd()
001675d8 000001d4 T ImDrawList::UpdateClipRect()
001677ac 000001a8 T ImDrawList::UpdateTextureID()
00167954 0000017c T ImDrawList::PushClipRect(ImVec2, ImVec2, bool)
00167ad0 000000a0 T ImDrawList::PushClipRectFullScreen()
00167b70 00000064 T ImDrawList::PopClipRect()
00167bd4 0000003c T ImDrawList::PushTextureID(void* const&)
00167c10 00000068 T ImDrawList::PopTextureID()
00167c78 0000003c W ImDrawChannel::ImDrawChannel()
00167c78 0000003c W ImDrawChannel::ImDrawChannel()
00167cb4 00000248 T ImDrawList::ChannelsSplit(int)
00167efc 000002d4 T ImDrawList::ChannelsMerge()
001681d0 00000190 T ImDrawList::ChannelsSetCurrent(int)
00168360 000000f0 T ImDrawList::PrimReserve(int, int)
00168450 0000027c T ImDrawList::PrimRect(ImVec2 const&, ImVec2 const&, unsigned int)
001686cc 000002b0 T ImDrawList::PrimRectUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0016897c 0000169c T ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, bool, float)
0016a018 00000768 T ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int)
0016a780 00000164 T ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
0016a8e4 0000014c T ImDrawList::PathArcTo(ImVec2 const&, float, float, float, int)
0016aa30 00000318 t PathBezierToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, float, float, int)
0016ad48 00000260 T ImDrawList::PathBezierCurveTo(ImVec2 const&, ImVec2 const&, ImVec2 const&, int)
0016afa8 00000348 T ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
0016b2f0 000000e0 T ImDrawList::AddLine(ImVec2 const&, ImVec2 const&, unsigned int, float)
0016b3d0 000000dc T ImDrawList::AddRect(ImVec2 const&, ImVec2 const&, unsigned int, float, int, float)
0016b4ac 0000009c T ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
0016b548 000001c0 T ImDrawList::AddRectFilledMultiColor(ImVec2 const&, ImVec2 const&, unsigned int, unsigned int, unsigned int, unsigned int)
0016b708 00000078 T ImDrawList::AddTriangle(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float)
0016b780 0000006c T ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0016b7ec 000000c0 T ImDrawList::AddCircle(ImVec2 const&, float, unsigned int, int, float)
0016b8ac 000000a4 T ImDrawList::AddCircleFilled(ImVec2 const&, float, unsigned int, int)
0016b950 0000007c T ImDrawList::AddBezierCurve(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int, float, int)
0016b9cc 00000210 T ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
0016bbdc 000000f0 T ImDrawList::AddImage(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0016bccc 000001c8 T ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawVert*, ImDrawVert*, ImVec2, ImVec2, unsigned int, unsigned int)
0016be94 00000148 T ImFontConfig::ImFontConfig()
0016be94 00000148 T ImFontConfig::ImFontConfig()
0016bfdc 0000011c T ImFontAtlas::ImFontAtlas()
0016bfdc 0000011c T ImFontAtlas::ImFontAtlas()
0016c0f8 00000058 T ImFontAtlas::~ImFontAtlas()
0016c0f8 00000058 T ImFontAtlas::~ImFontAtlas()
0016c150 00000250 T ImFontAtlas::ClearInputData()
0016c3a0 00000074 T ImFontAtlas::ClearTexData()
0016c414 00000078 T ImFontAtlas::ClearFonts()
0016c48c 00000034 T ImFontAtlas::Clear()
0016c4c0 000000c8 T ImFontAtlas::GetTexDataAsAlpha8(unsigned char**, int*, int*, int*)
0016c588 00000154 T ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*)
0016c6dc 000001fc T ImFontAtlas::AddFont(ImFontConfig const*)
0016c8d8 00000044 t Decode85Byte(char)
0016c91c 0000017c t Decode85(unsigned char const*, unsigned char*)
0016ca98 0000010c T ImFontAtlas::AddFontDefault(ImFontConfig const*)
0016cba4 000000d0 T ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, ImFontConfig const*, unsigned short const*)
0016cc74 000000ec T ImFontAtlas::AddFontFromMemoryCompressedTTF(void const*, int, float, ImFontConfig const*, unsigned short const*)
0016cd60 000000a8 T ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(char const*, float, ImFontConfig const*, unsigned short const*)
0016ce08 00000110 T ImFontAtlas::AddCustomRectRegular(unsigned int, int, int)
0016cf18 0000019c T ImFontAtlas::CalcCustomRectUV(ImFontAtlas::CustomRect const*, ImVec2*, ImVec2*)
0016d0b4 00000028 T ImFontAtlas::Build()
0016d0dc 00000098 T ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char*, float)
0016d174 000000dc T ImFontAtlasBuildMultiplyRectAlpha8(unsigned char const*, unsigned char*, int, int, int, int, int)
0016d250 00000e78 T ImFontAtlasBuildWithStbTruetype(ImFontAtlas*)
0016e0c8 0000004c T ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas*)
0016e114 000000ac T ImFontAtlasBuildSetupFont(ImFontAtlas*, ImFont*, ImFontConfig*, float, float)
0016e1c0 000002e8 T ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*)
0016e4a8 00000568 t ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*)
0016ea10 000001e0 T ImFontAtlasBuildFinish(ImFontAtlas*)
0016ebf0 00000028 T ImFontAtlas::GetGlyphRangesDefault()
0016ec18 000000b0 T ImFont::ImFont()
0016ec18 000000b0 T ImFont::ImFont()
0016ecc8 00000058 T ImFont::~ImFont()
0016ecc8 00000058 T ImFont::~ImFont()
0016ed20 000000bc T ImFont::ClearOutputData()
0016eddc 000003bc T ImFont::BuildLookupTable()
0016f198 000000b8 T ImFont::GrowIndex(int)
0016f250 000001d0 T ImFont::AddGlyph(unsigned short, float, float, float, float, float, float, float, float, float)
0016f420 0000009c T ImFont::FindGlyph(unsigned short) const
0016f4bc 000002f8 T ImFont::CalcWordWrapPositionA(float, char const*, char const*, float) const
0016f7b4 000003bc T ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
0016fb70 00000200 T ImFont::RenderChar(ImDrawList*, float, ImVec2, unsigned int, unsigned short) const
0016fd70 00000a04 T ImFont::RenderText(ImDrawList*, float, ImVec2, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
00170774 0000006c t ImAcos01(float)
001707e0 00000618 T ImGui::RenderRectFilledRangeH(ImDrawList*, ImRect const&, unsigned int, float, float, float)
00170df8 00000068 t stb_decompress_length(unsigned char*)
00170e60 00000124 t stb__match(unsigned char*, unsigned int)
00170f84 00000104 t stb__lit(unsigned char*, unsigned int)
00171088 0000044c t stb_decompress_token(unsigned char*)
001714d4 000002ec t stb_adler32(unsigned int, unsigned char*, unsigned int)
001717c0 000002f0 t stb_decompress(unsigned char*, unsigned char*, unsigned int)
00171ab0 00000020 t GetDefaultCompressedFontDataTTFBase85()
00171ad0 0000004c W ImVector<ImDrawCmd>::ImVector()
00171ad0 0000004c W ImVector<ImDrawCmd>::ImVector()
00171b1c 0000004c W ImVector<unsigned short>::ImVector()
00171b1c 0000004c W ImVector<unsigned short>::ImVector()
00171b68 00000040 W ImVector<unsigned short>::~ImVector()
00171b68 00000040 W ImVector<unsigned short>::~ImVector()
00171ba8 0000004c W ImVector<ImDrawVert>::ImVector()
00171ba8 0000004c W ImVector<ImDrawVert>::ImVector()
00171bf4 00000040 W ImVector<ImDrawVert>::~ImVector()
00171bf4 00000040 W ImVector<ImDrawVert>::~ImVector()
00171c34 0000005c W ImVector<ImVec2>::resize(int)
00171c90 00000090 W ImVector<ImVec2>::push_back(ImVec2 const&)
00171d20 0000006c W ImVector<float>::operator[](int) const
00171d8c 0000004c W ImVector<ImFont*>::ImVector()
00171d8c 0000004c W ImVector<ImFont*>::ImVector()
00171dd8 00000040 W ImVector<ImFont*>::~ImVector()
00171dd8 00000040 W ImVector<ImFont*>::~ImVector()
00171e18 0000004c W ImVector<float>::ImVector()
00171e18 0000004c W ImVector<float>::ImVector()
00171e64 00000040 W ImVector<float>::~ImVector()
00171e64 00000040 W ImVector<float>::~ImVector()
00171ea4 0000005c W ImVector<ImDrawCmd>::resize(int)
00171f00 0000005c W ImVector<unsigned short>::resize(int)
00171f5c 0000005c W ImVector<ImDrawVert>::resize(int)
00171fb8 0000005c W ImVector<ImVec4>::resize(int)
00172014 0000005c W ImVector<void*>::resize(int)
00172070 00000064 W ImVector<ImDrawCmd>::clear()
001720d4 00000064 W ImVector<unsigned short>::clear()
00172138 00000064 W ImVector<ImDrawVert>::clear()
0017219c 00000064 W ImVector<ImVec4>::clear()
00172200 00000064 W ImVector<void*>::clear()
00172264 00000064 W ImVector<ImVec2>::clear()
001722c8 00000078 W ImVector<ImDrawChannel>::operator[](int)
00172340 00000064 W ImVector<ImDrawChannel>::clear()
001723a4 000000a0 W ImVector<ImDrawCmd>::push_back(ImDrawCmd const&)
00172444 00000068 W ImVector<ImDrawCmd>::back()
001724ac 00000064 W ImVector<ImDrawCmd>::pop_back()
00172510 00000094 W ImVector<ImVec4>::push_back(ImVec4 const&)
001725a4 00000064 W ImVector<ImVec4>::pop_back()
00172608 00000090 W ImVector<void*>::push_back(void* const&)
00172698 00000064 W ImVector<void*>::pop_back()
001726fc 0000005c W ImVector<ImDrawChannel>::resize(int)
00172758 00000068 W ImVector<ImVec4>::back()
001727c0 00000068 W ImVector<void*>::back()
00172828 000000a4 W ImVector<ImVec2>::reserve(int)
001728cc 00000068 W ImVector<ImVec2>::back()
00172934 00000038 W ImVector<void*>::empty() const
0017296c 00000038 W ImVector<unsigned short>::empty() const
001729a4 00000078 W ImVector<ImDrawVert>::operator[](int)
00172a1c 0000006c W ImVector<unsigned short>::operator[](int)
00172a88 0000006c W ImVector<ImDrawCmd>::operator[](int)
00172af4 0000004c W ImVector<ImFontAtlas::CustomRect>::ImVector()
00172af4 0000004c W ImVector<ImFontAtlas::CustomRect>::ImVector()
00172b40 00000040 W ImVector<ImFontAtlas::CustomRect>::~ImVector()
00172b40 00000040 W ImVector<ImFontAtlas::CustomRect>::~ImVector()
00172b80 0000004c W ImVector<ImFontConfig>::ImVector()
00172b80 0000004c W ImVector<ImFontConfig>::ImVector()
00172bcc 00000040 W ImVector<ImFontConfig>::~ImVector()
00172bcc 00000040 W ImVector<ImFontConfig>::~ImVector()
00172c0c 00000080 W ImVector<ImFontConfig>::operator[](int)
00172c8c 0000006c W ImVector<ImFont*>::operator[](int)
00172cf8 00000064 W ImVector<ImFontConfig>::clear()
00172d5c 00000064 W ImVector<ImFontAtlas::CustomRect>::clear()
00172dc0 00000058 W void IM_DELETE<ImFont>(ImFont*&)
00172e18 00000064 W ImVector<ImFont*>::clear()
00172e7c 00000038 W ImVector<ImFontConfig>::empty() const
00172eb4 00000090 W ImVector<ImFont*>::push_back(ImFont* const&)
00172f44 00000038 W ImVector<ImFont*>::empty() const
00172f7c 000000b4 W ImVector<ImFontConfig>::push_back(ImFontConfig const&)
00173030 00000080 W ImVector<ImFontConfig>::back()
001730b0 00000068 W ImVector<ImFont*>::back()
00173118 000000b0 W ImVector<ImFontAtlas::CustomRect>::push_back(ImFontAtlas::CustomRect const&)
001731c8 0000004c W ImVector<stbrp_rect>::ImVector()
001731c8 0000004c W ImVector<stbrp_rect>::ImVector()
00173214 00000040 W ImVector<stbrp_rect>::~ImVector()
00173214 00000040 W ImVector<stbrp_rect>::~ImVector()
00173254 0000005c W ImVector<stbrp_rect>::resize(int)
001732b0 0000006c W ImVector<stbrp_rect>::operator[](int)
0017331c 00000078 W ImVector<ImFontAtlas::CustomRect>::operator[](int)
00173394 0000004c W ImVector<ImFontGlyph>::ImVector()
00173394 0000004c W ImVector<ImFontGlyph>::ImVector()
001733e0 00000040 W ImVector<ImFontGlyph>::~ImVector()
001733e0 00000040 W ImVector<ImFontGlyph>::~ImVector()
00173420 00000064 W ImVector<ImFontGlyph>::clear()
00173484 00000064 W ImVector<float>::clear()
001734e8 00000078 W ImVector<ImFontGlyph>::operator[](int)
00173560 0000006c W ImVector<float>::operator[](int)
001735cc 00000078 W ImVector<ImFontGlyph>::back()
00173644 0000005c W ImVector<ImFontGlyph>::resize(int)
001736a0 000000c0 W ImVector<float>::resize(int, float const&)
00173760 000000c0 W ImVector<unsigned short>::resize(int, unsigned short const&)
00173820 0000006c W ImVector<unsigned short>::operator[](int) const
0017388c 0000007c W ImVector<ImVec2>::_grow_capacity(int) const
00173908 000000a4 W ImVector<ImDrawCmd>::reserve(int)
001739ac 0000007c W ImVector<ImDrawCmd>::_grow_capacity(int) const
00173a28 000000a4 W ImVector<unsigned short>::reserve(int)
00173acc 0000007c W ImVector<unsigned short>::_grow_capacity(int) const
00173b48 000000c0 W ImVector<ImDrawVert>::reserve(int)
00173c08 0000007c W ImVector<ImDrawVert>::_grow_capacity(int) const
00173c84 000000a4 W ImVector<ImVec4>::reserve(int)
00173d28 0000007c W ImVector<ImVec4>::_grow_capacity(int) const
00173da4 000000a4 W ImVector<void*>::reserve(int)
00173e48 0000007c W ImVector<void*>::_grow_capacity(int) const
00173ec4 000000c0 W ImVector<ImDrawChannel>::reserve(int)
00173f84 0000007c W ImVector<ImDrawChannel>::_grow_capacity(int) const
00174000 000000a4 W ImVector<ImFont*>::reserve(int)
001740a4 0000007c W ImVector<ImFont*>::_grow_capacity(int) const
00174120 000000d0 W ImVector<ImFontConfig>::reserve(int)
001741f0 0000007c W ImVector<ImFontConfig>::_grow_capacity(int) const
0017426c 000000c0 W ImVector<ImFontAtlas::CustomRect>::reserve(int)
0017432c 0000007c W ImVector<ImFontAtlas::CustomRect>::_grow_capacity(int) const
001743a8 000000a4 W ImVector<stbrp_rect>::reserve(int)
0017444c 0000007c W ImVector<stbrp_rect>::_grow_capacity(int) const
001744c8 000000c0 W ImVector<ImFontGlyph>::reserve(int)
00174588 0000007c W ImVector<ImFontGlyph>::_grow_capacity(int) const
00174604 000000a4 W ImVector<float>::reserve(int)
001746a8 0000007c W ImVector<float>::_grow_capacity(int) const
00174724 00000250 t __static_initialization_and_destruction_0(int, int)
00174974 0000001c t _GLOBAL__sub_I__ZN5ImGui18StyleColorsClassicEP10ImGuiStyle
00174990 00000088 T ImGuizmo::makeVect(float, float, float, float)
00174a18 00000024 W ImGuizmo::matrix_t::matrix_t()
00174a18 00000024 W ImGuizmo::matrix_t::matrix_t()
00174a3c 0000014c W ImGuizmo::Context::Context()
00174a3c 0000014c W ImGuizmo::Context::Context()
00174b88 00000100 t __static_initialization_and_destruction_0(int, int)
00174c88 0000001c t _GLOBAL__sub_I__ZN8ImGuizmo21FPU_MatrixF_x_MatrixFEPKfS1_Pf
00174ca4 00000044 W ImGuiTextFilter::TextRange::TextRange(char const*, char const*)
00174ca4 00000044 W ImGuiTextFilter::TextRange::TextRange(char const*, char const*)
00174ce8 00000028 W ImGuiTextFilter::TextRange::begin() const
00174d10 00000028 W ImGuiTextFilter::TextRange::end() const
00174d38 00000040 W ImGuiTextFilter::TextRange::empty() const
00174d78 0000002c W ImGuiTextFilter::TextRange::front() const
00174da4 00000048 W ImGuiTextFilter::TextRange::is_blank(char)
00174dec 000000e8 W ImGuiTextFilter::TextRange::trim_blanks()
00174ed4 00000048 W ImGuiTextBuffer::ImGuiTextBuffer()
00174ed4 00000048 W ImGuiTextBuffer::ImGuiTextBuffer()
00174f1c 0000002c W ImGuiTextBuffer::begin() const
00174f48 0000002c W ImGuiTextBuffer::size() const
00174f74 00000044 W ImGuiTextBuffer::clear()
00174fb8 00000030 W ImGuiTextBuffer::reserve(int)
00174fe8 00000044 W ImGuiStorage::Pair::Pair(unsigned int, int)
00174fe8 00000044 W ImGuiStorage::Pair::Pair(unsigned int, int)
0017502c 00000044 W ImGuiStorage::Pair::Pair(unsigned int, void*)
0017502c 00000044 W ImGuiStorage::Pair::Pair(unsigned int, void*)
00175070 00000028 W ImGuiPayload::ImGuiPayload()
00175070 00000028 W ImGuiPayload::ImGuiPayload()
00175098 00000090 W ImGuiPayload::Clear()
00175128 0000005c W ImGuiPayload::IsDataType(char const*) const
00175184 000000b4 W ImColor::ImColor(int, int, int, int)
00175184 000000b4 W ImColor::ImColor(int, int, int, int)
00175238 0000005c W ImColor::operator ImVec4() const
00175294 00000038 W ImGuiListClipper::ImGuiListClipper(int, float)
00175294 00000038 W ImGuiListClipper::ImGuiListClipper(int, float)
001752cc 00000054 W ImGuiListClipper::~ImGuiListClipper()
001752cc 00000054 W ImGuiListClipper::~ImGuiListClipper()
00175320 000000b0 W ImDrawList::ImDrawList(ImDrawListSharedData const*)
00175320 000000b0 W ImDrawList::ImDrawList(ImDrawListSharedData const*)
001753d0 00000094 W ImDrawList::~ImDrawList()
001753d0 00000094 W ImDrawList::~ImDrawList()
00175464 00000054 W ImDrawList::PrimVtx(ImVec2 const&, ImVec2 const&, unsigned int)
001754b8 00000068 W ImDrawData::ImDrawData()
001754b8 00000068 W ImDrawData::ImDrawData()
00175520 00000068 W ImFont::GetCharAdvance(unsigned short) const
00175588 00000050 t ImCharIsSpace(int)
001755d8 00000050 t ImIsPowerOfTwo(int)
00175628 00000078 t operator*(ImVec2 const&, float)
001756a0 00000080 t operator+(ImVec2 const&, ImVec2 const&)
00175720 00000080 t operator-(ImVec2 const&, ImVec2 const&)
001757a0 00000080 t operator*(ImVec2 const&, ImVec2 const&)
00175820 00000080 t operator/(ImVec2 const&, ImVec2 const&)
001758a0 00000060 t operator+=(ImVec2&, ImVec2 const&)
00175900 00000060 t operator-=(ImVec2&, ImVec2 const&)
00175960 00000058 t operator*=(ImVec2&, float)
001759b8 000000c8 t operator*(ImVec4 const&, ImVec4 const&)
00175a80 00000040 t ImMin(int, int)
00175ac0 00000040 t ImMax(int, int)
00175b00 00000048 t ImMin(float, float)
00175b48 00000048 t ImMax(float, float)
00175b90 000000a0 t ImMin(ImVec2 const&, ImVec2 const&)
00175c30 000000a0 t ImMax(ImVec2 const&, ImVec2 const&)
00175cd0 0000005c t ImClamp(int, int, int)
00175d2c 00000068 t ImClamp(float, float, float)
00175d94 000000c0 t ImClamp(ImVec2 const&, ImVec2 const&, ImVec2)
00175e54 00000060 t ImSaturate(float)
00175eb4 0000004c t ImSwap(float&, float&)
00175f00 0000005c t ImLerp(int, int, float)
00175f5c 00000044 t ImLerp(float, float, float)
00175fa0 000000ac t ImLerp(ImVec2 const&, ImVec2 const&, float)
0017604c 000000b4 t ImLerp(ImVec2 const&, ImVec2 const&, ImVec2 const&)
00176100 0000004c t ImLengthSqr(ImVec2 const&)
0017614c 0000002c t ImFloor(float)
00176178 00000074 t ImFloor(ImVec2 const&)
001761ec 000000a4 t ImRotate(ImVec2 const&, float, float)
00176290 00000054 W ImRect::ImRect()
00176290 00000054 W ImRect::ImRect()
001762e4 00000050 W ImRect::ImRect(ImVec2 const&, ImVec2 const&)
001762e4 00000050 W ImRect::ImRect(ImVec2 const&, ImVec2 const&)
00176334 00000070 W ImRect::ImRect(ImVec4 const&)
00176334 00000070 W ImRect::ImRect(ImVec4 const&)
001763a4 0000005c W ImRect::ImRect(float, float, float, float)
001763a4 0000005c W ImRect::ImRect(float, float, float, float)
00176400 00000090 W ImRect::GetCenter() const
00176490 0000007c W ImRect::GetSize() const
0017650c 00000034 W ImRect::GetWidth() const
00176540 00000034 W ImRect::GetHeight() const
00176574 00000044 W ImRect::GetTL() const
001765b8 00000064 W ImRect::GetTR() const
0017661c 00000064 W ImRect::GetBL() const
00176680 00000048 W ImRect::GetBR() const
001766c8 000000a0 W ImRect::Contains(ImVec2 const&) const
00176768 000000a0 W ImRect::Contains(ImRect const&) const
00176808 000000a0 W ImRect::Overlaps(ImRect const&) const
001768a8 000000d8 W ImRect::Add(ImVec2 const&)
00176980 000000d8 W ImRect::Add(ImRect const&)
00176a58 00000084 W ImRect::Expand(float)
00176adc 00000094 W ImRect::Expand(ImVec2 const&)
00176b70 000000d8 W ImRect::ClipWith(ImRect const&)
00176c48 00000080 W ImRect::Floor()
00176cc8 0000008c W ImRect::FixInverted()
00176d54 00000148 W ImRect::GetClosestPoint(ImVec2, bool) const
00176e9c 00000044 W ImGuiStyleMod::ImGuiStyleMod(int, float)
00176e9c 00000044 W ImGuiStyleMod::ImGuiStyleMod(int, float)
00176ee0 0000005c W ImGuiStyleMod::ImGuiStyleMod(int, ImVec2)
00176ee0 0000005c W ImGuiStyleMod::ImGuiStyleMod(int, ImVec2)
00176f3c 00000064 W ImGuiTextEditState::ImGuiTextEditState()
00176f3c 00000064 W ImGuiTextEditState::ImGuiTextEditState()
00176fa0 00000038 W ImGuiTextEditState::CursorAnimReset()
00176fd8 00000094 W ImGuiTextEditState::CursorClamp()
0017706c 00000040 W ImGuiTextEditState::HasSelection() const
001770ac 00000040 W ImGuiTextEditState::ClearSelection()
001770ec 00000058 W ImGuiTextEditState::SelectAll()
00177144 000000a8 W ImGuiWindowSettings::ImGuiWindowSettings()
00177144 000000a8 W ImGuiWindowSettings::ImGuiWindowSettings()
001771ec 00000080 W ImGuiPopupRef::ImGuiPopupRef(unsigned int, ImGuiWindow*, unsigned int, ImVec2 const&)
001771ec 00000080 W ImGuiPopupRef::ImGuiPopupRef(unsigned int, ImGuiWindow*, unsigned int, ImVec2 const&)
0017726c 00000058 W ImGuiColumnData::ImGuiColumnData()
0017726c 00000058 W ImGuiColumnData::ImGuiColumnData()
001772c4 00000038 W ImGuiColumnsSet::ImGuiColumnsSet()
001772c4 00000038 W ImGuiColumnsSet::ImGuiColumnsSet()
001772fc 000000c4 W ImGuiColumnsSet::Clear()
001773c0 0000002c W ImGuiStorage::ImGuiStorage()
001773c0 0000002c W ImGuiStorage::ImGuiStorage()
001773ec 0000002c W ImGuiStorage::~ImGuiStorage()
001773ec 0000002c W ImGuiStorage::~ImGuiStorage()
00177418 00000098 W ImGuiMouseCursorData::ImGuiMouseCursorData()
00177418 00000098 W ImGuiMouseCursorData::ImGuiMouseCursorData()
001774b0 00000050 W ImGuiTextEditState::~ImGuiTextEditState()
001774b0 00000050 W ImGuiTextEditState::~ImGuiTextEditState()
00177500 00000a40 W ImGuiContext::ImGuiContext()
00177500 00000a40 W ImGuiContext::ImGuiContext()
00177f40 00000254 W ImGuiDrawContext::ImGuiDrawContext()
00177f40 00000254 W ImGuiDrawContext::ImGuiDrawContext()
00178194 000000ac W ImGuiWindow::Rect() const
00178240 00000044 W ImGuiWindow::CalcFontSize() const
00178284 0000006c W ImGuiWindow::TitleBarHeight() const
001782f0 000000bc W ImGuiWindow::TitleBarRect() const
001783ac 0000006c W ImGuiWindow::MenuBarHeight() const
00178418 000000c8 W ImGuiWindow::MenuBarRect() const
001784e0 00000038 W ImGuiItemHoveredDataBackup::ImGuiItemHoveredDataBackup()
001784e0 00000038 W ImGuiItemHoveredDataBackup::ImGuiItemHoveredDataBackup()
00178518 00000070 W ImGuiItemHoveredDataBackup::Backup()
00178588 00000070 W ImGuiItemHoveredDataBackup::Restore() const
001785f8 00000038 W ImGui::GetCurrentWindowRead()
00178630 0000004c W ImGui::GetCurrentWindow()
0017867c 00000394 T ImGuiStyle::ImGuiStyle()
0017867c 00000394 T ImGuiStyle::ImGuiStyle()
00178a10 00000464 T ImGuiIO::ImGuiIO()
00178a10 00000464 T ImGuiIO::ImGuiIO()
00178e74 0000008c T ImGuiIO::AddInputCharacter(unsigned short)
00178f00 00000164 T ImLineClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&)
00179064 000001a8 T ImTriangleContainsPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&)
0017920c 0000011c T ImTriangleBarycentricCoords(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, float&, float&, float&)
00179328 000001ac T ImTriangleClosestPoint(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&)
001794d4 0000005c T ImStrncpy(char*, char const*, unsigned int)
00179530 00000050 T ImStrdup(char const*)
00179580 0000006c T ImStrchrRange(char const*, char const*, char)
001795ec 00000064 T ImStrlenW(unsigned short const*)
00179650 0000005c T ImStrbolW(unsigned short const*, unsigned short const*)
001796ac 00000160 T ImStristr(char const*, char const*, char const*, char const*)
0017980c 000000f4 t ImAtoi(char const*, int*)
00179900 000000a0 T ImFormatString(char*, unsigned int, char const*, ...)
001799a0 00000094 T ImFormatStringV(char*, unsigned int, char const*, std::__va_list)
00179a34 000001e0 T ImHash(void const*, int, unsigned int)
00179c14 00000494 T ImTextCharFromUtf8(unsigned int*, char const*, char const*)
0017a0a8 00000118 T ImTextStrFromUtf8(unsigned short*, int, char const*, char const*, char const**)
0017a1c0 000000ac T ImTextCountCharsFromUtf8(char const*, char const*)
0017a26c 00000218 t ImTextCharToUtf8(char*, int, unsigned int)
0017a484 0000008c t ImTextCountUtf8BytesFromChar(unsigned int)
0017a510 0000010c T ImTextStrToUtf8(char*, int, unsigned short const*, unsigned short const*)
0017a61c 000000a4 T ImTextCountUtf8BytesFromStr(unsigned short const*, unsigned short const*)
0017a6c0 0000010c T ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
0017a7cc 00000088 T ImGui::GetColorU32(int, float)
0017a854 00000068 T ImGui::GetColorU32(ImVec4 const&)
0017a8bc 00000050 T ImGui::GetStyleColorVec4(int)
0017a90c 00000098 T ImGui::GetColorU32(unsigned int)
0017a9a4 0000013c T ImGui::ColorConvertRGBtoHSV(float, float, float, float&, float&, float&)
0017aae0 0000022c T ImGui::ColorConvertHSVtoRGB(float, float, float, float&, float&, float&)
0017ad0c 00000030 T ImFileOpen(char const*, char const*)
0017ad3c 000001f8 T ImFileLoadToMemory(char const*, char const*, int*, int)
0017af34 000000c8 t LowerBound(ImVector<ImGuiStorage::Pair>&, unsigned int)
0017affc 0000008c T ImGuiStorage::GetInt(unsigned int, int) const
0017b088 00000088 T ImGuiStorage::GetVoidPtr(unsigned int) const
0017b110 000000b4 T ImGuiStorage::SetInt(unsigned int, int)
0017b1c4 000000b4 T ImGuiStorage::SetVoidPtr(unsigned int, void*)
0017b278 00000078 T ImGuiTextFilter::ImGuiTextFilter(char const*)
0017b278 00000078 T ImGuiTextFilter::ImGuiTextFilter(char const*)
0017b2f0 00000094 T ImGuiTextFilter::Draw(char const*, float)
0017b384 000000e4 T ImGuiTextFilter::TextRange::split(char, ImVector<ImGuiTextFilter::TextRange>&)
0017b468 00000150 T ImGuiTextFilter::Build()
0017b5b8 00000198 T ImGuiTextFilter::PassFilter(char const*, char const*) const
0017b750 00000108 T ImGuiTextBuffer::appendfv(char const*, std::__va_list)
0017b858 00000040 T ImGuiTextBuffer::appendf(char const*, ...)
0017b898 00000088 T ImGuiSimpleColumns::ImGuiSimpleColumns()
0017b898 00000088 T ImGuiSimpleColumns::ImGuiSimpleColumns()
0017b920 000001a0 T ImGuiSimpleColumns::Update(int, float, bool)
0017bac0 0000014c T ImGuiSimpleColumns::DeclColumns(float, float, float)
0017bc0c 00000098 t SetCursorPosYAndSetupDummyPrevLine(float, float)
0017bca4 00000110 T ImGuiListClipper::Begin(int, float)
0017bdb4 00000094 T ImGuiListClipper::End()
0017be48 00000208 T ImGuiListClipper::Step()
0017c050 0000060c T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0017c050 0000060c T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0017c65c 00000080 T ImGuiWindow::GetID(char const*, char const*)
0017c6dc 00000060 T ImGuiWindow::GetID(void const*)
0017c73c 00000074 T ImGuiWindow::GetIDNoKeepAlive(char const*, char const*)
0017c7b0 000000e0 T ImGuiWindow::GetIDFromRectangle(ImRect const&)
0017c890 0000008c t SetCurrentWindow(ImGuiWindow*)
0017c91c 00000108 T ImGui::SetActiveID(unsigned int, ImGuiWindow*)
0017ca24 0000001c T ImGui::ClearActiveID()
0017ca40 000000b8 T ImGui::SetHoveredID(unsigned int)
0017caf8 00000058 T ImGui::KeepAliveID(unsigned int)
0017cb50 000000d8 t IsWindowContentHoverable(ImGuiWindow*, int)
0017cc28 00000210 T ImGui::ItemSize(ImVec2 const&, float)
0017ce38 00000048 T ImGui::ItemSize(ImRect const&, float)
0017ce80 000000c8 T ImGui::ItemAdd(ImRect const&, unsigned int)
0017cf48 000001bc T ImGui::IsItemHovered(int)
0017d104 00000184 T ImGui::ItemHoverable(ImRect const&, unsigned int)
0017d288 000000c8 T ImGui::IsClippedEx(ImRect const&, unsigned int, bool)
0017d350 000001a4 T ImGui::FocusableItemRegister(ImGuiWindow*, unsigned int, bool)
0017d4f4 00000048 T ImGui::FocusableItemUnregister(ImGuiWindow*)
0017d53c 00000190 T ImGui::CalcItemSize(ImVec2, float, float)
0017d6cc 000000d8 T ImGui::CalcWrapWidthForPos(ImVec2 const&, float)
0017d7a4 0000004c T ImGui::MemAlloc(unsigned int)
0017d7f0 00000054 T ImGui::MemFree(void*)
0017d844 00000058 T ImGui::GetClipboardText()
0017d89c 00000058 T ImGui::SetClipboardText(char const*)
0017d8f4 00000020 T ImGui::GetVersion()
0017d914 000001a0 W ImGuiContext::~ImGuiContext()
0017d914 000001a0 W ImGuiContext::~ImGuiContext()
0017dab4 00000028 T ImGui::GetIO()
0017dadc 0000002c T ImGui::GetStyle()
0017db08 00000038 T ImGui::GetTime()
0017db40 0000002c T ImGui::GetFrameCount()
0017db6c 00001b88 T ImGui::NewFrame()
0017f6f4 0000005c t SettingsHandlerWindow_ReadOpen(ImGuiContext&, char const*)
0017f750 00000170 t SettingsHandlerWindow_ReadLine(ImGuiContext&, void*, char const*)
0017f8c0 00000280 t SettingsHandlerWindow_WriteAll(ImGuiContext&, ImGuiTextBuffer*)
0017fb40 0000011c T ImGui::Initialize()
0017fc5c 000000bc T ImGui::FindWindowSettings(unsigned int)
0017fd18 000000a0 t AddWindowSettings(char const*)
0017fdb8 0000006c t LoadIniSettingsFromDisk(char const*)
0017fe24 000000bc T ImGui::FindSettingsHandler(unsigned int)
0017fee0 0000028c t LoadIniSettingsFromMemory(char const*)
0018016c 000000c8 t SaveIniSettingsToDisk(char const*)
00180234 0000002c W ImGuiTextBuffer::~ImGuiTextBuffer()
00180234 0000002c W ImGuiTextBuffer::~ImGuiTextBuffer()
00180260 000000d8 t SaveIniSettingsToMemory(ImVector<char>&)
00180338 00000084 t MarkIniSettingsDirty(ImGuiWindow*)
001803bc 000000b8 t ChildWindowComparer(void const*, void const*)
00180474 000000e0 t AddWindowToSortedBuffer(ImVector<ImGuiWindow*>&, ImGuiWindow*)
00180554 00000218 t AddDrawListToRenderList(ImVector<ImDrawList*>&, ImDrawList*)
0018076c 000000d8 t AddWindowToRenderList(ImVector<ImDrawList*>&, ImGuiWindow*)
00180844 000000b8 t AddWindowToRenderListSelectLayer(ImGuiWindow*)
001808fc 000000a8 T ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
001809a4 0000006c T ImGui::PopClipRect()
00180a10 0000060c T ImGui::EndFrame()
0018101c 000007a4 T ImGui::Render()
001817c0 00000098 T ImGui::FindRenderedTextEnd(char const*, char const*)
00181858 000000ac T ImGui::LogText(char const*, ...)
00181904 00000264 t LogRenderedText(ImVec2 const*, char const*, char const*)
00181b68 00000164 T ImGui::RenderText(ImVec2, char const*, char const*, bool)
00181ccc 00000134 T ImGui::RenderTextWrapped(ImVec2, char const*, char const*, float)
00181e00 000003c8 T ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
001821c8 000001a8 T ImGui::RenderFrame(ImVec2, ImVec2, unsigned int, bool, float)
00182370 0000016c T ImGui::RenderFrameBorder(ImVec2, ImVec2, float)
001824dc 000003a8 T ImGui::RenderTriangle(ImVec2, ImGuiDir, float)
00182884 000000a4 T ImGui::RenderBullet(ImVec2)
00182928 000001f0 T ImGui::RenderCheckMark(ImVec2, unsigned int, float)
00182b18 00000178 T ImGui::CalcTextSize(char const*, char const*, bool, float)
00182c90 00000148 T ImGui::CalcListClipping(int, float, int*, int*)
00182dd8 00000164 t FindHoveredWindow(ImVec2)
00182f3c 0000010c T ImGui::IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool)
00183048 0000007c t IsKeyPressedMap(int, bool)
001830c4 000000b8 T ImGui::CalcTypematicPressedRepeatAmount(float, float, float, float)
0018317c 000000d0 T ImGui::GetKeyPressedAmount(int, float, float)
0018324c 0000011c T ImGui::IsKeyPressed(int, bool)
00183368 000000d4 T ImGui::IsKeyReleased(int)
0018343c 0000007c T ImGui::IsMouseDown(int)
001834b8 00000194 T ImGui::IsMouseClicked(int, bool)
0018364c 00000080 T ImGui::IsMouseReleased(int)
001836cc 00000080 T ImGui::IsMouseDoubleClicked(int)
0018374c 000000ec T ImGui::IsMouseDragging(int, float)
00183838 0000008c T ImGui::IsMousePosValid(ImVec2 const*)
001838c4 0000014c T ImGui::GetMouseDragDelta(int, float)
00183a10 0000002c T ImGui::GetMouseCursor()
00183a3c 0000003c T ImGui::SetMouseCursor(int)
00183a78 00000050 T ImGui::CaptureKeyboardFromApp(bool)
00183ac8 0000007c T ImGui::IsItemActive()
00183b44 00000054 T ImGui::IsItemClicked(int)
00183b98 00000060 T ImGui::IsAnyItemHovered()
00183bf8 0000003c T ImGui::IsAnyItemActive()
00183c34 00000094 T ImGui::SetItemAllowOverlap()
00183cc8 00000048 T ImGui::GetItemRectMin()
00183d10 00000048 T ImGui::GetItemRectMax()
00183d58 00000054 T ImGui::GetItemRectSize()
00183dac 000000a0 T ImGui::CalcItemRectClosestPoint(ImVec2 const&, bool, float)
00183e4c 000000fc t GetVisibleRect()
00183f48 000000f8 T ImGui::BeginTooltipEx(int, bool)
00184040 0000003c T ImGui::SetTooltipV(char const*, std::__va_list)
0018407c 00000038 T ImGui::SetTooltip(char const*, ...)
001840b4 0000001c T ImGui::BeginTooltip()
001840d0 00000050 T ImGui::EndTooltip()
00184120 000001a8 T ImGui::OpenPopupEx(unsigned int, bool)
001842c8 00000058 T ImGui::OpenPopup(char const*)
00184320 0000020c t CloseInactivePopups(ImGuiWindow*)
0018452c 000000b4 t GetFrontMostModalRootWindow()
001845e0 000000ac t ClosePopupToLevel(int)
0018468c 00000064 T ImGui::ClosePopup(unsigned int)
001846f0 00000150 T ImGui::CloseCurrentPopup()
00184840 000000b0 t ClearSetNextWindowData()
001848f0 000000e0 T ImGui::BeginPopupEx(unsigned int, int)
001849d0 00000090 T ImGui::BeginPopup(char const*)
00184a60 00000090 T ImGui::IsPopupOpen(unsigned int)
00184af0 00000174 T ImGui::BeginPopupModal(char const*, bool*, int)
00184c64 0000009c T ImGui::EndPopup()
00184d00 000000f0 T ImGui::OpenPopupOnItemClick(char const*, int)
00184df0 000000e4 T ImGui::BeginPopupContextItem(char const*, int)
00184ed4 000000ec T ImGui::BeginPopupContextWindow(char const*, int, bool)
00184fc0 0000024c t BeginChildEx(char const*, unsigned int, ImVec2 const&, bool, int)
0018520c 00000068 T ImGui::BeginChild(char const*, ImVec2 const&, bool, int)
00185274 00000050 T ImGui::BeginChild(unsigned int, ImVec2 const&, bool, int)
001852c4 00000154 T ImGui::EndChild()
00185418 000000b4 T ImGui::BeginChildFrame(unsigned int, ImVec2 const&, int)
001854cc 00000024 T ImGui::EndChildFrame()
001854f0 000002e0 t CheckStacksSize(ImGuiWindow*, bool)
001857d0 000006c0 t FindBestWindowPosForPopup(ImVec2 const&, ImVec2 const&, ImGuiDir*, ImRect const&, ImGuiPopupPositionPolicy)
00185e90 000000e0 t SetWindowConditionAllowFlags(ImGuiWindow*, int, bool)
00185f70 0000005c T ImGui::FindWindowByName(char const*)
00185fcc 0000036c t CreateNewWindow(char const*, ImVec2, int)
00186338 00000050 W ImGuiSizeConstraintCallbackData::ImGuiSizeConstraintCallbackData()
00186338 00000050 W ImGuiSizeConstraintCallbackData::ImGuiSizeConstraintCallbackData()
00186388 00000270 t CalcSizeAfterConstraint(ImGuiWindow*, ImVec2)
001865f8 0000010c t CalcSizeContents(ImGuiWindow*)
00186704 000001dc t CalcSizeAutoFit(ImGuiWindow*, ImVec2 const&)
001868e0 00000050 t GetScrollMaxX(ImGuiWindow*)
00186930 00000050 t GetScrollMaxY(ImGuiWindow*)
00186980 000001e8 t CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow*)
00186b68 00000054 t GetWindowBgColorIdxFromFlags(int)
00186bbc 0000017c t CalcResizePosSizeFromAnyCorner(ImGuiWindow*, ImVec2 const&, ImVec2 const&, ImVec2*, ImVec2*)
00186d38 00000270 t GetBorderRect(ImGuiWindow*, int, float, float)
00186fa8 00003a50 T ImGui::Begin(char const*, bool*, int)
0018a9f8 000000fc T ImGui::End()
0018aaf4 000009c0 T ImGui::Scrollbar(int)
0018b4b4 0000012c T ImGui::BringWindowToFront(ImGuiWindow*)
0018b5e0 000000e4 T ImGui::FocusWindow(ImGuiWindow*)
0018b6c4 000000f0 t ImGui::FocusPreviousWindow()
0018b7b4 00000068 T ImGui::PushItemWidth(float)
0018b81c 00000170 T ImGui::PushMultiItemsWidths(int, float)
0018b98c 00000078 T ImGui::PopItemWidth()
0018ba04 00000090 T ImGui::CalcItemWidth()
0018ba94 00000064 t GetDefaultFont()
0018baf8 000001b0 t SetCurrentFont(ImFont*)
0018bca8 00000090 T ImGui::PushFont(ImFont*)
0018bd38 000000a4 T ImGui::PopFont()
0018bddc 0000008c T ImGui::PushItemFlag(int, bool)
0018be68 00000074 T ImGui::PopItemFlag()
0018bedc 00000030 T ImGui::PushAllowKeyboardFocus(bool)
0018bf0c 00000014 T ImGui::PopAllowKeyboardFocus()
0018bf20 00000048 T ImGui::PushTextWrapPos(float)
0018bf68 00000078 T ImGui::PopTextWrapPos()
0018bfe0 00000030 W ImGuiColMod::ImGuiColMod()
0018bfe0 00000030 W ImGuiColMod::ImGuiColMod()
0018c010 000000b0 T ImGui::PushStyleColor(int, ImVec4 const&)
0018c0c0 0000009c T ImGui::PopStyleColor(int)
0018c15c 00000034 W ImGuiStyleVarInfo::GetVarPtr(ImGuiStyle*) const
0018c190 0000006c t GetStyleVarInfo(int)
0018c1fc 000000d0 T ImGui::PushStyleVar(int, float)
0018c2cc 000000dc T ImGui::PushStyleVar(int, ImVec2 const&)
0018c3a8 00000160 T ImGui::PopStyleVar(int)
0018c508 00000300 T ImGui::GetStyleColorName(int)
0018c808 00000078 T ImGui::IsWindowChildOf(ImGuiWindow*, ImGuiWindow*)
0018c880 00000234 T ImGui::IsWindowHovered(int)
0018cab4 00000188 T ImGui::IsWindowFocused(int)
0018cc3c 00000040 T ImGui::GetWindowWidth()
0018cc7c 00000068 t SetWindowScrollY(ImGuiWindow*, float)
0018cce4 0000017c t SetWindowPos(ImGuiWindow*, ImVec2 const&, int)
0018ce60 00000048 T ImGui::GetWindowSize()
0018cea8 000000fc t SetWindowSize(ImGuiWindow*, ImVec2 const&, int)
0018cfa4 00000044 T ImGui::SetWindowSize(ImVec2 const&, int)
0018cfe8 00000074 t SetWindowCollapsed(ImGuiWindow*, bool, int)
0018d05c 00000028 T ImGui::IsWindowAppearing()
0018d084 0000002c T ImGui::SetWindowFocus()
0018d0b0 00000094 T ImGui::SetNextWindowPos(ImVec2 const&, int, ImVec2 const&)
0018d144 00000074 T ImGui::SetNextWindowSize(ImVec2 const&, int)
0018d1b8 0000009c T ImGui::SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeConstraintCallbackData*), void*)
0018d254 00000060 T ImGui::SetNextWindowContentSize(ImVec2 const&)
0018d2b4 00000094 T ImGui::GetContentRegionMax()
0018d348 00000098 T ImGui::GetContentRegionAvail()
0018d3e0 00000034 T ImGui::GetContentRegionAvailWidth()
0018d414 00000048 T ImGui::GetWindowContentRegionMax()
0018d45c 00000034 T ImGui::GetWindowContentRegionWidth()
0018d490 00000044 T ImGui::GetTextLineHeight()
0018d4d4 00000058 T ImGui::GetTextLineHeightWithSpacing()
0018d52c 0000005c T ImGui::GetFrameHeight()
0018d588 00000074 T ImGui::GetFrameHeightWithSpacing()
0018d5fc 00000028 T ImGui::GetWindowDrawList()
0018d624 0000002c T ImGui::GetFont()
0018d650 00000038 T ImGui::GetFontSize()
0018d688 00000054 T ImGui::GetFontTexUvWhitePixel()
0018d6dc 00000080 T ImGui::SetWindowFontScale(float)
0018d75c 00000088 T ImGui::GetCursorPos()
0018d7e4 00000040 T ImGui::GetCursorPosY()
0018d824 00000070 T ImGui::SetCursorPosY(float)
0018d894 00000060 T ImGui::GetCursorStartPos()
0018d8f4 00000048 T ImGui::GetCursorScreenPos()
0018d93c 00000068 T ImGui::SetCursorScreenPos(ImVec2 const&)
0018d9a4 00000034 T ImGui::GetScrollX()
0018d9d8 00000034 T ImGui::GetScrollY()
0018da0c 00000030 T ImGui::GetScrollMaxX()
0018da3c 00000030 T ImGui::GetScrollMaxY()
0018da6c 0000003c T ImGui::SetScrollX(float)
0018daa8 00000150 T ImGui::SetScrollFromPosY(float, float)
0018dbf8 0000009c T ImGui::SetScrollHere(float)
0018dc94 0000002c T ImGui::SetItemDefaultFocus()
0018dcc0 0000007c T ImGui::SetKeyboardFocusHere(int)
0018dd3c 0000009c T ImGui::TextV(char const*, std::__va_list)
0018ddd8 00000038 T ImGui::Text(char const*, ...)
0018de10 00000044 T ImGui::TextColoredV(ImVec4 const&, char const*, std::__va_list)
0018de54 00000040 T ImGui::TextColored(ImVec4 const&, char const*, ...)
0018de94 00000054 T ImGui::TextDisabledV(char const*, std::__va_list)
0018dee8 00000038 T ImGui::TextDisabled(char const*, ...)
0018df20 00000080 T ImGui::TextWrappedV(char const*, std::__va_list)
0018dfa0 00000038 T ImGui::TextWrapped(char const*, ...)
0018dfd8 000005a0 T ImGui::TextUnformatted(char const*, char const*)
0018e578 000000c8 T ImGui::AlignTextToFramePadding()
0018e640 000002e4 T ImGui::LabelTextV(char const*, char const*, std::__va_list)
0018e924 00000040 T ImGui::LabelText(char const*, char const*, ...)
0018e964 00000610 T ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
0018ef74 00000338 T ImGui::ButtonEx(char const*, ImVec2 const&, int)
0018f2ac 00000034 T ImGui::Button(char const*, ImVec2 const&)
0018f2e0 000000ac T ImGui::SmallButton(char const*)
0018f38c 00000130 T ImGui::InvisibleButton(char const*, ImVec2 const&)
0018f4bc 000002fc T ImGui::CloseButton(unsigned int, ImVec2 const&, float)
0018f7b8 00000250 T ImGui::Image(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&)
0018fa08 00000398 T ImGui::ImageButton(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, int, ImVec4 const&, ImVec4 const&)
0018fda0 000000b0 T ImGui::LogToTTY(int)
0018fe50 0000013c T ImGui::LogToFile(int, char const*)
0018ff8c 000000b0 T ImGui::LogToClipboard(int)
0019003c 0000014c T ImGui::LogFinish()
00190188 000001a0 T ImGui::LogButtons()
00190328 000001a8 T ImGui::TreeNodeBehaviorIsOpen(unsigned int, int)
001904d0 000009dc T ImGui::TreeNodeBehavior(unsigned int, int, char const*, char const*)
00190eac 0000006c T ImGui::CollapsingHeader(char const*, int)
00190f18 000001dc T ImGui::CollapsingHeader(char const*, bool*, int)
001910f4 000000c0 T ImGui::TreeNodeExV(char const*, int, char const*, std::__va_list)
001911b4 000000bc T ImGui::TreeNodeExV(void const*, int, char const*, std::__va_list)
00191270 00000054 T ImGui::TreeNodeEx(void const*, int, char const*, ...)
001912c4 00000050 T ImGui::TreeNode(char const*, char const*, ...)
00191314 00000050 T ImGui::TreeNode(void const*, char const*, ...)
00191364 00000064 T ImGui::TreeNode(char const*)
001913c8 0000005c T ImGui::GetTreeNodeToLabelSpacing()
00191424 00000054 T ImGui::PushID(char const*)
00191478 00000050 T ImGui::PushID(void const*)
001914c8 00000058 T ImGui::PushID(int)
00191520 00000030 T ImGui::PopID()
00191550 00000044 T ImGui::GetID(char const*)
00191594 00000040 T ImGui::GetID(void const*)
001915d4 0000021c T ImGui::Bullet()
001917f0 00000344 T ImGui::BulletTextV(char const*, std::__va_list)
00191b34 00000038 T ImGui::BulletText(char const*, ...)
00191b6c 00000080 t DataTypeFormatString(ImGuiDataType, void*, char const*, char*, int)
00191bec 000000f4 t DataTypeFormatString(ImGuiDataType, void*, int, char*, int)
00191ce0 000000f4 t DataTypeApplyOp(ImGuiDataType, int, void*, void const*)
00191dd4 00000488 t DataTypeApplyOpFromText(char const*, char const*, ImGuiDataType, void*, char const*)
0019225c 00000190 T ImGui::InputScalarAsWidgetReplacement(ImRect const&, char const*, ImGuiDataType, void*, unsigned int, int)
001923ec 00000134 T ImGui::ParseFormatPrecision(char const*, int)
00192520 00000074 t GetMinimumStepAtDecimalPrecision(int)
00192594 000000e0 T ImGui::RoundScalar(float, int)
00192674 000001e8 t SliderBehaviorCalcRatioFromValue(float, float, float, float, float)
0019285c 00000758 T ImGui::SliderBehavior(ImRect const&, unsigned int, float*, float, float, float, int, int)
00192fb4 0000044c T ImGui::SliderFloat(char const*, float*, float, float, char const*, float)
00193400 00000360 T ImGui::VSliderFloat(char const*, ImVec2 const&, float*, float, float, char const*, float)
00193760 0000009c T ImGui::SliderAngle(char const*, float*, float, float)
001937fc 000000b0 T ImGui::SliderInt(char const*, int*, int, int, char const*)
001938ac 000000b0 T ImGui::VSliderInt(char const*, ImVec2 const&, int*, int, int, char const*)
0019395c 00000158 T ImGui::SliderFloatN(char const*, float*, int, float, float, char const*, float)
00193ab4 00000054 T ImGui::SliderFloat2(char const*, float*, float, float, char const*, float)
00193b08 00000054 T ImGui::SliderFloat3(char const*, float*, float, float, char const*, float)
00193b5c 00000054 T ImGui::SliderFloat4(char const*, float*, float, float, char const*, float)
00193bb0 00000148 T ImGui::SliderIntN(char const*, int*, int, int, int, char const*)
00193cf8 00000050 T ImGui::SliderInt2(char const*, int*, int, int, char const*)
00193d48 00000050 T ImGui::SliderInt3(char const*, int*, int, int, char const*)
00193d98 00000050 T ImGui::SliderInt4(char const*, int*, int, int, char const*)
00193de8 000004c8 T ImGui::DragBehavior(ImRect const&, unsigned int, float*, float, float, float, int, float)
001942b0 000004c8 T ImGui::DragFloat(char const*, float*, float, float, float, char const*, float)
00194778 00000160 T ImGui::DragFloatN(char const*, float*, int, float, float, float, char const*, float)
001948d8 0000005c T ImGui::DragFloat2(char const*, float*, float, float, float, char const*, float)
00194934 0000005c T ImGui::DragFloat3(char const*, float*, float, float, float, char const*, float)
00194990 0000005c T ImGui::DragFloat4(char const*, float*, float, float, float, char const*, float)
001949ec 00000238 T ImGui::DragFloatRange2(char const*, float*, float*, float, float, float, char const*, char const*, float)
00194c24 000000b8 T ImGui::DragInt(char const*, int*, float, int, int, char const*)
00194cdc 00000150 T ImGui::DragIntN(char const*, int*, int, float, int, int, char const*)
00194e2c 00000058 T ImGui::DragInt2(char const*, int*, float, int, int, char const*)
00194e84 00000058 T ImGui::DragInt3(char const*, int*, float, int, int, char const*)
00194edc 00000058 T ImGui::DragInt4(char const*, int*, float, int, int, char const*)
00194f34 00000200 T ImGui::DragIntRange2(char const*, int*, int*, float, int, int, char const*, char const*)
00195134 00000a24 T ImGui::PlotEx(ImGuiPlotType, char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
00195b58 00000044 W ImGuiPlotArrayGetterData::ImGuiPlotArrayGetterData(float const*, int)
00195b58 00000044 W ImGuiPlotArrayGetterData::ImGuiPlotArrayGetterData(float const*, int)
00195b9c 0000005c t Plot_ArrayGetter(void*, int)
00195bf8 000000a0 T ImGui::PlotLines(char const*, float const*, int, int, char const*, float, float, ImVec2, int)
00195c98 00000084 T ImGui::PlotLines(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
00195d1c 000000a0 T ImGui::PlotHistogram(char const*, float const*, int, int, char const*, float, float, ImVec2, int)
00195dbc 00000084 T ImGui::PlotHistogram(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2)
00195e40 00000380 T ImGui::ProgressBar(float, ImVec2 const&, char const*)
001961c0 00000570 T ImGui::Checkbox(char const*, bool*)
00196730 000000b8 T ImGui::CheckboxFlags(char const*, unsigned int*, unsigned int)
001967e8 000005bc T ImGui::RadioButton(char const*, bool)
00196da4 00000070 T ImGui::RadioButton(char const*, int*, int)
00196e14 000000b8 t InputTextCalcTextLenAndLineCount(char const*, char const**)
00196ecc 00000224 t InputTextCalcTextSizeW(unsigned short const*, unsigned short const*, unsigned short const**, ImVec2*, bool)
001970f0 00000028 t ImGuiStb::STB_TEXTEDIT_STRINGLEN(ImGuiTextEditState const*)
00197118 0000003c t ImGuiStb::STB_TEXTEDIT_GETCHAR(ImGuiTextEditState const*, int)
00197154 000000c0 t ImGuiStb::STB_TEXTEDIT_GETWIDTH(ImGuiTextEditState*, int, int)
00197214 00000038 t ImGuiStb::STB_TEXTEDIT_KEYTOTEXT(int)
0019724c 000000e4 t ImGuiStb::STB_TEXTEDIT_LAYOUTROW(ImGuiStb::StbTexteditRow*, ImGuiTextEditState*, int)
00197330 000000ac t ImGuiStb::is_separator(unsigned int)
001973dc 000000b0 t ImGuiStb::is_word_boundary_from_right(ImGuiTextEditState*, int)
0019748c 0000007c t ImGuiStb::STB_TEXTEDIT_MOVEWORDLEFT_IMPL(ImGuiTextEditState*, int)
00197508 000000a0 t ImGuiStb::STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(ImGuiTextEditState*, int)
001975a8 000000ec t ImGuiStb::STB_TEXTEDIT_DELETECHARS(ImGuiTextEditState*, int, int)
00197694 000001b0 t ImGuiStb::STB_TEXTEDIT_INSERTCHARS(ImGuiTextEditState*, int, unsigned short const*, int)
00197844 00000280 t ImGuiStb::stb_text_locate_coord(ImGuiTextEditState*, float, float)
00197ac4 00000070 t ImGuiStb::stb_textedit_click(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, float, float)
00197b34 00000080 t ImGuiStb::stb_textedit_drag(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, float, float)
00197bb4 00000260 t ImGuiStb::stb_textedit_find_charpos(ImGuiStb::StbFindState*, ImGuiTextEditState*, int, int)
00197e14 000000cc t ImGuiStb::stb_textedit_clamp(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*)
00197ee0 00000058 t ImGuiStb::stb_textedit_delete(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, int, int)
00197f38 00000104 t ImGuiStb::stb_textedit_delete_selection(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*)
0019803c 00000060 t ImGuiStb::stb_textedit_sortselection(ImGuiStb::STB_TexteditState*)
0019809c 00000068 t ImGuiStb::stb_textedit_move_to_first(ImGuiStb::STB_TexteditState*)
00198104 00000078 t ImGuiStb::stb_textedit_move_to_last(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*)
0019817c 0000006c t ImGuiStb::stb_textedit_prep_selection_at_cursor(ImGuiStb::STB_TexteditState*)
001981e8 0000005c t ImGuiStb::stb_textedit_cut(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*)
00198244 000000fc t ImGuiStb::stb_textedit_paste(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, unsigned short const*, int)
00198340 00000e3c t ImGuiStb::stb_textedit_key(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, int)
0019917c 0000004c t ImGuiStb::stb_textedit_flush_redo(ImGuiStb::StbUndoState*)
001991c8 000001f4 t ImGuiStb::stb_textedit_discard_undo(ImGuiStb::StbUndoState*)
001993bc 000002c4 t ImGuiStb::stb_textedit_discard_redo(ImGuiStb::StbUndoState*)
00199680 00000100 t ImGuiStb::stb_text_create_undo_record(ImGuiStb::StbUndoState*, int)
00199780 00000104 t ImGuiStb::stb_text_createundo(ImGuiStb::StbUndoState*, int, int, int)
00199884 0000038c t ImGuiStb::stb_text_undo(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*)
00199c10 00000308 t ImGuiStb::stb_text_redo(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*)
00199f18 0000003c t ImGuiStb::stb_text_makeundo_insert(ImGuiStb::STB_TexteditState*, int, int)
00199f54 000000a4 t ImGuiStb::stb_text_makeundo_delete(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, int, int)
00199ff8 000000a4 t ImGuiStb::stb_text_makeundo_replace(ImGuiTextEditState*, ImGuiStb::STB_TexteditState*, int, int, int)
0019a09c 000000e8 t ImGuiStb::stb_textedit_clear_state(ImGuiStb::STB_TexteditState*, int)
0019a184 0000002c t ImGuiStb::stb_textedit_initialize_state(ImGuiStb::STB_TexteditState*, int)
0019a1b0 0000004c T ImGuiTextEditState::OnKeyPressed(int)
0019a1fc 00000174 T ImGuiTextEditCallbackData::DeleteChars(int, int)
0019a370 00000184 T ImGuiTextEditCallbackData::InsertChars(int, char const*, char const*)
0019a4f4 00000324 t InputTextFilterCharacter(unsigned int*, int, int (*)(ImGuiTextEditCallbackData*), void*)
0019a818 00002f2c T ImGui::InputTextEx(char const*, char*, int, ImVec2 const&, int, int (*)(ImGuiTextEditCallbackData*), void*)
0019d744 000000ac T ImGui::InputText(char const*, char*, unsigned int, int, int (*)(ImGuiTextEditCallbackData*), void*)
0019d7f0 00000060 T ImGui::InputTextMultiline(char const*, char*, unsigned int, ImVec2 const&, int, int (*)(ImGuiTextEditCallbackData*), void*)
0019d850 0000036c T ImGui::InputScalarEx(char const*, ImGuiDataType, void*, void*, void*, char const*, int)
0019dbbc 000000dc T ImGui::InputFloat(char const*, float*, float, float, int, int)
0019dc98 000000c4 T ImGui::InputInt(char const*, int*, int, int, int)
0019dd5c 00000148 T ImGui::InputFloatN(char const*, float*, int, int, int)
0019dea4 00000048 T ImGui::InputFloat2(char const*, float*, int, int)
0019deec 00000048 T ImGui::InputFloat3(char const*, float*, int, int)
0019df34 00000048 T ImGui::InputFloat4(char const*, float*, int, int)
0019df7c 00000148 T ImGui::InputIntN(char const*, int*, int, int)
0019e0c4 0000003c T ImGui::InputInt2(char const*, int*, int)
0019e100 0000003c T ImGui::InputInt3(char const*, int*, int)
0019e13c 0000003c T ImGui::InputInt4(char const*, int*, int)
0019e178 000000b0 t CalcMaxPopupHeightFromItemCount(int)
0019e228 000007f8 T ImGui::BeginCombo(char const*, char const*, int)
0019ea20 0000006c T ImGui::EndCombo()
0019ea8c 00000218 T ImGui::Combo(char const*, int*, bool (*)(void*, int, char const**), void*, int, int)
0019eca4 0000005c t Items_ArrayGetter(void*, int, char const**)
0019ed00 000000c0 t Items_SingleStringGetter(void*, int, char const**)
0019edc0 0000005c T ImGui::Combo(char const*, int*, char const* const*, int, int)
0019ee1c 000000a8 T ImGui::Combo(char const*, int*, char const*, int)
0019eec4 00000688 T ImGui::Selectable(char const*, bool, int, ImVec2 const&)
0019f54c 00000070 T ImGui::Selectable(char const*, bool*, int, ImVec2 const&)
0019f5bc 0000027c T ImGui::ListBoxHeader(char const*, ImVec2 const&)
0019f838 000000dc T ImGui::ListBoxHeader(char const*, int, int)
0019f914 0000008c T ImGui::ListBoxFooter()
0019f9a0 0000005c T ImGui::ListBox(char const*, int*, char const* const*, int, int)
0019f9fc 0000017c T ImGui::ListBox(char const*, int*, bool (*)(void*, int, char const**), void*, int, int)
0019fb78 00000464 T ImGui::MenuItem(char const*, char const*, bool, bool)
0019ffdc 0000009c T ImGui::MenuItem(char const*, char const*, bool*, bool)
001a0078 00000198 T ImGui::BeginMainMenuBar()
001a0210 00000020 T ImGui::EndMainMenuBar()
001a0230 0000022c T ImGui::BeginMenuBar()
001a045c 00000120 T ImGui::EndMenuBar()
001a057c 00000ae4 T ImGui::BeginMenu(char const*, bool)
001a1060 00000014 T ImGui::EndMenu()
001a1074 0000039c T ImGui::ColorTooltip(char const*, float const*, int)
001a1410 000000dc t ImAlphaBlendColor(unsigned int, unsigned int)
001a14ec 00000378 T ImGui::RenderColorRectWithAlphaCheckerboard(ImVec2, ImVec2, unsigned int, float, ImVec2, float, int)
001a1864 00000144 T ImGui::SetColorEditOptions(int)
001a19a8 00000624 T ImGui::ColorButton(char const*, ImVec4 const&, int, ImVec2)
001a1fcc 00000040 T ImGui::ColorEdit3(char const*, float*, int)
001a2010 000005c4 T ImGui::ColorEditOptionsPopup(float const*, int)
001a25d4 000002f8 t ColorPickerOptionsPopup(int, float const*)
001a28cc 00000e90 T ImGui::ColorEdit4(char const*, float*, int)
001a375c 00000260 t RenderArrow(ImDrawList*, ImVec2, ImVec2, ImGuiDir, unsigned int)
001a39bc 00000210 t RenderArrowsForVerticalBar(ImDrawList*, ImVec2, ImVec2, float)
001a3bcc 00001cd8 T ImGui::ColorPicker4(char const*, float*, int, float const*)
001a58a4 000002b0 T ImGui::Separator()
001a5b54 000001a8 T ImGui::VerticalSeparator()
001a5cfc 0000005c T ImGui::Spacing()
001a5d58 0000009c T ImGui::Dummy(ImVec2 const&)
001a5df4 00000170 T ImGui::BeginGroup()
001a5f64 0000029c T ImGui::EndGroup()
001a6200 0000013c T ImGui::SameLine(float, float)
001a633c 000000e0 T ImGui::NewLine()
001a641c 000001e8 T ImGui::NextColumn()
001a6604 00000044 T ImGui::GetColumnIndex()
001a6648 00000040 t OffsetNormToPixels(ImGuiColumnsSet const*, float)
001a6688 00000044 t PixelsToOffsetNorm(ImGuiColumnsSet const*, float)
001a66cc 00000024 t GetColumnsRectHalfWidth()
001a66f0 00000188 t GetDraggedColumnOffset(ImGuiColumnsSet*, int)
001a6878 000000f4 T ImGui::GetColumnOffset(int)
001a696c 000000f8 t GetColumnWidthEx(ImGuiColumnsSet*, int, bool)
001a6a64 000000d4 T ImGui::GetColumnWidth(int)
001a6b38 00000228 T ImGui::SetColumnOffset(int, float)
001a6d60 00000090 T ImGui::PushColumnClipRect(int)
001a6df0 00000030 W ImGuiColumnsSet::~ImGuiColumnsSet()
001a6df0 00000030 W ImGuiColumnsSet::~ImGuiColumnsSet()
001a6e20 000000f4 t FindOrAddColumnsSet(ImGuiWindow*, unsigned int)
001a6f14 0000054c T ImGui::BeginColumns(char const*, int, int)
001a7460 000004d8 T ImGui::EndColumns()
001a7938 000000c4 T ImGui::Columns(int, char const*, bool)
001a79fc 00000098 T ImGui::Indent(float)
001a7a94 00000098 T ImGui::Unindent(float)
001a7b2c 0000005c T ImGui::TreePushRawID(unsigned int)
001a7b88 00000044 T ImGui::TreePop()
001a7bcc 000000a4 T ImGui::ClearDragDrop()
001a7c70 0000042c T ImGui::BeginDragDropSource(int, int)
001a809c 0000009c T ImGui::EndDragDropSource()
001a8138 000002d8 T ImGui::SetDragDropPayload(char const*, void const*, unsigned int, int)
001a8410 00000144 T ImGui::BeginDragDropTarget()
001a8554 00000350 T ImGui::AcceptDragDropPayload(char const*, int)
001a88a4 00000060 T ImGui::EndDragDropTarget()
001a8904 0000006c t GetClipboardTextFn_DefaultImpl(void*)
001a8970 000000e4 t SetClipboardTextFn_DefaultImpl(void*, char const*)
001a8a54 00000024 t ImeSetInputScreenPosFn_DefaultImpl(int, int)
001a8a78 00000710 t ImGui::ShowMetricsWindow(bool*)::Funcs::NodeDrawList(ImDrawList*, char const*)
001a9188 000000a8 t ImGui::ShowMetricsWindow(bool*)::Funcs::NodeWindows(ImVector<ImGuiWindow*>&, char const*)
001a9230 00000294 t ImGui::ShowMetricsWindow(bool*)::Funcs::NodeWindow(ImGuiWindow*, char const*)
001a94c4 000004e8 T ImGui::ShowMetricsWindow(bool*)
001a99ac 00000038 W ImVector<ImGuiTextFilter::TextRange>::empty() const
001a99e4 0000004c W ImVector<char>::ImVector()
001a99e4 0000004c W ImVector<char>::ImVector()
001a9a30 00000040 W ImVector<char>::~ImVector()
001a9a30 00000040 W ImVector<char>::~ImVector()
001a9a70 0000008c W ImVector<char>::push_back(char const&)
001a9afc 00000058 W ImVector<char>::front() const
001a9b54 00000064 W ImVector<char>::clear()
001a9bb8 0000009c W ImVector<char>::reserve(int)
001a9c54 00000040 W ImVector<ImDrawCmd>::~ImVector()
001a9c54 00000040 W ImVector<ImDrawCmd>::~ImVector()
001a9c94 0000004c W ImVector<ImVec4>::ImVector()
001a9c94 0000004c W ImVector<ImVec4>::ImVector()
001a9ce0 00000040 W ImVector<ImVec4>::~ImVector()
001a9ce0 00000040 W ImVector<ImVec4>::~ImVector()
001a9d20 0000004c W ImVector<void*>::ImVector()
001a9d20 0000004c W ImVector<void*>::ImVector()
001a9d6c 00000040 W ImVector<void*>::~ImVector()
001a9d6c 00000040 W ImVector<void*>::~ImVector()
001a9dac 0000004c W ImVector<ImVec2>::ImVector()
001a9dac 0000004c W ImVector<ImVec2>::ImVector()
001a9df8 00000040 W ImVector<ImVec2>::~ImVector()
001a9df8 00000040 W ImVector<ImVec2>::~ImVector()
001a9e38 0000004c W ImVector<ImDrawChannel>::ImVector()
001a9e38 0000004c W ImVector<ImDrawChannel>::ImVector()
001a9e84 00000040 W ImVector<ImDrawChannel>::~ImVector()
001a9e84 00000040 W ImVector<ImDrawChannel>::~ImVector()
001a9ec4 0000004c W ImVector<unsigned char>::ImVector()
001a9ec4 0000004c W ImVector<unsigned char>::ImVector()
001a9f10 00000040 W ImVector<unsigned char>::~ImVector()
001a9f10 00000040 W ImVector<unsigned char>::~ImVector()
001a9f50 0000005c W ImVector<unsigned char>::resize(int)
001a9fac 0000004c W ImVector<ImGuiColumnData>::ImVector()
001a9fac 0000004c W ImVector<ImGuiColumnData>::ImVector()
001a9ff8 00000040 W ImVector<ImGuiColumnData>::~ImVector()
001a9ff8 00000040 W ImVector<ImGuiColumnData>::~ImVector()
001aa038 00000064 W ImVector<ImGuiColumnData>::clear()
001aa09c 0000004c W ImVector<ImGuiWindow*>::ImVector()
001aa09c 0000004c W ImVector<ImGuiWindow*>::ImVector()
001aa0e8 00000040 W ImVector<ImGuiWindow*>::~ImVector()
001aa0e8 00000040 W ImVector<ImGuiWindow*>::~ImVector()
001aa128 0000004c W ImVector<ImGuiStorage::Pair>::ImVector()
001aa128 0000004c W ImVector<ImGuiStorage::Pair>::ImVector()
001aa174 00000040 W ImVector<ImGuiStorage::Pair>::~ImVector()
001aa174 00000040 W ImVector<ImGuiStorage::Pair>::~ImVector()
001aa1b4 0000004c W ImVector<ImGuiColMod>::ImVector()
001aa1b4 0000004c W ImVector<ImGuiColMod>::ImVector()
001aa200 00000040 W ImVector<ImGuiColMod>::~ImVector()
001aa200 00000040 W ImVector<ImGuiColMod>::~ImVector()
001aa240 0000004c W ImVector<ImGuiStyleMod>::ImVector()
001aa240 0000004c W ImVector<ImGuiStyleMod>::ImVector()
001aa28c 00000040 W ImVector<ImGuiStyleMod>::~ImVector()
001aa28c 00000040 W ImVector<ImGuiStyleMod>::~ImVector()
001aa2cc 0000004c W ImVector<ImGuiPopupRef>::ImVector()
001aa2cc 0000004c W ImVector<ImGuiPopupRef>::ImVector()
001aa318 00000040 W ImVector<ImGuiPopupRef>::~ImVector()
001aa318 00000040 W ImVector<ImGuiPopupRef>::~ImVector()
001aa358 0000004c W ImVector<ImDrawList*>::ImVector()
001aa358 0000004c W ImVector<ImDrawList*>::ImVector()
001aa3a4 00000040 W ImVector<ImDrawList*>::~ImVector()
001aa3a4 00000040 W ImVector<ImDrawList*>::~ImVector()
001aa3e4 0000004c W ImVector<ImGuiWindowSettings>::ImVector()
001aa3e4 0000004c W ImVector<ImGuiWindowSettings>::ImVector()
001aa430 00000040 W ImVector<ImGuiWindowSettings>::~ImVector()
001aa430 00000040 W ImVector<ImGuiWindowSettings>::~ImVector()
001aa470 0000004c W ImVector<ImGuiSettingsHandler>::ImVector()
001aa470 0000004c W ImVector<ImGuiSettingsHandler>::ImVector()
001aa4bc 00000040 W ImVector<ImGuiSettingsHandler>::~ImVector()
001aa4bc 00000040 W ImVector<ImGuiSettingsHandler>::~ImVector()
001aa4fc 0000004c W ImVector<int>::ImVector()
001aa4fc 0000004c W ImVector<int>::ImVector()
001aa548 00000040 W ImVector<int>::~ImVector()
001aa548 00000040 W ImVector<int>::~ImVector()
001aa588 0000004c W ImVector<ImGuiGroupData>::ImVector()
001aa588 0000004c W ImVector<ImGuiGroupData>::ImVector()
001aa5d4 00000028 W ImVector<ImGuiStorage::Pair>::begin()
001aa5fc 00000038 W ImVector<ImGuiStorage::Pair>::end()
001aa634 00000038 W ImVector<ImGuiStorage::Pair>::end() const
001aa66c 00000180 W ImVector<ImGuiStorage::Pair>::insert(ImGuiStorage::Pair const*, ImGuiStorage::Pair const&)
001aa7ec 0000004c W ImVector<ImGuiTextFilter::TextRange>::ImVector()
001aa7ec 0000004c W ImVector<ImGuiTextFilter::TextRange>::ImVector()
001aa838 0000005c W ImVector<ImGuiTextFilter::TextRange>::resize(int)
001aa894 00000090 W ImVector<ImGuiTextFilter::TextRange>::push_back(ImGuiTextFilter::TextRange const&)
001aa924 0000006c W ImVector<ImGuiTextFilter::TextRange>::operator[](int)
001aa990 0000006c W ImVector<ImGuiTextFilter::TextRange>::operator[](int) const
001aa9fc 0000005c W ImVector<char>::resize(int)
001aaa58 00000068 W ImVector<char>::operator[](int)
001aaac0 0000004c W ImVector<unsigned int>::ImVector()
001aaac0 0000004c W ImVector<unsigned int>::ImVector()
001aab0c 0000004c W ImVector<ImGuiColumnsSet>::ImVector()
001aab0c 0000004c W ImVector<ImGuiColumnsSet>::ImVector()
001aab58 00000090 W ImVector<unsigned int>::push_back(unsigned int const&)
001aabe8 00000068 W ImVector<unsigned int>::back()
001aac50 00000064 W ImVector<unsigned char>::clear()
001aacb4 00000038 W ImVector<ImGuiPopupRef>::empty() const
001aacec 0000006c W ImVector<ImGuiWindow*>::operator[](int)
001aad58 0000005c W ImVector<ImGuiWindow*>::resize(int)
001aadb4 0000005c W ImVector<ImGuiPopupRef>::resize(int)
001aae10 00000078 W ImVector<ImGuiWindowSettings>::operator[](int)
001aae88 00000058 W ImVector<ImGuiSettingsHandler>::push_front(ImGuiSettingsHandler const&)
001aaee0 00000038 W ImVector<ImGuiWindowSettings>::empty() const
001aaf18 000000d0 W ImVector<ImGuiWindowSettings>::push_back(ImGuiWindowSettings const&)
001aafe8 00000078 W ImVector<ImGuiWindowSettings>::back()
001ab060 00000078 W ImVector<ImGuiSettingsHandler>::operator[](int)
001ab0d8 00000064 W ImVector<char>::pop_back()
001ab13c 0000009c W ImVector<char>::swap(ImVector<char>&)
001ab1d8 00000090 W ImVector<ImGuiWindow*>::push_back(ImGuiWindow* const&)
001ab268 00000028 W ImVector<ImGuiWindow*>::begin()
001ab290 00000038 W ImVector<ImDrawCmd>::empty() const
001ab2c8 00000090 W ImVector<ImDrawList*>::push_back(ImDrawList* const&)
001ab358 000000a4 W ImVector<ImGuiWindow*>::reserve(int)
001ab3fc 0000009c W ImVector<ImGuiWindow*>::swap(ImVector<ImGuiWindow*>&)
001ab498 0000005c W ImVector<ImDrawList*>::resize(int)
001ab4f4 00000038 W ImVector<ImDrawList*>::empty() const
001ab52c 0000006c W ImVector<ImDrawList*>::operator[](int)
001ab598 00000038 W ImVector<ImDrawVert>::empty() const
001ab5d0 00000078 W ImVector<ImGuiPopupRef>::operator[](int)
001ab648 000000b0 W ImVector<ImGuiPopupRef>::push_back(ImGuiPopupRef const&)
001ab6f8 00000180 W ImVector<ImGuiWindow*>::insert(ImGuiWindow* const*, ImGuiWindow* const&)
001ab878 00000038 W ImVector<ImGuiWindow*>::empty() const
001ab8b0 00000068 W ImVector<ImGuiWindow*>::back()
001ab918 0000005c W ImVector<unsigned int>::resize(int)
001ab974 0000005c W ImVector<int>::resize(int)
001ab9d0 0000005c W ImVector<float>::resize(int)
001aba2c 0000005c W ImVector<ImGuiGroupData>::resize(int)
001aba88 00000090 W ImVector<int>::push_back(int const&)
001abb18 00000064 W ImVector<ImGuiWindow*>::pop_back()
001abb7c 00000064 W ImVector<ImGuiPopupRef>::pop_back()
001abbe0 0000010c W ImVector<ImGuiWindow*>::erase(ImGuiWindow* const*)
001abcec 00000090 W ImVector<float>::push_back(float const&)
001abd7c 00000068 W ImVector<float>::back()
001abde4 00000064 W ImVector<float>::pop_back()
001abe48 00000038 W ImVector<float>::empty() const
001abe80 00000064 W ImVector<ImFont*>::pop_back()
001abee4 00000064 W ImVector<int>::pop_back()
001abf48 00000038 W ImVector<int>::empty() const
001abf80 00000068 W ImVector<int>::back()
001abfe8 000000b0 W ImVector<ImGuiColMod>::push_back(ImGuiColMod const&)
001ac098 00000078 W ImVector<ImGuiColMod>::back()
001ac110 00000064 W ImVector<ImGuiColMod>::pop_back()
001ac174 000000a0 W ImVector<ImGuiStyleMod>::push_back(ImGuiStyleMod const&)
001ac214 00000078 W ImVector<ImGuiStyleMod>::back()
001ac28c 00000064 W ImVector<ImGuiStyleMod>::pop_back()
001ac2f0 00000064 W ImVector<unsigned int>::pop_back()
001ac354 00000028 W ImVector<char>::begin()
001ac37c 00000038 W ImVector<ImFontGlyph>::empty() const
001ac3b4 00000078 W ImVector<ImGuiGroupData>::back()
001ac42c 00000038 W ImVector<ImGuiGroupData>::empty() const
001ac464 00000064 W ImVector<ImGuiGroupData>::pop_back()
001ac4c8 00000078 W ImVector<ImGuiColumnData>::operator[](int)
001ac540 00000078 W ImVector<ImGuiColumnsSet>::operator[](int)
001ac5b8 000000c0 W ImVector<ImGuiColumnsSet>::push_back(ImGuiColumnsSet const&)
001ac678 00000078 W ImVector<ImGuiColumnsSet>::back()
001ac6f0 000000c0 W ImVector<ImGuiColumnData>::reserve(int)
001ac7b0 000000b0 W ImVector<ImGuiColumnData>::push_back(ImGuiColumnData const&)
001ac860 00000038 W ImVector<char>::empty() const
001ac898 00000028 W ImVector<ImDrawCmd>::begin()
001ac8c0 00000038 W ImVector<ImDrawCmd>::end()
001ac8f8 0000007c W ImVector<char>::_grow_capacity(int) const
001ac974 0000009c W ImVector<unsigned char>::reserve(int)
001aca10 0000007c W ImVector<unsigned char>::_grow_capacity(int) const
001aca8c 000000a4 W ImVector<ImGuiStorage::Pair>::reserve(int)
001acb30 0000007c W ImVector<ImGuiStorage::Pair>::_grow_capacity(int) const
001acbac 000000a4 W ImVector<ImGuiTextFilter::TextRange>::reserve(int)
001acc50 0000007c W ImVector<ImGuiTextFilter::TextRange>::_grow_capacity(int) const
001acccc 000000a4 W ImVector<unsigned int>::reserve(int)
001acd70 0000007c W ImVector<unsigned int>::_grow_capacity(int) const
001acdec 0000007c W ImVector<ImGuiWindow*>::_grow_capacity(int) const
001ace68 000000c0 W ImVector<ImGuiPopupRef>::reserve(int)
001acf28 0000007c W ImVector<ImGuiPopupRef>::_grow_capacity(int) const
001acfa4 000000b0 W ImVector<ImGuiSettingsHandler>::push_back(ImGuiSettingsHandler const&)
001ad054 00000208 W ImVector<ImGuiSettingsHandler>::insert(ImGuiSettingsHandler const*, ImGuiSettingsHandler const&)
001ad25c 000000c0 W ImVector<ImGuiWindowSettings>::reserve(int)
001ad31c 0000007c W ImVector<ImGuiWindowSettings>::_grow_capacity(int) const
001ad398 000000a4 W ImVector<ImDrawList*>::reserve(int)
001ad43c 0000007c W ImVector<ImDrawList*>::_grow_capacity(int) const
001ad4b8 000000a4 W ImVector<int>::reserve(int)
001ad55c 0000007c W ImVector<int>::_grow_capacity(int) const
001ad5d8 000000c0 W ImVector<ImGuiGroupData>::reserve(int)
001ad698 0000007c W ImVector<ImGuiGroupData>::_grow_capacity(int) const
001ad714 000000c0 W ImVector<ImGuiColMod>::reserve(int)
001ad7d4 0000007c W ImVector<ImGuiColMod>::_grow_capacity(int) const
001ad850 000000c0 W ImVector<ImGuiStyleMod>::reserve(int)
001ad910 0000007c W ImVector<ImGuiStyleMod>::_grow_capacity(int) const
001ad98c 000000c0 W ImVector<ImGuiColumnsSet>::reserve(int)
001ada4c 0000007c W ImVector<ImGuiColumnsSet>::_grow_capacity(int) const
001adac8 0000007c W ImVector<ImGuiColumnData>::_grow_capacity(int) const
001adb44 000000c0 W ImVector<ImGuiSettingsHandler>::reserve(int)
001adc04 0000007c W ImVector<ImGuiSettingsHandler>::_grow_capacity(int) const
001adc80 00000184 t __static_initialization_and_destruction_0(int, int)
001ade04 0000001c t _GLOBAL__sub_I_GImGui
001ade20 0000001c t _GLOBAL__sub_D_GImGui
001ade3c 00000038 W ImGuiTextFilter::IsActive() const
001ade74 00000038 W ImGuiTextBuffer::operator[](int)
001adeac 0000002c W ImGuiTextBuffer::end() const
001aded8 0000006c W ImColor::ImColor(float, float, float, float)
001aded8 0000006c W ImColor::ImColor(float, float, float, float)
001adf44 00000044 W ImColor::ImColor(ImVec4 const&)
001adf44 00000044 W ImColor::ImColor(ImVec4 const&)
001adf88 0000002c W ImColor::operator unsigned int() const
001adfb4 000000ac W ImColor::HSV(float, float, float, float)
001ae060 00000048 W ImFont::GetDebugName() const
001ae0a8 00000060 t ShowHelpMarker(char const*)
001ae108 000000ec T ImGui::ShowUserGuide()
001ae1f4 00000060 t ImGui::ShowDemoWindow(bool*)::TextFilters::FilterImGuiLetters(ImGuiTextEditCallbackData*)
001ae254 00000044 t ImGui::ShowDemoWindow(bool*)::Funcs::Sin(void*, int)
001ae298 00000048 t ImGui::ShowDemoWindow(bool*)::Funcs::Saw(void*, int)
001ae2e0 00000030 W ImGuiTextFilter::~ImGuiTextFilter()
001ae2e0 00000030 W ImGuiTextFilter::~ImGuiTextFilter()
001ae310 00000018 t __tcf_0
001ae328 0000886c T ImGui::ShowDemoWindow(bool*)
001b6b94 000000a0 T ImGui::ShowStyleSelector(char const*)
001b6c34 00000164 T ImGui::ShowFontSelector(char const*)
001b6d98 00000018 t __tcf_1
001b6db0 0000172c T ImGui::ShowStyleEditor(ImGuiStyle*)
001b84dc 000000f8 t ShowExampleAppMainMenuBar()
001b85d4 000003fc t ShowExampleMenuFile()
001b89d0 000000cc t ShowExampleAppAutoResize(bool*)
001b8a9c 000000a4 t ShowExampleAppConstrainedResize(bool*)::CustomConstraints::Square(ImGuiSizeConstraintCallbackData*)
001b8b40 000000ac t ShowExampleAppConstrainedResize(bool*)::CustomConstraints::Step(ImGuiSizeConstraintCallbackData*)
001b8bec 0000049c t ShowExampleAppConstrainedResize(bool*)
001b9088 000002f0 t ShowExampleAppFixedOverlay(bool*)
001b9378 00000198 t ShowExampleAppWindowTitles(bool*)
001b9510 00000018 t __tcf_2
001b9528 00001220 t ShowExampleAppCustomRendering(bool*)
001ba748 00000118 W ExampleAppConsole::ExampleAppConsole()
001ba748 00000118 W ExampleAppConsole::ExampleAppConsole()
001ba860 000000a8 W ExampleAppConsole::~ExampleAppConsole()
001ba860 000000a8 W ExampleAppConsole::~ExampleAppConsole()
001ba908 000000a0 W ExampleAppConsole::Stricmp(char const*, char const*)
001ba9a8 000000c4 W ExampleAppConsole::Strnicmp(char const*, char const*, int)
001baa6c 00000054 W ExampleAppConsole::Strdup(char const*)
001baac0 00000088 W ExampleAppConsole::ClearLog()
001bab48 00000094 W ExampleAppConsole::AddLog(char const*, ...)
001babdc 00000018 t __tcf_3
001babf4 000006cc W ExampleAppConsole::Draw(char const*, bool*)
001bb2c0 000002b4 W ExampleAppConsole::ExecCommand(char const*)
001bb574 00000038 W ExampleAppConsole::TextEditCallbackStub(ImGuiTextEditCallbackData*)
001bb5ac 000005e4 W ExampleAppConsole::TextEditCallback(ImGuiTextEditCallbackData*)
001bbb90 00000018 t __tcf_4
001bbba8 000000a4 t ShowExampleAppConsole(bool*)
001bbc4c 00000038 W ExampleAppLog::Clear()
001bbc84 000000dc W ExampleAppLog::AddLog(char const*, ...)
001bbd60 000002a0 W ExampleAppLog::Draw(char const*, bool*)
001bc000 00000054 W ExampleAppLog::ExampleAppLog()
001bc000 00000054 W ExampleAppLog::ExampleAppLog()
001bc054 0000004c W ExampleAppLog::~ExampleAppLog()
001bc054 0000004c W ExampleAppLog::~ExampleAppLog()
001bc0a0 00000018 t __tcf_5
001bc0b8 000001a8 t ShowExampleAppLog(bool*)
001bc260 0000027c t ShowExampleAppLayout(bool*)
001bc4dc 000001b0 t ShowExampleAppPropertyEditor(bool*)::funcs::ShowDummyObject(char const*, int)
001bc68c 00000110 t ShowExampleAppPropertyEditor(bool*)
001bc79c 00000018 t __tcf_6
001bc7b4 000003c8 t ShowExampleAppLongText(bool*)
001bcb7c 00000068 W ImVector<char>::back() const
001bcbe4 0000006c W ImVector<ImVec2>::operator[](int)
001bcc50 00000040 W ImVector<ImGuiTextFilter::TextRange>::~ImVector()
001bcc50 00000040 W ImVector<ImGuiTextFilter::TextRange>::~ImVector()
001bcc90 00000064 W ImVector<ImVec2>::pop_back()
001bccf4 00000038 W ImVector<ImVec2>::empty() const
001bcd2c 0000004c W ImVector<char*>::ImVector()
001bcd2c 0000004c W ImVector<char*>::ImVector()
001bcd78 00000040 W ImVector<char*>::~ImVector()
001bcd78 00000040 W ImVector<char*>::~ImVector()
001bcdb8 0000004c W ImVector<char const*>::ImVector()
001bcdb8 0000004c W ImVector<char const*>::ImVector()
001bce04 00000040 W ImVector<char const*>::~ImVector()
001bce04 00000040 W ImVector<char const*>::~ImVector()
001bce44 00000090 W ImVector<char const*>::push_back(char const* const&)
001bced4 0000006c W ImVector<char*>::operator[](int)
001bcf40 00000064 W ImVector<char*>::clear()
001bcfa4 00000090 W ImVector<char*>::push_back(char* const&)
001bd034 00000028 W ImVector<char*>::begin()
001bd05c 0000010c W ImVector<char*>::erase(char* const*)
001bd168 0000006c W ImVector<char const*>::operator[](int)
001bd1d4 00000064 W ImVector<int>::clear()
001bd238 0000006c W ImVector<int>::operator[](int)
001bd2a4 000000a4 W ImVector<char const*>::reserve(int)
001bd348 0000007c W ImVector<char const*>::_grow_capacity(int) const
001bd3c4 000000a4 W ImVector<char*>::reserve(int)
001bd468 0000007c W ImVector<char*>::_grow_capacity(int) const
001bd4e4 00000004 W C3Di_LightEnvUpdate
001bd4e8 00000004 W C3Di_LightEnvDirty
001bd4ec 00000004 W C3Di_ProcTexUpdate
001bd4f0 00000004 W C3Di_ProcTexDirty
001bd4f4 000000b4 t C3Di_AptEventHook
001bd5a8 00000004 W C3Di_GasUpdate
001bd5ac 000001e0 T C3D_Init
001bd78c 00000098 T C3D_SetViewport
001bd824 000004ec T C3Di_UpdateContext
001bdd10 000000e0 T C3Di_SplitFrame
001bddf0 00000108 T C3D_BindProgram
001bdef8 00000060 T C3D_FixedAttribGetWritePtr
001bdf58 0000004c t onVBlank0
001bdfa4 0000004c t onVBlank1
001bdff0 000000f4 t onQueueFinish
001be0e4 00000038 T C3Di_RenderQueueEnableVBlank
001be11c 00000030 T C3Di_RenderQueueDisableVBlank
001be14c 00000060 T C3Di_RenderQueueInit
001be1ac 00000034 T C3Di_RenderQueueWaitDone
001be1e0 000000e4 T C3D_FrameBegin
001be2c4 00000058 T C3D_FrameSplit
001be31c 000001d8 T C3D_FrameEnd
001be4f4 000000f0 T C3D_SyncDisplayTransfer
001be5e4 000002a0 T C3D_TexInitWithParams
001be884 00000044 T C3D_TexBind
001be8c8 00000074 T C3D_TexDelete
001be93c 0000016c T C3Di_SetTex
001beaa8 0000001c T C3D_CalcDepthBufSize
001beac4 00000044 T C3D_SetFrameBuf
001beb08 0000009c T C3D_FrameBufTex
001beba4 0000016c T C3Di_FrameBufBind
001bed10 000000cc T C3D_FrameBufClear
001beddc 00000044 T C3D_FrameBufTransfer
001bee20 00000034 T C3D_GetTexEnv
001bee54 00000024 T C3Di_TexEnvBind
001bee78 00000218 T C3D_DrawElements
001bf090 00000024 T BufInfo_Init
001bf0b4 00000080 T BufInfo_Add
001bf134 00000040 T C3D_SetBufInfo
001bf174 00000048 T C3Di_BufInfoBind
001bf1bc 00000040 T C3D_DepthMap
001bf1fc 0000001c T C3D_CullFace
001bf218 00000040 T C3D_StencilTest
001bf258 00000024 T C3D_StencilOp
001bf27c 0000001c T C3D_BlendingColor
001bf298 00000024 T C3D_EarlyDepthTest
001bf2bc 0000002c T C3D_DepthTest
001bf2e8 0000002c T C3D_AlphaTest
001bf314 00000050 T C3D_AlphaBlend
001bf364 00000030 T C3D_FragOpMode
001bf394 00000044 T C3D_FragOpShadow
001bf3d8 000001ac T C3Di_EffectBind
001bf584 00000028 T AttrInfo_Init
001bf5ac 00000098 T AttrInfo_AddLoader
001bf644 00000060 T AttrInfo_AddFixed
001bf6a4 00000054 T C3D_SetAttrInfo
001bf6f8 00000080 T C3Di_AttrInfoBind
001bf778 000000b8 T C3D_ImmDrawBegin
001bf830 000000a8 T C3D_ImmSendAttrib
001bf8d8 00000070 T C3D_ImmDrawEnd
001bf948 0000029c T C3D_UpdateUniforms
001bfbe4 000000c0 T C3Di_DirtyUniforms
001bfca4 000000d8 T C3Di_LoadShaderUniforms
001bfd7c 00000028 T C3Di_ClearShaderUniforms
001bfda4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
001bfdc8 00000004 t addrMapNodeDestructor(rbtree_node*)
001bfdcc 00000114 T vramMemAlign
001bfee0 00000008 T vramAlloc
001bfee8 0000005c T vramFree
001bff44 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
001bff68 00000004 t addrMapNodeDestructor(rbtree_node*)
001bff6c 00000120 T linearMemAlign
001c008c 00000008 T linearAlloc
001c0094 0000005c T linearFree
001c00f0 0000000c T linearSpaceFree
001c00fc 00000084 T MemPool::CoalesceRight(MemBlock*)
001c0180 00000170 T MemPool::Allocate(MemChunk&, unsigned long, int)
001c02f0 000000fc T MemPool::Deallocate(MemChunk const&)
001c03ec 00000030 T MemPool::GetFreeSpace()
001c041c 00000074 T osConvertVirtToPhys
001c0490 00000054 T osGetTimeRef
001c04e4 000000e4 T osGetTime
001c05c8 00000074 T __libctru_gtod
001c0640 00000038 T osTickCounterRead
001c0678 00000034 T __ctru_speedup_config
001c06ac 000000d0 t gfxPresentFramebuffer
001c077c 000000ec T gfxSetScreenFormat
001c0868 00000108 T gfxInit
001c0970 00000010 T gfxInitDefault
001c0980 000000b4 T gfxExit
001c0a34 000000a0 T gfxGetFramebuffer
001c0ad4 00000030 T gfxScreenSwapBuffers
001c0b04 00000050 T gfxSwapBuffers
001c0b54 0000000c t _gdbHioDevFstat
001c0b60 00000008 t _gdbHioDevLseek
001c0b68 00000010 t _gdbHioDevRead
001c0b78 00000010 t _gdbHioDevWrite
001c0b88 00000054 t _gdbHioDevClose
001c0bdc 00000030 t _gdbHioDevUnlink
001c0c0c 00000038 t _gdbHioDevStat
001c0c44 00000050 t _gdbHioDevRename
001c0c94 0000004c t _gdbHioDevOpen
001c0ce0 00000034 T gdbHioDevInit
001c0d14 000001f8 T gdbHioDevRedirectStdStreams
001c0f0c 000001e0 T shaderInstanceInit
001c10ec 0000001c T shaderProgramInit
001c1108 00000064 T shaderProgramFree
001c116c 00000080 T shaderProgramSetVsh
001c11ec 000008c0 T shaderProgramConfigure
001c1aac 000001f8 t DVLE_GenerateOutmap.part.0
001c1ca4 000001cc T DVLB_ParseFile
001c1e70 00000010 T GX_BindQueue
001c1e80 00000078 T GX_ProcessCommandList
001c1ef8 00000074 T GX_MemoryFill
001c1f6c 00000070 T GX_DisplayTransfer
001c1fdc 00000068 t gxCmdQueueDoCommands.part.0
001c2044 000000c8 T gxCmdQueueInterrupt
001c210c 0000004c T gxCmdQueueClear
001c2158 000000f8 T gxCmdQueueAdd
001c2250 00000080 T gxCmdQueueRun
001c22d0 00000060 T gxCmdQueueStop
001c2330 00000074 T gxCmdQueueWait
001c23a4 0000013c T GPUCMD_Add
001c24e0 000000ac T GPUCMD_Split
001c258c 00000040 T f32tof16
001c25cc 00000040 T f32tof24
001c260c 00000044 T f32tof31
001c2650 00000c58 t gspHardwareInit
001c32a8 00000254 T gspInit
001c34fc 000000f0 T gspExit
001c35ec 00000010 T gspHasGpuRight
001c35fc 00000098 T gspPresentBuffer
001c3694 00000030 T gspSetEventCallback
001c36c4 00000050 T gspWaitForEvent
001c3714 0000004c T gspWaitForAnyEvent
001c3760 00000160 t gspEventThreadMain
001c38c0 00000130 T gspSubmitGxCommand
001c39f0 00000050 T GSPGPU_FlushDataCache
001c3a40 00000034 T GSPGPU_SetLcdForceBlack
001c3a74 00000068 T GSPGPU_AcquireRight
001c3adc 00000048 T GSPGPU_ReleaseRight
001c3b24 0000007c T GSPGPU_ImportDisplayCaptureInfo
001c3ba0 0000002c T GSPGPU_SaveVramSysArea
001c3bcc 0000002c T GSPGPU_RestoreVramSysArea
001c3bf8 000001b0 t aptConvertScreenForCapture
001c3da8 00000008 W aptDspSleep
001c3db0 00000004 W aptDspWakeup
001c3db4 00000004 W aptDspCancel
001c3db8 0000015c T aptSendCommand
001c3f14 00000038 t aptExitProcess
001c3f4c 000002f0 T aptExit
001c423c 000000d8 T aptHandleSleep
001c4314 00000030 T aptHook
001c4344 00000084 T APT_SleepIfShellClosed
001c43c8 00000084 T aptSetSleepAllowed
001c444c 00000084 T APT_UnlockTransition
001c44d0 00000484 t aptEventHandler
001c4954 000000b0 T APT_ReceiveParameter
001c4a04 000000b0 t aptReceiveParameter.constprop.0
001c4ab8 000002bc t aptScreenTransfer
001c4d74 000002d0 t aptWaitForWakeUp.isra.0
001c5044 000000f8 T aptJumpToHomeMenu
001c513c 0000004c T aptMainLoop
001c5188 00000234 T aptInit
001c53bc 0000007c T APT_CheckNew3DS
001c5438 00000024 W hidShouldUseIrrst
001c545c 0000018c T hidInit
001c55e8 000000e8 T hidExit
001c56d0 00000294 T hidScanInput
001c5964 00000010 T hidKeysHeld
001c5974 00000010 T hidKeysDown
001c5984 00000010 T hidKeysUp
001c5994 00000018 T hidTouchRead
001c59ac 00000074 T ptmSysmInit
001c5a20 0000003c T ptmSysmExit
001c5a5c 00000034 T PTMSYSM_ConfigureNew3DSCPU
001c5a90 00000010 T rbtree_init
001c5aa0 000001a0 t do_insert
001c5c40 00000008 T rbtree_insert
001c5c48 00000090 T rbtree_rotate
001c5cd8 00000338 T rbtree_remove
001c6010 00000074 T rbtree_find
001c6088 000001e0 W __system_allocateHeaps
001c6268 00000038 W __libctru_init
001c62a0 000000f0 W __system_initArgv
001c6390 T svcControlMemory
001c63b0 T svcQueryMemory
001c63e0 T svcExitProcess
001c63e8 T svcCreateThread
001c6408 T svcExitThread
001c6410 T svcSleepThread
001c6418 T svcReleaseMutex
001c6420 T svcCreateEvent
001c6434 T svcSignalEvent
001c643c T svcClearEvent
001c6444 T svcMapMemoryBlock
001c644c T svcUnmapMemoryBlock
001c6454 T svcCreateAddressArbiter
001c6468 T svcArbitrateAddressNoTimeout
001c6470 T svcCloseHandle
001c6478 T svcWaitSynchronization
001c6480 T svcWaitSynchronizationN
001c64a8 T svcDuplicateHandle
001c64bc T svcGetSystemTick
001c64c4 T svcConnectToPort
001c64d8 T svcSendSyncRequest
001c64e0 T svcGetResourceLimit
001c64f4 T svcGetResourceLimitLimitValues
001c64fc T svcGetResourceLimitCurrentValues
001c6504 T svcBreak
001c650c T svcOutputDebugString
001c6514 W initSystem
001c6564 W __ctru_exit
001c657c 0000000c T __sync_init
001c6588 00000018 T __sync_fini
001c65a0 0000002c T syncArbitrateAddress
001c65cc 0000001c T LightLock_Init
001c65e8 00000094 T LightLock_Lock
001c667c 00000044 T LightLock_TryLock
001c66c0 00000040 T LightLock_Unlock
001c6700 00000024 T RecursiveLock_Init
001c6724 00000030 T RecursiveLock_Lock
001c6754 00000078 T RecursiveLock_TryLock
001c67cc 00000054 T RecursiveLock_Unlock
001c6820 00000040 T LightEvent_Init
001c6860 000000a4 T LightEvent_Clear
001c6904 000000c8 T LightEvent_Signal
001c69cc 00000058 T LightEvent_TryWait
001c6a24 000000b0 T LightEvent_Wait
001c6ad4 00000124 T srvInit
001c6bf8 00000058 T srvExit
001c6c50 00000080 T srvGetServiceHandleDirect
001c6cd0 00000048 T srvGetServiceHandle
001c6d18 00000038 T srvPublishToSubscriber
001c6d50 0000023c t _gdbHioSendSyncRequest64V
001c6f8c 0000002c t _gdbHioSendSyncRequest
001c6fb8 00000120 t _gdbHioImportStructStat
001c70d8 00000038 t _gdbHioSendSyncRequest64.constprop.0
001c7110 00000074 T gdbHioOpen
001c7184 00000018 T gdbHioClose
001c719c 00000038 T gdbHioRead
001c71d4 00000038 T gdbHioWrite
001c720c 0000004c T gdbHioLseek
001c7258 0000001c T gdbHioRename
001c7274 00000018 T gdbHioUnlink
001c728c 00000044 T gdbHioStat
001c72d0 00000044 T gdbHioFstat
001c7314 00000188 T threadCreate
001c749c 0000002c T threadFree
001c74c8 00000024 T threadJoin
001c74ec 00000030 T threadGetCurrent
001c751c 00000040 T threadExit
001c755c 00000044 t _thread_begin
001c75a0 00000094 t mappableFindAddressWithin
001c7634 00000028 T mappableInit
001c765c 00000080 T mappableAlloc
001c76dc 00000004 T mappableFree
001c76e0 00000160 T irrstInit
001c7840 000000cc T irrstExit
001c790c 000000b0 T irrstScanInput
001c79bc 00000024 T irrstKeysHeld
001c79e0 0000000c T srvPmGetSessionHandle
001c79ec 00000050 T rbtree_node_next
001c7a3c 00000030 W __appInit
001c7a6c 00000030 t __libctru_nanosleep
001c7a9c 00000030 t __libctru_get_reent
001c7acc 000000f8 T __system_initSyscalls
001c7bc4 00000030 W __appExit
001c7bf4 00000090 W __libctru_exit
001c7c84 T __aeabi_read_tp
001c7c90 00000084 W envGetHandle
001c7d14 00000050 W envDestroyHandles
001c7d64 00000014 t archive_link
001c7d78 00000014 t archive_dirreset
001c7d8c 00000014 t archive_chmod
001c7da0 00000024 t error_cmp
001c7dc4 00000050 t archive_translate_error
001c7e14 000000d4 t archive_seek
001c7ee8 0000007c t _archiveInit.part.0
001c7f64 0000008c t archiveFindDevice.part.0
001c7ff0 00000294 t archive_utf16path
001c8284 000000a0 t _archiveUnmountDeviceStruct.part.0
001c8324 00000014 t archive_fchmod
001c8338 00000014 t archive_statvfs
001c834c 00000158 t _archiveMountDevice
001c84a4 000000e8 t archive_diropen
001c858c 000000a4 t archive_fstat
001c8630 0000006c t archive_close
001c869c 0000006c t archive_fsync
001c8708 00000070 t archive_dirclose
001c8778 000000e8 t sdmc_statvfs
001c8860 00000080 t archive_ftruncate
001c88e0 000000fc t archive_chdir
001c89dc 000000b0 t archive_read
001c8a8c 000000ac t archive_unlink
001c8b38 000000c8 t archive_rmdir
001c8c00 000000ec t archive_mkdir
001c8cec 000001a8 t archive_stat
001c8e94 00000184 t archive_rename
001c9018 00000168 t archive_dirnext
001c9180 0000012c t archive_write
001c92ac 000001f0 t archive_open
001c949c 000001a4 T archiveMountSdmc
001c9640 00000054 T archiveUnmountAll
001c9694 000000c8 T fsInit
001c975c 0000003c T fsExit
001c9798 00000060 T fsExemptFromSession
001c97f8 00000050 T fsUnexemptFromSession
001c9848 000000cc T FSUSER_OpenFile
001c9914 000000bc T FSUSER_DeleteFile
001c99d0 000000f8 T FSUSER_RenameFile
001c9ac8 000000bc T FSUSER_DeleteDirectory
001c9b84 000000d4 T FSUSER_CreateFile
001c9c58 000000c4 T FSUSER_CreateDirectory
001c9d1c 000000f8 T FSUSER_RenameDirectory
001c9e14 000000b4 T FSUSER_OpenDirectory
001c9ec8 00000094 T FSUSER_OpenArchive
001c9f5c 0000008c T FSUSER_CloseArchive
001c9fe8 00000074 T FSUSER_GetSdmcArchiveResource
001ca05c 00000064 T FSUSER_IsSdmcWritable
001ca0c0 00000058 T FSFILE_Read
001ca118 00000060 T FSFILE_Write
001ca178 00000038 T FSFILE_GetSize
001ca1b0 00000028 T FSFILE_SetSize
001ca1d8 0000003c T FSFILE_Close
001ca214 00000024 T FSFILE_Flush
001ca238 00000050 T FSDIR_Read
001ca288 0000003c T FSDIR_Close
001ca2c4 000000e8 T utf16_to_utf8
001ca3ac 00000064 T decode_utf16
001ca410 0000013c T decode_utf8
001ca54c 000000c0 T utf8_to_utf16
001ca60c 00000060 T encode_utf16
001ca66c 000000fc T encode_utf8
001ca768 00000004 T operator delete(void*)
001ca76c 00000060 T __cxa_guard_acquire
001ca7cc 0000000c T __cxa_guard_release
001ca7d8 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
001ca7d8 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
001ca7f8 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
001ca824 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
001ca824 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
001ca834 00000008 T __cxa_pure_virtual
001ca83c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001ca83c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001ca85c 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001ca888 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
001ca8f4 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001ca9d0 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
001caa14 00000004 T std::type_info::~type_info()
001caa14 00000004 T std::type_info::~type_info()
001caa18 00000008 T std::type_info::__is_pointer_p() const
001caa18 00000008 T std::type_info::__is_function_p() const
001caa20 0000004c T std::type_info::operator==(std::type_info const&) const
001caa6c 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
001caac8 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
001caadc 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001caadc 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001caafc 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
001cab28 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001cab90 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
001cabbc 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
001cac00 00000004 T operator delete(void*, unsigned int)
001cac04 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
001cacd4 0000009c t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
001cad70 00000044 T __cxa_allocate_exception
001cadb4 00000030 T __cxa_free_exception
001cade4 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001cae24 T __cxa_end_cleanup
001cae34 00000138 T __cxa_type_match
001caf6c 000000b4 T __cxa_begin_cleanup
001cb020 000000b4 T __gnu_end_cleanup
001cb0d4 000000cc T __cxa_begin_catch
001cb1a0 000000e0 T __cxa_end_catch
001cb280 00000004 T std::exception::~exception()
001cb280 00000004 T std::exception::~exception()
001cb284 00000004 T std::bad_exception::~bad_exception()
001cb284 00000004 T std::bad_exception::~bad_exception()
001cb288 0000000c T transaction clone for std::exception::what() const
001cb288 0000000c T std::exception::what() const
001cb294 0000000c T transaction clone for std::bad_exception::what() const
001cb294 0000000c T std::bad_exception::what() const
001cb2a0 00000018 T std::bad_exception::~bad_exception()
001cb2b8 0000000c T __cxa_get_globals_fast
001cb2c4 0000000c T __cxa_get_globals
001cb2d0 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
001cb438 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
001cb49c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
001cb574 000006f8 T __gxx_personality_v0
001cbc6c 00000038 T __cxxabiv1::__terminate(void (*)())
001cbca4 00000018 T std::terminate()
001cbcbc 0000000c T __cxxabiv1::__unexpected(void (*)())
001cbcc8 00000018 T std::unexpected()
001cbce0 00000014 T std::get_terminate()
001cbcf4 00000014 T std::get_unexpected()
001cbd08 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
001cbd78 00000070 T __cxa_init_primary_exception
001cbde8 00000058 T __cxa_throw
001cbe40 000000b0 T __cxa_rethrow
001cbef0 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
001cbf60 0000002c T __cxa_call_terminate
001cbf8c 00000154 T __cxa_call_unexpected
001cc0e0 0000022c T cosf
001cc30c 00000024 t with_errnof
001cc330 00000018 t xflowf
001cc348 0000000c T __math_uflowf
001cc354 0000000c T __math_may_uflowf
001cc360 0000000c T __math_oflowf
001cc36c 00000030 T __math_divzerof
001cc39c 0000001c T __math_invalidf
001cc3b8 000001f4 T atanf
001cc5ac 000000b4 T ceilf
001cc660 00000010 T fabsf
001cc670 000000b4 T floorf
001cc728 000003ec T powf
001ccb18 00000274 T sinf
001ccd8c 0000008c T acosf
001cce18 00000004 T atan2f
001cce1c 0000007c T fmodf
001cce98 00000070 T sqrtf
001ccf08 00000254 T __ieee754_acosf
001cd15c 000001a8 T __ieee754_atan2f
001cd304 000001a4 T __ieee754_fmodf
001cd4a8 00000008 T __ieee754_sqrtf
001cd4b0 0000000c T nanf
001cd4bc 00000120 T __udivmoddi4
001cd5dc 00000018 t selfrel_offset31
001cd5f4 00000090 t search_EIT_table
001cd684 00000040 t __gnu_unwind_get_pr_addr
001cd6c4 00000118 t get_eit_entry
001cd7dc 00000088 t restore_non_core_regs
001cd864 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
001cd878 00000004 t _Unwind_DebugHook
001cd87c 00000064 t unwind_phase2
001cd8e0 00000134 t unwind_phase2_forced
001cda14 000000a4 T __gnu_Unwind_RaiseException
001cdab8 00000028 T __gnu_Unwind_ForcedUnwind
001cdae0 00000074 T __gnu_Unwind_Resume
001cdb54 00000020 T __gnu_Unwind_Resume_or_Rethrow
001cdb74 00000004 T _Unwind_Complete
001cdb78 00000018 T _Unwind_DeleteException
001cdb90 0000005c T _Unwind_VRS_Get
001cdbec 0000002c t _Unwind_GetGR
001cdc18 0000005c T _Unwind_VRS_Set
001cdc74 0000002c t _Unwind_SetGR
001cdca0 000000c0 T __gnu_Unwind_Backtrace
001cdd60 00000420 t __gnu_unwind_pr_common
001ce180 00000008 T __aeabi_unwind_cpp_pr0
001ce188 00000008 W __aeabi_unwind_cpp_pr1
001ce190 00000008 W __aeabi_unwind_cpp_pr2
001ce198 000003d8 T _Unwind_VRS_Pop
001ce570 00000064 t next_unwind_byte
001ce5d4 0000002c t _Unwind_GetGR.constprop.0
001ce600 00000004 t unwind_UCB_from_context
001ce604 00000424 T __gnu_unwind_execute
001cea28 00000048 T __gnu_unwind_frame
001cea70 00000010 T _Unwind_GetRegionStart
001cea80 0000001c T _Unwind_GetLanguageSpecificData
001cea9c 00000008 T _Unwind_GetDataRelBase
001ceaa4 00000008 T _Unwind_GetTextRelBase
001ceaac 00000014 T abort
001ceac0 0000005c T __assert_func
001ceb1c 00000014 T atexit
001ceb30 00000078 T bsearch
001ceba8 00000094 T _calloc_r
001cec3c 0000000c T __errno
001cec48 00000034 T exit
001cec7c 00000160 T _fclose_r
001ceddc 00000020 T fclose
001cedfc 00000088 T feof
001cee84 00000258 T __sflush_r
001cf0dc 00000094 T _fflush_r
001cf170 00000038 T fflush
001cf1a8 0000000c T _cleanup_r
001cf1b4 00000184 T __sinit
001cf338 00000134 T __sfp
001cf46c 0000000c T __sfp_lock_acquire
001cf478 0000000c T __sfp_lock_release
001cf484 0000003c T __libc_fini_array
001cf4c0 0000003c T fiprintf
001cf4fc 00000140 T _fopen_r
001cf63c 00000028 T fopen
001cf664 0000003c T fprintf
001cf6a0 000002d0 T _fread_r
001cf970 00000038 T fread
001cf9a8 000000f8 T _malloc_trim_r
001cfaa0 000002e4 T _free_r
001cfd84 0000001c T _fseek_r
001cfda0 00000034 T fseek
001cfdd4 000004f8 T _fseeko_r
001d02cc 00000034 T ftell
001d0300 000001bc T _ftello_r
001d04bc 00000068 T _fwalk
001d0524 00000070 T _fwalk_reent
001d0594 000000f8 T _fwrite_r
001d068c 00000038 T fwrite
001d06c4 0000007c T __libc_init_array
001d0740 00000018 T isprint
001d0758 00000138 T __smakebuf_r
001d0890 00000028 T memalign
001d08b8 00000148 T _memalign_r
001d0a00 00000020 T malloc
001d0a20 00000020 T free
001d0a40 000007f0 T _malloc_r
001d1230 000000e0 T memchr
001d1310 000000a8 T memcmp
001d13b8 0000011c T memcpy
001d14d4 00000154 T memmove
001d1628 00000118 T memset
001d1740 0000000c T __malloc_lock
001d174c 0000000c T __malloc_unlock
001d1758 00000034 T printf
001d178c 000000e0 T _puts_r
001d186c 00000020 T puts
001d188c 00000958 T qsort
001d21e4 00000044 T rand
001d2228 00000028 T realloc
001d2250 00000598 T _realloc_r
001d27e8 0000001c t lflush
001d2804 000001ac T __srefill_r
001d29b0 00000098 T _raise_r
001d2a48 00000020 T raise
001d2a68 000000cc T snprintf
001d2b34 00000064 T sprintf
001d2b98 00000074 T sscanf
001d2c0c 00000044 T __sread
001d2c50 00000008 T __seofread
001d2c58 00000068 T __swrite
001d2cc0 00000048 T __sseek
001d2d08 00000008 T __sclose
001d2d10 00000070 T strcat
001d2d80 00000144 T strchr
001d2ec4 000000f0 T strcpy
001d2fb4 0000005c T strlen
001d3010 000000ec T strncat
001d30fc 000000dc T strncmp
001d31d8 000000c0 T strncpy
001d3298 00000048 T strnlen
001d32e0 00000428 t two_way_long_needle
001d3708 00000248 T strstr
001d3950 00000034 T strtok
001d3984 000000b4 T __strtok_r
001d3a38 000001c8 t _strtoul_l.constprop.0
001d3c00 00000004 T _strtoul_r
001d3c04 0000064c t get_arg
001d4250 00003808 T _svfprintf_r
001d7a58 00000050 t get_arg
001d7aa8 00002b68 T __ssvfscanf_r
001da610 00000020 T close
001da630 0000001c T tolower
001da64c 0000001c T toupper
001da668 0000064c t get_arg
001dacb4 00000034 T __sprint_r
001dace8 00002584 T _vfiprintf_r
001dd26c 000000d4 t __sbprintf
001dd340 0000064c t get_arg
001dd990 000038d4 T _vfprintf_r
001e1264 0000002c T vfprintf
001e1290 000000d4 t __sbprintf
001e1364 000000a4 T _vsnprintf_r
001e1408 00000038 T vsnprintf
001e1440 0000005c T vsprintf
001e149c 00000054 T _wcrtomb_r
001e14f0 00000028 T _wcsrtombs_r
001e1518 00000154 T __swsetup_r
001e166c 000000b0 T __register_exitproc
001e171c 00000114 T __call_exitprocs
001e1830 000001a8 t quorem
001e19d8 000012ec T _dtoa_r
001e2cc4 000000c8 T __sflags
001e2d8c 000004a4 T __sfvwrite_r
001e3230 00000008 T iswspace
001e3238 0000000c T _localeconv_r
001e3244 00000010 T __locale_mb_cur_max
001e3254 00000068 T _mbrtowc_r
001e32bc 000002fc T __utf8_mbtowc
001e35b8 00000088 T _Balloc
001e3640 0000001c T _Bfree
001e365c 000000f4 T __multadd
001e3750 00000110 T __s2b
001e3860 00000058 T __hi0bits
001e38b8 0000009c T __lo0bits
001e3954 000000a4 T __i2b
001e39f8 00000204 T __multiply
001e3bfc 00000120 T __pow5mult
001e3d1c 0000013c T __lshift
001e3e58 00000058 T __mcmp
001e3eb0 000001cc T __mdiff
001e407c 00000088 T __ulp
001e4104 000000d4 T __b2d
001e41d8 0000012c T __d2b
001e4304 00000078 T __ratio
001e437c 00000088 T __copybits
001e4404 0000005c T __any_on
001e4460 000000e4 T __sccl
001e4548 000000a8 T frexp
001e45f0 000000b8 T stpncpy
001e46a8 0000130c T _strtod_l
001e59b4 0000000c T _strtod_r
001e59c0 0000022c t _strtoll_l.constprop.0
001e5bec 00000004 T _strtoll_r
001e5bf0 000001b0 t _strtol_l.part.0
001e5da0 0000003c T _strtol_r
001e5ddc 00000244 t _strtoull_l.constprop.0
001e6020 00000004 T _strtoull_r
001e6024 00000188 T __ssprint_r
001e61ac 000000e0 T _sungetc_r
001e628c 0000006c T __ssrefill_r
001e62f8 000000c8 T _sfread_r
001e63c0 000000a8 T __submore
001e6468 00000190 T _wcsnrtombs_l
001e65f8 0000004c T _wcsnrtombs_r
001e6644 000000f0 T __utf8_wctomb
001e6734 000000ec t rshift
001e6820 00000928 T __gethex
001e7148 0000004c T __match
001e7194 0000029c T __hexnan
001e7430 0000003c T iswspace_l
001e746c 000001d4 t __jp2uc
001e7640 0000009c T _jp2uc_l
001e76e0 00000010 T nan
001e76f0 00000084 T category
001e7774 00000008 t null_write
001e777c 00000018 T setDefaultDevice
001e7794 000000c8 T FindDevice
001e785c 00000028 T RemoveDevice
001e7884 0000009c T AddDevice
001e7920 00000020 T GetDeviceOpTab
001e7940 00000078 T _fstat_r
001e79b8 00000014 T _getpid_r
001e79cc 00000008 T _isatty_r
001e79d4 00000014 T _kill_r
001e79e8 00000084 T _lseek_r
001e7a6c 000000c8 T _open_r
001e7b34 00000080 T _read_r
001e7bb4 00000078 T _sbrk_r
001e7c2c 00000080 T _write_r
001e7cac 00000024 T _exit
001e7cd0 000001b8 T _concatenate_path
001e7e88 00000160 T chdir
001e7fe8 00000008 T __flockfile
001e7ff0 00000008 T __funlockfile
001e7ff8 00000018 T __libc_lock_acquire
001e8010 00000018 T __libc_lock_release
001e8028 00000018 T __libc_lock_init_recursive
001e8040 00000018 T __libc_lock_acquire_recursive
001e8058 00000018 T __libc_lock_release_recursive
001e8070 00000018 T __libc_lock_close_recursive
001e8088 0000008c T __release_handle
001e8114 000000b4 T __alloc_handle
001e81c8 0000003c T __get_handle
001e8204 0000013c T dup2
001e8340 000000f4 T _close_r
001e8434 00000068 t __dirnext
001e849c 000000f4 T opendir
001e8590 00000090 T closedir
001e8620 000000b8 T readdir
001e86d8 00000028 T __getreent
001e8700 00000038 T __aeabi_d2lz
001e8700 00000038 T __fixdfdi
001e8738 00000040 T __aeabi_d2ulz
001e8738 00000040 T __fixunsdfdi
001e8778 00000044 T strrchr
001e87bc T _fini
001eaed0 00000028 R vtable for rw::StreamFile
001eaef8 00000028 R vtable for rw::StreamMemory
001eaf20 00000001 r std::piecewise_construct
001ec138 00000030 r rw::c3d::swizzle_8x8(rw::c3d::Packet*, bool)::table
001ee360 00000001 r std::piecewise_construct
001ee378 00000074 r LENGTHBASE
001ee3ec 00000074 r LENGTHEXTRA
001ee460 00000078 r DISTANCEBASE
001ee4d8 00000078 r DISTANCEEXTRA
001ee550 0000004c r CLCL_ORDER
001ee59c 00000004 r HuffmanTree_makeTable(HuffmanTree*)::headsize
001ee5a0 00000004 r HuffmanTree_makeTable(HuffmanTree*)::mask
001ee5a4 00000004 r MAX_SUPPORTED_DEFLATE_LENGTH
001ee5a8 00000004 r HASH_NUM_VALUES
001ee5ac 00000004 r HASH_BIT_MASK
001ee5b0 00000024 R lodepng_default_compress_settings
001ee5d4 00000014 R lodepng_default_decompress_settings
001ee5e8 0000001c r ADAM7_IX
001ee604 0000001c r ADAM7_IY
001ee620 0000001c r ADAM7_DX
001ee63c 0000001c r ADAM7_DY
001f07b4 00000004 r FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF
001f07b8 00000004 r FONT_ATLAS_DEFAULT_TEX_DATA_H
001f07bc 00000004 r FONT_ATLAS_DEFAULT_TEX_DATA_ID
001f07c0 0000097f r FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS
001f182c 00000006 r ImFontAtlas::GetGlyphRangesDefault()::ranges
001f1834 0000000e r ImFontAtlas::GetGlyphRangesKorean()::ranges
001f1844 00000016 r ImFontAtlas::GetGlyphRangesChinese()::ranges
001f185c 00000f34 r ImFontAtlas::GetGlyphRangesJapanese()::offsets_from_0x4E00
001f2790 00000012 r ImFontAtlas::GetGlyphRangesCyrillic()::ranges
001f27a4 0000000e r ImFontAtlas::GetGlyphRangesThai()::ranges
001f2980 00002ecd r proggy_clean_ttf_compressed_data_base85
001f7600 00000088 r GStyleVarInfo
001f7cb8 00000028 r GetMinimumStepAtDecimalPrecision(int)::min_steps
001ffb34 R default_shbin
002000f0 R default_shbin_end
002000f0 R default_shbin_size
002000f4 00000028 V vtable for rw::Stream
0020011c 00000038 r CSWTCH.18
00200154 00000005 r colorFmtSizes
0020015c 00000004 r depthFmtSizes
00200170 00000070 r g_gdbHioDevoptab
00200204 00000008 r morton_x.3
0020020c 00000008 r morton_y.2
00200214 00000008 r s_sleepWakeEvents.4
002002b0 0000005b r CSWTCH.3
00200330 00000070 r archive_devoptab
002003a0 00000030 r error_table
002003d8 0000000c R typeinfo for __gnu_cxx::recursive_init_error
002003e4 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
00200408 00000014 R vtable for __gnu_cxx::recursive_init_error
0020041c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00200428 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00200450 0000002c R vtable for __cxxabiv1::__si_class_type_info
0020047c 00000008 R typeinfo for std::type_info
00200484 0000000d R typeinfo name for std::type_info
00200494 0000000c R typeinfo for __cxxabiv1::__class_type_info
002004a0 00000022 R typeinfo name for __cxxabiv1::__class_type_info
002004c4 0000002c R vtable for __cxxabiv1::__class_type_info
00200514 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0020051c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00200524 0000000c R typeinfo for std::bad_exception
00200530 00000008 R typeinfo for std::exception
00200538 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00200558 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0020057c 00000012 R typeinfo name for std::bad_exception
00200590 0000000d R typeinfo name for std::exception
002005a0 00000014 R vtable for std::bad_exception
002005b4 00000010 r atanhi
002005c4 00000010 r atanlo
002005d4 00000060 R __inv_pio4
00200638 000000e0 R __sincosf_table
00200718 0000000c r CSWTCH.8
00200724 0000000c r CSWTCH.9
00200730 00000008 r Zero
00200738 00000148 R __exp2f_data
00200880 00000128 R __powf_log2_data
002009e8 00000004 R _global_impure_ptr
00200a2c 00000010 r blanks.1
00200a3c 00000010 r zeroes.0
00200a54 00000022 r basefix.0
00200a78 00000010 r blanks.1
00200a88 00000010 r zeroes.0
00200a98 00000010 r blanks.1
00200aa8 00000010 r zeroes.0
00200ab8 00000101 R _ctype_
00200bcc r .LC2
00200cb0 00000028 R __mprec_bigtens
00200cd8 000000c8 R __mprec_tens
00200da0 0000000c r p05.0
00200dbc 00000014 r fpi.1
00200dd0 00000014 r fpinan.0
00200de8 00000028 r tinytens
00200e10 0000006c R __action_table
00200e7c 00000100 R __chclass
00200f7c 0000006c R __state_table
00201030 00000100 R __hexdig
00201144 000000bc r a1
00201200 000000bc r a2
002012bc 0000005b r a3
00201318 00000070 r a6
00201388 000000a2 r a7
0020142c 00000040 r a8
0020146c 0000172a r b02cf
00202b98 00001a7c r d02f4
00204614 0000000c R _C_numeric_locale
00204620 000031e6 r categories
00207808 00000070 R dotab_stdnull
00207878 r 
002078f4 R __exidx_start
00207a64 R __exidx_end
00208000 00000014 D rw::defaultMemfuncs
00208014 00000014 D rw::managedMemfuncs
00208028 00000048 D rw::null::renderdevice
00208070 0000000c d rw::uvAnimParamApplyCB(void*, void*)::xlat1
0020807c 0000000c d rw::uvAnimParamApplyCB(void*, void*)::xlat2
00208088 0000000c d rw::uvAnimParamApplyCB(void*, void*)::axis
00208094 00000034 D rw::errstrs
002080c8 00000004 D rw::Texture::findCB
002080cc 00000004 D rw::Texture::readCB
002080d0 00000002 d rw::nextSerialNum
002080d4 00000004 D rw::version
002080d8 00000004 D rw::build
002080dc 00000004 D rw::platform
002080e0 00000040 d rw::identMat
00208120 00000040 d rw::RawMatrix::setIdentity(rw::RawMatrix*)::identity
00208160 0000000c d rw::matrixDefaultTolerance
0020816c 00000004 D rw::hAnimDoStream
00208170 00000040 d rw::c3d::normal2texcoord
002081b0 00000004 d rw::c3d::stateDirty
002081b4 00000004 d rw::c3d::sceneDirty
002081b8 00000004 d rw::c3d::objectDirty
002081bc 00000003 d rw::c3d::alphaTestMap
002081c0 0000000c d rw::c3d::blendMap
002081cc 00000009 d rw::c3d::stencilOpMap
002081d8 00000009 d rw::c3d::stencilFuncMap
002081e4 00000004 d rw::c3d::cullModeMap
002081e8 00000007 d rw::c3d::filterConvMap_NoMIP
002081f0 00000007 d rw::c3d::filterConvMap_MIP
002081f8 00000005 d rw::c3d::addressConvMap
00208200 00000048 D rw::c3d::renderdevice
00208248 0000001c d rw::c3d::primTypeMap
00208264 00000018 D rw::xbox::vertexFormatSizes
0020827c 00000018 D rw::xbox::v3dFormatMap
00208294 00000018 D rw::xbox::v2dFormatMap
002082ac 00000100 d rw::xbox::formatInfoRW
002083ac 00000008 d rw::d3d9::_d3ddec_end
002083b4 00000004 D rw::d3d::isP8supported
002083b8 00000018 D rw::d3d::vertFormatMap
002083d0 00000100 d rw::d3d::formatInfoRW
002084d0 000002c0 d rw::d3d::formatInfoFull
00208790 00000014 d rw::d3d::allocateDXT(rw::Raster*, long, long, long)::dxtMap
002087a4 00000008 D rw::ps2::attribXYZ
002087ac 00000008 D rw::ps2::attribXYZW
002087b4 00000008 D rw::ps2::attribUV
002087bc 00000008 D rw::ps2::attribUV2
002087c4 00000008 D rw::ps2::attribRGBA
002087cc 00000008 D rw::ps2::attribNormal
002087d4 00000008 D rw::ps2::attribWeights
002087dc 00000010 d rw::ps2::attribSize(unsigned long)::size
002087ec 00000010 d rw::ps2::unpackSize(unsigned long)::size
002087fc 00000004 D rw::ps2::cameraFormat
00208800 00000004 D rw::ps2::cameraDepth
00208804 00000004 D rw::ps2::cameraZDepth
00208808 00000004 D rw::ps2::defaultMipMapKL
0020880c 00000004 D rw::ps2::maxMipLevels
00208810 00000020 d rw::ps2::blockmap_PSMCT32
00208830 00000020 d rw::ps2::blockmap_PSMCT16
00208850 00000020 d rw::ps2::blockmap_PSMCT16S
00208870 00000020 d rw::ps2::blockmap_PSMZ32
00208890 00000020 d rw::ps2::blockmap_PSMZ16
002088b0 00000020 d rw::ps2::blockmap_PSMZ16S
002088d0 00000020 d rw::ps2::blockmaprev_PSMCT32
002088f0 00000020 d rw::ps2::blockmaprev_PSMCT16
00208910 00000080 d rw::ps2::rasterCreateTexture(rw::Raster*)::pageWidths
00208990 00000080 d rw::ps2::rasterCreateTexture(rw::Raster*)::pageHeights
00208a10 00000020 d rw::ps2::rasterCreateTexture(rw::Raster*)::blockOffset32_24_8
00208a30 00000020 d rw::ps2::rasterCreateTexture(rw::Raster*)::blockOffset16_4
00208a50 00000020 d rw::ps2::rasterCreateTexture(rw::Raster*)::blockOffset16S
00208a70 00000004 D LODEPNG_VERSION_STRING
00208a74 00000400 d lodepng_crc32_table
00208e74 00000001 d Draw(float)::show_demo_window
00208e78 00000050 D gKeyMap
00208ec8 00000004 D GImGui
00208ecc 00000002 d ImGuiStb::STB_TEXTEDIT_NEWLINE
00208ece 00000001 d ImGui::ShowMetricsWindow(bool*)::show_clip_rects
00208ed0 00000001 d ImGui::ShowDemoWindow(bool*)::check
00208ed4 0000001c d ImGui::ShowDemoWindow(bool*)::arr
00208ef0 00000004 d ImGui::ShowDemoWindow(bool*)::current_item_1
00208ef4 00000080 d ImGui::ShowDemoWindow(bool*)::str0
00208f74 00000004 d ImGui::ShowDemoWindow(bool*)::i0
00208f78 00000004 d ImGui::ShowDemoWindow(bool*)::f0
00208f7c 00000010 d ImGui::ShowDemoWindow(bool*)::vec4a
00208f8c 00000004 d ImGui::ShowDemoWindow(bool*)::i1
00208f90 00000004 d ImGui::ShowDemoWindow(bool*)::i2
00208f94 00000004 d ImGui::ShowDemoWindow(bool*)::f1
00208f98 00000004 d ImGui::ShowDemoWindow(bool*)::f2
00208f9c 00000004 d ImGui::ShowDemoWindow(bool*)::f1
00208fa0 0000000c d ImGui::ShowDemoWindow(bool*)::col1
00208fac 00000010 d ImGui::ShowDemoWindow(bool*)::col2
00208fbc 00000004 d ImGui::ShowDemoWindow(bool*)::listbox_item_current
00208fc0 00000004 d ImGui::ShowDemoWindow(bool*)::selection_mask
00208fc4 00000001 d ImGui::ShowDemoWindow(bool*)::closable_group
00208fc8 00000004 d ImGui::ShowDemoWindow(bool*)::wrap_width
00208fcc 00000020 d ImGui::ShowDemoWindow(bool*)::buf
00208fec 00000004 d ImGui::ShowDemoWindow(bool*)::selected
00208ff0 00000010 d ImGui::ShowDemoWindow(bool*)::selected
00209000 00000040 d ImGui::ShowDemoWindow(bool*)::bufpass
00209040 00004000 d ImGui::ShowDemoWindow(bool*)::text
0020d040 00000001 d ImGui::ShowDemoWindow(bool*)::animate
0020d044 0000001c d ImGui::ShowDemoWindow(bool*)::arr
0020d060 00000004 d ImGui::ShowDemoWindow(bool*)::display_count
0020d064 00000004 d ImGui::ShowDemoWindow(bool*)::progress_dir
0020d068 00000001 d ImGui::ShowDemoWindow(bool*)::alpha_preview
0020d069 00000001 d ImGui::ShowDemoWindow(bool*)::options_menu
0020d06a 00000001 d ImGui::ShowDemoWindow(bool*)::alpha
0020d06b 00000001 d ImGui::ShowDemoWindow(bool*)::alpha_bar
0020d06c 00000001 d ImGui::ShowDemoWindow(bool*)::side_preview
0020d070 00000004 d ImGui::ShowDemoWindow(bool*)::inputs_mode
0020d074 00000004 d ImGui::ShowDemoWindow(bool*)::begin
0020d078 00000004 d ImGui::ShowDemoWindow(bool*)::end
0020d07c 00000004 d ImGui::ShowDemoWindow(bool*)::begin_i
0020d080 00000004 d ImGui::ShowDemoWindow(bool*)::end_i
0020d084 00000010 d ImGui::ShowDemoWindow(bool*)::vec4f
0020d094 00000010 d ImGui::ShowDemoWindow(bool*)::vec4i
0020d0a4 0000001c d ImGui::ShowDemoWindow(bool*)::values
0020d0c0 00000010 d ImGui::ShowDemoWindow(bool*)::values2
0020d0d0 00000004 d ImGui::ShowDemoWindow(bool*)::line
0020d0d4 00000004 d ImGui::ShowDemoWindow(bool*)::f0
0020d0d8 00000004 d ImGui::ShowDemoWindow(bool*)::f1
0020d0dc 00000004 d ImGui::ShowDemoWindow(bool*)::f2
0020d0e0 00000004 d ImGui::ShowDemoWindow(bool*)::item
0020d0e4 00000010 d ImGui::ShowDemoWindow(bool*)::selection
0020d0f4 00000001 d ImGui::ShowDemoWindow(bool*)::track
0020d0f8 00000004 d ImGui::ShowDemoWindow(bool*)::track_line
0020d0fc 00000004 d ImGui::ShowDemoWindow(bool*)::scroll_to_px
0020d100 00000004 d ImGui::ShowDemoWindow(bool*)::lines
0020d104 00000004 d ImGui::ShowDemoWindow(bool*)::selected_fish
0020d108 00000005 d ImGui::ShowDemoWindow(bool*)::toggles
0020d110 00000004 d ImGui::ShowDemoWindow(bool*)::value
0020d114 00000020 d ImGui::ShowDemoWindow(bool*)::name
0020d134 00000004 d ImGui::ShowDemoWindow(bool*)::item
0020d138 00000010 d ImGui::ShowDemoWindow(bool*)::color
0020d148 00000004 d ImGui::ShowDemoWindow(bool*)::selected
0020d14c 00000004 d ImGui::ShowDemoWindow(bool*)::foo
0020d150 00000004 d ImGui::ShowDemoWindow(bool*)::bar
0020d154 00000001 d ImGui::ShowDemoWindow(bool*)::h_borders
0020d155 00000001 d ImGui::ShowDemoWindow(bool*)::v_borders
0020d158 00000020 d ImGui::ShowDemoWindow(bool*)::buf
0020d178 00000080 d ImGui::ShowDemoWindow(bool*)::buf
0020d1f8 00000001 d ImGui::ShowStyleEditor(ImGuiStyle*)::init
0020d1f9 00000001 d ImGui::ShowStyleEditor(ImGuiStyle*)::output_only_modified
0020d1fc 00000004 d ImGui::ShowStyleEditor(ImGuiStyle*)::window_scale
0020d200 00000001 d ShowExampleMenuFile()::enabled
0020d204 00000004 d ShowExampleMenuFile()::f
0020d208 00000001 d ShowExampleMenuFile()::b
0020d20c 00000004 d ShowExampleAppAutoResize(bool*)::lines
0020d210 00000004 d ShowExampleAppConstrainedResize(bool*)::display_lines
0020d214 00000004 d ShowExampleAppCustomRendering(bool*)::sz
0020d218 00000004 d ShowExampleAppLog(bool*)::last_time
0020d21c 00000020 d ShowExampleAppPropertyEditor(bool*)::funcs::ShowDummyObject(char const*, int)::dummy_members
0020d23c 00000004 V rw::c3d::setMaterial(unsigned long, rw::RGBA const&, rw::SurfaceProperties const&, float)::white
0020d240 00000004 d framerate
0020d244 00000008 d framerateCounter
0020d24c 00000004 d g_gdbHioStderrFd
0020d250 00000004 d g_gdbHioStdinFd
0020d254 00000004 d g_gdbHioStdoutFd
0020d258 00000004 d queueLock
0020d25c 00000004 d kCount
0020d260 00000004 d kDelay
0020d264 00000004 d kInterval
0020d268 W __stacksize__
0020d26c 00000004 D __cxxabiv1::__unexpected_handler
0020d270 00000004 D __cxxabiv1::__terminate_handler
0020d274 00000001 D __fdlib_version
0020d278 0000000c d __sfp_recursive_mutex
0020d284 0000000c d __sinit_recursive_mutex
0020d290 00000004 D _impure_ptr
0020d298 00000460 d impure_data
0020d6f8 00000408 D __malloc_av_
0020db00 00000004 D __malloc_sbrk_base
0020db04 00000004 D __malloc_trim_threshold
0020db08 0000000c d __malloc_recursive_mutex
0020db14 0000000c D __atexit_recursive_mutex
0020db20 0000016c D __global_locale
0020dc8c 00000002 d numempty
0020dc90 00000004 d defaultDevice
0020dc94 0000008c D devoptab_list
0020dd20 00000400 d _current_working_directory
0020e120 00000004 d __hndl_lock
0020e124 0000000c d __stderr_handle
0020e130 0000000c d __stdin_handle
0020e13c 0000000c d __stdout_handle
0020e148 00001000 d handles
0020f150 d _GLOBAL_OFFSET_TABLE_
0020f15c d __frame_dummy_init_array_entry
0020f15c D __init_array_start
0020f15c B __preinit_array_end
0020f15c B __preinit_array_start
0020f15c D __tdata_lma
0020f15c D __tdata_lma_end
0020f190 d __do_global_dtors_aux_fini_array_entry
0020f190 D __fini_array_start
0020f190 D __init_array_end
0020f198 D __bss_start__
0020f198 D __fini_array_end
0020f198 00000004 B rw::engine
0020f19c 00000010 B rw::Engine::s_plglist
0020f1ac 00000001 B rw::Engine::state
0020f1b0 00000014 B rw::Engine::memfuncs
0020f1c4 000000e0 B rw::Driver::s_plglist
0020f2a4 00000004 B rw::allocLocation
0020f2a8 00000008 B rw::allocations
0020f2b0 00000004 B rw::totalMemoryAllocated
0020f2b4 00000004 B rw::Image::numAllocated
0020f2b8 00000004 B rw::imageModuleOffset
0020f2bc 00000004 B rw::Raster::numAllocated
0020f2c0 00000004 B rw::rasterModuleOffset
0020f2c4 00000028 b rw::interpInfoList
0020f2ec 00000004 B rw::currentUVAnimDictionary
0020f2f0 00000004 B rw::uvAnimOffset
0020f2f4 00000004 B rw::Geometry::numAllocated
0020f2f8 00000004 B rw::Material::numAllocated
0020f2fc 00000010 B rw::Geometry::s_plglist
0020f30c 00000010 B rw::Material::s_plglist
0020f31c 00000008 b rw::materialRights
0020f324 00000004 B rw::Frame::numAllocated
0020f328 00000010 B rw::Frame::s_plglist
0020f338 00000008 b rw::error
0020f340 00000200 b rw::dbgsprint(unsigned long, ...)::strbuf
0020f540 00000004 B rw::Texture::numAllocated
0020f544 00000004 B rw::TexDictionary::numAllocated
0020f548 00000010 B rw::TexDictionary::s_plglist
0020f558 00000010 B rw::Texture::s_plglist
0020f568 00000010 B rw::Raster::s_plglist
0020f578 00000004 B rw::textureModuleOffset
0020f57c 00000004 B rw::anisotOffset
0020f580 00000008 b rw::allPlugins
0020f588 00000004 B rw::World::numAllocated
0020f58c 00000010 B rw::World::s_plglist
0020f59c 00000004 B rw::Light::numAllocated
0020f5a0 00000010 B rw::Light::s_plglist
0020f5b0 00000004 B rw::MatFX::modulateEnvMap
0020f5b4 00000044 B rw::matFXGlobals
0020f5f8 00000018 B rw::userDataGlobals
0020f610 00000044 B rw::skinGlobals
0020f654 00000004 B rw::Camera::numAllocated
0020f658 00000010 B rw::Camera::s_plglist
0020f668 00000004 B rw::hAnimOffset
0020f66c 00000004 B rw::Clump::numAllocated
0020f670 00000004 B rw::Atomic::numAllocated
0020f674 00000010 B rw::Clump::s_plglist
0020f684 00000010 B rw::Atomic::s_plglist
0020f694 00000008 b rw::atomicRights
0020f69c 00000004 B rw::c3d::nativeRasterOffset
0020f6a0 00000004 b rw::c3d::envShader
0020f6a4 00000004 b rw::c3d::lastEnvFrame
0020f6a8 00000040 b rw::c3d::uploadEnvMatrix(rw::Frame*)::envMtx
0020f6e8 00000030 B rw::c3d::c3dGlobals
0020f718 00000018 B rw::c3d::whitetex
0020f730 00000080 b rw::c3d::uniformScene
0020f7b0 00000254 b rw::c3d::uniformObject
0020fa04 00000014 b rw::c3d::materialState
0020fa18 00000004 B rw::c3d::defaultShader
0020fa1c 0000006c b rw::c3d::rwStateCache
0020fa88 00000013 b rw::c3d::uniformStateDirty
0020fa9c 00000048 b rw::c3d::curC3DState
0020fae4 00000048 b rw::c3d::oldC3DState
0020fb2c 00000004 B rw::c3d::linearScratch
0020fb30 00000004 B rw::c3d::currentShader
0020fb34 00000004 B rw::c3d::Shader::dvlb
0020fb38 00000054 b rw::c3d::tmpprimbuf
0020fb90 00000018 b rw::c3d::im2DVao
0020fba8 00000018 b rw::c3d::im3DVao
0020fbc0 00000004 b rw::c3d::im2dShader
0020fbc4 00000004 b rw::c3d::im3dShader
0020fbc8 00000004 B rw::c3d::im2dOverrideShader
0020fbcc 00000004 b rw::c3d::im3D_vtx_count
0020fbd0 00000004 b rw::c3d::im3D_vtx
0020fbd4 00000004 b rw::c3d::im3D_flags
0020fbd8 00000040 b rw::c3d::im3DTransform(void*, long, rw::Matrix*, unsigned long)::ident
0020fc18 00000004 b rw::xbox::vertexFmtOffset
0020fc1c 00000004 B rw::xbox::nativeRasterOffset
0020fc20 00000004 B rw::d3d::nativeRasterOffset
0020fc24 00000010 b rw::d3d::findFormatInfoD3D(unsigned long)::fake
0020fc34 00000010 B rw::gl3::gl3Caps
0020fc44 00000004 B rw::gl3::needToReadBackTextures
0020fc48 00000004 B rw::gl3::nativeRasterOffset
0020fc4c 00000004 B rw::ps2::defaultObjPipe
0020fc50 00000004 B rw::ps2::defaultMatPipe
0020fc54 00000004 B rw::ps2::markcnt
0020fc58 00000004 B rw::ps2::adcOffset
0020fc5c 00000001 b rw::ps2::sendVIF(unsigned long)::state
0020fc60 00000004 b rw::ps2::sendVIF(unsigned long)::n
0020fc64 00000004 b rw::ps2::sendVIF(unsigned long)::code
0020fc68 00000004 B rw::ps2::nativeRasterOffset
0020fc6c 00000004 b rw::ps2::noNewStyleRasters
0020fc70 0000000c b rw::ps2::pdsGlobals
0020fc7c 0000000c B zero
0020fc88 00000008 B Scene
0020fc90 00000014 B engineOpenParams
0020fca4 00000001 b Draw(float)::show_another_window
0020fca8 00000010 b Draw(float)::clear_color
0020fcb8 00000004 b guard variable for Draw(float)::clear_color
0020fcbc 00000004 b Draw(float)::f
0020fcc0 00000010 B sk::globals
0020fcd0 00000008 B sk::args
0020fcd8 00000004 b g_FontTexture
0020fcdc 00000004 b g_vertbuf
0020fce0 00000004 b g_vertbufSize
0020fce4 000000a8 b FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
0020fd8c 00000001 b ImFontAtlas::GetGlyphRangesJapanese()::full_ranges_unpacked
0020fd90 00001e7a b ImFontAtlas::GetGlyphRangesJapanese()::full_ranges
00211c0c 00000004 b stb__barrier
00211c10 00000004 b stb__barrier2
00211c14 00000004 b stb__barrier3
00211c18 00000004 b stb__barrier4
00211c1c 00000004 b stb__dout
00211c20 000003d8 b ImGuizmo::gContext
00211ff8 00000030 b ImGuizmo::directionUnary
00212028 0000004c b GImDefaultFontAtlas
00212074 000036fc b GImDefaultContext
00215770 00000400 b ImHash(void const*, int, unsigned int)::crc32_lut
00215b70 00000060 b resize_grip_def
00215bd0 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_main_menu_bar
00215bd1 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_console
00215bd2 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_log
00215bd3 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_layout
00215bd4 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_property_editor
00215bd5 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_long_text
00215bd6 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_auto_resize
00215bd7 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_constrained_resize
00215bd8 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_fixed_overlay
00215bd9 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_window_titles
00215bda 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_custom_rendering
00215bdb 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_style_editor
00215bdc 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_metrics
00215bdd 00000001 b ImGui::ShowDemoWindow(bool*)::show_app_about
00215bde 00000001 b ImGui::ShowDemoWindow(bool*)::no_titlebar
00215bdf 00000001 b ImGui::ShowDemoWindow(bool*)::no_scrollbar
00215be0 00000001 b ImGui::ShowDemoWindow(bool*)::no_menu
00215be1 00000001 b ImGui::ShowDemoWindow(bool*)::no_move
00215be2 00000001 b ImGui::ShowDemoWindow(bool*)::no_resize
00215be3 00000001 b ImGui::ShowDemoWindow(bool*)::no_collapse
00215be4 00000001 b ImGui::ShowDemoWindow(bool*)::no_close
00215be8 00000004 b ImGui::ShowDemoWindow(bool*)::clicked
00215bec 00000004 b ImGui::ShowDemoWindow(bool*)::e
00215bf0 00000004 b ImGui::ShowDemoWindow(bool*)::current_item_2
00215bf4 00000004 b ImGui::ShowDemoWindow(bool*)::i1
00215bf8 00000004 b ImGui::ShowDemoWindow(bool*)::f2
00215bfc 00000004 b ImGui::ShowDemoWindow(bool*)::angle
00215c00 00000001 b ImGui::ShowDemoWindow(bool*)::align_label_with_current_x_position
00215c04 00000004 b ImGui::ShowDemoWindow(bool*)::pressed_count
00215c08 00000003 b ImGui::ShowDemoWindow(bool*)::selected
00215c0c 00000010 b ImGui::ShowDemoWindow(bool*)::selected
00215c1c 00000040 b ImGui::ShowDemoWindow(bool*)::buf1
00215c5c 00000040 b ImGui::ShowDemoWindow(bool*)::buf2
00215c9c 00000040 b ImGui::ShowDemoWindow(bool*)::buf3
00215cdc 00000040 b ImGui::ShowDemoWindow(bool*)::buf4
00215d1c 00000040 b ImGui::ShowDemoWindow(bool*)::buf5
00215d5c 00000040 b ImGui::ShowDemoWindow(bool*)::buf6
00215d9c 00000001 b ImGui::ShowDemoWindow(bool*)::read_only
00215da0 00000168 b ImGui::ShowDemoWindow(bool*)::values
00215f08 00000004 b ImGui::ShowDemoWindow(bool*)::values_offset
00215f0c 00000004 b ImGui::ShowDemoWindow(bool*)::refresh_time
00215f10 00000004 b ImGui::ShowDemoWindow(bool*)::phase
00215f14 00000004 b ImGui::ShowDemoWindow(bool*)::func_type
00215f18 00000004 b ImGui::ShowDemoWindow(bool*)::progress
00215f1c 00000010 b ImGui::ShowDemoWindow(bool*)::color
00215f2c 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::color
00215f30 00000001 b ImGui::ShowDemoWindow(bool*)::hdr
00215f31 00000001 b ImGui::ShowDemoWindow(bool*)::alpha_half_preview
00215f32 00000001 b ImGui::ShowDemoWindow(bool*)::saved_palette_inited
00215f34 00000200 b ImGui::ShowDemoWindow(bool*)::saved_palette
00216134 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::saved_palette
00216138 00000010 b ImGui::ShowDemoWindow(bool*)::backup_color
00216148 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::backup_color
0021614c 00000001 b ImGui::ShowDemoWindow(bool*)::ref_color
00216150 00000010 b ImGui::ShowDemoWindow(bool*)::ref_color_v
00216160 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::ref_color_v
00216164 00000004 b ImGui::ShowDemoWindow(bool*)::picker_mode
00216168 00000004 b ImGui::ShowDemoWindow(bool*)::int_value
0021616c 00000001 b ImGui::ShowDemoWindow(bool*)::disable_mouse_wheel
00216170 00000004 b ImGui::ShowDemoWindow(bool*)::f
00216174 00000001 b ImGui::ShowDemoWindow(bool*)::c1
00216175 00000001 b ImGui::ShowDemoWindow(bool*)::c2
00216176 00000001 b ImGui::ShowDemoWindow(bool*)::c3
00216177 00000001 b ImGui::ShowDemoWindow(bool*)::c4
00216178 00000008 b ImGui::ShowDemoWindow(bool*)::size
00216180 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::size
00216184 00000008 b ImGui::ShowDemoWindow(bool*)::offset
0021618c 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::offset
00216190 00000001 b ImGui::ShowDemoWindow(bool*)::dont_ask_me_next_time
00216194 00000110 b ImGui::ShowDemoWindow(bool*)::filter
002162a4 00000004 b guard variable for ImGui::ShowDemoWindow(bool*)::filter
002162a8 00000001 b ImGui::ShowDemoWindow(bool*)::embed_all_inside_a_child_window
002162ac 00000004 b ImGui::ShowStyleSelector(char const*)::style_idx
002162b0 00000344 b ImGui::ShowStyleEditor(ImGuiStyle*)::ref_saved_style
002165f4 00000004 b guard variable for ImGui::ShowStyleEditor(ImGuiStyle*)::ref_saved_style
002165f8 00000004 b ImGui::ShowStyleEditor(ImGuiStyle*)::output_dest
002165fc 00000110 b ImGui::ShowStyleEditor(ImGuiStyle*)::filter
0021670c 00000004 b guard variable for ImGui::ShowStyleEditor(ImGuiStyle*)::filter
00216710 00000004 b ImGui::ShowStyleEditor(ImGuiStyle*)::alpha_flags
00216714 00000004 b ShowExampleMenuFile()::n
00216718 00000001 b ShowExampleAppConstrainedResize(bool*)::auto_resize
0021671c 00000004 b ShowExampleAppConstrainedResize(bool*)::type
00216720 00000004 b ShowExampleAppFixedOverlay(bool*)::corner
00216724 00000010 b ShowExampleAppCustomRendering(bool*)::col
00216734 00000004 b guard variable for ShowExampleAppCustomRendering(bool*)::col
00216738 0000000c b ShowExampleAppCustomRendering(bool*)::points
00216744 00000004 b guard variable for ShowExampleAppCustomRendering(bool*)::points
00216748 00000001 b ShowExampleAppCustomRendering(bool*)::adding_line
0021674c 0000012c b ShowExampleAppConsole(bool*)::console
00216878 00000004 b guard variable for ShowExampleAppConsole(bool*)::console
0021687c 0000012c b ShowExampleAppLog(bool*)::log
002169a8 00000004 b guard variable for ShowExampleAppLog(bool*)::log
002169ac 00000004 b ShowExampleAppLayout(bool*)::selected
002169b0 00000004 b ShowExampleAppLongText(bool*)::test_type
002169b4 0000000c b ShowExampleAppLongText(bool*)::log
002169c0 00000004 b guard variable for ShowExampleAppLongText(bool*)::log
002169c4 00000004 b ShowExampleAppLongText(bool*)::lines
002169c8 b completed.1
002169cc b object.0
002169e4 00000110 V ExampleAppConsole::Draw(char const*, bool*)::filter
00216af4 00000004 V guard variable for ExampleAppConsole::Draw(char const*, bool*)::filter
00216af8 000002d0 B __C3D_Context
00216dc8 0000000c b hookCookie
00216dd8 00000010 b cpuTime
00216de8 00000008 b frameCounter
00216df0 00000004 b frameEndCb
00216df4 00000004 b frameEndCbData
00216df8 00000010 b gpuTime
00216e08 00000001 b inFrame
00216e09 00000001 b inSafeTransfer
00216e0a 00000001 b isTopStereo
00216e0c 0000000c b linkedTarget
00216e18 00000001 b measureGpuTime
00216e19 00000001 b needSwapBot
00216e1a 00000001 b needSwapTop
00216e1c 00000004 B C3D_BoolUnifs
00216e20 00000002 B C3D_BoolUnifsDirty
00216e24 00000c00 B C3D_FVUnif
00217a24 000000c0 B C3D_FVUnifDirty
00217ae4 00000020 B C3D_IVUnif
00217b04 00000008 B C3D_IVUnifDirty
00217b0c 000000c0 b C3Di_FVUnifEverDirty
00217bcc 00000008 b C3Di_IVUnifEverDirty
00217bd4 00000018 b C3Di_ShaderFVecData
00217bec 0000000c b sAddrMap
00217bf8 00000008 b sVramPool
00217c00 00000008 b sLinearPool
00217c08 0000000c b sAddrMap
00217c14 00000001 V __ctru_speedup
00217c18 00000004 b gfxBottomFramebufferMaxSize
00217c1c 00000008 b gfxBottomFramebuffers
00217c24 00000002 b gfxCurBuf
00217c28 00000002 b gfxFramebufferFormats
00217c2c 00000002 b gfxIsDoubleBuf
00217c2e 00000001 b gfxIsVram
00217c30 00000004 b gfxTopFramebufferMaxSize
00217c34 00000008 b gfxTopFramebuffers
00217c3c 00000001 b gfxTopMode
00217c40 00000004 b screenAlloc
00217c44 00000004 b screenFree
00217c48 00000004 b boundQueue
00217c4c 00000004 b curQueue
00217c50 00000001 b isActive
00217c51 00000001 b isRunning
00217c52 00000001 b shouldStop
00217c54 00000004 B gpuCmdBuf
00217c58 00000004 B gpuCmdBufOffset
00217c5c 00000004 B gpuCmdBufSize
00217c60 00000004 b gspEvent
00217c64 0000001c b gspEventCb
00217c80 0000001c b gspEventCbData
00217c9c 00000007 b gspEventCbOneShot
00217ca4 00000004 b gspEventThread
00217ca8 00000038 b gspEvents
00217ce0 00000004 b gspGpuHandle
00217ce4 00000001 b gspGpuRight
00217ce8 00000004 b gspLastEvent
00217cec 00000004 b gspRefCount
00217cf0 00000001 b gspRunEvents
00217cf4 00000004 b gspSharedMem
00217cf8 00000004 b gspSharedMemHandle
00217cfc 00000001 b gspThreadId
00217cfd 00000001 b aptChainloadFlags
00217cfe 00000001 b aptChainloadMediatype
00217d00 00000008 b aptChainloadTid
00217d08 00000004 b aptEventHandlerThread
00217d0c 00000001 b aptEventHandlerThreadQuit
00217d10 00000008 b aptEvents
00217d18 0000000c b aptFirstHook
00217d24 00000004 b aptFlags
00217d28 00000001 b aptHomeButtonState
00217d2c 00000004 b aptLockHandle
00217d30 00000004 b aptMessageFunc
00217d34 00000004 b aptMessageFuncData
00217d38 00001000 b aptParameters
00218d38 00000008 b aptReceiveEvent
00218d40 00000004 b aptRefCount
00218d44 00000008 b aptSleepEvent
00218d4c 00000001 b flagInit.1
00218d4d 00000001 b flagValue.0
00218d50 00000004 b serviceName.6
00218d54 00000006 b aVec
00218d5c 00000004 b cPos
00218d60 00000006 b gRate
00218d68 00000014 B hidEvents
00218d7c 00000004 B hidHandle
00218d80 00000004 B hidMemHandle
00218d84 00000004 b hidRefCount
00218d88 00000004 B hidSharedMem
00218d8c 00000004 b kDown
00218d90 00000004 b kHeld
00218d94 00000004 b kOld
00218d98 00000004 b kRepeat
00218d9c 00000004 b kUp
00218da0 00000004 b tPos
00218da4 00000001 b usingIrrst
00218da8 00000004 b ptmSysmHandle
00218dac 00000004 b ptmSysmRefCount
00218db0 00000004 B __ctru_heap
00218db4 00000004 V __ctru_heap_size
00218db8 00000004 B __ctru_linear_heap
00218dbc 00000004 V __ctru_linear_heap_size
00218dc0 00000004 B __system_retAddr
00218dc4 00000004 B __system_argc
00218dc8 00000004 B __system_argv
00218dcc b saved_stack
00218dd4 00000004 b arbiter
00218dd8 00000004 b srvHandle
00218ddc 00000004 b srvRefCount
00218de0 00000004 b currentAddr
00218de4 00000004 b maxAddr
00218de8 00000004 b minAddr
00218dec 00000004 b csPos
00218df0 00000004 B irrstEvent
00218df4 00000004 B irrstHandle
00218df8 00000004 B irrstMemHandle
00218dfc 00000004 b irrstRefCount
00218e00 00000004 B irrstSharedMem
00218e04 00000004 b kHeld
00218e08 00000004 b srvPmHandle
00218e0c 00000004 b archive_device_cwd
00218e10 00000540 b archive_devices
00219350 00000001 b archive_initialized
00219358 00000080 b fsExemptArchives
002193d8 00000004 b fsuHandle
002193dc 00000004 b fsuRefCount
002193e0 00000010 b (anonymous namespace)::emergency_pool
002193f0 0000000c b eh_globals
002193fc 00000028 B __malloc_current_mallinfo
00219424 00000004 B __malloc_max_sbrked_mem
00219428 00000004 B __malloc_max_total_mem
0021942c 00000004 B __malloc_top_pad
00219430 00000004 b heap_start.0
00219434 00000004 B fake_heap_end
00219438 00000004 B fake_heap_start
0021943c 00000400 b temp_cwd
0021983c 00000048 B __syscalls
00219884 B __tls_start
0021a490 B __bss_end__
0021a490 A __end__
0021a490 B __tls_end
